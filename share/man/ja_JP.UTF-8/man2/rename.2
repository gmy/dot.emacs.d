.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" This manpage is Copyright (C) 1992 Drew Eckhardt;
.\"                               1993 Michael Haardt;
.\"                          1993,1995 Ian Jackson.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Modified Sat Jul 24 00:35:52 1993 by Rik Faith <faith@cs.unc.edu>
.\" Modified Thu Jun  4 12:21:13 1998 by Andries Brouwer <aeb@cwi.nl>
.\" Modified Thu Mar  3 09:49:35 2005 by Michael Haardt <michael@moria.de>
.\" 2007-03-25, mtk, added various text to DESCRIPTION.
.\"
.\" Japanese Version Copyright (c) 1997 HANATAKA Shinya
.\"         all rights reserved.
.\" Translated Fri Dec 12 00:15:52 JST 1997
.\"         by HANATAKA Shinya <hanataka@abyss.rim.or.jp>
.\" Updated & Modified Thu Feb 10 07:23:59 JST 2005
.\"         by Yuichi SATO <ysato444@yahoo.co.jp>
.\" Updated & Modified Fri Apr 22 03:21:04 JST 2005 by Yuichi SATO
.\" Updated 2007-05-04, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>, LDP v2.44
.\" Updated 2009-04-24, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>, LDP v3.20
.\"
.\"WORD:	directory		ディレクトリ
.\"WORD:	hard link		ハード・リンク
.\"WORD:	overwrite		上書き(overwrite)
.\"WORD:	process			プロセス
.\"WORD:	crash			クラッシュ
.\"WORD:	symbolic link		シンボリック・リンク
.\"WORD:	working directory	ワーキング・ディレクトリ
.\"WORD:	root directory		ルート・ディレクトリ
.\"WORD:	effective uid		実効ユーザーID
.\"WORD:	sticky bit		スティッキー・ビット
.\"WORD:	memory			メモリ
.\"WORD:	read-only		読み込み専用
.\"WORD:	uid			ユーザーID
.\"WORD:	dangling symbolic link	壊れたシンボリック・リンク
.\"WORD:	server			サーバー
.\"
.TH RENAME 2 2009-03-30 "Linux" "Linux Programmer's Manual"
.SH 名前
rename \- ファイルの名前や位置を変更する
.SH 書式
.B #include <stdio.h>
.sp
.BI "int rename(const char *" oldpath ", const char *" newpath );
.SH 説明
.BR rename ()
はファイルの名前を変更し、必要ならばディレクトリ間の移動を行なう。
そのファイルに対する
.RB ( link (2)
を使用して作られた) 他のハードリンク (hard link) には影響はない。
オープン済の
.I oldpath
に対するファイルディスクリプタにも影響はない。

.I newpath
が既に存在する場合、それは不可分操作で (atomically) 置き換えられる
(ただし、いくつかの条件がある; 以下の「エラー」のセクションを参照)。
そのため、
.I newpath
にアクセスしようとしている他のプロセスがファイルを見失うことはない
(訳註: 常にアクセス可能である)。

.I oldpath
と
.I newpath
がどちらも既存のハードリンクで、同じファイルを参照している場合、
.BR rename ()
は何も行わず、ステータスとして成功を返す。

.I newpath
が存在し、何らかの理由で操作が失敗した場合、
.BR rename ()
は
.I newpath
の実体を元のまま残すことを保証する。

.I oldpath
にはディレクトリを指定することもできる。
この場合、
.I newpath
は存在しないか、空のディレクトリでなければならない。

一方で、上書きを行なう場合は、rename が行なわれるファイルを
.I oldpath
と
.I newpath
の両方で参照できる瞬間がおそらく存在する。

.I oldpath
がシンボリック・リンク (symbolic link) を参照している場合は、
リンクの名前が変更される。
また、
.I newpath
がシンボリック・リンクを参照している場合は、リンクが上書きされる。
.SH 返り値
成功した場合は 0 を返す。エラーの場合は \-1 を返し、
.I errno
を適切に設定する。
.SH エラー
.TP
.B EACCES
.IR oldpath " または " newpath
を含んでいるディレクトリの書き込み許可がない。
または、
.IR oldpath " または " newpath
のディレクトリ部分のどれかに検索許可がない。
または、
.I oldpath
がディレクトリで
.RI ( ..
エントリを更新するのに必要な) 書き込み許可がない
.RB ( path_resolution (7)
も参照)。
.TP
.B EBUSY
.IR oldpath " または " newpath
がディレクトリで、何らかのプロセスが使用中
(多分、カレント・ワーキング・ディレクトリか、ルートディレクトリか、
読み込みのためにオープンされているかでろう)
もしくは、システムが使用中 (例えばマウント・ポイントである)
であり、システムがこれをエラーであると判断したために rename が失敗した。
(このような場合に
.B EBUSY
を返すことは規格では要求されていない点に注意すること。
このような場合に、rename をとにかく実行してみるのは何の問題もない。
ただし、そのような状況で、システムが他に返すエラーがない場合には
.B EBUSY
を返すことが許されている。)
.TP
.B EFAULT
.IR oldpath " または " newpath
がアクセス可能なアドレス空間の外を指している。
.TP
.B EINVAL
.IR newpath " が " oldpath
のパス部分を含んでいる。ディレクトリを自分自身のサブディレクトリに
変更しようとした場合がほとんどである。
.TP
.B EISDIR
.I newpath
は存在しているディレクトリであるが、
.I oldpath
はディレクトリでない。
.TP
.B ELOOP
.IR oldpath " または " newpath
を解決する際に遭遇したシンボリック・リンクが多過ぎる。
.TP
.B EMLINK
.I oldpath
は既に最大数までのリンクを持っているか、それがディレクトリで
.I newpath
を含んでいるディレクトリが最大数までのリンクを持っている。
.TP
.B ENAMETOOLONG
.IR oldpath " または " newpath " が長過ぎる。"
.TP
.B ENOENT
.I oldpath
という名前のリンクが存在しない。
または、
.I newpath
というディレクトリが存在しない。
または、
.I oldpath
か
.I newpath
が空の文字列である。
.TP
.B ENOMEM
カーネルに十分なメモリが存在しない。
.TP
.B ENOSPC
ファイルを含んでいるデバイスに新しいディレクトリ・エントリを
作成するための空きがない。
.TP
.B ENOTDIR
.IR oldpath " か " newpath
に含まれているディレクトリ部分が
実際にはディレクトリでない。
または
.I oldpath
がディレクトリで、
.I newpath
が存在してディレクトリでない。
.TP
.B ENOTEMPTY " または " EEXIST
.I newpath
が空でないディレクトリである。すなわち "." と ".." 以外を含んでいる。
.TP
.BR EPERM " または " EACCES
.I oldpath
のあるディレクトリにスティッキー・ビット (sticky bit)
.RB ( S_ISVTX )
が設定されており、
プロセスの実効ユーザー ID が
削除しようとするファイルのユーザー ID と
そのファイルを含むディレクトリのユーザー ID のいずれとも一致せず、かつ
プロセスに特権がない (Linux では
.B CAP_FOWNER
ケーパビリティ (capability) がない)。
または、
.I newpath
がすでに存在するファイルで、親ディレクトリにスティッキービットが設定されており、
プロセスの実効ユーザー ID が
置き換えようとするファイルのユーザー ID と
そのファイルを含むディレクトリのユーザー ID のいずれとも一致せず、かつ
プロセスに特権がない (Linux では
.B CAP_FOWNER
ケーパビリティがない)。
または
.IR oldpath " と " newpath
が存在するファイル・システムが、要求された種類の名前の変更を
サポートしていない。
.TP
.B EROFS
ファイルが読み込み専用 (read-only) ファイル・システムにある。
.TP
.B EXDEV
.IR oldpath " と " newpath
が同じマウントされたファイル・システムに存在しない。
(Linux は 1 つのファイル・システムを複数のマウント位置に
マウントすることを許可している。
しかし
.BR rename ()
は、たとえ同じファイル・システムであっても、
別々のマウント位置を跨いでは動作しない。)
.SH 準拠
4.3BSD, C89, C99, POSIX.1-2001.
.SH バグ
NFS ファイル・システムでは、操作が失敗したからといって、
ファイルの名前が変更できなかったと決めてかかることはできない。
サーバが rename 操作を終えてからクラッシュした場合、
サーバが再び立ち上がったときに、
再送信された RPC が処理されるが、これは失敗となる。
アプリケーションはこの問題を正しく取り扱うことが期待されている。
同様の問題について
.BR link (2)
にも書かれている。
.SH 関連項目
.BR mv (1),
.BR chmod (2),
.BR link (2),
.BR renameat (2),
.BR symlink (2),
.BR unlink (2),
.BR path_resolution (7),
.BR symlink (7)
