.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" Copyright (c) 2006 Andrew Morton <akpm@osdl.org>
.\" and Copyright 2006 Michael Kerrisk <mtk.manpages@gmail.com>
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" 2006-07-05 Initial creation, Michael Kerrisk based on
.\"     Andrew Morton's comments in fs/sync.c
.\"
.\" Japanese Version Copyright (c) 2007 Akihiro MOTOKI
.\"         all rights reserved.
.\" Translated 2007-01-09, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>, LDP v2.43
.\" Updated 2008-08-06, Akihiro MOTOKI, LDP v3.05
.\" Updated 2010-04-23, Akihiro MOTOKI, LDP v3.24
.\"
.TH SYNC_FILE_RANGE 2 2010-01-17 "Linux" "Linux Programmer's Manual"
.SH 名前
sync_file_range \- ファイルセグメントをディスクと同期する
.SH 書式
.nf
.BR "#define _GNU_SOURCE" "         /* feature_test_macros(7) 参照 */"
.B #include <fcntl.h>

.BI "int sync_file_range(int " fd ", off64_t " offset ", off64_t " nbytes ,
.BI "                    unsigned int " flags );
.fi
.SH 説明
.BR sync_file_range ()
を使うと、ファイルディスクリプタ
.I fd
で参照されるオープンされたファイルのディスクとの同期に関して、
きめ細かな制御が可能となる。

.I offset
は、同期を行うファイルの領域の開始バイトである。
.I nbytes
には同期を行う領域の長さをバイト単位で指定する。
.I nbytes
が 0 の場合は、
.I offset
からファイル末尾までの全バイトを同期する。
同期はシステムのページサイズの単位で行われる。
.I offset
はページ境界にあわせて切り下げられ、
.I (offset+nbytes-1)
はページ境界にあわせて切り上げられる。

ビットマスク引き数
.I flags
には以下の値を指定することができる:
.TP
.B SYNC_FILE_RANGE_WAIT_BEFORE
何らかの書き込みを行う前に、指定された領域のページで
書き出しを行うようにデバイスドライバにすでに要求が発行されている
ページの書き出しが全て完了するのを待つ。
.TP
.B SYNC_FILE_RANGE_WRITE
指定された領域のページで、書き出し要求が発行されていない
全ての dirty (キャッシュだけが変更されている) ページの
書き出しを開始する。
リクエストキューの大きさより多く書き込もうとした場合には、
この処理は停止 (block) する可能性がある点に注意すること。
.TP
.B SYNC_FILE_RANGE_WAIT_AFTER
何らかの書き込み後に、指定された領域の全てのページの
書き出しが行われるのを待つ。
.PP
.I flags
に 0 を指定した場合、何もしないことを表す。
.SS 警告
このシステムコールは非常に危険であり、
移植性が必要なプログラムで使用すべきではない。
これらの操作ではどれもファイルのメタデータの書き出しを行わない。
したがって、アプリケーションにより作成済みのディスクブロックの
上書きの実行が確実に行われない限り、クラッシュの後でもデータが
利用できる保証はない。
書き込みが上書きだけであるかを知るためのユーザインタフェースは存在しない。
.RI ( btrfs
などの) copy-on-write 動作を使ったファイルシステムでは、
既存の割り当て済みのブロックに対する上書き自体ができない。
前もって割り当てられた領域に書き込みを行う場合、
多くのファイルシステムでは block allocator への書き込みも必要となるが、
このシステムコールは block allocator のディスクへの同期を行わない。
このシステムコールはディスク書き込みキャッシュのフラッシュを
行わないので、揮発性のディスク書き込みキャッシュを使ったシステムでは
このシステムコールではデータの一貫性を確保できないことになる。
.SS 詳細
.B SYNC_FILE_RANGE_WAIT_BEFORE
と
.B SYNC_FILE_RANGE_WAIT_AFTER
は I/O エラーや
.B ENOSPC
状態を検出し、呼び出し元にこれらの情報を返す。

.I flags
の役に立つビットの組み合わせを以下に示す:
.TP
.B SYNC_FILE_RANGE_WAIT_BEFORE | SYNC_FILE_RANGE_WRITE
指定された範囲内のページで、
.BR sync_file_range ()
が呼び出された際に dirty であった全てのページが、
確実に書き出し対象となるようにする。
これは、start-write-for-data-integrity 操作
(データ完全性確保のための書き込み開始の操作) である。
.TP
.B SYNC_FILE_RANGE_WRITE
指定された範囲内のページで、現在書き出し中でない全ての dirty ページの
書き出しを開始する。これは非同期のディスクへのフラッシュ (flush-to-disk)
操作である。データ完全性確保が必要な操作としては適切ではない。
.TP
.BR SYNC_FILE_RANGE_WAIT_BEFORE " (or " SYNC_FILE_RANGE_WAIT_AFTER )
指定された範囲内の全てのページの書き出しの完了を待つ。
このフラグは、前に行われた操作
.B SYNC_FILE_RANGE_WAIT_BEFORE | SYNC_FILE_RANGE_WRITE
の後に使用でき、この操作の完了を待ち、結果を取得することができる。
.TP
.B SYNC_FILE_RANGE_WAIT_BEFORE | SYNC_FILE_RANGE_WRITE | \
SYNC_FILE_RANGE_WAIT_AFTER
これは write-for-data-integrity 操作
(データ完全性確保のための書き込み) であり、指定された範囲内の、
.BR sync_file_range ()
が呼ばれた時点で dirty な全てのページが
ディスクに格納されることが保証される。
.SH 返り値
成功の場合、
.BR sync_file_range ()
は 0 を返す。失敗の場合、\-1 を返し、
.I error
にエラーを示す値を設定する。
.SH エラー
.TP
.B EBADF
.I fd
が有効なファイルディスクリプタではない。
.TP
.B EINVAL
.I flags
に不正なビットが指定されている。または
.I offset
か
.I nbytes
が不正である。
.TP
.B EIO
I/O エラー。
.TP
.B ENOMEM
メモリ不足である。
.TP
.B ENOSPC
ディスク領域不足である。
.TP
.B ESPIPE
.I fd
が、通常のファイル、ブロックデバイス、ディレクトリ、シンボリックリンク
以外のものを指している。
.\" FIXME . (bug?) Actually, how can 'fd' refer to a symbolic link (S_ISLNK)?
.\" (In userspace at least) it isn't possible to obtain a file descriptor
.\" for a symbolic link.
.SH バージョン
.BR sync_file_range ()
はカーネル 2.6.17 で Linux に登場した。
.SH 準拠
このシステムコールは Linux 独自であり、
移植性が必要なプログラムでは使用を避けるべきである。
.SH 関連項目
.BR fdatasync (2),
.BR fsync (2),
.BR msync (2),
.BR sync (2)
