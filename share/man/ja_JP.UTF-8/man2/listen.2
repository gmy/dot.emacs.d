.\" Copyright (c) 1983, 1991 The Regents of the University of California.
.\" and Copyright (C) 2007, Michael Kerrisk <mtk.manpages@gmail.com>
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     $Id: listen.2,v 1.4 2001/05/19 02:09:20 hanataka Exp $
.\"
.\" Modified Fri Jul 23 22:07:54 1993 by Rik Faith <faith@cs.unc.edu>
.\" Modified 950727 by aeb, following a suggestion by Urs Thuermann
.\" <urs@isnogud.escape.de>
.\" Modified Tue Oct 22 08:11:14 EDT 1996 by Eric S. Raymond <esr@thyrsus.com>
.\" Modified 1998 by Andi Kleen
.\" Modified 11 May 2001 by Sam Varshavchik <mrsam@courier-mta.com>
.\"
.\" Japanese Version Copyright (c) 1998 Shinya HANATAKA, Takeshi Hakamada
.\"         all rights reserved.
.\" Translated 1998-04-06,Shinya HANATAKA <shinya@abyss.rim.or.jp>
.\"                   and Takeshi Hakamada <hakamada@nsg.sgi.com>
.\" Modified 2000-01-13, Kentaro Shirakata <argrath@yo.rim.or.jp>
.\" Modified 2001-05-19, Shinya HANATAKA <shinya@abyss.rim.or.jp>
.\" Updated 2007-07-04, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>, LDP v2.58
.\" Updated 2008-02-10, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>, LDP v2.77
.\"
.\"WORD:	socket			ソケット
.\"WORD:	listen			監視
.\"WORD:	queue			キュー
.\"WORD:	descriptor		ディスクリプター
.\"
.TH LISTEN 2 2008-11-20 "Linux" "Linux Programmer's Manual"
.SH 名前
listen \- ソケット(socket)上の接続を待つ
.SH 書式
.nf
.BR "#include <sys/types.h>" "          /* 「注意」参照 */"
.br
.B #include <sys/socket.h>
.sp
.BI "int listen(int " sockfd ", int " backlog );
.fi
.SH 説明
.BR listen ()
は
.I sockfd
が参照するソケットを接続待ちソケット (passive socket) として印をつける。
接続待ちソケットとは、
.BR accept (2)
を使って到着した接続要求を受け付けるのに使用されるソケットである。

.I sockfd
引き数は、
.B SOCK_STREAM
型か
.B SOCK_SEQPACKET
型のソケットを参照するファイルディスクリプタである。

.I backlog
引き数は、
.I sockfd
についての保留中の接続のキューの最大長を指定する。
キューがいっぱいの状態で接続要求が到着すると、クライアントは
.B ECONNREFUSED
というエラーを受け取る。下位層のプロトコルが再送信をサポート
していれば、要求は無視され、これ以降の接続要求の再送信が成功するかもしれない。
.SH 返り値
成功時には0を返す。エラー時には \-1を返し、
.I errno
を適切に設定する。
.SH エラー
.TP
.B EADDRINUSE
別のソケットが既に同じポートを listen している。
.TP
.B EBADF
引き数
.I sockfd
は有効なディスクリプターではない。
.TP
.B ENOTSOCK
引き数
.I sockfd
はソケットではない。
.TP
.B EOPNOTSUPP
ソケットは
.BR listen ()
がサポートしている型ではない。
.SH 準拠
4.4BSD, POSIX.1-2001.
.BR listen ()
関数は 4.2BSDで初めて実装された。
.SH 注意
接続を受け付けるには、以下の処理が実行される。
.RS 4
.IP 1. 4
.BR socket (2)
でソケットを作成する。
.IP 2.
.BR bind (2)
を使ってソケットにローカルアドレスを割り当てて、
他のソケットがこのソケットに
.BR connect (2)
できるようにする。
.IP 3.
.BR listen ()
を使って、接続要求を受け付ける意志と接続要求を入れるキュー長を指定する。
.IP 4.
.BR accept (2)
を使って接続を受け付ける。
.RE
.PP
POSIX.1-2001 では
.I <sys/types.h>
のインクルードは必須とされておらず、
Linux ではこのヘッダファイルは必要ではない。
しかし、歴史的には、いくつかの実装 (BSD 系) でこのヘッダファイルが
必要であり、移植性が必要なアプリケーションではこのファイルを
インクルードするのが賢明であろう。

TCP ソケットでの
.I backlog
引き数の振る舞いは Linux 2.2 で変更された。
現在ではこの引き数は、
受け付けられるのを待っている、
.I 完全に
確立されたソケットのキューの長さを指定する。
以前は不完全な接続要求の数であったが、これを置き換えた。
不完全なソケットのキューの最大長は
.I /proc/sys/net/ipv4/tcp_max_syn_backlog
を用いて設定できる。
syncookie が有効になっている場合、
論理的な最大長は存在せず、この設定は無視される。

.I backlog
引き数が
.I /proc/sys/net/core/somaxconn
の値よりも大きければ、
.I backlog
の値は暗黙のうちにこの値に切り詰められる。
このファイルのデフォルト値は 128 である。
バージョン 2.4.5 以前のカーネルでは、この上限値は
コード埋め込みの固定値
.B SOMAXCONN
であり、その値は 128 であった。
.\" 以下は、今では古い情報である。(MTK, Jun 05)
.\" BSD (と、いくつかの BSD から派生したシステム)では backlog を 5 に
.\" 制限しているので、移植性を考慮したアプリケーションでは
.\" この値 (SOMAXCONN) に頼ってはいけない。
.SH 例
.BR bind (2)
参照。
.SH 関連項目
.BR accept (2),
.BR bind (2),
.BR connect (2),
.BR socket (2),
.BR socket (7)
