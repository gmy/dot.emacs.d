.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" Copyright (C) 2003 Andi Kleen
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Japanese Version Copyright (c) 2004 Yuichi SATO
.\"         all rights reserved.
.\" Translated 2004-06-08, Yuichi SATO <ysato444@yahoo.co.jp>
.\" Updated 2005-11-19, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>
.\" Updated 2008-02-10, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>, LDP v2.77
.\"
.TH ARCH_PRCTL 2 2007-12-26 "Linux" "Linux Programmer's Manual"
.SH 名前
arch_prctl \- アーキテクチャ固有のスレッド状態を設定する
.SH 書式
.nf
.B #include <asm/prctl.h>
.br
.B #include <sys/prctl.h>
.sp
.BI "int arch_prctl(int " code ", unsigned long *" addr );
.fi
.SH 説明
.BR arch_prctl ()
関数はアーキテクチャ固有のプロセス状態またはスレッド状態を設定する。
.I code
は副機能を選択し、引き数
.I addr
を副機能に渡す。
.I addr
は、"set" 操作では
.I "unsigned long"
として、"get" 操作では
.I "unsigned long *"
として解釈される。
.LP
x86-64 の副機能は以下の通り:
.TP
.B ARCH_SET_FS
.I FS
レジスタの 64 ビットベースを
.I addr
に設定する。
.TP
.B ARCH_GET_FS
現在のスレッドの
.I FS
レジスタの 64 ビットベース値を、
.I addr
が指す
.I unsigned long
の領域に格納する。
.TP
.B ARCH_SET_GS
.I GS
レジスタの 64 ビットベースを
.I addr
に設定する。
.TP
.B ARCH_GET_GS
現在のスレッドの
.I GS
レジスタの 64 ビットベース値を、
.I addr
が指す
.I unsigned long
の領域に格納する。
.SH 返り値
成功すると、
.BR arch_prctl ()
は 0 を返す。エラーの場合、\-1 を返し、
.I errno
をエラーを示す値に設定する。
.SH エラー
.TP
.B EFAULT
.I addr
がアンマップされたアドレスを指しているか、プロセスのアドレス空間の外にある。
.TP
.B EINVAL
.I code
が有効なサブコマンドでない。
.TP
.B EPERM
.I addr
がプロセスのアドレス空間の外にある。
.\" .SH 著者
.\" この man ページは Andi Kleen によって書かれた。
.SH 準拠
.BR arch_prctl ()
は Linux/x86-64 拡張であり、移植性を意図したプログラムでは使うべきでない。
.SH 注意
.BR arch_prctl ()
は現在のところ Linux/x86-64 上の 64 ビットプログラムでのみサポートされている。

新しい 32 ビットセグメントセレクタがロードされた場合、
64 ビットベースは変更される。

.B ARCH_SET_GS
が無効にされているカーネルもある。

64 ビットセグメントベースのコンテキストスイッチは、やや高価である。
LDT を
.BR modify_ldt (2)
で設定してセグメントセレクタを使うか、
(カーネル 2.5 以降の)
.BR set_thread_area (2)
システムコールを使うことにより、
32 ビットベースを設定するという高速な代替手段もある。
4GB より大きなベースを設定したい場合にのみ、
.BR arch_prctl ()
が必要である。
アドレス空間の最初の 2GB にあるメモリは、
.BR mmap (2)
に
.B MAP_32BIT
フラグを指定して割り当てることができる。

バージョン 2.7 時点では、glibc には
.BR arch_prctl ()
のプロトタイプがない。
今のところユーザは自分自身で宣言する必要がある。
これは将来の glibc のバージョンで修正されるかもしれない。

.I FS
はスレッドライブラリで既に使われているかもしれない。
.SH 関連項目
.BR mmap (2),
.BR modify_ldt (2),
.BR prctl (2),
.BR set_thread_area (2)
.sp
AMD X86-64 Programmer's manual
