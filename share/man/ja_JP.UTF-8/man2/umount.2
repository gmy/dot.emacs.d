.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" Copyright (C) 1993 Rickard E. Faith <faith@cs.unc.edu>
.\" and Copyright (C) 1994 Andries E. Brouwer <aeb@cwi.nl>
.\" and Copyright (C) 2002, 2005 Michael Kerrisk <mtk.manpages@gmail.com>
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" 2008-10-06, mtk: Created this as a new page by splitting
.\"     umount/umount2 material out of mount.2
.\"
.\" Japanese Version Copyright (c) 2008  Akihiro MOTOKI
.\"         all rights reserved.
.\" Translated 2008-11-20, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>, LDP v3.13
.\" 
.TH UMOUNT 2 2009-09-03 "Linux" "Linux Programmer's Manual"
.SH 名前
umount, umount2 \- ファイルシステムをアンマウントする
.SH 書式
.nf
.B "#include <sys/mount.h>"
.sp
.BI "int umount(const char *" target );
.sp
.BI "int umount2(const char *" target ", int " flags );
.fi
.SH 説明
.BR umount ()
と
.BR umount2 ()
は
.I target
にマウントされている (最上位の) ファイルシステムを外す。
.\" Note: the kernel naming differs from the glibc naming
.\" umount2 is the glibc name for what the kernel now calls umount
.\" and umount is the glibc name for oldumount

ファイルシステムのアンマウントを行うには、
適切な権限 (Linux では
.B CAP_SYS_ADMIN
ケーパビリティ) が必要である。

Linux 2.1.116 から、
.BR umount2 ()
システムコールが追加された。これは
.BR umount ()
と同様に
.I target
をアンマウントするが、
.I flags
が追加されており、操作時の振る舞いを制御できる。
.TP
.BR MNT_FORCE " (2.1.116 以降)"
使用中 (busy) でも強制的にアンマウントを実行する。
これを行うとデータを失う可能性がある。
(NFS マウント専用)
.TP
.BR MNT_DETACH " (2.4.11 以降)"
遅延アンマウントを行う。マウントポイントに対する新規のアクセスは
不可能となり、実際のアンマウントはマウントポイントがビジーで
なくなった時点で行う。
.TP
.BR MNT_EXPIRE " (Linux 2.6.8 以降)"
マウントポイントに期限切れの印をつける。
マウントポイントが現在使用中でない場合、このフラグをつけて
.BR umount2 ()
を初めて呼び出すと
.B EAGAIN
エラーで失敗するが、マウントポイントには期限切れ (expire)
の印がつけられる。
そのマウントポイントはいずれかのプロセスがアクセスしない限り
期限切れの印がついたままとなる。
もう一度
.B MNT_EXPIRE
をつけて
.BR umount2 ()
を呼び出すと、期限切れの印のついたマウントポイントが
アンマウントされる。
このフラグを
.B MNT_FORCE
もしくは
.B MNT_DETACH
と同時に指定することはできない。
.SH 返り値
成功した場合 0 が返る。
エラーの場合、\-1 が返り、
.I errno
がエラーの内容にしたがって設定される。
.SH エラー
以下に示すエラーは、ファイルシステムに依存しないものである。
それぞれのファイルシステムタイプには固有のエラーが存在する場合があり、
独自の動作をすることもある。詳しくはカーネルのソースを見て欲しい。
.TP
.B EAGAIN
.B MNT_EXPIRE
を指定した
.BR umount2 ()
の呼び出しで、正常に未使用のファイルシステムに期限切れの印を
つけることができた。
.TP
.B EBUSY
使用中 (busy) のため、
.I target
をアンマウントできなかった。
.TP
.B EFAULT
.I target
がユーザアドレス空間の外を指している。
.TP
.B EINVAL
.I target
がマウントポイントではない。
または、
.BR umount2 ()
で、
.B MNT_EXPIRE
が指定された
.BR umount2 ()
で、
.B MNT_DETACH
か
.B MNT_FORCE
が同時に指定された。
.TP
.B ENAMETOOLONG
パス名の長さが
.B MAXPATHLEN
より長かった。
.TP
.B ENOENT
パス名が空である。もしくは指定されたパスが存在しない。
.TP
.B ENOMEM
カーネルがファイル名やデータをコピーするための空きページを確保できなかった。
.TP
.B EPERM
呼び出し元が必要な権限を持っていない。
.SH バージョン
.\" http://sourceware.org/bugzilla/show_bug.cgi?id=10092
.BR MNT_DETACH
と
.BR MNT_EXPIRE
はバージョン 2.11 以降の glibc でのみ利用できる。
.SH 準拠
この関数は Linux 固有の関数であり、移植を考慮したプログラムでは
使用すべきでない。
.SH 注意
元々の
.BR umount ()
関数は \fIumount(device)\fP の形で呼び出され、
ブロックデバイス以外を指定して呼び出すと
.B ENOTBLK
を返した。
Linux 0.98p4 で、無名デバイス (anonymous device) に対応するために
\fIumount(dir)\fP の形での呼び出しが加えられた。
Linux 2.3.99-pre7 で、\fIumount(device)\fP は削除され、
\fIumount(dir)\fP だけが残された
(一つのデバイスを複数の位置にマウント出来るようになったため、
デバイスを指定しただけでは不十分だからである)。
.SH 関連項目
.BR mount (2),
.BR path_resolution (7),
.BR mount (8),
.BR umount (8)
