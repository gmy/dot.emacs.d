.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" Copyright (C) Tom Bjorkholm & Markus Kuhn, 1996
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" The GNU General Public License's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with this manual; if not, write to the Free
.\" Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111,
.\" USA.
.\"
.\" 1996-04-01 Tom Bjorkholm <tomb@mydata.se>
.\"            First version written
.\" 1996-04-10 Markus Kuhn <mskuhn@cip.informatik.uni-erlangen.de>
.\"            revision
.\" Modified 2004-05-27 by Michael Kerrisk <mtk.manpages@gmail.com>
.\"
.\" Japanese Version Copyright (c) 1997 HANATAKA Shinya
.\"         all rights reserved.
.\" Translated 1997-02-23, HANATAKA Shinya <hanataka@abyss.rim.or.jp>
.\" Updated & Modified 2005-02-10, Yuichi SATO <ysato444@yahoo.co.jp>
.\" Updated & Modified 2005-10-10, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>
.\" Updated 2006-04-14, Akihiro MOTOKI, LDP v2.29
.\"
.\"WORD:	process			プロセス
.\"WORD:	scheduling		スケジューリング
.\"WORD:	policy			方針
.\"WORD:	implement		実装
.\"WORD:	parameter		パラメータ
.\"WORD:	effective user ID	実効ユーザーID
.\"
.TH SCHED_SETPARAM 2 2006-03-23 "Linux" "Linux Programmer's Manual"
.SH 名前
sched_setparam, sched_getparam \- スケジューリング・パラメータの設定と取得を行なう
.SH 書式
.nf
.B #include <sched.h>
.sp
.BI "int sched_setparam(pid_t " pid ", const struct sched_param *" param );
.sp
.BI "int sched_getparam(pid_t " pid ", struct sched_param *" param );
.sp
.nf
.ta 4n
\fBstruct sched_param {
    ...
    int \fIsched_priority\fB;
    ...
};
.fi
.SH 説明
.BR sched_setparam ()
は \fIpid\fP で指定されたプロセスのスケジューリング方針 (scheduling policy) に
関連するスケジューリング・パラメータを設定する。
\fIpid\fP が 0 ならば、呼び出し元のプロセスのパラメータが設定される。
引き数 \fIparam\fP の解釈は、
.I pid
で指定されたプロセスのスケジューリング方針によって異なる。
Linux でサポートされているスケジューリング方針の説明は
.BR sched_setscheduler (2)
を参照のこと。

.BR sched_getparam ()
は \fIpid\fP で指定されたプロセスのスケジューリング・パラメータを取得する。
\fIpid\fP が 0 ならば、呼び出し元のプロセスのパラメータを取得する。

.BR sched_setparam ()
はプロセスのスケジューリング方針における \fIparam\fP の妥当性をチェックする。
\fIparam\->sched_priority\fP の値は
.BR sched_get_priority_min (2)
と
.BR sched_get_priority_max (2)
の範囲に入っていなければならない。

スケジューリングの優先度と方針に関連する特権とリソース制限の
議論に関しては
.BR sched_setscheduler (2)
を参照のこと。

.BR sched_setparam ()
と
.BR sched_getparam ()
が使用できる POSIX システムでは、
.I <unistd.h>
に
.B _POSIX_PRIORITY_SCHEDULING
が定義されている。
.SH 返り値
成功した場合は
.BR sched_setparam ()
と
.BR sched_getparam ()
は 0 を返す。
エラーの場合は \-1 が返され、
.I errno
が適切に設定される。
.SH エラー
.TP
.B EINVAL
引き数 \fIparam\fP が現在のスケジューリング方針においては
無意味である。
.TP
.B EPERM
呼び出し元のプロセスが適切な特権を持っていない
(Linux では、
.B CAP_SYS_NICE
ケーパビリティを持っていない)。
.TP
.B ESRCH
\fIpid\fP を ID に持つプロセスが見つからなかった。
.SH 準拠
POSIX.1-2001.
.SH 関連項目
.BR getpriority (2),
.BR nice (2),
.BR sched_get_priority_max (2),
.BR sched_get_priority_min (2),
.BR sched_getaffinity (2),
.BR sched_getscheduler (2),
.BR sched_setaffinity (2),
.BR sched_setscheduler (2),
.BR setpriority (2),
.BR capabilities (7)
.PP
.I Programming for the real world \- POSIX.4
by Bill O. Gallmeister, O'Reilly & Associates, Inc., ISBN 1-56592-074-0
