.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" Copyright (c) 1992 Drew Eckhardt (drew@cs.colorado.edu), March 28, 1992
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Modified by Michael Haardt <michael@moria.de>
.\" Modified by Thomas Koenig <ig25@rz.uni-karlsruhe.de>
.\" Modified 1993-07-23 by Rik Faith <faith@cs.unc.edu>
.\" Modified 1993-07-25 by Rik Faith <faith@cs.unc.edu>
.\" Modified 1995-11-01 by Michael Haardt
.\"  <michael@cantor.informatik.rwth-aachen.de>
.\" Modified 1996-04-14 by Andries Brouwer <aeb@cwi.nl>
.\"  [added some polishing contributed by Mike Battersby <mib@deakin.edu.au>]
.\" Modified 1996-07-21 by Andries Brouwer <aeb@cwi.nl>
.\" Modified 1997-01-17 by Andries Brouwer <aeb@cwi.nl>
.\" Modified 2001-12-18 by Andries Brouwer <aeb@cwi.nl>
.\" Modified 2002-07-24 by Michael Kerrisk <mtk.manpages@gmail.com>
.\"	Added note on historical rules enforced when an unprivileged process
.\"	sends a signal.
.\" Modified 2004-06-16 by Michael Kerrisk <mtk.manpages@gmail.com>
.\"     Added note on CAP_KILL
.\" Modified 2004-06-24 by aeb
.\" Modified, 2004-11-30, after idea from emmanuel.colbus@ensimag.imag.fr
.\"
.\" Japanese Version Copyright (c) 1997 Kazuyuki Tanisako
.\"         all rights reserved.
.\" Translated 1997-05-17, Kazuyuki Tanisako <tanisako@osa.dec-j.co.jp>
.\" Modified 1997-05-27, Kazuyuki Tanisako <tanisako@osa.dec-j.co.jp>
.\" Modified 1998-02-05, Kazuyuki Tanisako <tanisako@osa.dec-j.co.jp>
.\" Updated 2001-12-27, Kentaro Shirakata <argrath@ub32.org>
.\" Updated 2002-01-03, Kentaro Shirakata <argrath@ub32.org>
.\" Updated 2002-09-27, Kentaro Shirakata <argrath@ub32.org>
.\" Updated 2005-02-27, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>
.\" Updated 2005-12-05, Akihiro MOTOKI, Catch up to LDP man-pages 2.16
.\" Updated 2008-08-06, Akihiro MOTOKI, LDP v3.05
.\"
.\"WORD:	signal			シグナル
.\"WORD:	process group		プロセス・グループ
.\"WORD:	permission		許可
.\"WORD:	privileges		特権
.\"WORD:	set-user-id		セットユーザーID
.\"WORD:	signal handler		シグナルハンドラー
.\"
.TH KILL 2 2009-09-15 "Linux" "Linux Programmer's Manual"
.SH 名前
kill \- プロセスにシグナルを送る
.SH 書式
.nf
.B #include <sys/types.h>
.br
.B #include <signal.h>
.sp
.BI "int kill(pid_t " pid ", int " sig );
.fi
.sp
.in -4n
glibc 向けの機能検査マクロの要件
.RB ( feature_test_macros (7)
参照):
.in
.sp
.ad l
.BR kill ():
_POSIX_C_SOURCE\ >=\ 1 || _XOPEN_SOURCE || _POSIX_SOURCE
.ad b
.SH 説明
システムコールの
.BR kill ()
は、任意のプロセス・グループもしくはプロセスにシグナルを
送るのに使われる。
.PP
\fIpid\fP に正の値を指定した場合、シグナル \fIsig\fP が
\fIpid\fP で指定された ID を持つプロセスに送られる。
.PP
\fIpid\fP に 0 を指定した場合、
呼び出し元のプロセスのプロセス・グループに属するすべてのプロセスに
\fIsig\fP で指定したシグナルが送られる。
.PP
\fIpid\fP に \-1 を指定した場合、 \fIsig\fP で指定したシグナルが、
呼び出し元のプロセスがシグナルを送る許可を持つ全てのプロセスに
送られる。但し、プロセス番号 1 (\fIinit\fP) へはシグナルは送られない。
以下の関連部分も参照のこと。
.PP
\fIpid\fP に \-1 より小さな値を指定した場合、
ID が \fI\-pid\fP のプロセス・グループに属するすべてのプロセスに
\fIsig\fP で指定したシグナルが送られる。
.PP
\fIsig\fP に 0 を指定した場合、シグナルは送られないが、
エラーのチェックは行われる。これを使って、プロセス ID や
プロセスグループ ID の存在確認を行うことができる。

あるプロセスがシグナルを送る許可を持つには、
そのプロセスが特権 (Linux では
.B CAP_KILL
ケーパビリティ) を持つプロセスであるか、シグナルを送る側のプロセスの
実UID か実効UID が受ける側のプロセスの実 set-UID か
保存 (saved) set-UID が一致していなければならない。
.B SIGCONT
の場合は、シグナルを送信するプロセスと受信するプロセスが
同じセッションに所属していれば十分である。
.SH 返り値
成功した場合 (少なくとも一つのシグナルが送信された場合)、
0 が返される。エラーの場合 \-1 が返され、
.I errno
が適切に設定される。
.SH エラー
.TP
.B EINVAL
無効なシグナルを指定した。
.TP
.B EPERM
プロセスが、受信するプロセスのいずれに対しても
シグナルを送る許可を持っていない。
.TP
.B ESRCH
指定したプロセスまたはプロセス・グループが存在しなかった。
ゾンビプロセスは存在するプロセスとしてみなされる。
ゾンビプロセスとはすでに処理は終了しているが、親プロセスによる
.BR wait ()
処理が行われていないプロセスのことである。
.SH 準拠
SVr4, 4.3BSD, POSIX.1-2001.
.SH 注意
プロセス番号 1 の
.I init
プロセスに送ることができるシグナルは、
.I init
が明示的にシグナルハンドラを設定したシグナルだけである。
こうなっているのは、誤ってシステムをダウンさせないようにするためである。
.LP
POSIX.1-2001 では、 \fIkill(\-1,sig)\fP が
呼び出し元のプロセスがシグナルを送ることが出来るプロセス全てに
\fIsig\fP を送ることを要求している。
但し、システム実装時に定められたシステムプロセスは
シグナルの送信対象から除外される。
Linux では、プロセスが自分自身にシグナルを送れるようになっているが、
Linux の \fIkill(\-1,sig)\fP は呼び出し元のプロセスにはシグナルを送らない。
.LP
POSIX.1-2001 では以下の動作になることを要求している。
自分自身にシグナルを送ると、シグナルを送ったスレッドがそのシグナルをブロック
しておらず、他のどのスレッドもそのシグナルを受ける状態にもなく
.BR sigwait (3)
でそのシグナルを待ってもいない場合、
.BR kill ()
が返る前に少なくとも一つのブロックされていない
シグナルがシグナルを送ったスレッドに配送されなければならない。
.SS "Linux での注意"
Linux では、特権のないプロセスが他のプロセスにシグナルを送信するために
必要な権限についてのルールが、カーネルバージョンにより違っている。
.\" 0.* カーネルの話は割愛し、多少変更した。- MTK, 24 Jul 02
カーネル 1.0 から 1.2.2 では、送信側の実効ユーザーID が受信側の
実効ユーザー IDと一致すればシグナルを送信できた。
カーネル 1.2.3 から 1.3.77では、送信側の実効ユーザーID が受信側の
実ユーザーID か実効ユーザーID のいずれかと一致すればシグナルを送信できた。
現在のルールは、POSIX.1-2001 に準拠しており、カーネル 1.3.78 以降で
適用されている。
.SH バグ
バージョン 2.6.7 以前の 2.6 系のカーネルには、
プロセスグループにシグナルを送ったときに、
呼び出し元のプロセスがプロセスグループの (全メンバーではなく) 一部のメンバー
に対してのみシグナルを送る許可を持っている場合に、
.BR kill ()
がエラー
.B EPERM
で失敗するというバグがある。
このエラーが返るにもかかわらず、そのシグナルは呼び出し元が
シグナルを送る許可を持つ全てのプロセスへ送られる。
.SH 関連項目
.BR _exit (2),
.BR killpg (2),
.BR signal (2),
.BR tkill (2),
.BR exit (3),
.BR sigqueue (3),
.BR credentials (7),
.BR capabilities (7),
.BR signal (7)
