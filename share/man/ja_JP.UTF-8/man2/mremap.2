.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" Copyright (c) 1996 Tom Bjorkholm <tomb@mydata.se>
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"

.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with this manual; if not, write to the Free
.\" Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111,
.\" USA.
.\"
.\" 1996-04-11 Tom Bjorkholm <tomb@mydata.se>
.\"            First version written (1.3.86)
.\" 1996-04-12 Tom Bjorkholm <tomb@mydata.se>
.\"            Update for Linux 1.3.87 and later
.\" 2005-10-11 mtk: Added NOTES for MREMAP_FIXED; revised EINVAL text.
.\"
.\" Japanese Version Copyright (c) 1997 HANATAKA Shinya
.\"         all rights reserved.
.\" Translated 1997-02-23, HANATAKA Shinya <hanataka@abyss.rim.or.jp>
.\" Updated 2002-11-26, Kentaro Shirakata <argrath@ub32.org>
.\" Updated 2005-10-09, Kentaro Shirakata <argrath@ub32.org>
.\" Updated 2006-04-16, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>, LDP v2.28
.\"
.\"WORD:	virtual memory		仮想メモリ
.\"WORD:	remap			再マッピング
.\"WORD:	argument		引き数
.\"WORD:	address space		アドレス空間
.\"WORD:	page align		ページ境界
.\"WORD:	linear			リニア
.\"WORD:	process			プロセス
.\"WORD:	segment			セグメント
.\"WORD:	real memory		実メモリ
.\"WORD:	segmentation violation	セグメンテーション侵害
.\"WORD:	segmentation fault	セグメンテーション違反
.\"WORD:	scheme			方式
.\"WORD:	implement		実装
.\"WORD:	lock			ロック
.\"
.TH MREMAP 2 2010-06-10 "Linux" "Linux Programmer's Manual"
.SH 名前
mremap \- 仮想メモリ・アドレスを再マッピングする
.SH 書式
.nf
.BR "#define _GNU_SOURCE" "         /* feature_test_macros(7) 参照 */"
.br
.B #include <sys/mman.h>
.sp
.BI "void *mremap(void *" old_address ", size_t " old_size ,
.BI "             size_t " new_size ", int " flags ", ... /* void *" new_address " */);"
.fi
.SH 説明
.BR mremap ()
は既存のメモリ・マッピングの拡張 (または縮小) を行う。
同時に移動されることもある
(\fIflags\fP 引き数と利用可能な仮想アドレス空間によって決まる)。

\fIold_address\fP は拡張 (または縮小) しようとする仮想メモリ・ブロック
の元のアドレスである。\fIold_address\fP はページ境界に合っていなければ
ならない点に注意すること。\fIold_size\fP は元の仮想メモリ・ブロックの
サイズである。
\fInew_size\fP は要求する変更後の仮想メモリ・ブロックのサイズである。
5 番目の引き数として
.I new_address
を指定することができる。下記の
.B MREMAP_FIXED
の説明を参照のこと。

Linux ではメモリはページに分割される。ユーザー・プロセスは (一つまたは)
複数のリニアな仮想メモリセグメントを持つ。
それぞれの仮想メモリセグメントは一つ以上の実メモリ・ページ
にマッピングされている (マッピング情報はページ・テーブルで管理される)。
仮想メモリセグメントにはセグメント毎の保護 (アクセス権) が設定されており、
メモリが不正にアクセスされた場合 (例えば読み込み専用のセグメントに
書き込んだ場合)、セグメンテーション侵害 (segmentation violation) を
引き起こす。また、セグメント外の仮想メモリにアクセスした場合にも
セグメンテーション侵害が発生する。

.BR mremap ()
は Linux のページ・テーブル方式を使用する。
.BR mremap ()
は仮想アドレスとメモリ・ページのマッピングを変更する。これは非常に効率的な
.BR realloc (3)
を実装するのに使用されている。

\fIflags\fP ビットマスク引数は 0 または以下のフラグを含む:
.TP
.B MREMAP_MAYMOVE
デフォルトでは、現在の位置にマッピングを拡張するための
十分な空きがなければ
.BR mremap ()
は失敗する。
このフラグが指定されると、カーネルは必要があればマッピングを
新しい仮想アドレスに再配置することができる
マッピングが再配置されると、古いマッピング位置への絶対ポインタは
無効になる (マッピングの開始アドレスからの相対オフセットは有効のままである)。
.TP
.BR MREMAP_FIXED " (Linux 2.3.31 以降)"
このフラグは
.BR mmap (2)
の
.B MAP_FIXED
フラグと似たような目的で用いられる。
このフラグが指定されると、
.BR mremap ()
は 5 番目の引き数
.I "void *new_address"
を受け取り、この引数はマッピングが移動されるべきアドレスを指定する。
このアドレスはページ境界に合っていなければならない。
.I new_address
と
.I new_size
で指定されるアドレス範囲に過去のマッピングがあった場合、
そのマッピングはアンマップされる (unmapped)。
.B MREMAP_FIXED
を指定した場合は、
.B MREMAP_MAYMOVE
も指定しなければならない。
.PP
.I old_address
と
.I old_size
で指定されるメモリセグメントが
.RB ( mlock (2)
や同様のもので) ロックされている場合、セグメントのサイズが変わったり
再配置されたりした時にロックも維持される。
その結果、プロセスによってロックされるメモリの量は変化する。
.SH 返り値
成功した場合は
.BR mremap ()
は新しい仮想メモリ領域へのポインタを返す。
エラーの場合は
.B MAP_FAILED
(すなわち \fI(void\ *)\ \-1\fP) が返され、
\fIerrno\fP が適切に設定される。
.SH エラー
.TP
.B EAGAIN
呼び出し元がロックされているメモリセグメントを拡張しようとしたが、
.B RLIMIT_MEMLOCK
リソース制限を越えずにこれを行うことができない。
.TP
.B EFAULT
「セグメンテーション違反(segmentation fault)」
\fIold_address\fP から \fIold_address\fP+\fIold_size\fP の
範囲のアドレスのどれかがこのプロセスにおいて不正な仮想メモリ・アドレスである。
たとえ要求したアドレス空間全体を含むようなマッピングがあったとしても、
それらのマッピングが異なった型ならば
.B EFAULT
を受け取るだろう。
.TP
.B EINVAL
不正な引き数が与えられた。
可能性のある原因は以下の通りである:
たいていは \fIold_address\fP がページ境界に
合ってない;
.I flags
に
.B MREMAP_MAYMOVE
または
.B MREMAP_FIXED
以外の値が指定されている;
.I new_size
がゼロ;
.I new_size
または
.I new_address
の値が不正;
.I new_address
と
.I new_size
で指定される新しいアドレス範囲が
.I old_address
と
.I old_size
で指定される古いアドレス範囲と重なっている;
.B MREMAP_FIXED
が指定されているが
.B MREMAP_MAYMOVE
が指定されていない。
.TP
.B ENOMEM
現在の仮想アドレスではメモリ領域が拡張できず、
.B MREMAP_MAYMOVE
フラグが \fIflags\fP に設定されていない。
または十分な (仮想) メモリが存在しない。
.SH 準拠
このコールは Linux 特有であり、移植を意図したプログラムで
使用すべきではない。
.\" 4.2BSD には (実際に実装されていたわけではないが)
.\" 全く異った方式 (semantics) による
.\" .BR mremap (2)
.\" コールがあった。
.\" FIXME perhaps remove above statement about 4.2BSD.
.SH 注意
バージョン 2.4 より前の glibc では、
.B MREMAP_FIXED
の定義は公開されておらず、
.BR mremap ()
のプロトタイプは
.I new_address
引き数を取らなかった。
.SH 関連項目
.BR brk (2),
.BR getpagesize (2),
.BR getrlimit (2),
.BR mlock (2),
.BR mmap (2),
.BR sbrk (2),
.BR realloc (3),
.BR malloc (3)
.P
ページ分割されたメモリについてもっと詳しく知りたいならば
あなたの好みの OS の教科書を参照すること。
(\fIModern Operating Systems\fP by Andrew S. Tannenbaum,
\fIInside Linux\fP by Randolf Bentson,
\fIThe Design of the UNIX Operating System\fP by Maurice J. Bach.)
