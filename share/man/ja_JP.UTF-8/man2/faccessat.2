.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" This manpage is Copyright (C) 2006, Michael Kerrisk
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Japanese Version Copyright (c) 2006-2007 Yuichi SATO
.\"         all rights reserved.
.\" Translated 2006-10-14 by Yuichi SATO <ysato444@yahoo.co.jp>, LDP v2.39
.\" Updated & Modified 2007-01-08 by Yuichi SATO, LDP v2.43
.\" Updated 2007-05-04, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>
.\"
.TH FACCESSAT 2 2009-12-13 "Linux" "Linux Programmer's Manual"
.SH 名前
faccessat \- ディレクトリファイルディスクリプタから相対的な位置にある
ファイルのアクセス権をチェックする
.SH 書式
.nf
.B #include <fcntl.h>           /* AT_* 定数の定義 */
.B #include <unistd.h>
.sp
.BI "int faccessat(int " dirfd ", const char *" pathname ", int " \
mode ", int " flags );
.fi
.sp
.in -4n
glibc 向けの機能検査マクロの要件
.RB ( feature_test_macros (7)
参照):
.in
.sp
.BR faccessat ():
.PD 0
.ad l
.RS 4
.TP 4
glibc 2.10 以降:
_XOPEN_SOURCE\ >=\ 700 || _POSIX_C_SOURCE\ >=\ 200809L
.TP
glibc 2.10 より前:
_ATFILE_SOURCE
.RE
.ad
.PD
.SH 説明
.BR faccessat ()
システムコールは、この man ページで説明している違いがある以外は、
.BR access (2)
と全く同じように動作する。

.I pathname
で指定されるパス名が相対パスである場合、
ファイルディスクリプタ
.I dirfd
で参照されるディレクトリからの相対パス名として解釈される
.RB ( access (2)
では、相対パスは呼び出し元プロセスのカレントワーキングディレクトリからの
相対パスとなる)。

.I pathname
が相対パスであり、かつ
.I dirfd
が特別な値
.B AT_FDCWD
である場合、
.I pathname
は
.RB ( access (2)
と同じように) 呼び出し元プロセスの
カレントワーキングディレクトリからの相対パス名として解釈される。

.I pathname
が絶対パスである場合、
.I dirfd
は無視される。

.I flags
は以下の値を 0 個以上 OR して作られる。
.TP
.B AT_EACCESS
実効 (effective) ユーザ ID と実効グループ ID を使って、
アクセス権のチェックを行う。
デフォルトでは、
.BR faccessat ()
は
.RB ( access (2)
と同様に) 実 ID を使う。
.TP
.B AT_SYMLINK_NOFOLLOW
.I pathname
がシンボリックリンクの場合は、それを辿るのではなく、
リンク自身についての情報を返す。
.SH 返り値
成功した場合 (全ての要求された許可が得られたら)、
.BR faccessat ()
は 0 を返す。
エラーの場合、\-1 が返され、
.I errno
にはエラーを示す値が設定される。
.SH エラー
.BR access (2)
と同じエラーが
.BR faccessat ()
でも起こる。
.BR faccessat ()
では、その他に以下のエラーが起こる:
.TP
.B EBADF
.I dirfd
が有効なファイルディスクリプタでない。
.TP
.B EINVAL
.I flags
に不正なフラグ値が指定された。
.TP
.B ENOTDIR
.I pathname
が相対パスで、かつ
.I dirfd
がディレクトリ以外のファイルを参照するファイルディスクリプタである。
.SH バージョン
.BR faccessat ()
は Linux カーネル 2.6.16 で追加された。
.SH 準拠
POSIX.1-2008.
.SH 注意
.BR faccessat ()
が必要な理由については、
.BR openat (2)
を参照すること。
.SS glibc についての注意
.B AT_EACCESS
と
.B AT_SYMLINK_NOFOLLOW
フラグは、
.BR faccessat ()
の glibc ラッパー関数で実際に実装されている。
これらのフラグのいずれかが指定された場合、
ラッパー関数はアクセス権を決定するために
.BR fstatat (2)
を使う。
.SH 関連項目
.BR access (2),
.BR openat (2),
.BR eauidaccess (3),
.BR credentials (7),
.BR path_resolution (7),
.BR symlink (7)
