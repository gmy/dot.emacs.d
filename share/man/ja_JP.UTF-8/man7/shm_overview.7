'\" t
.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" Copyright (C) 2008, Linux Foundation, written by Michael Kerrisk
.\" <mtk.manpages@gmail.com>
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Japanese Version Copyright (c) 2008  Akihiro MOTOKI
.\"         all rights reserved.
.\" Translated 2008-08-21, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>, LDP v3.04
.\"
.TH SHM_OVERVIEW 7 2010-09-10 "Linux" "Linux Programmer's Manual"
.SH 名前
shm_overview \- POSIX 共有メモリの概要
.SH 説明
POSIX 共有メモリ API を使用すると、メモリのある領域を共有して、
プロセス間で情報をやり取りすることができる。

この API では以下のインターフェースが採用されている。
.TP 15
.BR shm_open (3)
新しいオブジェクトを生成しオープンする、もしくは
既存のオブジェクトをオープンする。これは
.BR open (2)
と同じである。下記にある他のインターフェースで使用する
ファイルディスクリプタを返す。
.TP
.BR ftruncate (2)
共有メモリオブジェクトの大きさを設定する。
.TP
.BR mmap (2)
呼び出したプロセスの仮想アドレス空間に共有メモリオブジェクトを
マップする。
.TP
.BR munmap (2)
呼び出したプロセスの仮想アドレス空間から
共有メモリオブジェクトをアンマップする。
.TP
.BR shm_unlink (3)
共有メモリオブジェクト名を削除する。
.TP
.BR close (2)
.BR shm_open (3)
で割り当てられたファイルディスクリプタが不要になった際に、
そのファイルディスクリプタをクローズする。
.TP
.BR fstat (2)
その共有メモリオブジェクトについての情報が入った
.I stat
構造体を取得する。
このシステムコールが返す情報には、オブジェクトのサイズ
.RI ( st_size )、
許可属性
.RI ( st_mode )、
所有者
.RI ( st_uid )、
グループ
.RI ( st_gid )
がある。
.TP
.BR fchown (2)
共有メモリオブジェクトの所有権を変更する。
.TP
.BR fchmod (2)
共有メモリオブジェクトの許可属性を変更する。
.SS バージョン
POSIX 共有メモリは Linux 2.4 と glibc 2.2 以降でサポートされている。
.SS 持続性
POSIX 共有メモリオブジェクトはカーネル内で保持される。
共有メモリオブジェクトは、システムがシャットダウンされるか、
全てのプロセスがそのオブジェクトをアンマップし、
.BR shm_unlink (3)
で削除されるまで、存在し続ける。
.SS リンク
POSIX 共有メモリ API を使用したプログラムは
.I cc \-lrt
でコンパイルし、リアルタイムライブラリ
.I librt
とリンクしなければならない。
.SS ファイルシステム経由での共有メモリオブジェクトへのアクセス
Linux では、共有メモリオブジェクトは通常
.I /dev/shm
以下にマウントされる仮想ファイルシステム
.RI ( tmpfs )
内に作成される。
カーネル 2.6.19 以降の Linux では、
仮想ファイルシステム内のオブジェクトの許可属性の制御に、
アクセス制御リスト (ACL; access control lists) を使うことができる。
.SH 準拠
POSIX.1-2001.
.SH 注意
通常は、共有メモリオブジェクトにアクセスするプロセスは、
POSIX セマフォなどを使ってプロセス間で同期をとらなければならない。

System V 共有メモリ
.RB ( shmget (2),
.BR shmop (2)
など) は古い共有メモリ API である。
POSIX 共有メモリは、より簡単で、うまく設計されたインタフェースを提供している。
一方で、POSIX 共有メモリは System V 共有メモリと比べると
利用できるシステムが少ない (特に、古いシステムでは少ない)。
.SH 関連項目
.BR fchmod (2),
.BR fchown (2),
.BR fstat (2),
.BR ftruncate (2),
.BR mmap (2),
.BR mprotect (2),
.BR munmap (2),
.BR shmget (2),
.BR shmop (2),
.BR shm_open (3),
.BR shm_unlink (3),
.BR sem_overview (7)
