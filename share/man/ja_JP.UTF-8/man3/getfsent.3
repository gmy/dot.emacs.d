.\" Copyright (C) 2002 Andries Brouwer (aeb@cwi.nl)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Inspired by a page written by Walter Harms.
.\"
.\" Japanese Version Copyright (c) 2002 NAKANO Takeo all rights reserved.
.\" Translated Wed 7 Aug 2002 by NAKANO Takeo <nakano@apm.seikei.ac.jp>
.\"
.TH GETFSENT 3 2002-02-28 "Linux" "Linux Programmer's Manual"
.SH 名前
getfsent, getfsspec, getfsfile, setfsent, endfsent \- fstab エントリの処理
.SH 書式
.B #include <fstab.h>
.sp
.B "void endfsent(void);"
.sp
.B "struct fstab *getfsent(void);"
.sp
.BI "struct fstab *getfsfile(const char *" mount_point );
.sp
.BI "struct fstab *getfsspec(const char *" special_file );
.sp
.B "int setfsent(void);"
.SH 説明
これらの関数は
.I /etc/fstab
ファイルから情報を読み込む。\fIfstab\fP 構造体は次のように定義されている。
.LP
.in +4n
.nf
struct fstab {
    char       *fs_spec;       /* block device name */
    char       *fs_file;       /* mount point */
    char       *fs_vfstype;    /* file-system type */
    char       *fs_mntops;     /* mount options */
    const char *fs_type;       /* rw/rq/ro/sw/xx option */
    int         fs_freq;       /* dump frequency, in days */
    int         fs_passno;     /* pass number on parallel dump */
};
.fi
.in
.PP
*BSD システムの場合、
.I fs_type
フィールドには、5 つの文字列
"rw", "rq", "ro", "sw", "xx"
のいずれかが入る
(それぞれ read-write, quota 付き read-write, read-only, swap, ignore)。

関数
.BR setfsent ()
は呼び出されると fstab ファイルをオープンし、
最初の行に移動する。
.LP
関数
.BR getfsent ()
は fstab ファイルから次の行をパースする
(必要な場合はファイルをオープンする)。
.LP
関数
.BR endfsent ()
は呼び出されると fstab ファイルをクローズする。
.LP
関数
.BR getfsspec ()
は fstab ファイルを先頭から検索し、
.I fs_spec
フィールドが
.I special_file
引数にマッチするエントリが見つかったら、その最初のものを返す。
.LP
関数
.BR getfsfile ()
は fstab ファイルを先頭から検索し、
.I fs_file
フィールドが
.I mount_point
引数にマッチするエントリが見つかったら、その最初のものを返す。
.SH 返り値
成功すると、
.BR getfsent (),
.BR getfsfile (),
.BR getfsspec ()
の各関数は \fIfstab\fP 構造体へのポインタを返し、
.BR setfsent ()
関数は 1 を返す。
失敗するとこれらの関数は NULL を返し、
end-of-file になったら 0 を返す。
.\" .SH 履歴
.\" .BR getfsent ()
.\" 関数は 4.0BSD で登場した。
.\" 他の 4 つの関数は 4.3BSD で登場した。
.SH 準拠
POSIX.1-2001 にはこれらの関数は存在しない。
これらの関数をもつ OS はいくつかあり、
*BSD, SunOS, Digital UNIX, AIX 等である
(AIX には
.BR getfstype ()
もある)。
HP-UX にも同名の関数群があるが、
HP-UX のものは \fIfstab\fP 構造体ではなく \fIchecklist\fP 構造体を用いる。
またこれらの関数の呼び出しは obsolete で、
.BR getmntent (3)
に取って代わられている。
.SH 注意
これらの関数はスレッドセーフではない。
.LP
Linux ではブロックスペシャルデバイスを複数の場所にマウントでき、
また複数のデバイスが同じマウントポイントを共有できる
(この場合はそのマウントポイントに最後にマウントされたデバイスが意味を持つ)
が、
.BR getfsfile ()
と
.BR getfsspec ()
はマッチした最初のエントリしか返さないので、
これらの 2 つの関数は Linux での利用には適していない。
.SH 関連項目
.BR getmntent (3),
.BR fstab (5)
