.\" Copyright 1993 David Metcalfe (david@prism.demon.co.uk)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD man pages
.\" Modified Sat Jul 24 19:48:17 1993 by Rik Faith (faith@cs.unc.edu)
.\"
.\" Japanese Version Copyright (c) 1997 NAGOYA Hiroaki
.\"         all rights reserved.
.\" Translated Mon Feb 10 1997 by Hiroaki Nagoya <nagoya@is.titech.ac.jp>
.\" Updated & Modified Sat Mar 23 23:57:43 JST 2002
.\"          by Yuichi SATO <ysato@h4.dion.ne.jp>
.\"
.\"WORD:	epoch	紀元
.\"
.TH DIFFTIME 3  2010-02-25 "GNU" "Linux Programmer's Manual"
.SH 名前
difftime \- 時刻の間隔の計算
.SH 書式
.nf
.B #include <time.h>
.sp
.BI "double difftime(time_t " time1 ", time_t " time0 );
.fi
.SH 説明
関数
.BR difftime ()
は時刻 \fItime0\fP から
時刻 \fItime1\fP までの経過時間を
.I double
型で返す。各々の時刻はカレンダー時間で指定する。
つまり、紀元 (Epoch; 1970-01-01 00:00:00 +0000 (UTC)) からの
経過時間を秒単位で指定する。
.SH 準拠
SVr4, 4.3BSD, C89, C99.
.SH 注意
POSIX システムでは
.I time_t
は数値型なので、引き算の際に起こる可能性のあるオーバーフローを
気にしない場合は、単純に
.RS
.nf

#define difftime(t1,t0) (double)(t1 \- t0)

.fi
.RE
と定義できる。
他のシステムでは、データ型
.I time_t
に何か別のエンコーディングが使われていることがあり、
その場合には直接引き算を行うことはできない。
.SH 関連項目
.BR date (1),
.BR gettimeofday (2),
.BR time (2),
.BR ctime (3),
.BR gmtime (3),
.BR localtime (3)
