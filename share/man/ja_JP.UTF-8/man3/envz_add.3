.\" Copyright 2002 walter harms (walter.harms@informatik.uni-oldenburg.de)
.\" Distributed under GPL
.\" based on the description in glibc source and infopages
.\"
.\" Corrections and additions, aeb
.\"
.\" Japanese Version Copyright (c) 2002 Akihiro MOTOKI, all rights reserved.
.\" Translated Mon Feb  2 2003 by Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>
.\"
.TH ENVZ_ADD 3 2007-05-18 "" "Linux Programmer's Manual"
.SH 名前
envz_add, envz_entry, envz_get, envz_merge,
envz_remove, envz_strip \- 環境変数文字列の操作
.SH 書式
.nf
.B "#include <envz.h>"

.BI "error_t envz_add(char **" envz ", size_t *" envz_len ,
.ti 20n
.BI "const char *" name ", const char *" value );

.BI "char *envz_entry(const char *" envz ", size_t *" envz_len \
", const char *" name );

.BI "char *envz_get(const char *" envz ", size_t *" envz_len \
", const char *" name );

.BI "error_t envz_merge(char **" envz ", size_t *" envz_len ,
.ti 20n
.BI "const char *" envz2 ", size_t " envz2_len ", int " override );

.BI "void envz_remove(char **" envz ", size_t *" envz_len \
", const char *" name );

.BI "void envz_strip(char **" envz ", size_t *" envz_len );
.fi
.SH 説明
これらの関数 glibc 固有である。
.LP
argz vector は長さ情報付きの文字バッファへのポインタである。
.BR argz_add (3)
を参照のこと。
envz vector は、文字列が "name=value (名前=値)" の形式になっている特別な
argz vector である。
最初の \(aq=\(aq 以降はすべて値とみなされる。\(aq=\(aq がなければ、
値は NULL と解釈される。(文字列の一番最後の文字が \(aq=\(aq の場合、値は空文字列
"" と解釈される。)
.LP
これらの関数は envz vector を操作するためのものである。
.LP
.BR envz_add ()
は、文字列
.RI \&" name = value \&"
.RI ( value
が NULL でない場合) または
.RI \&" name \&"
.RI ( value
が NULL の場合) を
envz vector
.RI ( *envz ,\  *envz_len )
に追加し、
.I *envz
と
.I *envz_len
を更新する。
.I name
と同じ名前を持つエントリがあった場合、元のエントリは削除される。
.LP
.BR envz_entry ()
は、envz vector
.RI ( envz ,\  envz_len )
から名前が
.I name
のエントリを検索する。
見つかった場合はそのエントリを返し、見つからなかった場合は NULL を返す。
.LP
.BR envz_get ()
は、envz vector
.RI ( envz ,\  envz_len )
から名前が
.I name
のエントリを検索する。
見つかった場合はエントリの値を返し、見つからなかった場合は NULL を返す。
(値は NULL の場合もあることに注意すること。名前が
.I name
のエントリに \(aq=\(aq 符号がない場合が該当する。)
.LP
.BR envz_merge ()
は、
.BR envz_add ()
と同じように
.I envz2
の各エントリを
.I *envz
に追加する。
.I override
が真の場合、
.I envz2
の値で
.I *envz
内の同じ名前をもつ値は上書きされる。
偽の場合は上書きされない。
.LP
.BR envz_remove ()
は、名前が
.I name
のエントリがあれば
.RI ( *envz ,\  *envz_len )
から削除する。
.LP
.BR envz_strip ()
は、値が NULL のエントリをすべて削除する。
.SH 返り値
メモリ割り当てを行う envz 関数群はすべて \fIerror_t\fP 型の返り値を持つ。
成功した場合は 0 を返し、割り当てエラーが発生した場合は
\fBENOMEM\fP を返す。
.SH 準拠
これらの関数は GNU による拡張である。注意して使用すること。
.SH 例
.nf
#include <stdio.h>
#include <stdlib.h>
#include <envz.h>

int
main(int argc, char *argv[], char *envp[])
{
    int i, e_len = 0;
    char *str;

    for (i = 0; envp[i] != NULL; i++)
        e_len += strlen(envp[i]) + 1;

    str = envz_entry(*envp, e_len, "HOME");
    printf("%s\en", str);
    str = envz_get(*envp, e_len, "HOME");
    printf("%s\en", str);
    exit(EXIT_SUCCESS);
}
.fi
.SH 関連項目
.BR argz_add (3)
