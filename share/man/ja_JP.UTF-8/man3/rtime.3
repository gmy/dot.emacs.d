.\" Copyright 2003 walter harms (walter.harms@informatik.uni-oldenburg.de)
.\" Distributed under GPL
.\" Modified 2003-04-04 Walter Harms
.\" <walter.harms@informatik.uni-oldenburg.de>
.\"
.\" Slightly polished, aeb, 2003-04-06
.\"
.\" Japanese Version Copyright (c) 2004 Yuichi SATO
.\"         all rights reserved.
.\" Translated Thu Sep  2 07:40:48 JST 2004
.\"         by Yuichi SATO <ysato444@yahoo.co.jp>
.\"
.TH RTIME 3 2010-02-25 "GNU" "Linux Programmer's Manual"
.SH 名前
rtime \- リモートマシンから時刻を取得する
.SH 書式
.nf
.B "#include <rpc/des_crypt.h>"
.sp
.BI "int rtime(struct sockaddr_in *" addrp ", struct rpc_timeval *" timep ,
.BI "          struct rpc_timeval *" timeout );
.fi
.SH 説明
この関数は RFC\ 868 に記述されているタイムサーバプロトコルを使用し、
リモートマシンから時刻を取得する。
.LP
タイムサーバプロトコルは 00:00:00 UTC, 1 Jan 1900 から秒数を提供するので、
この関数は適切な定数値を引くことにより、
提供された値を Unix における時刻紀元 (1970-01-01 00:00:00 +0000 (UTC))
から秒数に変換する。
.LP
.I timeout
が NULL でない場合、udp/time ソケット (ポート 37) が使用される。
それ以外の場合、tcp/time ソケット (ポート 37) が使用される。
.SH 返り値
成功した場合は、0 が返されて、得られた 32 ビットの時刻値は
.I timep\->tv_sec
に格納される。
エラーの場合は、\-1 が返されて、
.I errno
が適切に設定される。
.SH エラー
内部で使用している関数
.RB ( sendto (2),
.BR poll (2),
.BR recvfrom (2),
.BR connect (2),
.BR read (2))
の全てのエラーが起こる可能性がある。
更に次のエラーが起こる可能性がある:
.TP
.B EIO
返されたバイト数が 4 バイトでない。
.TP
.B ETIMEDOUT
timeout で定義された待ち時間の期限が切れた。
.SH 注意
IPv4 のみがサポートされている。
.LP
.I in.timed
のバージョンによっては TCP しかサポートしていないものもある。
.I use_tcp
を 1 に設定して、例にあるプログラムを試すこと。
.LP
libc5 はプロトタイプ
.br
int rtime(struct sockaddr_in *, struct timeval *, struct timeval *);
.br
を使い、
.I <rpc/auth_des.h>
の代わりに
.I <sys/time.h>
を必要とする。
.SH バグ
glibc 2.2.5 以前の
.BR rtime ()
は、64 ビットマシンで正確に動作しない。
.SH 例
この例ではポート 37 がアップされてオープンされている必要がある。
.I /etc/inetd.conf
の time エントリがコメントアウトされていないことを確認してほしい。
.br
このプログラムは "linux" というコンピュータに接続する。
"localhost" を使った場合は動作しない。
結果はコンピュータ "linux" のローカル時刻である。
.sp
.nf
#include <stdio.h>
#include <stdlib.h>
#include <errno.h>
#include <string.h>
#include <time.h>
#include <rpc/auth_des.h>
#include <netdb.h>

int use_tcp = 0;
char *servername = "linux";

int
main(void)
{
    struct sockaddr_in name;
    struct rpc_timeval time1 = {0,0};
    struct rpc_timeval timeout = {1,0};
    struct hostent *hent;
    int ret;

    memset((char *) &name, 0, sizeof(name));
    sethostent(1);
    hent = gethostbyname(servername);
    memcpy((char *) &name.sin_addr, hent\->h_addr, hent\->h_length);

    ret = rtime(&name, &time1, use_tcp ? NULL : &timeout);
    if (ret < 0)
        perror("rtime error");
    else
        printf("%s\\n", ctime((time_t *) &time1.tv_sec));

    exit(EXIT_SUCCESS);
}
.fi
.SH 関連項目
.\" .BR netdate (1),
.BR ntpdate (1),
.\" .BR rdate (1),
.BR inetd (8)
