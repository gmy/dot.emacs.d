.\" Copyright (c) 1990, 1991 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" Chris Torek and the American National Standards Committee X3,
.\" on Information Processing Systems.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)fflush.3	5.4 (Berkeley) 6/29/91
.\"
.\" Converted for Linux, Mon Nov 29 15:22:01 1993, faith@cs.unc.edu
.\"
.\" Modified 2000-07-22 by Nicol疽 Lichtmaier <nick@debian.org>
.\" Modified 2001-10-16 by John Levon <moz@compsoc.man.ac.uk>
.\"
.\" Japanese Version Copyright (c) 1997-2000 YOSHINO Takashi and NAKANO Takeo
.\"       all rights reserved.
.\" Translated 1997-02-13,YOSHINO Takashi <yoshino@civil.jcn.nihon-u.ac.jp>
.\" Update & Modified 1999-03-01, NAKANO Takeo <nakano@apm.seikei.ac.jp>
.\" Update & Modified 2000-09-21, NAKANO Takeo
.\" Updated 2001-11-02, Kentaro Shirakata <argrath@ub32.org>
.\" Updated 2010-04-10, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>, LDP v3.24
.\"
.\"WORD:	global variable		大域変数
.\"WORD:	buffered		バッファリングされた
.\"
.TH FFLUSH 3  2009-09-06 "GNU" "Linux Programmer's Manual"
.SH 名前
fflush \- ストリームの内容を強制的に出力(フラッシュ)する
.SH 書式
.B #include <stdio.h>
.sp
.BI "int fflush(FILE *" stream );
.SH 説明
出力ストリームに関しては、
.BR fflush ()
は、ユーザー空間でバッファリングされているすべてのデータを
指定された出力に書き出す (フラッシュする)、
もしくはストリーム
.I stream
の下位にある書き込み関数を用いてこのストリームを更新する。
入力ストリームに関しては、
.BR fflush ()
は、対応するファイルから取得されたが、アプリケーションからは
読み出されていないバッファデータを全て破棄する。
ストリームは開いた状態のままであり、
この関数によって何の影響も受けない。
.PP
.I stream
引数が .BR NULL ならば、
.BR fflush ()
は開いている\fIすべての\fR出力ストリームをフラッシュする。
.PP
これらの処理をロックせずに行いたいときは、
.BR unlocked_stdio (3)
を参照のこと。
.SH 返り値
成功すると 0 が返される。
その他の場合には
.B EOF
が返され、
.I errno
が、エラーに対応した値に設定される。
.SH エラー
.TP
.B EBADF
.I Stream
は開いているストリームではない。
あるいはストリームは書き込み用ではない。
.PP
.BR fflush ()
関数は
.BR write (2)
に関して規定されているエラーで失敗することもある。
この場合
.I errno
もその値に設定される。
.SH 準拠
C89, C99, POSIX.1-2001, POSIX.1-2008.

標準では、入力ストリームに対する動作は規定されていない。
他のほとんどの実装は Linux と同じ動作をする。
.\" Verified on: Solaris 8.
.SH 注意
.BR fflush ()
は、 C ライブラリが与えているユーザー空間のバッファしかフラッシュしない。
データが物理的にディスクに保存されることを保証したければ、
カーネルバッファもフラッシュしなければならない。
これには例えば
.BR sync (2)
や
.BR fsync (2)
を用いる。
.SH 関連項目
.BR fsync (2),
.BR sync (2),
.BR write (2),
.BR fclose (3),
.BR fopen (3),
.BR setbuf (3),
.BR unlocked_stdio (3)
