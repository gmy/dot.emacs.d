'\" t
.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" Copyright (C) 2006 Michael Kerrisk <mtk.manpages@gmail.com>
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Japanese Version Copyright (c) 2006 Akihiro MOTOKI all rights reserved.
.\" Translated 2006-04-23, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>
.\" Updated 2008-11-09, Akihiro MOTOKI, LDP v3.13
.\"
.TH MQ_RECEIVE 3 2010-09-20 "Linux" "Linux Programmer's Manual"
.SH 名前
mq_receive, mq_timedreceive \- メッセージキューからメッセージを受信する
.SH 書式
.nf
.B #include <mqueue.h>
.sp
.BI "ssize_t mq_receive(mqd_t " mqdes ", char *" msg_ptr ,
.BI "                   size_t " msg_len ", unsigned *" msg_prio );
.sp
.B #include <time.h>
.B #include <mqueue.h>
.sp
.BI "ssize_t mq_timedreceive(mqd_t " mqdes ", char *" msg_ptr ,
.BI "                   size_t " msg_len ", unsigned *" msg_prio ,
.BI "                   const struct timespec *" abs_timeout );
.fi
.sp
\fI\-lrt\fP でリンクする。
.sp
.ad l
.in -4n
glibc 向けの機能検査マクロの要件
.RB ( feature_test_macros (7)
参照):
.in
.sp
.BR mq_timedreceive ():
.RS 4
_XOPEN_SOURCE\ >=\ 600 || _POSIX_C_SOURCE\ >=\ 200112L
.RE
.ad
.SH 説明
.BR mq_receive ()
は、記述子
.I mqdes
で参照されるメッセージキューから最も高い優先度を持つ
最も古いメッセージを削除し、そのメッセージを
.I msg_ptr
が指すバッファに格納する。
.I msg_len
引き数は、
.I msg_ptr
が指すバッファの大きさを示す。この値はキューの
.I mq_msgsize
属性よりも大きくなければならない
.RB ( mq_getattr (3)
参照)。
.I prio
が NULL 以外の場合、
.I prio
が指すバッファに受信したメッセージの優先度が格納される。

キューが空の場合、デフォルトでは、
.BR mq_receive ()
は、新しいメッセージが届くか、関数呼び出しがシグナルハンドラにより
中断されるまで、停止 (block) する。
メッセージキュー記述 (message queue description) で
.B O_NONBLOCK
フラグが有効になっている場合は、
.BR mq_receive ()
はエラー
.B EAGAIN
ですぐに失敗する。

.BR mq_timedreceive ()
は
.BR mq_receive ()
と全く同じ動作をするが、
メッセージキューが空で、メッセージキュー記述で
.B O_NONBLOCK
フラグが有効になっていない場合に、この呼び出しが停止する時間の上限を
.I abs_timeout
が指す構造体で指定する点が異なる。この上限は、タイムアウトの時刻を、
時刻紀元 (Epoch; 1970-01-01 00:00:00 +0000 (UTC)) からの経過時間
(秒とナノ秒の組) で指定する。タイムアウト時刻は以下の構造体で指定する:
.sp
.in +4n
.nf
struct timespec {
    time_t tv_sec;        /* 秒 */
    long   tv_nsec;       /* ナノ秒 */
};

.fi
.in
メッセージがキューになく、関数呼び出し時にすでにタイムアウト時刻が
過ぎている場合、
.BR mq_timedreceive ()
はすぐに返る。
.SH 返り値
成功すると、
.BR mq_receive ()
と
.BR mq_timedreceive ()
は受信したメッセージのバイト数を返す。
エラーの場合、\-1 を返し、
.I errno
にエラーを示す値を設定する。
.SH エラー
.TP
.B EAGAIN
キューが空で、かつ
.I mqdes
で参照されるメッセージキュー記述で
.B O_NONBLOCK
フラグがセットされていた。
.TP
.B EBADF
.I mqdes
で指定された記述子が不正である。
.TP
.B EINTR
関数呼び出しがシグナルハンドラにより中断された。
.BR signal (7)
参照。
.TP
.B EINVAL
関数呼び出しは停止するはずであったが、
.I abs_timeout
が不正であった。
.I abs_timeout
が不正とは、
.I tv_sec
が 0 未満、もしくは
.I tv_nsec
が 0 未満か 1,000,000,000 より大きい、ということである。
.TP
.B EMSGSIZE
.I msg_len
がメッセージキューの
.I mq_msgsize
属性よりも小さかった。
.TP
.B ETIMEDOUT
メッセージが転送される前に関数呼び出しがタイムアウトした。
.SH 準拠
POSIX.1-2001.
.SH 注意
Linux では、
.BR mq_timedreceive ()
はシステムコールである。
.BR mq_receive ()
はライブラリ関数で、
.BR mq_timedreceive ()
システムコールを用いて実装されている。
.SH 関連項目
.BR mq_close (3),
.BR mq_getattr (3),
.BR mq_notify (3),
.BR mq_open (3),
.BR mq_send (3),
.BR mq_unlink (3),
.BR mq_overview (7),
.BR time (7)
