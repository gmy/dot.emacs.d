'\" t
.\" Copyright (c) 2005 by Michael Kerrisk <mtk.manpages@gmail.com>
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Japanese Version Copyright (c) 2005 Akihiro MOTOKI all rights reserved.
.\" Translated 2005-12-04, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>
.\"
.TH SIGSET 3 2010-09-20 "Linux" "Linux Programmer's Manual"
.SH 名前
sigset, sighold, sigrelse, sigignore \- System V 版シグナル API
.SH 書式
.B #include <signal.h>
.sp
.B typedef void (*sighandler_t)(int);
.sp
.BI "sighandler_t sigset(int " sig ", sighandler_t " disp );
.sp
.BI "int sighold(int " sig );
.sp
.BI "int sigrelse(int " sig );
.sp
.BI "int sigignore(int " sig );
.sp
.in -4n
glibc 向けの機能検査マクロの要件
.RB ( feature_test_macros (7)
参照):
.in
.sp
.ad l
.BR sigset (),
.BR sighold (),
.BR sigrelse (),
.BR sigignore ():
.br
.RS 4
_XOPEN_SOURCE\ >=\ 500 ||
_XOPEN_SOURCE\ &&\ _XOPEN_SOURCE_EXTENDED
.RE
.ad
.SH 説明
これらの関数は、昔ながらの System V 版シグナル API を使用しているプログラム
に対して互換性のあるインタフェースを glibc で提供するものである。
この API は過去のものであり、新しいアプリケーションでは
POSIX シグナル API
.RB ( sigaction (2),
.BR sigprocmask (2)
など) を使用すべきである。

関数
.BR sigset ()
はシグナル
.I sig
のシグナルハンドラの動作を変更する。
.I disp
引き数には、シグナルハンドラ関数のアドレスか、
以下の定数のいずれか一つを指定できる。
.TP
.B SIG_DFL
.I sig
の動作をデフォルトにリセットする。
.TP
.B SIG_IGN
.I sig
を無視する。
.TP
.B SIG_HOLD
そのプロセスのシグナルマスクに
.I sig
を追加するが、
.I sig
の動作は変更しない。
.PP
.I disp
にシグナルハンドラのアドレスが指定された場合、
シグナルハンドラの実行中は、そのプロセスのシグナルマスクに
.I sig
が追加される。
.PP
.I disp
に
.B SIG_HOLD
以外の値が指定された場合、
そのプロセスのシグナルマスクから
.I sig
が削除される。
.PP
シグナル
.B SIGKILL
と
.B SIGSTOP
に対する動作は変更できない。
.PP
関数
.BR sighold ()
は、呼び出し元プロセスのシグナルマスクに
.I sig
を追加する。

関数
.BR sigrelse ()
は、呼び出し元プロセスのシグナルマスクから
.I sig
を削除する。

関数
.BR sigignore ()
は、
.I sig
の動作を
.B SIG_IGN
に設定する。
.SH 返り値
.BR sigset ()
は成功すると、
呼び出し前に
.I sig
がブロックされていた場合には
.B SIG_HOLD
を返し、
ブロックされていなかった場合には
変更前のそのシグナルの動作を返す。
エラーの場合、
.BR sigset ()
は \-1 を返し、
.I errno
にエラーを示す値をセットする。
但し、以下の「バグ」の節も参照のこと。

関数
.BR sighold (),
.BR sigrelse (),
.BR sigignore ()
は成功すると 0 を返す。エラーの場合、\-1 を返し、
.I errno
にエラーを示す値をセットする。
.SH エラー
.BR sigset ()
に関しては、
.BR sigaction (2)
と
.BR sigprocmask (2)
の「エラー」の節を参照。

.BR sighold ()
と
.BR sigrelse ()
に関しては、
.BR sigprocmask (2)
の「エラー」の節を参照。

.BR sigignore ()
に関しては、
.BR sigaction (2)
の「エラー」の節を参照。
.SH 準拠
SVr4, POSIX.1-2001.
これらの関数は廃止予定である。新しいプログラムでは使用しないこと。
POSIX.1-2008 は、
.BR sighold (),
.BR sigignore (),
.BR sigpause (),
.BR sigrelse (),
.BR sigset ()
を廃止予定としている。
代わりに、
.BR sigaction (2),
.BR sigprocmask (2),
.BR pthread_sigmask (3),
.BR sigsuspend (2)
の使用が推奨されている。
.SH 注意
これらの関数は glibc 2.1 で登場した。

.I sighandler_t
型は GNU による拡張であり、この man page で
.BR sigset ()
のプロトタイプをより読みやすくするために使われているだけである。

関数
.BR sigset ()
は信頼性のあるシグナル処理機構を提供する
.RI ( sa_mask
を 0 で
.BR sigaction (2)
を呼び出したときと同様)。

System V では、関数
.BR signal ()
が提供する処理機構は信頼性のないものである
.RI ( sa_mask
を
.IR "SA_RESETHAND | SA_NODEFER"
として
.BR sigaction (2)
を呼び出したときと同様)。
BSD では、
.BR signal ()
は信頼性のある処理機構を提供する。
POSIX.1-2001 では、
.BR signal ()
のこの点は規定しないままとなっている。
さらなる詳細については
.BR signal (2)
を参照。

BSD と System V のどちらのシステムでも
シグナルを待つために、
.BR sigpause (3)
という名前の関数が提供されているが、
この関数の引き数は両方のシステムで異なる。
詳細は
.BR sigpause (3)
を参照。
.SH バグ
2.2 より前のバージョンの glibc では、
.I disp
に
.B SIG_HOLD
以外の値が指定された場合、
.I sig
のブロック解除を行っていなかった。

2.3.5 以前の全てのバージョンの glibc では、
.BR sigset ()
が変更前のシグナルの動作を正しく返さない場合が 2つある。
一つめは、
.I disp
に
.B SIG_HOLD
が指定されると、成功した場合
.BR sigset ()
は常に
.B SIG_HOLD
を返すことである。
正しくは、(シグナルがブロックされていなかった場合には)
変更前のシグナルの動作を返すべきである
(シグナルがブロックされていた場合には、
.B SIG_HOLD
が返される)。
もう一つは、シグナルが現在ブロックされている場合には、
成功した場合の
.BR sigset ()
の返り値は
.B SIG_HOLD
になるべきであるが、実際には
変更前のシグナルの動作が返されることである。
これらの問題は glibc 2.5 以降で修正されている。
.\" See http://sourceware.org/bugzilla/show_bug.cgi?id=1951
.SH 関連項目
.BR kill (2),
.BR pause (2),
.BR sigaction (2),
.BR signal (2),
.BR sigprocmask (2),
.BR raise (3),
.BR sigpause (3),
.BR sigvec (3),
.BR signal (7)
