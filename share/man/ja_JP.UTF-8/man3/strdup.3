.\" Copyright 1993 David Metcalfe (david@prism.demon.co.uk)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD man pages
.\" Modified Sun Jul 25 10:41:34 1993 by Rik Faith (faith@cs.unc.edu)
.\" Modified Wed Oct 17 01:12:26 2001 by John Levon <moz@compsoc.man.ac.uk>
.\"
.\" Japanese Version Copyright (c) 1997 YOSHINO Takashi
.\"       all rights reserved.
.\" Translated Mon Jan 20 22:31:05 JST 1997
.\"       by YOSHINO Takashi <yoshino@civil.jcn.nihon-u.ac.jp>
.\" Updated Fri Nov  2 JST 2001 by Kentaro Shirakata <argrath@ub32.org>
.\"
.TH STRDUP 3  2011-10-01 "GNU" "Linux Programmer's Manual"
.SH 名前
strdup, strndup, strdupa, strndupa \- 文字列を複製する
.SH 書式
.nf
.B #include <string.h>
.sp
.BI "char *strdup(const char *" s );
.sp
.BI "char *strndup(const char *" s ", size_t " n );
.br
.BI "char *strdupa(const char *" s );
.br
.BI "char *strndupa(const char *" s ", size_t " n );
.fi
.sp
.in -4n
glibc 向けの機能検査マクロの要件
.RB ( feature_test_macros (7)
参照):
.in
.PD 0
.ad l
.sp
.BR strdup ():
.RS 4
_SVID_SOURCE || _BSD_SOURCE || _XOPEN_SOURCE\ >=\ 500 ||
_XOPEN_SOURCE\ &&\ _XOPEN_SOURCE_EXTENDED
.br
|| /* Since glibc 2.12: */ _POSIX_C_SOURCE\ >=\ 200809L
.RE
.PP
.BR strndup ():
.RS 4
.TP 4
glibc 2.10 以降:
POSIX_C_SOURCE\ >=\ 200809L || _XOPEN_SOURCE\ >=\ 700
.TP
glibc 2.10 より前:
_GNU_SOURCE
.RE
.PP
.BR strdupa (),
.BR strndupa ():
_GNU_SOURCE
.ad
.PD
.SH 説明
.BR strdup ()
関数は、文字列 \fIs\fPの複製である
新しい文字列へのポインタを返す。
新しい文字列のためのメモリは
.BR malloc (3)
で得ている。
そして、
.BR free (3)
で解放することができる。

.BR strndup ()
関数は同様であるが、最大で \fIn\fP 文字だけを複製する。
\fIs\fP が \fIn\fP よりも長い場合、\fIn\fP 文字だけが複製され、
終端の NULL バイト (\(aq\\0\(aq)) が追加される。

.BR strdupa ()
と
.BR strndupa ()
関数は同様であるが、
バッファを割り当てるのに \fBalloca(3)\fP を用いる。
これらの関数は GNU GCC を用いた場合にのみ有効で、
\fBalloca(3)\fP で記述されているのと同様の制限を受ける。
.SH 返り値
.BR strdup ()
関数は複製された文字列へのポインタ、または
十分なメモリが確保できなかった場合にはNULLを返す。
.SH エラー
.TP
.B ENOMEM
複製された文字列を割り当てる十分なメモリが確保できなかった。
.SH 準拠
.\" 4.3BSD-Reno, not (first) 4.3BSD.
.BR strdup ()
は SVr4, 4.3BSD, POSIX.1-2001 準拠である。
.BR strndup ()
は POSIX.1-2008 準拠である。
.BR strdupa (),
.BR strndupa ()
は GNU 拡張である。
.SH 関連項目
.BR alloca (3),
.BR calloc (3),
.BR free (3),
.BR malloc (3),
.BR realloc (3),
.BR string (3),
.BR wcsdup (3)
