.\" Copyright (c) Bruno Haible <haible@clisp.cons.org>
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" References consulted:
.\"   GNU glibc-2 source code and manual
.\"   Dinkumware C library reference http://www.dinkumware.com/
.\"   OpenGroup's Single UNIX specification http://www.UNIX-systems.org/online.html
.\"   ISO/IEC 9899:1999
.\"
.\" About this Japanese page, please contact to JM Project <JM@linux.or.jp>
.\" Translated Mon Oct 25 22:55:40 JST 1999
.\"           by FUJIWARA Teruyoshi <fujiwara@linux.or.jp>
.\"
.TH WCRTOMB 3  2011-09-28 "GNU" "Linux Programmer's Manual"
.SH 名前
wcrtomb \- ワイド文字 1 つをマルチバイト列に変換する
.SH 書式
.nf
.B #include <wchar.h>
.sp
.BI "size_t wcrtomb(char *" s ", wchar_t " wc ", mbstate_t *" ps );
.fi
.SH 説明
この関数が主に使われるのは、\fIs\fP が NULL でなく、
\fIwc\fP が NULL ワイド文字 (L\(aq\\0\(aq) でない場合である。
この場合には、
.BR wcrtomb ()
関数はワイド文字 \fIwc\fP をマルチバイト表
現に変換し、\fIs\fP が指す char 型の配列にこれを格納する。この関数は
シフト状態 \fI*ps\fP を更新し、出力されたマルチバイト表現の長さ、すな
わち \fIs\fP に書き込まれたバイト数を返す。
.PP
別のケースとしては、\fIs\fP は NULL でないが
\fIwc\fP が NULL ワイド文字 (L\(aq\\0\(aq) のことがある。
この場合の
.BR wcrtomb ()
関数は、\fI*ps\fP を初期状態に戻すのに必
要なシフトシーケンスを \fIs\fP が指す char 型配列に格納し、その後に \(aq\\0\(aq
を格納する。この関数はシフト状態 \fI*ps\fP を更新し(つまり初期状態に戻
し)、シフトシーケンスの長さに 1 を加えた値を返す。この値は \fIs\fP に
書き込まれたバイト数である。
.PP
三番目のケースは、\fIs\fP が NULL の時である。
この場合には \fIwc\fP は無視され、関数の実際の動きとしては

    wcrtomb(buf, L\(aq\\0\(aq, ps)

が返される。ここで、
.I buf
は内部的な無名バッファである。

.PP
以上のいずれの場合も、\fIps\fP が NULL ポインタならばシフト状態は用い
られず、
.BR wcrtomb ()
関数だけが知っている静的な匿名の状態が使われる。
.SH 返り値
.BR wcrtomb ()
関数は、\fIs\fP が指すバイト列に書き込まれたバイト数、あ
るいは書き込まれたであろうバイト数を返す。\fIwc\fP を(現在のロケールに
従って)マルチバイト列で表現できなければ、
.I (size_t)\ \-1
が返され、 \fIerrno\fP に \fBEILSEQ\fP が設定される。
.SH 準拠
C99.
.SH 注意
.BR wcrtomb ()
の動作は、現在のロケールの
.B LC_CTYPE
カテゴリに依存する。
.PP
\fIps\fP に NULL を渡した際の動作はマルチスレッドセーフでない。
.SH 関連項目
.BR wcsrtombs (3)
