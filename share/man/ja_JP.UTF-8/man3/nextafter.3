.\" Copyright 2002 Walter Harms (walter.harms@informatik.uni-oldenburg.de)
.\" and Copyright 2008, Linux Foundation, written by Michael Kerrisk
.\"     <mtk.manpages@gmail.com>
.\" Distributed under GPL
.\" Based on glibc infopages
.\"
.\" Japanese Version Copyright (c) 2003 Akihiro MOTOKI all rights reserved.
.\" Translated Mon Jan 27 2003 by Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>
.\" Updated 2008-09-18, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>
.\"
.\"WORD:	mantissa	仮数部
.\"WORD:	normalized	正規化された
.\"WORD:	subnormal	非正規化の
.\"
.TH NEXTAFTER 3 2010-09-20 "GNU" "Linux Programmer's Manual"
.SH 名前
nextafter, nextafterf, nextafterl, nexttoward, nexttowardf, nexttowardl \-
浮動小数点数の操作
.SH 書式
.B #include <math.h>
.sp
.BI "double nextafter(double " x ", double " y );
.br
.BI "float nextafterf(float " x ", float " y );
.br
.BI "long double nextafterl(long double " x ", long double " y );
.sp
.BI "double nexttoward(double " x ", long double " y );
.br
.BI "float nexttowardf(float " x ", long double " y );
.br
.BI "long double nexttowardl(long double " x ", long double " y );
.sp
\fI\-lm\fP でリンクする。
.sp
.in -4n
glibc 向けの機能検査マクロの要件
.RB ( feature_test_macros (7)
参照):
.in
.sp
.ad l
.BR nextafter ():
.RS 4
_BSD_SOURCE || _SVID_SOURCE || _XOPEN_SOURCE\ >=\ 500 ||
_XOPEN_SOURCE\ &&\ _XOPEN_SOURCE_EXTENDED ||
_ISOC99_SOURCE ||
_POSIX_C_SOURCE\ >=\ 200112L;
.br
or
.I cc\ -std=c99
.RE
.br
.BR nextafterf (),
.BR nextafterl ():
.RS 4
_BSD_SOURCE || _SVID_SOURCE || _XOPEN_SOURCE\ >=\ 600 || _ISOC99_SOURCE ||
_POSIX_C_SOURCE\ >=\ 200112L;
.br
or
.I cc\ -std=c99
.RE
.br
.BR nexttoward (),
.BR nexttowardf (),
.BR nexttowardl ():
.RS 4
_XOPEN_SOURCE\ >=\ 600 || _ISOC99_SOURCE ||
_POSIX_C_SOURCE\ >=\ 200112L;
.br
or
.I cc\ -std=c99
.RE
.ad b
.SH 説明
.BR nextafter ()
関数群は、\fIy\fP に向かう方向で \fIx\fP のすぐ次の浮動小数点数表現を返す。
.I y
が
.I x
より小さい場合、
.I x
より小さい最大の浮動小数点表現の値を返す。

\fIx\fP が \fIy\fP と等しい場合、\fIy\fP が返される。

.BR nexttoward ()
関数群は、2 番目の引き数が
.I long double
型である点以外、
.BR nextafter ()
関数群と同じはたらきをする。
.SH 返り値
成功すると、これらの関数は \fIy\fP に向かう方向で \fIx\fP の
すぐ次の浮動小数点数表現を返す。

.I x
が
.I y
と等しい場合、
.RI ( x
と同じ型にキャストされた)
.I y
が返される。

.I x
か
.I y
が NaN の場合、NaN が返される。

.I x
が有限値で
.\" e.g., DBL_MAX
結果がオーバーフローする場合、
範囲エラー (range error) が発生し、
各関数はそれぞれ
.BR HUGE_VAL ,
.BR HUGE_VALF ,
.B HUGE_VALL
を返す。返り値には数学的に正しい符号が付与される。

.I x
が
.I y
と同じではなく、正しい関数の結果が非正規化数かゼロかアンダーフローの場合、
範囲エラーが発生し、
(表現可能な場合には) 正しい値が、(そうでない場合には) 0.0 が返される。
.SH エラー
これらの関数を呼び出した際にエラーが発生したかの判定方法についての情報は
.BR math_error (7)
を参照のこと。
.PP
以下のエラーが発生する可能性がある。
.TP
範囲エラー: 結果のオーバーフロー
.\" e.g., nextafter(DBL_MAX, HUGE_VAL);
.\" .I errno
.\" is set to
.\" .BR ERANGE .
オーバーフロー浮動小数点例外
.RB ( FE_OVERFLOW )
が上がる。
.TP
範囲エラー: 結果が非正規化数かアンダーフロー
.\" e.g., nextafter(DBL_MIN, 0.0);
.\" .I errno
.\" is set to
.\" .BR ERANGE .
アンダーフロー浮動小数点例外
.RB ( FE_UNDERFLOW )
が上がる。
.PP
これらの関数は
.I errno
を設定しない。
.\" FIXME . Is it intentional that these functions do not set errno?
.\" Bug raised: http://sources.redhat.com/bugzilla/show_bug.cgi?id=6799
.SH 準拠
C99, POSIX.1-2001.
この関数は IEC 559 で定義されている。
(また IEEE 754/IEEE 854 では付録で推奨関数として定義されている)
.SH バグ
glibc バージョン 2.5 以前では、アンダーフローが発生した際に、
これらの関数はアンダーフロー浮動小数点例外
.RB ( FE_UNDERFLOW )
を上がない。
.SH 関連項目
.BR nearbyint (3)
