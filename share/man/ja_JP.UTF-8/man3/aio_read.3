.\" Copyright (c) 2003 Andries Brouwer (aeb@cwi.nl)
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" The GNU General Public License's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with this manual; if not, write to the Free
.\" Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111,
.\" USA.
.\"
.\" Japanese Version Copyright (c) 2004 Yuichi SATO
.\"         all rights reserved.
.\" Translated Mon Jul  5 00:46:45 JST 2004
.\"         by Yuichi SATO <ysato444@yahoo.co.jp>
.\"
.TH AIO_READ 3 2003-11-14  "" "Linux Programmer's Manual"
.SH 名前
aio_read \- 非同期で読み込む
.SH 書式
.B "#include <aio.h>"
.sp
.BI "int aio_read(struct aiocb *" aiocbp );
.sp
\fI\-lrt\fP でリンクする。
.SH 説明
.BR aio_read ()
関数は非同期の "n = read(fd, buf, count)" をリクエストする。
ここで fd, buf, count は、それぞれ
.IR aiocbp\->aio_fildes ,
.IR aiocbp\->aio_buf ,
.I aiocbp\->aio_nbytes
で与えられる。
返り値 (return status) n は、完了時に
.BR aio_return (3)
を使って取得できる。
.LP
データは、カレントのファイル位置に関係なく、絶対ファイルオフセット
.I aiocbp\->aio_offset
を開始点として読み込まれる。
このリクエスト後の、カレントのファイル位置は規定されていない。
.LP
「非同期」とは「リクエストがキューに入れられたら、この呼び出しはすぐに返る」
ということである。
呼び出しから戻った時に、読み込みは完了しているかも知れないし、
完了していないかも知れない。
.BR aio_error (3)
を使うことで完了したかをテストできる。
.LP
.B _POSIX_PRIORITIZED_IO
が定義されていて、
かつファイルがこれをサポートしている場合、
非同期操作は呼び出したプロセスの優先度から
.I aiocbp\->aio_reqprio
を引いた優先度で登録 (submit) される。
.LP
フィールド
.I aiocbp\->aio_lio_opcode
は無視される。
.LP
最大オフセットを超えた通常のファイルからは、何もデータが読み込まれない。
.SH 返り値
成功した場合、0 が返される。
エラーの場合、リクエストはキューに入れられず、
\-1 が返されて、
.I errno
が適切に設定される。
エラーは最初に検知された後で、
(状態 \-1 を返す)
.BR aio_return (3)
と
.RI ( errno
で取得できる
.B EBADF
のようなエラー状態を返す)
.BR aio_error (3)
で報告されるだろう。
.SH エラー
.TP
.B EAGAIN
リソースが足りない。
.TP
.B EBADF
.I aio_fildes
は読み込みのためにオープンされた有効なファイルディスクリプタでない。
.TP
.B EINVAL
.IR aio_offset ,
.IR aio_reqprio ,
.I aio_nbytes
のうち 1 つ以上が無効である。
.TP
.B ENOSYS
この関数がサポートされていない。
.TP
.B EOVERFLOW
ファイルが通常のファイルであり、
ファイルの終端の前から読み込みを開始して、
少なくとも 1 バイトを読み込もうとした。
しかし開始位置がこのファイルの最大オフセットを超えていた。
.SH 準拠
POSIX.1-2001.
.SH 注意
使用する前に制御ブロックを 0 にしておくのは、よい考えである。
この制御ブロックは、読み込み操作が進行している間は変更すべきでない。
読み込まれるバッファ領域は
.\" または操作の制御ブロックは
操作の最中にアクセスすべきではない。
さもないと起こる結果が不定になる。
これに含まれるメモリ領域は、有効なままにしなければならない。
.SH 関連項目
.BR aio_cancel (3),
.BR aio_error (3),
.BR aio_fsync (3),
.BR aio_return (3),
.BR aio_suspend (3),
.BR aio_write (3)
