.\" Copyright 2000 Sam Varshavchik <mrsam@courier-mta.com>
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" References: RFC 2553
.\"
.\" Japanese Version Copyright (c) 2001 NAKANO Takeo all rights reserved.
.\" Translated 2001-01-14, NAKANO Takeo <nakano@apm.seikei.ac.jp>
.\" Updated 2005-02-26, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>
.\" Updated 2008-08-08, Akihiro MOTOKI, LDP v3.05
.\"
.TH INET_NTOP 3 2008-11-11 "Linux" "Linux Programmer's Manual"
.SH 名前
inet_ntop \- IPv4/IPv6 アドレスをバイナリ形式からテキスト形式に変換する
.SH 書式
.nf
.B #include <arpa/inet.h>
.sp
.BI "const char *inet_ntop(int " "af" ", const void *" "src" ,
.BI "                      char *" "dst" ", socklen_t " "size" );
.fi
.SH 説明
この関数は、
.I af
アドレスファミリーのネットワークアドレス構造体
.I src
を文字列に変換する。
変換結果の文字列は、
.I dst
が指すバッファにコピーされる。
.I dst
は NULL でないポインタでなければならない。
呼び出し時に、このバッファで利用できるバイト数を
引き数
.I size
に指定する。
.PP
.BR inet_ntop ()
は
.BR inet_ntoa (3)
関数を拡張して複数のアドレスファミリーを扱えるようにしたものである。
今後は
.BR inet_ntoa (3)
は使わず、
.BR inet_ntop ()
を使うようにすると良いだろう。
現在サポートされているアドレスファミリーは以下の通り:
.TP
.B AF_INET
この場合
.I src
は (ネットワークバイトオーダーの)
.I "struct in_addr"
へのポインタとみなされ、この構造体の内容が
ドット区切りの 10 進数形式 "\fIddd.ddd.ddd.ddd\fP" の
IPv4 ネットワークアドレスに変換される。
バッファ
.I dst
は少なくとも
.B INET_ADDRSTRLEN
バイトの長さを持たなければならない。
.TP
.B AF_INET6
この場合
.I src
は (ネットワークバイトオーダーの)
.I "struct in6_addr"
へのポインタとみなされ、この構造体の内容が、
(このアドレスに対してもっとも適切な)
IPv6 ネットワークアドレスの表示形式に変換される。
バッファ
.I dst
は少なくとも
.B INET6_ADDRSTRLEN
バイトの長さを持たなければならない。
.SH 返り値
成功すると、
.BR inet_ntop ()
は
.I dst
への (NULL でない) ポインタを返す。
エラーがあった場合は NULL を返し、
.I errno
をエラーを示す値に適切に設定する。
.SH エラー
.TP
.B EAFNOSUPPORT
.I af
がサポートされているアドレスファミリーでなかった。
.TP
.B ENOSPC
変換されたアドレス文字列の長さが
.I size
で指定されたサイズを超過してしまう。
.SH 準拠
POSIX.1-2001.
RFC\ 2553 では最後の引き数
.I size
のプロトタイプを
.I size_t
型と定義している。多くのシステムでは RFC\ 2553 にしたがっている。
glibc 2.0 と 2.1 では
.I size_t
だが、
glibc 2.2 以降では
.I socklen_t
となっている。
.\" 2.1.3: size_t, 2.1.91: socklen_t
.SH バグ
.B AF_INET6
は IPv4 がマップされた IPv6 アドレスを
IPv6 形式に変換してしまう。
.SH 例
.BR inet_pton (3)
を参照。
.SH 関連項目
.BR getnameinfo (3),
.BR inet (3),
.BR inet_pton (3)
