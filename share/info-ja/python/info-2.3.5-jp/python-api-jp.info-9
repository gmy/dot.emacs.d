This is python-api-jp.info, produced by makeinfo version 4.5 from
python-api-jp.texi.

12 October 2005


File: python-api-jp.info,  Node: Function-Method-Variable Index,  Next: Miscellaneous Index,  Prev: Class-Exception-Object Index,  Up: Top

Function, Method, and Variable Index
************************************

* Menu:

* __import__:                            モジュールの import.
* _Py_c_diff:                            C 構造体としての複素数.
* _Py_c_neg:                             C 構造体としての複素数.
* _Py_c_pow:                             C 構造体としての複素数.
* _Py_c_prod:                            C 構造体としての複素数.
* _Py_c_quot:                            C 構造体としての複素数.
* _Py_c_sum:                             C 構造体としての複素数.
* _Py_NoneStruct:                        オブジェクトをヒープ上にメモリ確保する.
* _PyImport_FindExtension:               モジュールの import.
* _PyImport_Fini:                        モジュールの import.
* _PyImport_FixupExtension:              モジュールの import.
* _PyImport_Init:                        モジュールの import.
* _PyObject_Del:                         オブジェクトをヒープ上にメモリ確保する.
* _PyObject_GC_TRACK:                    循環参照ガベージコレクションをサポートする.
* _PyObject_GC_UNTRACK:                  循環参照ガベージコレクションをサポートする.
* _PyObject_New:                         オブジェクトをヒープ上にメモリ確保する.
* _PyObject_NewVar:                      オブジェクトをヒープ上にメモリ確保する.
* _PyString_Resize:                      文字列オブジェクト string object.
* _PyTuple_Resize:                       タプルオブジェクト tuple object.
* abs:                                   数値型プロトコル number protocol.
* apply:                                 オブジェクトプロトコル object protocol.
* classmethod:                           共通のオブジェクト構造体 common object structure.
* cmp:                                   オブジェクトプロトコル object protocol.
* coerce:                                数値型プロトコル number protocol.
* compile:                               モジュールの import.
* divmod:                                数値型プロトコル number protocol.
* float:                                 数値型プロトコル number protocol.
* hash <1>:                              オブジェクトプロトコル object protocol.
* hash:                                  型オブジェクト.
* int:                                   数値型プロトコル number protocol.
* len <1>:                               List Objects.
* len <2>:                               オブジェクトプロトコル object protocol.
* len <3>:                               辞書オブジェクト dictionary object.
* len <4>:                               配列プロトコル sequence protocol.
* len:                                   マップ型プロトコル mapping protocol.
* long:                                  数値型プロトコル number protocol.
* METH_CLASS:                            共通のオブジェクト構造体 common object structure.
* METH_KEYWORDS:                         共通のオブジェクト構造体 common object structure.
* METH_NOARGS:                           共通のオブジェクト構造体 common object structure.
* METH_O:                                共通のオブジェクト構造体 common object structure.
* METH_OLDARGS:                          共通のオブジェクト構造体 common object structure.
* METH_STATIC:                           共通のオブジェクト構造体 common object structure.
* METH_VARARGS:                          共通のオブジェクト構造体 common object structure.
* pow:                                   数値型プロトコル number protocol.
* Py_AtExit:                             プロセス制御.
* Py_BuildValue:                         引数の解釈と値の構築.
* Py_CompileString:                      超高レベルレイヤ.
* Py_DECREF:                             参照カウント 2.
* Py_END_OF_BUFFER:                      Buffer Objects.
* Py_EndInterpreter:                     初期化 initialization、終了処理 finalization、スレッド.
* Py_eval_input:                         超高レベルレイヤ.
* Py_Exit:                               プロセス制御.
* Py_False:                              ブール型オブジェクト boolean object.
* Py_FatalError:                         プロセス制御.
* Py_FdIsInteractive:                    オペレーティングシステム関連のユーティリティ.
* Py_file_input:                         超高レベルレイヤ.
* Py_Finalize:                           初期化 initialization、終了処理 finalization、スレッド.
* Py_FindMethod:                         共通のオブジェクト構造体 common object structure.
* Py_GetBuildInfo:                       初期化 initialization、終了処理 finalization、スレッド.
* Py_GetCompiler:                        初期化 initialization、終了処理 finalization、スレッド.
* Py_GetCopyright:                       初期化 initialization、終了処理 finalization、スレッド.
* Py_GetExecPrefix:                      初期化 initialization、終了処理 finalization、スレッド.
* Py_GetPath:                            初期化 initialization、終了処理 finalization、スレッド.
* Py_GetPlatform:                        初期化 initialization、終了処理 finalization、スレッド.
* Py_GetPrefix:                          初期化 initialization、終了処理 finalization、スレッド.
* Py_GetProgramFullPath:                 初期化 initialization、終了処理 finalization、スレッド.
* Py_GetProgramName:                     初期化 initialization、終了処理 finalization、スレッド.
* Py_GetVersion:                         初期化 initialization、終了処理 finalization、スレッド.
* Py_INCREF:                             参照カウント 2.
* Py_Initialize:                         初期化 initialization、終了処理 finalization、スレッド.
* Py_InitModule:                         オブジェクトをヒープ上にメモリ確保する.
* Py_InitModule3:                        オブジェクトをヒープ上にメモリ確保する.
* Py_InitModule4:                        オブジェクトをヒープ上にメモリ確保する.
* Py_IsInitialized:                      初期化 initialization、終了処理 finalization、スレッド.
* Py_Main:                               超高レベルレイヤ.
* Py_NewInterpreter:                     初期化 initialization、終了処理 finalization、スレッド.
* Py_None:                               None オブジェクト.
* Py_SetProgramName:                     初期化 initialization、終了処理 finalization、スレッド.
* Py_single_input:                       超高レベルレイヤ.
* Py_TPFLAGS_BASETYPE:                   型オブジェクト.
* Py_TPFLAGS_CHECKTYPES:                 型オブジェクト.
* Py_TPFLAGS_DEFAULT:                    型オブジェクト.
* Py_TPFLAGS_GC:                         型オブジェクト.
* Py_TPFLAGS_HAVE_CLASS:                 型オブジェクト.
* Py_TPFLAGS_HAVE_GC <1>:                型オブジェクト.
* Py_TPFLAGS_HAVE_GC:                    循環参照ガベージコレクションをサポートする.
* Py_TPFLAGS_HAVE_GETCHARBUFFER <1>:     型オブジェクト.
* Py_TPFLAGS_HAVE_GETCHARBUFFER:         バッファオブジェクト構造体 buffer object structure.
* Py_TPFLAGS_HAVE_INPLACEOPS:            型オブジェクト.
* Py_TPFLAGS_HAVE_ITER:                  型オブジェクト.
* Py_TPFLAGS_HAVE_RICHCOMPARE:           型オブジェクト.
* Py_TPFLAGS_HAVE_SEQUENCE_IN:           型オブジェクト.
* Py_TPFLAGS_HAVE_WEAKREFS:              型オブジェクト.
* Py_TPFLAGS_HEAPTYPE:                   型オブジェクト.
* Py_TPFLAGS_READY:                      型オブジェクト.
* Py_TPFLAGS_READYING:                   型オブジェクト.
* Py_True:                               ブール型オブジェクト boolean object.
* Py_UNICODE_ISALNUM:                    Unicode オブジェクト Unicode object.
* Py_UNICODE_ISALPHA:                    Unicode オブジェクト Unicode object.
* Py_UNICODE_ISDECIMAL:                  Unicode オブジェクト Unicode object.
* Py_UNICODE_ISDIGIT:                    Unicode オブジェクト Unicode object.
* Py_UNICODE_ISLINEBREAK:                Unicode オブジェクト Unicode object.
* Py_UNICODE_ISLOWER:                    Unicode オブジェクト Unicode object.
* Py_UNICODE_ISNUMERIC:                  Unicode オブジェクト Unicode object.
* Py_UNICODE_ISSPACE:                    Unicode オブジェクト Unicode object.
* Py_UNICODE_ISTITLE:                    Unicode オブジェクト Unicode object.
* Py_UNICODE_ISUPPER:                    Unicode オブジェクト Unicode object.
* Py_UNICODE_TODECIMAL:                  Unicode オブジェクト Unicode object.
* Py_UNICODE_TODIGIT:                    Unicode オブジェクト Unicode object.
* Py_UNICODE_TOLOWER:                    Unicode オブジェクト Unicode object.
* Py_UNICODE_TONUMERIC:                  Unicode オブジェクト Unicode object.
* Py_UNICODE_TOTITLE:                    Unicode オブジェクト Unicode object.
* Py_UNICODE_TOUPPER:                    Unicode オブジェクト Unicode object.
* Py_XDECREF:                            参照カウント 2.
* Py_XINCREF:                            参照カウント 2.
* PyArg_Parse:                           引数の解釈と値の構築.
* PyArg_ParseTuple:                      引数の解釈と値の構築.
* PyArg_ParseTupleAndKeywords:           引数の解釈と値の構築.
* PyArg_UnpackTuple:                     引数の解釈と値の構築.
* PyBool_Check:                          ブール型オブジェクト boolean object.
* PyBool_FromLong:                       ブール型オブジェクト boolean object.
* PyBuffer_Check:                        Buffer Objects.
* PyBuffer_FromMemory:                   Buffer Objects.
* PyBuffer_FromObject:                   Buffer Objects.
* PyBuffer_FromReadWriteMemory:          Buffer Objects.
* PyBuffer_FromReadWriteObject:          Buffer Objects.
* PyBuffer_New:                          Buffer Objects.
* PyBuffer_Type:                         Buffer Objects.
* PyCallable_Check:                      オブジェクトプロトコル object protocol.
* PyCallIter_Check:                      イテレータオブジェクト iterator object.
* PyCallIter_New:                        イテレータオブジェクト iterator object.
* PyCallIter_Type:                       イテレータオブジェクト iterator object.
* PyCell_Check:                          セルオブジェクト cell object.
* PyCell_GET:                            セルオブジェクト cell object.
* PyCell_Get:                            セルオブジェクト cell object.
* PyCell_New:                            セルオブジェクト cell object.
* PyCell_Set:                            セルオブジェクト cell object.
* PyCell_SET:                            セルオブジェクト cell object.
* PyCell_Type:                           セルオブジェクト cell object.
* PyCObject_AsVoidPtr:                   Cオブジェクト CObject.
* PyCObject_Check:                       Cオブジェクト CObject.
* PyCObject_FromVoidPtr:                 Cオブジェクト CObject.
* PyCObject_FromVoidPtrAndDesc:          Cオブジェクト CObject.
* PyCObject_GetDesc:                     Cオブジェクト CObject.
* PyComplex_AsCComplex:                  Python オブジェクトとしての複素数型.
* PyComplex_Check:                       Python オブジェクトとしての複素数型.
* PyComplex_CheckExact:                  Python オブジェクトとしての複素数型.
* PyComplex_FromCComplex:                Python オブジェクトとしての複素数型.
* PyComplex_FromDoubles:                 Python オブジェクトとしての複素数型.
* PyComplex_ImagAsDouble:                Python オブジェクトとしての複素数型.
* PyComplex_RealAsDouble:                Python オブジェクトとしての複素数型.
* PyComplex_Type:                        Python オブジェクトとしての複素数型.
* PyDescr_IsData:                        デスクリプタオブジェクト descriptor object.
* PyDescr_NewClassMethod:                デスクリプタオブジェクト descriptor object.
* PyDescr_NewGetSet:                     デスクリプタオブジェクト descriptor object.
* PyDescr_NewMember:                     デスクリプタオブジェクト descriptor object.
* PyDescr_NewMethod:                     デスクリプタオブジェクト descriptor object.
* PyDescr_NewWrapper:                    デスクリプタオブジェクト descriptor object.
* PyDict_Check:                          辞書オブジェクト dictionary object.
* PyDict_Clear:                          辞書オブジェクト dictionary object.
* PyDict_Copy:                           辞書オブジェクト dictionary object.
* PyDict_DelItem:                        辞書オブジェクト dictionary object.
* PyDict_DelItemString:                  辞書オブジェクト dictionary object.
* PyDict_GetItem:                        辞書オブジェクト dictionary object.
* PyDict_GetItemString:                  辞書オブジェクト dictionary object.
* PyDict_Items:                          辞書オブジェクト dictionary object.
* PyDict_Keys:                           辞書オブジェクト dictionary object.
* PyDict_Merge:                          辞書オブジェクト dictionary object.
* PyDict_MergeFromSeq2:                  辞書オブジェクト dictionary object.
* PyDict_New:                            辞書オブジェクト dictionary object.
* PyDict_Next:                           辞書オブジェクト dictionary object.
* PyDict_SetItem:                        辞書オブジェクト dictionary object.
* PyDict_SetItemString:                  辞書オブジェクト dictionary object.
* PyDict_Size:                           辞書オブジェクト dictionary object.
* PyDict_Type:                           辞書オブジェクト dictionary object.
* PyDict_Update:                         辞書オブジェクト dictionary object.
* PyDict_Values:                         辞書オブジェクト dictionary object.
* PyDictProxy_New:                       辞書オブジェクト dictionary object.
* PyErr_BadArgument:                     例外処理.
* PyErr_BadInternalCall:                 例外処理.
* PyErr_CheckSignals:                    例外処理.
* PyErr_Clear:                           例外処理.
* PyErr_ExceptionMatches:                例外処理.
* PyErr_Fetch:                           例外処理.
* PyErr_Format:                          例外処理.
* PyErr_GivenExceptionMatches:           例外処理.
* PyErr_NewException:                    例外処理.
* PyErr_NoMemory:                        例外処理.
* PyErr_NormalizeException:              例外処理.
* PyErr_Occurred:                        例外処理.
* PyErr_Print:                           例外処理.
* PyErr_Restore:                         例外処理.
* PyErr_SetExcFromWindowsErr:            例外処理.
* PyErr_SetExcFromWindowsErrWithFilename: 例外処理.
* PyErr_SetFromErrno:                    例外処理.
* PyErr_SetFromErrnoWithFilename:        例外処理.
* PyErr_SetFromWindowsErr:               例外処理.
* PyErr_SetFromWindowsErrWithFilename:   例外処理.
* PyErr_SetInterrupt:                    例外処理.
* PyErr_SetNone:                         例外処理.
* PyErr_SetObject:                       例外処理.
* PyErr_SetString:                       例外処理.
* PyErr_Warn:                            例外処理.
* PyErr_WarnExplicit:                    例外処理.
* PyErr_WriteUnraisable:                 例外処理.
* PyEval_AcquireLock:                    スレッド状態 thread state とグローバルインタプリタロック global interpreter lock.
* PyEval_AcquireThread:                  スレッド状態 thread state とグローバルインタプリタロック global interpreter lock.
* PyEval_InitThreads:                    スレッド状態 thread state とグローバルインタプリタロック global interpreter lock.
* PyEval_ReleaseLock:                    スレッド状態 thread state とグローバルインタプリタロック global interpreter lock.
* PyEval_ReleaseThread:                  スレッド状態 thread state とグローバルインタプリタロック global interpreter lock.
* PyEval_RestoreThread:                  スレッド状態 thread state とグローバルインタプリタロック global interpreter lock.
* PyEval_SaveThread:                     スレッド状態 thread state とグローバルインタプリタロック global interpreter lock.
* PyEval_SetProfile:                     プロファイルとトレース profiling and tracing.
* PyEval_SetTrace:                       プロファイルとトレース profiling and tracing.
* PyFile_AsFile:                         ファイルオブジェクト file object.
* PyFile_Check:                          ファイルオブジェクト file object.
* PyFile_CheckExact:                     ファイルオブジェクト file object.
* PyFile_Encoding:                       ファイルオブジェクト file object.
* PyFile_FromFile:                       ファイルオブジェクト file object.
* PyFile_FromString:                     ファイルオブジェクト file object.
* PyFile_GetLine:                        ファイルオブジェクト file object.
* PyFile_Name:                           ファイルオブジェクト file object.
* PyFile_SetBufSize:                     ファイルオブジェクト file object.
* PyFile_SoftSpace:                      ファイルオブジェクト file object.
* PyFile_Type:                           ファイルオブジェクト file object.
* PyFile_WriteObject:                    ファイルオブジェクト file object.
* PyFile_WriteString:                    ファイルオブジェクト file object.
* PyFloat_AS_DOUBLE:                     浮動小数点型オブジェクト floating point object.
* PyFloat_AsDouble:                      浮動小数点型オブジェクト floating point object.
* PyFloat_Check:                         浮動小数点型オブジェクト floating point object.
* PyFloat_CheckExact:                    浮動小数点型オブジェクト floating point object.
* PyFloat_FromDouble:                    浮動小数点型オブジェクト floating point object.
* PyFloat_FromString:                    浮動小数点型オブジェクト floating point object.
* PyFloat_Type:                          浮動小数点型オブジェクト floating point object.
* PyImport_AddModule:                    モジュールの import.
* PyImport_AppendInittab:                モジュールの import.
* PyImport_Cleanup:                      モジュールの import.
* PyImport_ExecCodeModule:               モジュールの import.
* PyImport_ExtendInittab:                モジュールの import.
* PyImport_FrozenModules:                モジュールの import.
* PyImport_GetMagicNumber:               モジュールの import.
* PyImport_GetModuleDict:                モジュールの import.
* PyImport_Import:                       モジュールの import.
* PyImport_ImportFrozenModule:           モジュールの import.
* PyImport_ImportModule:                 モジュールの import.
* PyImport_ImportModuleEx:               モジュールの import.
* PyImport_ReloadModule:                 モジュールの import.
* PyInstance_Check:                      インスタンスオブジェクト instance object.
* PyInstance_New:                        インスタンスオブジェクト instance object.
* PyInstance_NewRaw:                     インスタンスオブジェクト instance object.
* PyInstance_Type:                       インスタンスオブジェクト instance object.
* PyInt_AS_LONG:                         通常整数型オブジェクト plain integer object.
* PyInt_AsLong:                          通常整数型オブジェクト plain integer object.
* PyInt_AsUnsignedLongLongMask:          通常整数型オブジェクト plain integer object.
* PyInt_AsUnsignedLongMask:              通常整数型オブジェクト plain integer object.
* PyInt_Check:                           通常整数型オブジェクト plain integer object.
* PyInt_CheckExact:                      通常整数型オブジェクト plain integer object.
* PyInt_FromLong:                        通常整数型オブジェクト plain integer object.
* PyInt_FromString:                      通常整数型オブジェクト plain integer object.
* PyInt_GetMax:                          通常整数型オブジェクト plain integer object.
* PyInt_Type:                            通常整数型オブジェクト plain integer object.
* PyInterpreterState_Clear:              スレッド状態 thread state とグローバルインタプリタロック global interpreter lock.
* PyInterpreterState_Delete:             スレッド状態 thread state とグローバルインタプリタロック global interpreter lock.
* PyInterpreterState_Head:               高度なデバッガサポート advanced debugger support.
* PyInterpreterState_New:                スレッド状態 thread state とグローバルインタプリタロック global interpreter lock.
* PyInterpreterState_Next:               高度なデバッガサポート advanced debugger support.
* PyInterpreterState_ThreadHead:         高度なデバッガサポート advanced debugger support.
* PyIter_Check:                          イテレータプロトコル iterator protocol.
* PyIter_Next:                           イテレータプロトコル iterator protocol.
* PyList_Append:                         List Objects.
* PyList_AsTuple:                        List Objects.
* PyList_Check:                          List Objects.
* PyList_CheckExact:                     List Objects.
* PyList_GET_ITEM:                       List Objects.
* PyList_GET_SIZE:                       List Objects.
* PyList_GetItem:                        List Objects.
* PyList_GetSlice:                       List Objects.
* PyList_Insert:                         List Objects.
* PyList_New:                            List Objects.
* PyList_Reverse:                        List Objects.
* PyList_SET_ITEM:                       List Objects.
* PyList_SetItem:                        List Objects.
* PyList_SetSlice:                       List Objects.
* PyList_Size:                           List Objects.
* PyList_Sort:                           List Objects.
* PyList_Type:                           List Objects.
* PyLong_AsDouble:                       長整数型オブジェクト long integer object.
* PyLong_AsLong:                         長整数型オブジェクト long integer object.
* PyLong_AsLongLong:                     長整数型オブジェクト long integer object.
* PyLong_AsUnsignedLong:                 長整数型オブジェクト long integer object.
* PyLong_AsUnsignedLongLong:             長整数型オブジェクト long integer object.
* PyLong_AsUnsignedLongLongMask:         長整数型オブジェクト long integer object.
* PyLong_AsUnsignedLongMask:             長整数型オブジェクト long integer object.
* PyLong_AsVoidPtr:                      長整数型オブジェクト long integer object.
* PyLong_Check:                          長整数型オブジェクト long integer object.
* PyLong_CheckExact:                     長整数型オブジェクト long integer object.
* PyLong_FromDouble:                     長整数型オブジェクト long integer object.
* PyLong_FromLong:                       長整数型オブジェクト long integer object.
* PyLong_FromLongLong:                   長整数型オブジェクト long integer object.
* PyLong_FromString:                     長整数型オブジェクト long integer object.
* PyLong_FromUnicode:                    長整数型オブジェクト long integer object.
* PyLong_FromUnsignedLong:               長整数型オブジェクト long integer object.
* PyLong_FromUnsignedLongLong:           長整数型オブジェクト long integer object.
* PyLong_FromVoidPtr:                    長整数型オブジェクト long integer object.
* PyLong_Type:                           長整数型オブジェクト long integer object.
* PyMapping_Check:                       マップ型プロトコル mapping protocol.
* PyMapping_DelItem:                     マップ型プロトコル mapping protocol.
* PyMapping_DelItemString:               マップ型プロトコル mapping protocol.
* PyMapping_GetItemString:               マップ型プロトコル mapping protocol.
* PyMapping_HasKey:                      マップ型プロトコル mapping protocol.
* PyMapping_HasKeyString:                マップ型プロトコル mapping protocol.
* PyMapping_Items:                       マップ型プロトコル mapping protocol.
* PyMapping_Keys:                        マップ型プロトコル mapping protocol.
* PyMapping_Length:                      マップ型プロトコル mapping protocol.
* PyMapping_SetItemString:               マップ型プロトコル mapping protocol.
* PyMapping_Values:                      マップ型プロトコル mapping protocol.
* PyMarshal_ReadLastObjectFromFile:      データ整列化 data marshalling のサポート.
* PyMarshal_ReadLongFromFile:            データ整列化 data marshalling のサポート.
* PyMarshal_ReadObjectFromFile:          データ整列化 data marshalling のサポート.
* PyMarshal_ReadObjectFromString:        データ整列化 data marshalling のサポート.
* PyMarshal_ReadShortFromFile:           データ整列化 data marshalling のサポート.
* PyMarshal_WriteLongToFile:             データ整列化 data marshalling のサポート.
* PyMarshal_WriteObjectToFile:           データ整列化 data marshalling のサポート.
* PyMarshal_WriteObjectToString:         データ整列化 data marshalling のサポート.
* PyMem_Del:                             メモリインタフェース.
* PyMem_Free:                            メモリインタフェース.
* PyMem_Malloc:                          メモリインタフェース.
* PyMem_New:                             メモリインタフェース.
* PyMem_Realloc:                         メモリインタフェース.
* PyMem_Resize:                          メモリインタフェース.
* PyMethod_Check:                        メソッドオブジェクト method object.
* PyMethod_Class:                        メソッドオブジェクト method object.
* PyMethod_Function:                     メソッドオブジェクト method object.
* PyMethod_GET_CLASS:                    メソッドオブジェクト method object.
* PyMethod_GET_FUNCTION:                 メソッドオブジェクト method object.
* PyMethod_GET_SELF:                     メソッドオブジェクト method object.
* PyMethod_New:                          メソッドオブジェクト method object.
* PyMethod_Self:                         メソッドオブジェクト method object.
* PyMethod_Type:                         メソッドオブジェクト method object.
* PyModule_AddIntConstant:               モジュールオブジェクト module object.
* PyModule_AddObject:                    モジュールオブジェクト module object.
* PyModule_AddStringConstant:            モジュールオブジェクト module object.
* PyModule_Check:                        モジュールオブジェクト module object.
* PyModule_CheckExact:                   モジュールオブジェクト module object.
* PyModule_GetDict:                      モジュールオブジェクト module object.
* PyModule_GetFilename:                  モジュールオブジェクト module object.
* PyModule_GetName:                      モジュールオブジェクト module object.
* PyModule_New:                          モジュールオブジェクト module object.
* PyModule_Type:                         モジュールオブジェクト module object.
* PyNumber_Absolute:                     数値型プロトコル number protocol.
* PyNumber_Add:                          数値型プロトコル number protocol.
* PyNumber_And:                          数値型プロトコル number protocol.
* PyNumber_Check:                        数値型プロトコル number protocol.
* PyNumber_Coerce:                       数値型プロトコル number protocol.
* PyNumber_Divide:                       数値型プロトコル number protocol.
* PyNumber_Divmod:                       数値型プロトコル number protocol.
* PyNumber_Float:                        数値型プロトコル number protocol.
* PyNumber_FloorDivide:                  数値型プロトコル number protocol.
* PyNumber_InPlaceAdd:                   数値型プロトコル number protocol.
* PyNumber_InPlaceAnd:                   数値型プロトコル number protocol.
* PyNumber_InPlaceDivide:                数値型プロトコル number protocol.
* PyNumber_InPlaceFloorDivide:           数値型プロトコル number protocol.
* PyNumber_InPlaceLshift:                数値型プロトコル number protocol.
* PyNumber_InPlaceMultiply:              数値型プロトコル number protocol.
* PyNumber_InPlaceOr:                    数値型プロトコル number protocol.
* PyNumber_InPlacePower:                 数値型プロトコル number protocol.
* PyNumber_InPlaceRemainder:             数値型プロトコル number protocol.
* PyNumber_InPlaceRshift:                数値型プロトコル number protocol.
* PyNumber_InPlaceSubtract:              数値型プロトコル number protocol.
* PyNumber_InPlaceTrueDivide:            数値型プロトコル number protocol.
* PyNumber_InPlaceXor:                   数値型プロトコル number protocol.
* PyNumber_Int:                          数値型プロトコル number protocol.
* PyNumber_Invert:                       数値型プロトコル number protocol.
* PyNumber_Long:                         数値型プロトコル number protocol.
* PyNumber_Lshift:                       数値型プロトコル number protocol.
* PyNumber_Multiply:                     数値型プロトコル number protocol.
* PyNumber_Negative:                     数値型プロトコル number protocol.
* PyNumber_Or:                           数値型プロトコル number protocol.
* PyNumber_Positive:                     数値型プロトコル number protocol.
* PyNumber_Power:                        数値型プロトコル number protocol.
* PyNumber_Remainder:                    数値型プロトコル number protocol.
* PyNumber_Rshift:                       数値型プロトコル number protocol.
* PyNumber_Subtract:                     数値型プロトコル number protocol.
* PyNumber_TrueDivide:                   数値型プロトコル number protocol.
* PyNumber_Xor:                          数値型プロトコル number protocol.
* PyObject_AsCharBuffer:                 バッファプロトコル buffer protocol.
* PyObject_AsFileDescriptor:             オブジェクトプロトコル object protocol.
* PyObject_AsReadBuffer:                 バッファプロトコル buffer protocol.
* PyObject_AsWriteBuffer:                バッファプロトコル buffer protocol.
* PyObject_Call:                         オブジェクトプロトコル object protocol.
* PyObject_CallFunction:                 オブジェクトプロトコル object protocol.
* PyObject_CallFunctionObjArgs:          オブジェクトプロトコル object protocol.
* PyObject_CallMethod:                   オブジェクトプロトコル object protocol.
* PyObject_CallMethodObjArgs:            オブジェクトプロトコル object protocol.
* PyObject_CallObject:                   オブジェクトプロトコル object protocol.
* PyObject_CheckReadBuffer:              バッファプロトコル buffer protocol.
* PyObject_Cmp:                          オブジェクトプロトコル object protocol.
* PyObject_Compare:                      オブジェクトプロトコル object protocol.
* PyObject_Del:                          オブジェクトをヒープ上にメモリ確保する.
* PyObject_DEL:                          オブジェクトをヒープ上にメモリ確保する.
* PyObject_DelAttr:                      オブジェクトプロトコル object protocol.
* PyObject_DelAttrString:                オブジェクトプロトコル object protocol.
* PyObject_DelItem:                      オブジェクトプロトコル object protocol.
* PyObject_Dir:                          オブジェクトプロトコル object protocol.
* PyObject_GC_Del:                       循環参照ガベージコレクションをサポートする.
* PyObject_GC_New:                       循環参照ガベージコレクションをサポートする.
* PyObject_GC_NewVar:                    循環参照ガベージコレクションをサポートする.
* PyObject_GC_Resize:                    循環参照ガベージコレクションをサポートする.
* PyObject_GC_Track:                     循環参照ガベージコレクションをサポートする.
* PyObject_GC_UnTrack:                   循環参照ガベージコレクションをサポートする.
* PyObject_GetAttr:                      オブジェクトプロトコル object protocol.
* PyObject_GetAttrString:                オブジェクトプロトコル object protocol.
* PyObject_GetItem:                      オブジェクトプロトコル object protocol.
* PyObject_GetIter:                      オブジェクトプロトコル object protocol.
* PyObject_HasAttr:                      オブジェクトプロトコル object protocol.
* PyObject_HasAttrString:                オブジェクトプロトコル object protocol.
* PyObject_Hash:                         オブジェクトプロトコル object protocol.
* PyObject_Init:                         オブジェクトをヒープ上にメモリ確保する.
* PyObject_InitVar:                      オブジェクトをヒープ上にメモリ確保する.
* PyObject_IsInstance:                   オブジェクトプロトコル object protocol.
* PyObject_IsSubclass:                   オブジェクトプロトコル object protocol.
* PyObject_IsTrue:                       オブジェクトプロトコル object protocol.
* PyObject_Length:                       オブジェクトプロトコル object protocol.
* PyObject_New:                          オブジェクトをヒープ上にメモリ確保する.
* PyObject_NEW:                          オブジェクトをヒープ上にメモリ確保する.
* PyObject_NEW_VAR:                      オブジェクトをヒープ上にメモリ確保する.
* PyObject_NewVar:                       オブジェクトをヒープ上にメモリ確保する.
* PyObject_Not:                          オブジェクトプロトコル object protocol.
* PyObject_Print:                        オブジェクトプロトコル object protocol.
* PyObject_Repr:                         オブジェクトプロトコル object protocol.
* PyObject_RichCompare:                  オブジェクトプロトコル object protocol.
* PyObject_RichCompareBool:              オブジェクトプロトコル object protocol.
* PyObject_SetAttr:                      オブジェクトプロトコル object protocol.
* PyObject_SetAttrString:                オブジェクトプロトコル object protocol.
* PyObject_SetItem:                      オブジェクトプロトコル object protocol.
* PyObject_Size:                         オブジェクトプロトコル object protocol.
* PyObject_Str:                          オブジェクトプロトコル object protocol.
* PyObject_Type:                         オブジェクトプロトコル object protocol.
* PyObject_TypeCheck:                    オブジェクトプロトコル object protocol.
* PyObject_Unicode:                      オブジェクトプロトコル object protocol.
* PyOS_AfterFork:                        オペレーティングシステム関連のユーティリティ.
* PyOS_CheckStack:                       オペレーティングシステム関連のユーティリティ.
* PyOS_GetLastModificationTime:          オペレーティングシステム関連のユーティリティ.
* PyOS_getsig:                           オペレーティングシステム関連のユーティリティ.
* PyOS_setsig:                           オペレーティングシステム関連のユーティリティ.
* PyParser_SimpleParseFile:              超高レベルレイヤ.
* PyParser_SimpleParseString:            超高レベルレイヤ.
* PyProperty_Type:                       デスクリプタオブジェクト descriptor object.
* PyRun_AnyFile:                         超高レベルレイヤ.
* PyRun_File:                            超高レベルレイヤ.
* PyRun_InteractiveLoop:                 超高レベルレイヤ.
* PyRun_InteractiveOne:                  超高レベルレイヤ.
* PyRun_SimpleFile:                      超高レベルレイヤ.
* PyRun_SimpleString:                    超高レベルレイヤ.
* PyRun_String:                          超高レベルレイヤ.
* PySeqIter_Check:                       イテレータオブジェクト iterator object.
* PySeqIter_New:                         イテレータオブジェクト iterator object.
* PySeqIter_Type:                        イテレータオブジェクト iterator object.
* PySequence_Check:                      配列プロトコル sequence protocol.
* PySequence_Concat:                     配列プロトコル sequence protocol.
* PySequence_Contains:                   配列プロトコル sequence protocol.
* PySequence_Count:                      配列プロトコル sequence protocol.
* PySequence_DelItem:                    配列プロトコル sequence protocol.
* PySequence_DelSlice:                   配列プロトコル sequence protocol.
* PySequence_Fast:                       配列プロトコル sequence protocol.
* PySequence_Fast_GET_ITEM:              配列プロトコル sequence protocol.
* PySequence_Fast_GET_SIZE:              配列プロトコル sequence protocol.
* PySequence_GetItem:                    配列プロトコル sequence protocol.
* PySequence_GetSlice:                   配列プロトコル sequence protocol.
* PySequence_Index:                      配列プロトコル sequence protocol.
* PySequence_InPlaceConcat:              配列プロトコル sequence protocol.
* PySequence_InPlaceRepeat:              配列プロトコル sequence protocol.
* PySequence_ITEM:                       配列プロトコル sequence protocol.
* PySequence_Length:                     配列プロトコル sequence protocol.
* PySequence_List:                       配列プロトコル sequence protocol.
* PySequence_Repeat:                     配列プロトコル sequence protocol.
* PySequence_SetItem:                    配列プロトコル sequence protocol.
* PySequence_SetSlice:                   配列プロトコル sequence protocol.
* PySequence_Size:                       配列プロトコル sequence protocol.
* PySequence_Tuple:                      配列プロトコル sequence protocol.
* PySlice_Check:                         スライスオブジェクト slice object.
* PySlice_GetIndices:                    スライスオブジェクト slice object.
* PySlice_GetIndicesEx:                  スライスオブジェクト slice object.
* PySlice_New:                           スライスオブジェクト slice object.
* PySlice_Type:                          スライスオブジェクト slice object.
* PyString_AS_STRING:                    文字列オブジェクト string object.
* PyString_AsDecodedObject:              文字列オブジェクト string object.
* PyString_AsEncodedObject:              文字列オブジェクト string object.
* PyString_AsString:                     文字列オブジェクト string object.
* PyString_AsStringAndSize:              文字列オブジェクト string object.
* PyString_Check:                        文字列オブジェクト string object.
* PyString_CheckExact:                   文字列オブジェクト string object.
* PyString_Concat:                       文字列オブジェクト string object.
* PyString_ConcatAndDel:                 文字列オブジェクト string object.
* PyString_Decode:                       文字列オブジェクト string object.
* PyString_Encode:                       文字列オブジェクト string object.
* PyString_Format:                       文字列オブジェクト string object.
* PyString_FromFormat:                   文字列オブジェクト string object.
* PyString_FromFormatV:                  文字列オブジェクト string object.
* PyString_FromString:                   文字列オブジェクト string object.
* PyString_FromStringAndSize:            文字列オブジェクト string object.
* PyString_GET_SIZE:                     文字列オブジェクト string object.
* PyString_InternFromString:             文字列オブジェクト string object.
* PyString_InternInPlace:                文字列オブジェクト string object.
* PyString_Size:                         文字列オブジェクト string object.
* PyString_Type:                         文字列オブジェクト string object.
* PySys_SetArgv:                         初期化 initialization、終了処理 finalization、スレッド.
* PyThreadState_Clear:                   スレッド状態 thread state とグローバルインタプリタロック global interpreter lock.
* PyThreadState_Delete:                  スレッド状態 thread state とグローバルインタプリタロック global interpreter lock.
* PyThreadState_Get:                     スレッド状態 thread state とグローバルインタプリタロック global interpreter lock.
* PyThreadState_GetDict:                 スレッド状態 thread state とグローバルインタプリタロック global interpreter lock.
* PyThreadState_New:                     スレッド状態 thread state とグローバルインタプリタロック global interpreter lock.
* PyThreadState_Next:                    高度なデバッガサポート advanced debugger support.
* PyThreadState_SetAsyncExc:             スレッド状態 thread state とグローバルインタプリタロック global interpreter lock.
* PyThreadState_Swap:                    スレッド状態 thread state とグローバルインタプリタロック global interpreter lock.
* PyTrace_CALL:                          プロファイルとトレース profiling and tracing.
* PyTrace_EXCEPT:                        プロファイルとトレース profiling and tracing.
* PyTrace_LINE:                          プロファイルとトレース profiling and tracing.
* PyTrace_RETURN:                        プロファイルとトレース profiling and tracing.
* PyTuple_Check:                         タプルオブジェクト tuple object.
* PyTuple_CheckExact:                    タプルオブジェクト tuple object.
* PyTuple_GET_ITEM:                      タプルオブジェクト tuple object.
* PyTuple_GET_SIZE:                      タプルオブジェクト tuple object.
* PyTuple_GetItem:                       タプルオブジェクト tuple object.
* PyTuple_GetSlice:                      タプルオブジェクト tuple object.
* PyTuple_New:                           タプルオブジェクト tuple object.
* PyTuple_SET_ITEM:                      タプルオブジェクト tuple object.
* PyTuple_SetItem:                       タプルオブジェクト tuple object.
* PyTuple_Size:                          タプルオブジェクト tuple object.
* PyTuple_Type:                          タプルオブジェクト tuple object.
* PyType_Check:                          型オブジェクト type object.
* PyType_CheckExact:                     型オブジェクト type object.
* PyType_GenericAlloc:                   型オブジェクト type object.
* PyType_GenericNew:                     型オブジェクト type object.
* PyType_HasFeature:                     型オブジェクト type object.
* PyType_IS_GC:                          型オブジェクト type object.
* PyType_IsSubtype:                      型オブジェクト type object.
* PyType_Ready:                          型オブジェクト type object.
* PyType_Type:                           型オブジェクト type object.
* PyUnicode_AS_DATA:                     Unicode オブジェクト Unicode object.
* PyUnicode_AS_UNICODE:                  Unicode オブジェクト Unicode object.
* PyUnicode_AsASCIIString:               組み込み codec built-in codec.
* PyUnicode_AsCharmapString:             組み込み codec built-in codec.
* PyUnicode_AsEncodedString:             組み込み codec built-in codec.
* PyUnicode_AsLatin1String:              組み込み codec built-in codec.
* PyUnicode_AsMBCSString:                組み込み codec built-in codec.
* PyUnicode_AsRawUnicodeEscapeString:    組み込み codec built-in codec.
* PyUnicode_AsUnicode:                   Unicode オブジェクト Unicode object.
* PyUnicode_AsUnicodeEscapeString:       組み込み codec built-in codec.
* PyUnicode_AsUTF16String:               組み込み codec built-in codec.
* PyUnicode_AsUTF8String:                組み込み codec built-in codec.
* PyUnicode_AsWideChar:                  Unicode オブジェクト Unicode object.
* PyUnicode_Check:                       Unicode オブジェクト Unicode object.
* PyUnicode_CheckExact:                  Unicode オブジェクト Unicode object.
* PyUnicode_Compare:                     メソッドおよびスロット関数 slot function.
* PyUnicode_Concat:                      メソッドおよびスロット関数 slot function.
* PyUnicode_Contains:                    メソッドおよびスロット関数 slot function.
* PyUnicode_Count:                       メソッドおよびスロット関数 slot function.
* PyUnicode_Decode:                      組み込み codec built-in codec.
* PyUnicode_DecodeASCII:                 組み込み codec built-in codec.
* PyUnicode_DecodeCharmap:               組み込み codec built-in codec.
* PyUnicode_DecodeLatin1:                組み込み codec built-in codec.
* PyUnicode_DecodeMBCS:                  組み込み codec built-in codec.
* PyUnicode_DecodeRawUnicodeEscape:      組み込み codec built-in codec.
* PyUnicode_DecodeUnicodeEscape:         組み込み codec built-in codec.
* PyUnicode_DecodeUTF16:                 組み込み codec built-in codec.
* PyUnicode_DecodeUTF8:                  組み込み codec built-in codec.
* PyUnicode_Encode:                      組み込み codec built-in codec.
* PyUnicode_EncodeASCII:                 組み込み codec built-in codec.
* PyUnicode_EncodeCharmap:               組み込み codec built-in codec.
* PyUnicode_EncodeLatin1:                組み込み codec built-in codec.
* PyUnicode_EncodeMBCS:                  組み込み codec built-in codec.
* PyUnicode_EncodeRawUnicodeEscape:      組み込み codec built-in codec.
* PyUnicode_EncodeUnicodeEscape:         組み込み codec built-in codec.
* PyUnicode_EncodeUTF16:                 組み込み codec built-in codec.
* PyUnicode_EncodeUTF8:                  組み込み codec built-in codec.
* PyUnicode_Find:                        メソッドおよびスロット関数 slot function.
* PyUnicode_Format:                      メソッドおよびスロット関数 slot function.
* PyUnicode_FromEncodedObject:           Unicode オブジェクト Unicode object.
* PyUnicode_FromObject:                  Unicode オブジェクト Unicode object.
* PyUnicode_FromUnicode:                 Unicode オブジェクト Unicode object.
* PyUnicode_FromWideChar:                Unicode オブジェクト Unicode object.
* PyUnicode_GET_DATA_SIZE:               Unicode オブジェクト Unicode object.
* PyUnicode_GET_SIZE:                    Unicode オブジェクト Unicode object.
* PyUnicode_GetSize:                     Unicode オブジェクト Unicode object.
* PyUnicode_Join:                        メソッドおよびスロット関数 slot function.
* PyUnicode_Replace:                     メソッドおよびスロット関数 slot function.
* PyUnicode_Split:                       メソッドおよびスロット関数 slot function.
* PyUnicode_Splitlines:                  メソッドおよびスロット関数 slot function.
* PyUnicode_Tailmatch:                   メソッドおよびスロット関数 slot function.
* PyUnicode_Translate:                   メソッドおよびスロット関数 slot function.
* PyUnicode_TranslateCharmap:            組み込み codec built-in codec.
* PyUnicode_Type:                        Unicode オブジェクト Unicode object.
* PyWeakref_Check:                       弱参照オブジェクト weak reference object.
* PyWeakref_CheckProxy:                  弱参照オブジェクト weak reference object.
* PyWeakref_CheckRef:                    弱参照オブジェクト weak reference object.
* PyWeakref_GET_OBJECT:                  弱参照オブジェクト weak reference object.
* PyWeakref_GetObject:                   弱参照オブジェクト weak reference object.
* PyWeakref_NewProxy:                    弱参照オブジェクト weak reference object.
* PyWeakref_NewRef:                      弱参照オブジェクト weak reference object.
* PyWrapper_New:                         デスクリプタオブジェクト descriptor object.
* reload:                                モジュールの import.
* repr <1>:                              型オブジェクト.
* repr:                                  オブジェクトプロトコル object protocol.
* staticmethod:                          共通のオブジェクト構造体 common object structure.
* str:                                   オブジェクトプロトコル object protocol.
* tuple <1>:                             List Objects.
* tuple:                                 配列プロトコル sequence protocol.
* type:                                  オブジェクトプロトコル object protocol.
* unicode:                               オブジェクトプロトコル object protocol.

