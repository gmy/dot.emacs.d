This is python-ref-jp.info, produced by makeinfo version 4.5 from
python-ref-jp.texi.

12 October 2005


File: python-ref-jp.info,  Node: Class-Exception-Object Index,  Next: Function-Method-Variable Index,  Prev: Module Index,  Up: Top

Class, Exception, and Object Index
**********************************

* Menu:

* AssertionError:                        Assert 文 assert statement.
* AttributeError:                        属性参照.
* Boolean:                               標準型の階層.
* built-in function <1>:                 標準型の階層.
* built-in function:                     呼び出し call.
* built-in method <1>:                   標準型の階層.
* built-in method:                       呼び出し call.
* callable <1>:                          呼び出し call.
* callable:                              標準型の階層.
* class <1>:                             標準型の階層.
* class <2>:                             クラス定義.
* class <3>:                             標準型の階層.
* class:                                 呼び出し call.
* class instance <1>:                    標準型の階層.
* class instance <2>:                    呼び出し call.
* class instance:                        標準型の階層.
* code:                                  標準型の階層.
* complex:                               標準型の階層.
* dictionary <1>:                        標準型の階層.
* dictionary <2>:                        添字表記 subscription.
* dictionary <3>:                        代入文 assignment statement.
* dictionary <4>:                        標準型の階層.
* dictionary <5>:                        基本的なカスタマイズ.
* dictionary:                            辞書表現.
* Ellipsis:                              標準型の階層.
* file <1>:                              式入力.
* file:                                  標準型の階層.
* floating point:                        標準型の階層.
* frame:                                 標準型の階層.
* function <1>:                          呼び出し call.
* function <2>:                          関数定義.
* function <3>:                          標準型の階層.
* function <4>:                          呼び出し call.
* function:                              標準型の階層.
* generator:                             標準型の階層.
* immutable:                             標準型の階層.
* immutable sequence:                    標準型の階層.
* ImportError:                           import 文.
* instance <1>:                          標準型の階層.
* instance <2>:                          呼び出し call.
* instance:                              標準型の階層.
* integer:                               標準型の階層.
* list <1>:                              標準型の階層.
* list <2>:                              スライス表記 slicing.
* list <3>:                              添字表記 subscription.
* list <4>:                              属性参照.
* list <5>:                              リスト表現.
* list:                                  代入文 assignment statement.
* long integer:                          標準型の階層.
* mapping <1>:                           添字表記 subscription.
* mapping <2>:                           標準型の階層.
* mapping:                               代入文 assignment statement.
* method <1>:                            呼び出し call.
* method:                                標準型の階層.
* module <1>:                            属性参照.
* module:                                標準型の階層.
* mutable <1>:                           標準型の階層.
* mutable:                               代入文 assignment statement.
* mutable sequence:                      標準型の階層.
* NameError:                             識別子 identifier、または名前 name.
* None <1>:                              標準型の階層.
* None:                                  式文 expression statement.
* NotImplemented:                        標準型の階層.
* numeric:                               標準型の階層.
* plain integer:                         標準型の階層.
* recursive:                             文字列変換.
* RuntimeError:                          print 文.
* sequence <1>:                          比較 comparison.
* sequence <2>:                          for 文.
* sequence <3>:                          スライス表記 slicing.
* sequence <4>:                          添字表記 subscription.
* sequence <5>:                          標準型の階層.
* sequence:                              代入文 assignment statement.
* slice:                                 コンテナをエミュレートする.
* StopIteration:                         yield 文.
* string <1>:                            標準型の階層.
* string <2>:                            スライス表記 slicing.
* string:                                添字表記 subscription.
* SyntaxError:                           import 文.
* traceback <1>:                         try 文.
* traceback <2>:                         raise 文.
* traceback:                             標準型の階層.
* tuple <1>:                             スライス表記 slicing.
* tuple <2>:                             標準型の階層.
* tuple <3>:                             添字表記 subscription.
* tuple:                                 式のリスト.
* TypeError:                             単項算術演算 unary arithmetic operation.
* unicode:                               標準型の階層.
* user-defined function <1>:             関数定義.
* user-defined function <2>:             標準型の階層.
* user-defined function:                 呼び出し call.
* user-defined method:                   標準型の階層.
* ValueError:                            シフト演算 shifting operation.
* ZeroDivisionError:                     二項算術演算 binary arithmetic operation.


File: python-ref-jp.info,  Node: Function-Method-Variable Index,  Next: Miscellaneous Index,  Prev: Class-Exception-Object Index,  Up: Top

Function, Method, and Variable Index
************************************

* Menu:

* __add__:                               数値型をエミュレーションする.
* __call__:                              呼び出し可能オブジェクトをエミュレートする.
* __cmp__:                               基本的なカスタマイズ.
* __coerce__:                            数値型をエミュレーションする.
* __complex__:                           数値型をエミュレーションする.
* __contains__:                          コンテナをエミュレートする.
* __del__:                               基本的なカスタマイズ.
* __delattr__:                           属性値アクセスをカスタマイズする.
* __delete__:                            デスクリプタ descriptor の実装.
* __delitem__:                           コンテナをエミュレートする.
* __delslice__:                          配列型エミュレーションで使われるその他のメソッド.
* __div__:                               数値型をエミュレーションする.
* __get__:                               デスクリプタ descriptor の実装.
* __getattr__:                           属性値アクセスをカスタマイズする.
* __getattribute__:                      新しい形式のクラスのための別の属性アクセス.
* __getitem__:                           コンテナをエミュレートする.
* __getslice__:                          配列型エミュレーションで使われるその他のメソッド.
* __hash__:                              基本的なカスタマイズ.
* __iadd__:                              数値型をエミュレーションする.
* __import__:                            import 文.
* __init__:                              基本的なカスタマイズ.
* __iter__:                              コンテナをエミュレートする.
* __len__:                               コンテナをエミュレートする.
* __lt__:                                基本的なカスタマイズ.
* __metaclass__:                         クラス生成をカスタマイズする.
* __neg__:                               数値型をエミュレーションする.
* __nonzero__:                           基本的なカスタマイズ.
* __oct__:                               数値型をエミュレーションする.
* __radd__:                              数値型をエミュレーションする.
* __rcmp__:                              基本的なカスタマイズ.
* __repr__:                              基本的なカスタマイズ.
* __set__:                               デスクリプタ descriptor の実装.
* __setattr__:                           属性値アクセスをカスタマイズする.
* __setitem__:                           コンテナをエミュレートする.
* __setslice__:                          配列型エミュレーションで使われるその他のメソッド.
* __slots__:                             __slots__.
* __str__:                               基本的なカスタマイズ.
* __unicode__:                           基本的なカスタマイズ.
* abs:                                   数値型をエミュレーションする.
* chr:                                   標準型の階層.
* cmp:                                   基本的なカスタマイズ.
* compile:                               global 文.
* complex:                               数値型をエミュレーションする.
* divmod:                                数値型をエミュレーションする.
* eval <1>:                              式入力.
* eval <2>:                              exec 文.
* eval:                                  global 文.
* execfile:                              global 文.
* float:                                 数値型をエミュレーションする.
* globals:                               exec 文.
* hex:                                   数値型をエミュレーションする.
* id:                                    オブジェクト、値、および型.
* indices:                               標準型の階層.
* input:                                 式入力.
* int:                                   数値型をエミュレーションする.
* len <1>:                               標準型の階層.
* len:                                   コンテナをエミュレートする.
* locals:                                exec 文.
* long:                                  数値型をエミュレーションする.
* oct:                                   数値型をエミュレーションする.
* open:                                  標準型の階層.
* ord:                                   標準型の階層.
* pow:                                   数値型をエミュレーションする.
* range:                                 for 文.
* raw_input:                             式入力.
* repr <1>:                              式文 expression statement.
* repr <2>:                              基本的なカスタマイズ.
* repr:                                  文字列変換.
* slice:                                 標準型の階層.
* str <1>:                               基本的なカスタマイズ.
* str:                                   文字列変換.
* type:                                  オブジェクト、値、および型.
* unichr:                                標準型の階層.
* unicode <1>:                           標準型の階層.
* unicode:                               基本的なカスタマイズ.


File: python-ref-jp.info,  Node: Miscellaneous Index,  Prev: Function-Method-Variable Index,  Up: Top

Miscellaneous Index
*******************

* Menu:

* __add__():                             コンテナをエミュレートする.
* __all__:                               import 文.
* __bases__:                             標準型の階層.
* __builtins__:                          exec 文.
* __call__():                            呼び出し call.
* __class__:                             標準型の階層.
* __cmp__():                             基本的なカスタマイズ.
* __coerce__():                          コンテナをエミュレートする.
* __contains__():                        コンテナをエミュレートする.
* __debug__:                             Assert 文 assert statement.
* __dict__ <1>:                          属性値アクセスをカスタマイズする.
* __dict__:                              標準型の階層.
* __doc__:                               標準型の階層.
* __file__:                              標準型の階層.
* __getitem__():                         特殊メソッド名.
* __iadd__():                            コンテナをエミュレートする.
* __imul__():                            コンテナをエミュレートする.
* __init__():                            標準型の階層.
* __init__.py:                           import 文.
* __iter__():                            コンテナをエミュレートする.
* __len__():                             基本的なカスタマイズ.
* __module__:                            標準型の階層.
* __mul__():                             コンテナをエミュレートする.
* __name__:                              標準型の階層.
* __nonzero__():                         コンテナをエミュレートする.
* __radd__():                            コンテナをエミュレートする.
* __rmul__():                            コンテナをエミュレートする.
* __setattr__():                         属性値アクセスをカスタマイズする.
* addition:                              二項算術演算 binary arithmetic operation.
* and:                                   ブール演算 boolean operation.
* anonymous function:                    ラムダ lambda.
* append():                              コンテナをエミュレートする.
* arithmetic conversion:                 算術変換 arithmetic conversion.
* ASCIIASCII <1>:                        本マニュアルにおける表記法.
* ASCIIASCII <2>:                        標準型の階層.
* ASCIIASCII <3>:                        デリミタ delimiter.
* ASCIIASCII <4>:                        文字列リテラル.
* ASCIIASCII:                            標準型の階層.
* assert:                                Assert 文 assert statement.
* assignment statement <1>:              代入文 assignment statement.
* assignment statement:                  標準型の階層.
* atom:                                  アトム、原子的要素 atom.
* attribute:                             標準型の階層.
* attribute assignment:                  代入文 assignment statement.
* attribute deletion:                    del 文.
* attribute reference:                   属性参照.
* augmented assignment:                  累算代入文 augmented assignment statement.
* back-quotes <1>:                       基本的なカスタマイズ.
* back-quotes:                           文字列変換.
* backslash character:                   明示的な行継続.
* backward quotes <1>:                   基本的なカスタマイズ.
* backward quotes:                       文字列変換.
* binary arithmetic operation:           二項算術演算 binary arithmetic operation.
* binary bit-wise operation:             ビット単位演算の二項演算 binary bit-wise operation.
* binding name <1>:                      名前づけと束縛 naming and binding.
* binding name:                          代入文 assignment statement.
* bit-wise and:                          ビット単位演算の二項演算 binary bit-wise operation.
* bit-wise or:                           ビット単位演算の二項演算 binary bit-wise operation.
* bit-wise xor:                          ビット単位演算の二項演算 binary bit-wise operation.
* blank line:                            空行.
* block:                                 名前づけと束縛 naming and binding.
* BNF:                                   本マニュアルにおける表記法.
* Boolean operation:                     ブール演算 boolean operation.
* break <1>:                             try 文.
* break <2>:                             while 文.
* break <3>:                             break 文.
* break <4>:                             for 文.
* break:                                 try 文.
* built-in function call:                呼び出し call.
* built-in method:                       標準型の階層.
* built-in method call:                  呼び出し call.
* built-in module:                       import 文.
* byte:                                  標準型の階層.
* bytecode:                              標準型の階層.
* C:                                     文字列リテラル.
* C language <1>:                        標準型の階層.
* C language <2>:                        比較 comparison.
* C language:                            標準型の階層.
* call:                                  呼び出し call.
* call instance:                         呼び出し可能オブジェクトをエミュレートする.
* chaining comparisons:                  比較 comparison.
* character <1>:                         標準型の階層.
* character <2>:                         添字表記 subscription.
* character:                             標準型の階層.
* character set:                         標準型の階層.
* class:                                 クラス定義.
* class attribute:                       標準型の階層.
* class attribute assignment:            標準型の階層.
* class constructor:                     基本的なカスタマイズ.
* class definition <1>:                  クラス定義.
* class definition:                      return 文.
* class instance:                        標準型の階層.
* class instance attribute:              標準型の階層.
* class instance attribute assignment:   標準型の階層.
* class instance call:                   呼び出し call.
* class name:                            クラス定義.
* class object call <1>:                 標準型の階層.
* class object call:                     呼び出し call.
* clause:                                複合文 compound statement.
* clear():                               コンテナをエミュレートする.
* co_argcount:                           標準型の階層.
* co_cellvars:                           標準型の階層.
* co_code:                               標準型の階層.
* co_consts:                             標準型の階層.
* co_filename:                           標準型の階層.
* co_firstlineno:                        標準型の階層.
* co_flags:                              標準型の階層.
* co_freevars:                           標準型の階層.
* co_lnotab:                             標準型の階層.
* co_name:                               標準型の階層.
* co_names:                              標準型の階層.
* co_nlocals:                            標準型の階層.
* co_stacksize:                          標準型の階層.
* co_varnames:                           標準型の階層.
* code block <1>:                        import 文.
* code block:                            名前づけと束縛 naming and binding.
* comma:                                 丸括弧形式 parenthesized form.
* command line:                          完全な Python プログラム.
* comment:                               コメント.
* comparison:                            比較 comparison.
* comparisons:                           基本的なカスタマイズ.
* complex number:                        標準型の階層.
* complex!literal:                       数値リテラル.
* compound statement:                    複合文 compound statement.
* constant:                              リテラル literal.
* container <1>:                         オブジェクト、値、および型.
* container:                             標準型の階層.
* continue <1>:                          while 文.
* continue <2>:                          try 文.
* continue <3>:                          for 文.
* continue <4>:                          try 文.
* continue:                              continue 文.
* copy():                                コンテナをエミュレートする.
* count():                               コンテナをエミュレートする.
* dangling else:                         複合文 compound statement.
* data:                                  オブジェクト、値、および型.
* data type:                             標準型の階層.
* datum:                                 辞書表現.
* decimal literal:                       数値リテラル.
* DEDENT token <1>:                      インデント.
* DEDENT token:                          複合文 compound statement.
* def:                                   関数定義.
* default parameter value:               関数定義.
* del <1>:                               基本的なカスタマイズ.
* del <2>:                               del 文.
* del:                                   標準型の階層.
* delete:                                標準型の階層.
* deletion target:                       del 文.
* deletion target list:                  del 文.
* delimiters:                            デリミタ delimiter.
* destructor <1>:                        基本的なカスタマイズ.
* destructor:                            代入文 assignment statement.
* dictionary display:                    辞書表現.
* division:                              二項算術演算 binary arithmetic operation.
* documentation string:                  標準型の階層.
* EBCDIC:                                標準型の階層.
* elif:                                  if 文.
* else <1>:                              while 文.
* else <2>:                              try 文.
* else <3>:                              if 文.
* else <4>:                              break 文.
* else:                                  for 文.
* empty list:                            リスト表現.
* empty tuple <1>:                       丸括弧形式 parenthesized form.
* empty tuple:                           標準型の階層.
* environment:                           名前づけと束縛 naming and binding.
* error handling:                        例外.
* errors:                                例外.
* escape sequence:                       文字列リテラル.
* evaluation order:                      評価順序.
* exc_info:                              標準型の階層.
* exc_traceback <1>:                     標準型の階層.
* exc_traceback:                         try 文.
* exc_type:                              try 文.
* exc_value:                             try 文.
* except:                                try 文.
* exception <1>:                         raise 文.
* exception:                             例外.
* exception handler <1>:                 標準型の階層.
* exception handler:                     例外.
* exclusive or:                          ビット単位演算の二項演算 binary bit-wise operation.
* exec <1>:                              global 文.
* exec:                                  exec 文.
* execution frame <1>:                   クラス定義.
* execution frame:                       名前づけと束縛 naming and binding.
* execution model:                       実行モデル.
* execution stack:                       標準型の階層.
* expression:                            式 expression.
* expression list <1>:                   代入文 assignment statement.
* expression list <2>:                   式のリスト.
* expression list:                       式文 expression statement.
* expression statement:                  式文 expression statement.
* extend():                              コンテナをエミュレートする.
* extended print statement:              print 文.
* extended slicing <1>:                  スライス表記 slicing.
* extended slicing:                      標準型の階層.
* extension module:                      標準型の階層.
* f_back:                                標準型の階層.
* f_builtins:                            標準型の階層.
* f_code:                                標準型の階層.
* f_exc_traceback:                       標準型の階層.
* f_exc_type:                            標準型の階層.
* f_exc_value:                           標準型の階層.
* f_globals:                             標準型の階層.
* f_lasti:                               標準型の階層.
* f_lineno:                              標準型の階層.
* f_locals:                              標準型の階層.
* f_restricted:                          標準型の階層.
* f_trace:                               標準型の階層.
* False:                                 標準型の階層.
* filename extension:                    import 文.
* finally <1>:                           continue 文.
* finally <2>:                           return 文.
* finally <3>:                           break 文.
* finally:                               try 文.
* floating point literal:                数値リテラル.
* floating point number:                 標準型の階層.
* for <1>:                               continue 文.
* for <2>:                               for 文.
* for:                                   break 文.
* free variable <1>:                     del 文.
* free variable:                         名前づけと束縛 naming and binding.
* from <1>:                              名前づけと束縛 naming and binding.
* from:                                  import 文.
* func_closure:                          標準型の階層.
* func_code:                             標準型の階層.
* func_defaults:                         標準型の階層.
* func_dict:                             標準型の階層.
* func_doc:                              標準型の階層.
* func_globals:                          標準型の階層.
* function argument:                     標準型の階層.
* function call <1>:                     呼び出し call.
* function call <2>:                     標準型の階層.
* function call:                         呼び出し call.
* function definition <1>:               return 文.
* function definition:                   関数定義.
* function name:                         関数定義.
* function!generator:                    yield 文.
* future statement:                      future 文 future statement.
* garbage collection:                    オブジェクト、値、および型.
* generator!function <1>:                標準型の階層.
* generator!function:                    yield 文.
* generator!iterator <1>:                標準型の階層.
* generator!iterator:                    yield 文.
* generic special attribute:             標準型の階層.
* get():                                 コンテナをエミュレートする.
* global <1>:                            del 文.
* global <2>:                            代入文 assignment statement.
* global:                                global 文.
* global name binding:                   global 文.
* global namespace:                      標準型の階層.
* grammar:                               本マニュアルにおける表記法.
* grouping:                              インデント.
* handle an exception:                   例外.
* has_key():                             コンテナをエミュレートする.
* hash character:                        コメント.
* hexadecimal literal:                   数値リテラル.
* hierarchical module names:             import 文.
* identifier <1>:                        識別子 identifier およびキーワード keyword.
* identifier:                            識別子 identifier、または名前 name.
* identity of an object:                 オブジェクト、値、および型.
* identity test:                         比較 comparison.
* if:                                    if 文.
* im_class:                              標準型の階層.
* im_func:                               標準型の階層.
* im_self:                               標準型の階層.
* imaginary literal:                     数値リテラル.
* immutable data type:                   リテラル.
* immutable object <1>:                  辞書表現.
* immutable object <2>:                  リテラル.
* immutable object:                      オブジェクト、値、および型.
* import <1>:                            import 文.
* import:                                標準型の階層.
* in <1>:                                for 文.
* in:                                    比較 comparison.
* inclusive or:                          ビット単位演算の二項演算 binary bit-wise operation.
* INDENT token:                          インデント.
* indentation:                           インデント.
* index operation:                       標準型の階層.
* index():                               コンテナをエミュレートする.
* inheritance:                           クラス定義.
* input:                                 式入力.
* input!raw:                             式入力.
* insert():                              コンテナをエミュレートする.
* instance call:                         呼び出し call.
* integer:                               標準型の階層.
* integer literal:                       数値リテラル.
* integer representation:                標準型の階層.
* interactive mode:                      完全な Python プログラム.
* internal type:                         標準型の階層.
* interpreter:                           トップレベル要素.
* inversion:                             単項算術演算 unary arithmetic operation.
* invocation:                            標準型の階層.
* is:                                    比較 comparison.
* is not:                                比較 comparison.
* item selection:                        標準型の階層.
* items():                               コンテナをエミュレートする.
* iteritems():                           コンテナをエミュレートする.
* iterkeys():                            コンテナをエミュレートする.
* itervalues():                          コンテナをエミュレートする.
* Java language:                         標準型の階層.
* key:                                   辞書表現.
* key/datum pair:                        辞書表現.
* keys():                                コンテナをエミュレートする.
* keyword:                               キーワード keyword.
* lambda expression:                     ラムダ lambda.
* lambda form <1>:                       ラムダ lambda.
* lambda form:                           関数定義.
* last_traceback:                        標準型の階層.
* leading whitespace:                    インデント.
* lexical analysis:                      字句解析.
* lexical definitions:                   本マニュアルにおける表記法.
* line continuation:                     明示的な行継続.
* line joining <1>:                      明示的な行継続.
* line joining:                          論理行 logical line.
* line structure:                        行構造.
* list comprehensions:                   リスト表現.
* list display:                          リスト表現.
* literal <1>:                           リテラル.
* literal:                               リテラル literal.
* logical line:                          論理行 logical line.
* long integer literal:                  数値リテラル.
* loop control target:                   break 文.
* loop statement <1>:                    for 文.
* loop statement <2>:                    while 文.
* loop statement <3>:                    continue 文.
* loop statement:                        break 文.
* loop!over mutable sequence:            for 文.
* makefile():                            標準型の階層.
* membership test:                       比較 comparison.
* method call:                           呼び出し call.
* minus:                                 単項算術演算 unary arithmetic operation.
* module initialization:                 import 文.
* module name:                           import 文.
* module namespace:                      標準型の階層.
* module search path:                    import 文.
* module!importing:                      import 文.
* modules:                               import 文.
* modulo:                                二項算術演算 binary arithmetic operation.
* multiplication:                        二項算術演算 binary arithmetic operation.
* mutable object:                        オブジェクト、値、および型.
* mutable sequence!loop over:            for 文.
* name <1>:                              識別子 identifier、または名前 name.
* name <2>:                              識別子 identifier およびキーワード keyword.
* name:                                  名前づけと束縛 naming and binding.
* name binding <1>:                      関数定義.
* name binding <2>:                      クラス定義.
* name binding:                          import 文.
* name mangling:                         識別子 identifier、または名前 name.
* NameError:                             名前づけと束縛 naming and binding.
* namespace:                             名前づけと束縛 naming and binding.
* negation:                              単項算術演算 unary arithmetic operation.
* newline suppression:                   print 文.
* NEWLINE token <1>:                     論理行 logical line.
* NEWLINE token:                         複合文 compound statement.
* not:                                   ブール演算 boolean operation.
* not in:                                比較 comparison.
* notation:                              本マニュアルにおける表記法.
* null operation:                        pass 文.
* number:                                数値リテラル.
* numeric literal:                       数値リテラル.
* object:                                オブジェクト、値、および型.
* octal literal:                         数値リテラル.
* operator overloading:                  特殊メソッド名.
* operator precedence:                   まとめ.
* operators:                             演算子 operator.
* or:                                    ブール演算 boolean operation.
* output <1>:                            式文 expression statement.
* output:                                print 文.
* OverflowError:                         標準型の階層.
* packages:                              import 文.
* parenthesized form:                    丸括弧形式 parenthesized form.
* parser:                                字句解析.
* Pascal language:                       for 文.
* pass:                                  pass 文.
* physical line <1>:                     文字列リテラル.
* physical line <2>:                     論理行 logical line.
* physical line:                         明示的な行継続.
* plain integer literal:                 数値リテラル.
* plus:                                  単項算術演算 unary arithmetic operation.
* pop():                                 コンテナをエミュレートする.
* popen():                               標準型の階層.
* popitem():                             コンテナをエミュレートする.
* primary:                               一次語 primary.
* print <1>:                             print 文.
* print:                                 基本的なカスタマイズ.
* private names:                         識別子 identifier、または名前 name.
* procedure call:                        式文 expression statement.
* program:                               完全な Python プログラム.
* raise:                                 raise 文.
* raise an exception:                    例外.
* raising exception:                     raise 文.
* raw input:                             式入力.
* readline():                            式入力.
* rebinding name:                        代入文 assignment statement.
* reference counting:                    オブジェクト、値、および型.
* remove():                              コンテナをエミュレートする.
* reserved word:                         キーワード keyword.
* restricted execution:                  名前づけと束縛 naming and binding.
* return <1>:                            try 文.
* return <2>:                            return 文.
* return:                                try 文.
* reverse quotes <1>:                    文字列変換.
* reverse quotes:                        基本的なカスタマイズ.
* reverse():                             コンテナをエミュレートする.
* scope:                                 名前づけと束縛 naming and binding.
* sequence item:                         添字表記 subscription.
* setdefault():                          コンテナをエミュレートする.
* shifting operation:                    シフト演算 shifting operation.
* simple statement:                      単純文 simple statement.
* singleton tuple:                       標準型の階層.
* slice:                                 スライス表記 slicing.
* slicing <1>:                           標準型の階層.
* slicing <2>:                           スライス表記 slicing.
* slicing:                               標準型の階層.
* slicing assignment:                    代入文 assignment statement.
* sort():                                コンテナをエミュレートする.
* space:                                 インデント.
* special attribute:                     標準型の階層.
* stack trace:                           標準型の階層.
* Standard C:                            文字列リテラル.
* standard input:                        完全な Python プログラム.
* standard output <1>:                   print 文.
* standard output:                       式文 expression statement.
* start <1>:                             標準型の階層.
* start:                                 スライス表記 slicing.
* statement grouping:                    インデント.
* statement!assignment, augmented:       累算代入文 augmented assignment statement.
* stderr:                                標準型の階層.
* stdin:                                 標準型の階層.
* stdio:                                 標準型の階層.
* stdout <1>:                            print 文.
* stdout:                                標準型の階層.
* step <1>:                              標準型の階層.
* step:                                  スライス表記 slicing.
* stop <1>:                              スライス表記 slicing.
* stop:                                  標準型の階層.
* string comparison:                     標準型の階層.
* string conversion <1>:                 式文 expression statement.
* string conversion <2>:                 基本的なカスタマイズ.
* string conversion:                     文字列変換.
* string item:                           添字表記 subscription.
* string literal:                        文字列リテラル.
* string!Unicode:                        文字列リテラル.
* subscription <1>:                      標準型の階層.
* subscription <2>:                      添字表記 subscription.
* subscription:                          標準型の階層.
* subscription assignment:               代入文 assignment statement.
* subtraction:                           二項算術演算 binary arithmetic operation.
* suite:                                 複合文 compound statement.
* syntax <1>:                            本マニュアルにおける表記法.
* syntax:                                式 expression.
* sys.exc_info:                          標準型の階層.
* sys.exc_traceback:                     標準型の階層.
* sys.last_traceback:                    標準型の階層.
* sys.modules:                           import 文.
* sys.stderr:                            標準型の階層.
* sys.stdin:                             標準型の階層.
* sys.stdout:                            標準型の階層.
* SystemExit:                            例外.
* tab:                                   インデント.
* target:                                代入文 assignment statement.
* target list <1>:                       for 文.
* target list:                           代入文 assignment statement.
* target list assignment:                代入文 assignment statement.
* tb_frame:                              標準型の階層.
* tb_lasti:                              標準型の階層.
* tb_lineno:                             標準型の階層.
* tb_next:                               標準型の階層.
* termination model:                     例外.
* token:                                 字句解析.
* trailing comma <1>:                    式のリスト.
* trailing comma:                        print 文.
* triple-quoted string:                  文字列リテラル.
* True:                                  標準型の階層.
* try <1>:                               標準型の階層.
* try:                                   try 文.
* tuple display:                         丸括弧形式 parenthesized form.
* type:                                  標準型の階層.
* type hierarchy:                        標準型の階層.
* type of an object:                     オブジェクト、値、および型.
* types, internal:                       標準型の階層.
* unary arithmetic operation:            単項算術演算 unary arithmetic operation.
* unary bit-wise operation:              単項算術演算 unary arithmetic operation.
* unbinding name:                        del 文.
* UnboundLocalError:                     名前づけと束縛 naming and binding.
* Unicode:                               標準型の階層.
* Unicode Consortium:                    文字列リテラル.
* UNIX:                                  完全な Python プログラム.
* unreachable object:                    オブジェクト、値、および型.
* unrecognized escape sequence:          文字列リテラル.
* update():                              コンテナをエミュレートする.
* user-defined function:                 標準型の階層.
* user-defined function call:            呼び出し call.
* user-defined method:                   標準型の階層.
* user-defined module:                   import 文.
* value of an object:                    オブジェクト、値、および型.
* values():                              コンテナをエミュレートする.
* while <1>:                             break 文.
* while <2>:                             continue 文.
* while:                                 while 文.
* whitespace:                            インデント.
* writing values <1>:                    式文 expression statement.
* writing values:                        print 文.
* yield:                                 yield 文.


