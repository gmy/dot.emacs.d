-*- coding: utf-8 -*-

START-INFO-DIR-ENTRY
* File utilities(ja): (fileutils-ja).  GNU file utilities.
* chgrp(ja): (fileutils-ja)chgrp invocation.         Change file groups.
* chown(ja): (fileutils-ja)chown invocation.         Change file owners/groups.
* chmod(ja): (fileutils-ja)chmod invocation.         Change file permissions.
* cp(ja): (fileutils-ja)cp invocation.               Copy files.
* dd(ja): (fileutils-ja)dd invocation.               Copy and convert a file.
* df(ja): (fileutils-ja)df invocation.               Report filesystem disk usage.
* dir(ja): (fileutils-ja)dir invocation.             List directories briefly.
* dircolors(ja): (fileutils-ja)dircolors invocation. Color setup for ls.
* du(ja): (fileutils-ja)du invocation.               Report on disk usage.
* install(ja): (fileutils-ja)install invocation.     Copy and change attributes.
* ln(ja): (fileutils-ja)ln invocation.               Make links between files.
* ls(ja): (fileutils-ja)ls invocation.               List directory contents.
* mkdir(ja): (fileutils-ja)mkdir invocation.         Create directories.
* mkfifo(ja): (fileutils-ja)mkfifo invocation.       Create FIFOs (named pipes).
* mknod(ja): (fileutils-ja)mknod invocation.         Create special files.
* mv(ja): (fileutils-ja)mv invocation.               Rename files.
* rm(ja): (fileutils-ja)rm invocation.               Remove files.
* rmdir(ja): (fileutils-ja)rmdir invocation.         Remove empty directories.
* shred(ja): (fileutils-ja)shred invocation.         Remove files more securely.
* sync(ja): (fileutils-ja)sync invocation.           Synchronize memory and disk.
* touch(ja): (fileutils-ja)touch invocation.         Change file timestamps.
* vdir(ja): (fileutils-ja)vdir invocation.           List directories verbosely.
END-INFO-DIR-ENTRY

   This file documents the GNU set of file utilities.

   Copyright 1994, 95, 96, 1999, 2001 Free Software Foundation, Inc.

   Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.1 or
any later version published by the Free Software Foundation; with no
Invariant Sections, with no Front-Cover Texts, and with no Back-Cover
Texts.  A copy of the license is included in the section entitled "GNU
Free Documentation License".


File: fileutils-ja.info,  Node: Top,  Next: Introduction,  Up: (dir)

GNU file utilities
******************


このマニュアルは，GNUファイルユーティリティのバージョン
4.1を説明します．

* Menu:

* Introduction::                Caveats, overview, and authors.
* Common options::              Common options.
* File permissions::            Access modes.
* Date input formats::          Specifying date strings.
* Directory listing::           ls dir vdir d v dircolors
* Basic operations::            cp dd install mv rm shred
* Special file types::          ln mkdir rmdir mkfifo mknod
* Changing file attributes::    chgrp chmod chown touch
* Disk usage::                  df du sync
* Index::                       General index.


File: fileutils-ja.info,  Node: Introduction,  Next: Common options,  Prev: Top,  Up: Top

1 はじめに
**********

このマニュアルは不完全です．初心者に対して適切な方法でファイルの基本的な
概念を説明する試みがなされていません．このため，興味があれば，このマニュ
アルの改善に参加してください．GNUコミュニティ全体が利益を得るでしょ う．

   GNUファイルユーティリティは，POSIX.2標準とほとんど互換性があり ます．

   <bug-fileutils@gnu.org>にバグを報告してください．バージョンナン
バー，マシンアーキテクチャ，そしてバグの報告に必要なあらゆる情報，例えば
入力，期待したもの，得たもの，そして何が間違っているのかという情報を含め
ることを忘れないでください．差分は歓迎しますが，推測することが難しいとき
もあるので，問題の記述も含めてください．*Note Bugs: (gcc)Bugs.

   このマニュアルは，元々Unix配布物のmanページから得られ，それはDavid
MacKenzieによって書かれ，Jim Meyeringによって更新されました．現在読んで
いるものは，これらのユーティリティに対する正式なドキュメントです．manペー
ジはもはや保守されてません．Franc,ois Pinardは，最初にTexinfo書式に変
換しました．Karl Berryは，索引，いくつかの再構成，そして結果の編集を行い
ました．Richard Stallmanは全体的な処理に，彼のいつもの貴重な洞察を寄与し
ました．


File: fileutils-ja.info,  Node: Common options,  Next: File permissions,  Prev: Introduction,  Up: Top

2 共通のオプション
******************

ある特定のオプションはこれらのプログラムの全てで利用可能です(実際，全て
のGNUプログラムはそれらを受け入れるべきです)．それぞれのプログラム
の個別の記述で書くのではなく，ここで記述します．

`--help'
     全ての利用可能なオプションをリストアップする使用方法のメッセージを出力し，
     正しく終了します．

`--version'
     バージョンナンバーを出力し，正しく終了します．

* Menu:

* Backup options::              -b -S -V, in some programs.
* Block size::                  BLOCK_SIZE and --block-size, in some programs.
* Target directory::            --target-directory, in some programs.
* Trailing slashes::            --strip-trailing-slashes, in some programs.


File: fileutils-ja.info,  Node: Backup options,  Next: Block size,  Up: Common options

2.1 バックアップオプション
==========================

GNUプログラムには(少なくとも，`cp'，`install'，`ln'
と`mv'は)追加で，新しいバージョンを書く前に，ファイルのバックアップ
を作成するものもあります．これらのオプションは，これらのバックアップを詳
細に制御します．オプションは，特定のプログラムでも簡単に記述します．

`-b'
`--backup[=METHOD]'
     バックアップを作成しない場合，上書きされたり削除されたりするそれぞれのファ
     イルのバックアップを作成します．このオプションを使用しない場合，元のバー
     ジョンは破壊されます．このオプションが使用され，METHODが指定されて
     いないときは，`VERSION_CONTROL'環境変数の値が使用されます．そして
     `VERSION_CONTROL'が設定されていない場合は，デフォルトのバックアップ
     形式は`existing'になります．

     このオプションの短い形式`-b'は，引数を全く受け入れないことに注意し
     てください．`-b'の使用は，`--backup=existing'の使用と等価です．

     このオプションは，Emacs変数の`version-control'に対応します．
     METHODに対する値は，Emacsで使用されるものと同じです．このオプショ
     ンも，より記述的な名前を受け入れます．有効なMETHODは以下の通りです
     (ユニークに識別できる省略も受け入れます)．

    `none'
    `off'
          バックアップを作成しません．

    `numbered'
    `t'
          常に番号付のバックアップを作成します．

    `existing'
    `nil'
          既に番号付のバックアップファイルがある場合，番号付のバックアップを作成し，
          それ以外では単純にバックアップします．

    `simple'
    `never'
          常に単純なバックアップを作成します．`never'と`none'を混同しな
          いように注意してください．

`-S SUFFIX'
`--suffix=SUFFIX'
     `-b'で作成されるそれぞれのバックアップファイルにSUFFIXを追加
     します．このオプションが指定されない場合，`SIMPLE_BACKUP_SUFFIX'環
     境変数の値が使用されます．また，`SIMPLE_BACKUP_SUFFIX'が設定されて
     いない場合，デフォルトで`~'となり，それはちょうどEmacsと同じです．

`--version-control=METHOD'
     このオプションは時代遅れで，将来のリリースで削除されるでしょう．それは，
     `--backup'で置換されました．



File: fileutils-ja.info,  Node: Block size,  Next: Target directory,  Prev: Backup options,  Up: Common options

2.2 ブロックサイズ
==================

GNUプログラム(少なくとも，`df'，`du'と，`ls')には，
ファイルサイズを"ブロック"で表示するものもあります．ファイルサイズをよ
り読みやすくするため，ブロックサイズを調整できます．表示で使用するブロッ
クサイズは，あらゆるファイルシステムのブロックサイズから独立しています．

通常，ディスク使用のサイズは切り上げ，ディスクフリーサイズは切り捨て，そ
して，それ以外は，偶数に丸めたときの最も近いブロックで丸められます．

デフォルトブロックサイズは，以下の環境変数を順番に調べることで選択されま
す．最初のものはブロックサイズを決定します．

`DF_BLOCK_SIZE'
     これは，`df'コマンドに対するデフォルトのブロックサイズを指定します．
     同様に，`DU_BLOCK_SIZE'は`du'に対するデフォルト，
     `LS_BLOCK_SIZE'は`ls'に対するデフォルトを指定します．

`BLOCK_SIZE'
     上記のコマンド指定の環境変数が設定されていない場合，これは，三つのコマン
     ド全てに対するデフォルトブロックサイズを指定します．

`POSIXLY_CORRECT'
     `COMMAND_BLOCK_SIZE'も`BLOCK_SIZE'変数も設定されていなく
     て，この変数が設定されている場合，ブロックサイズのデフォルトは512になり
     ます．


上記の環境変数がどれも設定されていない場合，ブロックサイズは現在のデフォ
ルトの1024バイトですが，この数は将来変更されるかもしれません．

ブロックサイズの指定は，ブロック毎のバイト数を指定することで，正の整数に
したり，人間が可読な書式を選択することで，`human-readable'や
`si'にしたりできます．

   人間が可読な書式を用いた場合，出力サイズは，メガバイトに対する`M'の
ような大きさを示す文字が続きます．`BLOCK_SIZE=human-readable'は1024
乗を使用します．`M'は1,048,576バイトを意味します．
`BLOCK_SIZE=si'は似ていますが，1000乗を使用します．`M'は
1,000,000を意味します．(SI，国際単位系は，これらの1000乗の前置を定義しま
す．)

整数のブロックサイズは，そのサイズの倍数を指定する大きさを示す文字を続け
ることができます．この注釈が用いられた場合，大きさを示す文字は，通常1024
倍を意味し，オプションで"バイト"に対する`B'を続けることができます．
しかし，("10進バイト"に対する)`D'が続く場合，それらは1000倍を意味
します．例えば，`BLOCK_SIZE=4MB'は`BLOCK_SIZE=4194304'と同じで，
`BLOCK_SIZE=4MD'は`BLOCK_SIZE=4000000'と同じです．

   以下の大きさを示す文字は定義されています．`1Y'のような大きなサイズ
は，その計算の限界のためコンピュータで拒絶されるかもしれません．

`k'
     キロ：`human-readable'に対する2^10 = 1024，または，`si'
     に対する10^3 = 1000．

`M'
     メガ：2^20 = 1,048,576，または，10^6 = 1,000,000．

`G'
     ギガ：2^30 = 1,073,741,824，または，10^9 = 1,000,000,000．

`T'
     テラ：2^40 = 1,099,511,627,776，または，10^12 = 1,000,000,000,000．

`P'
     ペタ：2^50 = 1,125,899,906,842,624，または，10^15 =
     1,000,000,000,000,000．

`E'
     エクサ：2^60 = 1,152,921,504,606,846,976，または，10^18 =
     1,000,000,000,000,000,000．

`Z'
     ゼータ：2^70 = 1,180,591,620,717,411,303,424，または，10^21 =
     1,000,000,000,000,000,000,000．

`Y'
     ヨット：2^80 = 1,208,925,819,614,629,174,706,176，または， 10^24 =
     1,000,000,000,000,000,000,000,000．

   ブロックサイズのデフォルトは，`--block-size=SIZE'オプションを
明示することで優先できます．`-k'や`--kilobytes'オプションは，
`--block-size=1k'と同じで，それは`POSIXLY_CORRECT'環境変数が指
定されていない場合デフォルトです．`-h'や`--human-readable'オプ
ションは，`--block-size=human-readable'と同じです．`--si'オプ
ションは，`--block-size=si'と同じです．


File: fileutils-ja.info,  Node: Target directory,  Next: Trailing slashes,  Prev: Block size,  Up: Common options

2.3 ターゲットディレクトリ
==========================

GNUプログラム(少なくとも`cp'，`install'，`ln'，そし
て`mv')には，このオプションによってターゲットディレクトリを指定する
ことが可能なものもあります．

`--target-directory=DIRECTORY'
     対象となるDIRECTORYを指定します．

     ほとんどのプログラムに対するインターフェースは，オプションと，有限(おそ
     らくゼロの)数の固定した位置の引数を処理した後，残りの引数リストは空であ
     ることを期待される，または，同じように扱われる(通常ファイルとなる)項目の
     リストとなります．`xargs'プログラムは，この慣習を用いてより良く動作
     するように設計されています．

     _終り_に特例で様々な数の引数(すなわち，ターゲットディレクトリ)を持
     つため，`mv'の類のコマンドは普通ではありません．これは`mv *
     ../d/'が引数の空間を使い果たし，`ls | xargs ...'は，それぞれの従属
     するコマンドの呼び出しのために，特別な最終的な引数を指定するための明確な
     方法ではないため，例えば"全てのファイルをここから../d/に移動する"
     のよ
     うないくつかの処理を実行するときに，これは明確ではなくなります．(それは，
     シェルコマンドを通じて動作可能ですが，それはそうするより人間の労働と能力
     を必要とします．)

     `--target-directory'オプションは，`cp'，`install'，
     `ln'，そして`mv'プログラムが，`xargs'を用いて便利に使用す
     ることを可能にします．例えば，現在のディレクトリから同胞のディレクトリ，
     ここでは`d'にファイルを移動することが可能です．(しかし，これは
     `.'で始まる名前のファイルを移動しません．)

          ls |xargs mv --target-directory=../d

     GNU `find'プログラムを使用している場合，このコマンドで_全
     ての_ファイルを移動できます．

          find . -mindepth 1 -maxdepth 1 \
            | xargs mv --target-directory=../d

     しかし，現在のディレクトリにファイルがない場合や，改行文字を含む名前を持
     つファイルがある場合，それは失敗するでしょう．以下の例は，これらの制限を
     取り除き，GNU `find'とGNU `xargs'の両方を必要としま す．

          find . -mindepth 1 -maxdepth 1 -print0 \
            | xargs --null --no-run-if-empty \
                mv --target-directory=../d



File: fileutils-ja.info,  Node: Trailing slashes,  Prev: Target directory,  Up: Common options

2.4 末尾のスラッシュ
====================

GNUプログラム(少なくとも`cp'と`mv')には，それぞれの
SOURCE引数を処理する前に末尾のスラッシュを取り除くことを可能にする
ものもあります．`--strip-trailing-slashes'オプションはこの動作を
可能にします．

   SOURCE引数が末尾にスラッシュがあり，ディレクトリへのシンボリックリ
ンクを指定しているとき，これは役に立ちます．シェルには，シンボリックリン
クのようなものに対してファイル名の補完を実行しているとき，末尾のスラッシュ
を自動的に追加することができるものもあるので，このシナリオ筋書きは現実と
なります．このオプションがない場合，例えば(システムの名前変更機能のため
の)`mv'は，末尾のスラッシュをシンボリックリンク先を参照しないように
要求するよう解釈する必要があり，そして，そのためシンボリックリンクではな
く，間接的に参照される_ディレクトリ_の名前を変更するはずです．その
ような動作がデフォルトということにびっくりするかもしれませんが，それは
POSIX.2で要求されていて，その標準のそれ以外の部分と一貫しています．


File: fileutils-ja.info,  Node: File permissions,  Next: Date input formats,  Prev: Common options,  Up: Top

3 ファイルのパーミッション
**************************

それぞれのファイルには，ファイルに対してユーザ持つアクセスの種類を制御す
る"許可"の設定があります．ファイルに対する許可は"アクセスモード"
とも呼ばれます．それらは，抽象的な形式または8進数で表示可能です．

* Menu:

* Mode Structure::              Structure of file permissions.
* Symbolic Modes::              Mnemonic permissions representation.
* Numeric Modes::               Permissions as octal numbers.


File: fileutils-ja.info,  Node: Mode Structure,  Next: Symbolic Modes,  Up: File permissions

3.1 ファイルの許可の構造
========================

ユーザがファイルに対して持つ3種類の許可があります．

  1. ファイルを読み込む許可です．ディレクトリに対しては，これはディレクトリの
     内容をリストアップする許可という意味があります．

  2. ファイルを書き込む(変更する)許可です．ディレクトリに対しては，これはディ
     レクトリでのファイルの作成と削除の許可を意味します．

  3. ファイルを実行(それをプログラムとして実行)する許可です．ディレクトリに対
     しては，これはディレクトリのファイルにアクセスする許可を意味します．

ファイル上で上記のあらゆる処理を行うため，異なる許可を持つ，3つのユーザ
の分類があります．

  1. ファイルの所有者．

  2. ファイルのグループにいるその他のユーザ．

  3. その他全員．

ファイルが作成されるとき，所有者とグループが与えられます．通常，所有者は
現在のユーザで，グループはファイルがあるディレクトリのグループですが，こ
れはオペレーティングシステム，ファイルが作成されるファイルシステム，そし
てファイルが作成される方法で変化します．`chown'と`chgrp'コマン
ドを使用してファイルの所有者とグループを変更可能です．

上記でリストアップされた3つの許可の3つの設定に加えて，ファイルの許可は3
つの特別な構成部分があり，それは実行可能なファイル(プログラム)と，いくつ
かのシステムのディレクトリにのみ効果があります．

  1. プロセスの事実上のユーザIDを，実行時にファイルのものに設定します
     ("setuid bit"と呼ばれます)．ディレクトリには効果がありません．

  2. プロセスの事実上のグループIDを，実行時にファイルのものに設定します
     ("setgid
     bit"と呼ばれます)．いくつかのシステムのディレクトリに対して
     は，そのディレクトリで作成されたファイルを同じグループのディレクトリとし
     て置いたとしても，それを作成したユーザのグループは問題ありません．

  3. スワップデバイス上のプログラムのテキストイメージを保存するので，実行時に
     より速くロードされます("sticky
     bit"と呼ばれます)．いくつかのシステム
     のディレクトリに対しては，ユーザが所有していないファイルやディレクトリ場
     合，そのディレクトリ内でのファイルの削除や名前の変更を妨げます．これは，
     ディレクトリに対する"限定削除フラグ"と呼ばれます．


File: fileutils-ja.info,  Node: Symbolic Modes,  Next: Numeric Modes,  Prev: Mode Structure,  Up: File permissions

3.2 象徴的なモード
==================

"象徴的なモード"は，単一文字のシンボルの演算子として，ファイルの許可
を変更することを表します．それは，ファイルの許可の部分のどれかまたは全て
を編集可能にし，オプションでそれらに前置される値と，おそらく現在の
`umask'にも基づきます(*note Umask and Protection::)．

   抽象的なモードの書式は以下の通りです．

     [ugoa...][[+-=][rwxXstugo...]...][,...]

   以下のセクションで，抽象的なモードのその他の詳細の処理を記述します．

* Menu:

* Setting Permissions::          Basic operations on permissions.
* Copying Permissions::          Copying existing permissions.
* Changing Special Permissions:: Special permissions.
* Conditional Executability::    Conditionally affecting executability.
* Multiple Changes::             Making multiple changes.
* Umask and Protection::              The effect of the umask.


File: fileutils-ja.info,  Node: Setting Permissions,  Next: Copying Permissions,  Up: Symbolic Modes

3.2.1 許可の設定
----------------

ファイルの許可での基本的な抽象的処理で，特定ユーザのファイルの読み込み，
書き込み，実行の許可を，加えたり，削除したり，設定します．これらの処理は
以下の書式です．

     USERS OPERATION PERMISSIONS

上記の3つの部分の間のスペースは，可読性のみのために表示しています．抽象
的なモードではスペースを含めることはできません．

   USERS部は，ファイルアクセスを変更されるユーザを伝えます．それは以
下の，一つ以上の文字から成り立ちます(または，空にすることもできます．そ
のとき生じることは，*note Umask and Protection::)．これらの文字の一つ以
上が与えられたとき，その順番は重要ではありません．

`u'
     ファイルを所有しているユーザ．

`g'
     ファイルのグループのその他のユーザ．

`o'
     その他全部のユーザ．

`a'
     全てのユーザで，`ugo'と同じです．

   OPERATION部は，ファイルにアクセスするユーザの効果を変更する方法を
伝え，以下のシンボルの一つになります．

`+'
     USERSが既に持つ，そのファイルに対するあらゆる許可に，
     PERMISSIONSを加えます．

`-'
     USERSが既に持つ，そのファイルに対するあらゆる許可から，
     PERMISSIONSを削除します．

`='
     USERSが持つ，そのファイルに対する許可を，PERMISSIONSのみにし ます．

   PERMISSIONS部は，ファイルが変更されるアクセスの種類を伝えます．ゼ
ロ以上の文字になります．USERS部を用いた場合，1文字以上与えられたと
きは，その順序は重要ではありません．PERMISSIONS部の省略は，
`='の時のみ役に立ち，それは指定されたUSERSにそのファイルに対
する全てのアクセス権を取り除きます．

`r'
     USERSがファイルを読み込むのに必要な許可です．

`w'
     USERSがファイルに書き込むのに必要な許可です．

`x'
     USERSがファイルを実行するのに必要な許可です．

例えば，全員にファイルの読み込みと書き込みの許可を与え，実行を与えないた
めに，以下を使用してください．

     a=rw

ファイルの所有者以外の全てのユーザから書き込み許可を削除するため，以下を
使用してください．

     go-w

上記のコマンドは，ファイルの所有者のアクセス権に効果が無く，その他のユー
ザが，ファイルの読み込みと実行が可能かどうかにも効果がありません．

ファイルの所有者以外全員に，そのファイルに対しあらゆる許可を与えないため
に，以下のモードを使用してください．他のユーザは，ファイルがあるディレク
トリに書き込み許可がある場合，ファイルを削除可能です．

     go=

同じことを指定するもう1つの方法です．

     og-rxw


File: fileutils-ja.info,  Node: Copying Permissions,  Next: Changing Special Permissions,  Prev: Setting Permissions,  Up: Symbolic Modes

3.2.2 既存の許可をコピー
------------------------

ファイルの許可を，既存の許可を基準にすることができます．こうするために，
オペレータの後に`r'，`w'や`x'を使用する代わりに，文字
`u'，`g'や`o'を使用します．例えば以下のモードです．
     o+g
それは，ファイルのグループにいるユーザに対する許可を，その他のユーザがそ
のファイルに対して持っている許可に加えます．このため，ファイルが最初にモー
ド664 (`rw-rw-r--')の場合，上記のモードは，それを666
(`rw-rw-rw-')に変更します．ファイルが最初にモード741
(`rwxr----x')の場合，上記のモードは，それを745 (`rwxr--r-x')に
変更します．`-'と`='の処理は同様に働きます．


File: fileutils-ja.info,  Node: Changing Special Permissions,  Next: Conditional Executability,  Prev: Copying Permissions,  Up: Symbolic Modes

3.2.3 特別な許可を変更
----------------------

ファイルの読み込み，書き込み，そして実行の許可の変更に加えて，特別な許可
を変更できます．許可の概要は，*Note Mode Structure::.

   実行時にファイルの許可をユーザIDに設定するため，象徴的なモードの
USERS部での`u'と，PERMISSIONS部での`s'を使用してく ださい．

   実行時にファイルの許可をグループIDに設定するため，象徴的なモードの
USERS部での`g'とPERMISSIONS部での`s'を使用してくだ さい．

スワップデバイスに永久に残すファイルの許可を変更するため，象徴的なモード
のUSERS部での`o'とPERMISSIONS部での`t'を使用してく ださい．

例えば，ユーザID許可をプログラムに加えるため，以下のモードを使用可能です．

     u+s

ユーザIDのとグループIDの許可の設定をそれから削除するため，以下のモードを
使用可能です．

     ug-s

プログラムがスワップデバイスに保存されるようにするため，以下のモードを使
用可能です．

     o+t

特別な許可は実行形式のファイルと，いくつかのシステムのディレクトリ(そこ
では異なる意味を持ちます．*note Mode
Structure::)のみに効果があることを，
覚えておいてください．また，`u+t'，`g+t'，そして`o+s'の様
な組合わせには効果はありません．

   `='オペレータは，特別な許可に用いる場合，全く役に立ちません．例えば，
モードを以下のようにします．

     o=t

これは，ファイルをスワップデバイスに保存するようにしますが，それは，ファ
イルのグループにいないユーザが持っている可能性のある，全ての，読み込み，
書き込み，そして実行の許可を削除します．


File: fileutils-ja.info,  Node: Conditional Executability,  Next: Multiple Changes,  Prev: Changing Special Permissions,  Up: Symbolic Modes

3.2.4 実行可能の条件
--------------------

象徴的な許可の特別な形式がもう1つあります．`x'の代わりに`X'を
用いた場合，実行許可は，既に実行形式があるファイル，またはディレクトリの
みに効果があります．それは，ディレクトリが最初にあらゆる実行許可を持って
いない場合でも，ディレクトリの実行許可に効果があります．

   例えば，このようなモードにします．

     a+X

これは，全てのユーザに，それまでに持っていなかった，ファイルの実行(やディ
レクトリの検索)の許可を与えます．


File: fileutils-ja.info,  Node: Multiple Changes,  Next: Umask and Protection,  Prev: Conditional Executability,  Up: Symbolic Modes

3.2.5 複数の変更
----------------

象徴的なモードの書式は，実際に上記で記述したより複雑です(*note Setting
Permissions::)．それは，ファイルの許可を複数変更する2つの方法を提供します．

   最初の方法は，象徴的なモードで，複数のOPERATION部と
PERMISSIONS部をUSERS部の後で指定する方法です．

   例えば，以下のようなモードにします．

     og+rX-w

これは，ファイルの所有者以外のユーザに，ファイルの読み込み許可を与え，そ
れがディレクトリの場合や，既に誰かに実行形式の許可がある場合，実行許可を
与えます．そして，それはファイルの書き込み許可を禁止します．それはファイ
ルの所有者が持つ許可に影響しません．上記のモードは以下の2つのモードと同
じです．

     og+rX
     og-w

複数の変更をするための2番目の方法は，カンマで分けられた，単純な象徴的な
モードを1つの以上の指定することです．例えば，以下のようなモードにします．

     a+r,go-w

これは，全員にファイルの読み込み許可を与え，所有者以外全員の書き込み許可
を削除します．もう1つの例です．

     u=rwx,g=rx,o=

これは，ファイルに明示的に特別でない許可の全てを設定します．(それはファ
イルのグループではないユーザに，許可を全く与えません．)

   2つの方法は組み合わせ可能です．以下のモードになります．

     a+r,g+x-w

これは，全てのユーザに，ファイルの読み込み許可を与え，ファイルのグループ
にいるユーザに実行許可も与えますが，書き込み許可は与えません．上記のモー
ドは異なる方法で書くこともできます．その1つは以下になります．

     u+r,g+rx,o+r,g-w


File: fileutils-ja.info,  Node: Umask and Protection,  Prev: Multiple Changes,  Up: Symbolic Modes

3.2.6 umaskと保護
-----------------

象徴的なモードのUSERS部が省略された場合，システム変数`umask'
で_無効に__設定されている_あらゆる許可以外，デフォルトは
`a'になります(全てのユーザに影響します)．`umask'の値は
`umask'コマンドを使用して設定できます．そのデフォルト値は，システム
毎に異なります．

   象徴的なモードのUSERS部の省略は，`+'以外のオペレーションでは
一般に役に立ちません．希望しないファイルに対する余分な許可を与えることに
対して，簡単にカスタマイズ可能な保護として`umask'が使用可能になるの
で，それは`+'とともに用いると役に立ちます．

   例として，`umask'の値が2の場合，それはファイルのグループ以外のユー
ザに対し書き込み許可を削除します．以下のモードを考えます．

     +w

これは，その所有者とファイルのグループのユーザに対する書き込み許可を加え
ますが，それ以外のユーザには与え_ません_．対照的に，以下のモードを
考えます．

     a+w

これは`umask'を無視し，全てのユーザに対し，書き込み許可を与える
_のです_．


File: fileutils-ja.info,  Node: Numeric Modes,  Prev: Symbolic Modes,  Up: File permissions

3.3 数値的なモード
==================

ファイルの許可は，内部では整数で保存されます．象徴的なモードの代わりとし
て，新しいモードの内部に対応した適切な8進数(基数8)で与えることができます．
この数は常に8進数で処理されます．Cで行うような，前置される0は不要です．
モード0055はモード55と同じです．

数値的なモードは，通常対応する象徴的なモードより短くなりますが，ファイル
の前の許可を考慮にいれることに制限されます．それは絶対的に設定が可能なだ
けです．

ほとんどのシステム上では，ユーザ，ファイルのグループのその他のユーザ，そ
してファイルのグループではないその他のユーザに応じた許可は，それぞれ3つ
のビットになり，それは1つの8進数として表現されます．ここにビットを整える
方法があり，それは最下位ビットからはじめます．

     対応する値
     モード    許可

               ファイルのグループにいないその他のユーザ：
        1      実行
        2      書き込み
        4      読み込み

               ファイルのグループのその他のユーザ：
       10      実行
       20      書き込み
       40      読み込み

               ファイルの所有者：
      100      実行
      200      書き込み
      400      読み込み

               特別な許可：
     1000      テキストイメージをスワップデバイスに保存
     2000      実行時のグループIDを設定
     4000      実行時のユーザIDを設定

   例えば，数値的なモードの4755は，象徴的なモードの`u=rwxs,go=rx'に，
数値的なモードの664は，象徴的なモードの`ug=rw,o=r'に対応します．数
値的なモードの0は，象徴的なモードの`ugo='に対応します．


File: fileutils-ja.info,  Node: Date input formats,  Next: Directory listing,  Prev: File permissions,  Up: Top

4 日付入力の書式
****************

最初の引用：

     我々の時間を計る単位は，秒から月まであり，かなり複雑で，非対称で，連結で
     きないので，徹頭徹尾，頭の計算で間に合わせることは，ほとんど不可能です．
     本当に，非道な神が我々を時間の奴隷にし，ぼんやりした繰り返し仕事と不快な
     驚きへの従属から，我々が逃げることをほとんど不可能にしようと企てたので，
     彼は我々の現在のシステムを伝える以上のことを行うことができませんでした．
     それは，台形の建築用ブロックの集合に似ていて，垂直や水平の表面が無く，最
     も単純な考えで，建造物を飾り立てることを要求された言語に似ていて，役に立
     たない微粒子と長い遠回しな表現です．我々がはっきりとした，または，少なく
     とも頭打ちな経験に直面することを可能にした，より成功した言語と科学ののパ
     ターンと異なり，我々の時間を計るシステムは，静かにそして繰り返し，時間の
     恐怖を呼び起こします．

     ... それは，建築家がフィートで長さを，メートルで幅を，そしてellで高
     さを計る必要があるかのようなものです．基本的な指示用のマニュアルで，五つ
     の異なる言語の知識を必要とするかのようなものです．我々が，どうにもならな
     い混乱した気分で，この間の火曜日や日曜日からの一週間といった，短い過去あ
     るいは近い将来を調査することがよくあるのは，不思議ではありません．
     ... (1)

     -- Robert Grudin, `Time and the Art of Living'.

   このセクションでは，GNUプログラムが受け入れる，文章上での日付の表現
を記述します．これらは，様々なプログラムの引数としてユーザが供給可能な文
字列です．(`getdate'関数による)Cのインターフェースはここでは述べま
せん．

ここでの日付の構文は，0年から表現することは可能ですが，コンピュータの整
数は，そのような長い範囲を表現することができないことがよくあります．
POSIXシステム上では，時刻は1970-01-01 00:00:00 UTCから始まりま
す．POSIXは，POSIX エポック時間より前と，遠い将来の時間のサポー
トを要求しません．伝統的なUnixシステムは，32ビットの符号付き
`time_t'があり，1901-12-13 20:45:52から2038-01-19 03:14:07 UTC
まで表現可能です．64ビットの符号付き`time_t'を用いたシステムでは，
知られている宇宙の一生の全ての時間を表現可能です．

* Menu:

* General date syntax::            Common rules.
* Calendar date items::            19 Dec 1994.
* Time of day items::              9:20pm.
* Time zone items::                EST, PDT, GMT, ...
* Day of week items::              Monday and others.
* Relative items in date strings:: next tuesday, 2 years ago.
* Pure numbers in date strings::   19931219, 1440.
* Authors of getdate::             Bellovin, Eggert, Salz, Berets, et al.

   ---------- Footnotes ----------

   (1) この引用の訳は，訳者本人が理解できていません．


File: fileutils-ja.info,  Node: General date syntax,  Next: Calendar date items,  Up: Date input formats

4.1 一般的な日付の構文
======================

"日付"は，空白で分けられた多くの項目を含む，空も可能な文字列です．曖
昧にならないとき，空白は省略できます．空の文字列は今日の始まり(すなわち
真夜中)を意味します．項目の順序は重要ではありません．日付の文字列は，項
目の多くの特色を含むことができます．

   * カレンダーの日付項目

   * その日の時間の項目

   * タイムゾーンの項目

   * 曜日の項目

   * 相対的な項目

   * 純粋な数字

我々は，これらの項目形式のそれぞれを，以下で順番に記述します．

いくつかの数字は，ほとんどの文脈で単語で書き出すことができます．これは曜
日の項目や相対的な項目を指定するとき，最も役に立ちます(以下を参照してく
ださい)．ここにリストがあります．1に対する`first'，2に対する
`next'，3に対する`third'，4に対する`fourth'，5に対する
`fifth'，6に対する`sixth'，7に対する`seventh'，8に対する
`eighth'，9に対する`ninth'，10に対する`tenth'，11に対する
`eleventh'，そして12に対する`twelfth'です．また`last'は，
正確に-1を意味します．

月をこの方法で書くとき，"完全な綴り"の代わりに，それは数字で書かれてい
ると考えられます．これは文字に変更することもできます．

   現在の実装では，`AM'，`DST'，`EST'，`first'，
`January'，`Sunday'，`tomorrow'，そして`year'のよう
な，単語と省略は英語のみサポートされています．

   `date'の出力は，言語の問題だけでなく，`IST'のようなタイムゾー
ン項目に対する標準的な意味がないため，日付文字列として常に受け入れ可能で
はありません．後でパースする目的で日付文字列を生成するために
`date'を使用するとき，言語に独立して，`UTC'と`Z'以外の
タイムゾーン項目を使用しない日付の書式を指定してください．こうするための
方法が，ここにいくつかあります．

     $ LC_ALL=C TZ=UTC0 date
     Fri Dec 15 19:48:05 UTC 2000
     $ TZ=UTC0 date +"%Y-%m-%d %H:%M:%SZ"
     2000-12-15 19:48:05Z
     $ date --iso-8601=seconds  # a GNU extension
     2000-12-15T11:48:05-0800
     $ date --rfc-822  # a GNU extension
     Fri, 15 Dec 2000 11:48:05 -0800
     $ date +"%Y-%m-%d %H:%M:%S %z"  # %z is a GNU extension.
     2000-12-15 11:48:05 -0800

英文字の大文字小文字は，日付では完全に無視されます．コメントは，適切に入
れ子状になった丸カッコに含まれる限り，丸カッコの間で導入可能です．数字に
続かないハイフンは，現在無視されます．数字の前に前置されるゼロは無視され
ます．


File: fileutils-ja.info,  Node: Calendar date items,  Next: Time of day items,  Prev: General date syntax,  Up: Date input formats

4.2 カレンダーの日付の項目
==========================

"カレンダーの日付の項目"は年の日付を指定します．それは，月が数字で指
定されるか，文字で指定されるかによって異なりますこれら全ての文字列は，同
じカレンダーの日付を指定します．

     1972-09-24     # ISO 8601．
     72-9-24        # 69から99では19xx
                    # 68から00では20xxと仮定します．
     72-09-24       # 前置されるゼロは無視されます．
     9/24/72        # U.S.の一般的な表記です．
     24 September 1972
     24 Sept 72     # Septemberの省略指定です．
     24 Sep 72      # 三文字の省略は常に利用可能です．
     Sep 24, 1972
     24-sep-72
     24sep72

年も省略できます．この場合，最後に指定された年，または，無ければ現在の年
が利用されます．例えば，以下のようになります．

     9/24
     sep 24

   ここに規則があります．

   数字の月に対し，ISO 8601書式`YEAR-MONTH-DAY'
が可能で，YEARは正の数，MONTHは01と12の間の数，そして
DAYは01と31の間の数です．数字が10未満の場合，前置されるゼロが存在
する必要があります．YEARが68以下の場合，2000が加えられます．それ以
外の場合で，YEARが100未満の場合，1900が加えられます．合州国でよく
使用される`MONTH/DAY/YEAR'の構成も受け入れられま
す．同様に，年を削除すると`MONTH/DAY'です．

   文字の月は完全に綴ることもできます．`January'，`February'，
`March'，`April'，`May'，`June'，`July'，
`August'，`September'，`October'，`November'，または，
`December'です．文字の月は最初の三文字で省略でき，省略のドットの後
置も可能です．`September'の代わりに`Sept'と書くことも許可され ています．

月が文字で書かれるとき，カレンダーの日付は以下のようにして与えられます．

     DAY MONTH YEAR
     DAY MONTH
     MONTH DAY YEAR
     DAY-MONTH-YEAR

   または，年を省略します．

     MONTH DAY


File: fileutils-ja.info,  Node: Time of day items,  Next: Time zone items,  Prev: Calendar date items,  Up: Date input formats

4.3 日付の時間の項目
====================

日付文字列での"日付の時間の項目"は，与えられた日付の時間を指定します．
ここにいくつか例があり，全て同じ時間を表現しています．

     20:02:0
     20:02
     8:02pm
     20:02-0500      # EST (合州国東部標準時)

   より一般的に，日付の時間は，`HOUR:MINUTE:SECOND'
として与えることができ，HOURは0と23の間の数字，MINUTEは0と59
の間の数字，そしてSECONDは0と59の間の数字です．代わりに，
`:SECOND'は省略でき，その場合，それは0です．

   時間に`am'や`pm'(または，`a.m.'や`p.m.')が続く場合，
HOURは1から12までの実行に限定され，`:MINUTE'は省略でき
ます(ゼロとされます)．`am'は午前を示し，`pm'は午後を示します．
この注釈で，12は1の前になります．真夜中は`12am'で，一方正午は
`12pm'です．(これは，`12m'を正午，`12pm'を真夜中として使
用する，ラテン語に由来する古い伝統の反対となる，`12am'と`12pm'
のゼロを起点にした解釈です．)

   時刻は，代わりにタイムゾーン修正を続けることができ，それは
`SHHMM'として表現され，Sは`+'または
`-'，HHは時間の数字，そしてMMは地域の分の数字になります．
タイムゾーン修正がこのように与えられるとき，それは，世界標準時(UTC)
に関連する時間として解釈され，タイムゾーンや地域的タイムゾーンに対する，
あらゆる前置される指定に優先します．日付の時間のMINUTEの部分は，タ
イムゾーン修正が使用されるとき省略できません．これは，時間の分数部分でタ
イムゾーン修正を指定する唯一の方法です．

   `am'/`pm'やタイムゾーン修正は，どちらか一方のみ指定でき，両方
はできません．


File: fileutils-ja.info,  Node: Time zone items,  Next: Day of week items,  Prev: Time of day items,  Up: Date input formats

4.4 タイムゾーンの項目
======================

"タイムゾーンの項目"は，国際的なタイムゾーンを指定し，例えば世界標準
時に対する`UTC'や`Z'のような小さな文字集合で示されます．含まれ
るピリオドは全て無視されます．別々の(すなわち，いくつかの空白で区切られ
ている)単語内の文字列`DST'が夏時間でないタイムゾーンに続くことで，
対応する夏時間のタイムゾーンが指定可能です．

   `UTC'と`Z'以外のタイムゾーンの項目は時代遅れで，曖昧なので推奨
されません．例えば，`EST'はオーストラリアと合州国では異なる意味を持
ちます．代わりに，前のセクションで記述されている，`-0500'のような曖
昧でない数字のタイムゾーンコレクションを使用した方が良いでしょう．


File: fileutils-ja.info,  Node: Day of week items,  Next: Relative items in date strings,  Prev: Time zone items,  Up: Date input formats

4.5 曜日の項目
==============

曜日の明示的な記述は，将来，曜日に到達するよう，(必要なら)日付に前置され
ます．

   曜日は，完全に綴ることができます．`Sunday'，`Monday'，
`Tuesday'，`Wednesday'，`Thursday'，`Friday'，または，
`Saturday'です．曜日は，最初の三文字で省略でき，追加のピリオドを続
けることができます．特別な省略として，`Tuesday'に対する`Tues'，
`Wednesday'に対する`Wednes'，そして，`Thursday'に対する
`Thur'や`Thurs'も許可されます．

前置された追加分の週を移動するため，数字を曜日項目に前置することができま
す．それは，`third monday'のような表現が最も良い使用法です．この文
脈では，`last DAY'や`next DAY'も受け入れられます．
それらはDAYで表現されている日付の1週間前，または後になります．

   曜日に続くカンマは無視されます．


File: fileutils-ja.info,  Node: Relative items in date strings,  Next: Pure numbers in date strings,  Prev: Day of week items,  Up: Date input formats

4.6 日付文字の相対的な項目
==========================

`相対的な項目'は，日付(それが無い場合は現在の日付)を前後に調整しま
す．相対的な項目の効果は蓄積されます．ここにいくつか例があります．

     1 year
     1 year ago
     3 years
     2 days

   時間の置換の単位は，年や月全体を移動するため，文字列`year'や
`month'が選択できます．年や月は全てが同じ期間ではないので，これらは
曖昧な単位です．より正確な単位は，14日と等価な`fortnight'，7日と等
価な`week'，24時間と等価な`day'，60分と等価な`hour'，60秒
と等価な`minute'や`min'，そして1秒と等価な`second'や
`sec'です．これらの単位の`s'接尾子は受け入れられ，無視されます．

時間の単位は乗数を前置でき，それは追加の符号付きの数字で与えられます．符
号無しの数字は，正の符号として扱われます．全く数字が無いものは，乗数とし
て1が暗示されます．文字列`ago'が続く相対的な項目は，値-1の乗
数が前置された単位と等価です．

   文字列`tomorrow'は，未来の1日と等価で(`day'と等価)，文字列
`yesterday'は，過去の1日と等価です(`day ago'と等価)．

   文字列`now'や`today'は，ゼロ値の時間を置換する相対的な項目で，
これらの文字列は，ゼロ値の時間を置換することは，前の項目で変化されていな
いときの現在時間を表現するという事実に由来します．それらは`12:00
today'のように，他の項目を強調するために使用できます．文字列`this'
もゼロ値の時間を置換する意味を持ちますが，`this thursday'のような日
付文字列で好まれます．

相対的な項目が，調整された時刻を跨るために結果として日付が生成されるとき，
特に夏時間では，結果として生じる日付と時間は，それに応じて調整されます．


File: fileutils-ja.info,  Node: Pure numbers in date strings,  Next: Authors of getdate,  Prev: Relative items in date strings,  Up: Date input formats

4.7 日付文字列の純粋な数字
==========================

純粋な10進数の正確な解釈は，日付文字列の文脈に依存します．

   10進数が，形式YYYYMMDDで，他のカレンダーの日付項目 (*note Calendar
date items::)が，その日付項目の前に現われない場合，
YYYYは年，MMは月の数字，そしてDDは月の日付として，指定
されたカレンダーの日付として読み込まれます．

   10進数が形式HHMMで，他の日付の時間の項目がその日付文字列の前
に現われない場合，HHは日付の時間，そしてMMは時間の分として，
指定された日付の時間として読み込まれます．MMは省略もできます．

カレンダーの日付と日付の時間が，両方とも日付文字列の数字の左に現われ，そ
して相対的な項目が無い場合，数字は年に優先します．


File: fileutils-ja.info,  Node: Authors of getdate,  Prev: Pure numbers in date strings,  Up: Date input formats

4.8 `getdate'の著者
===================

`getdate'は元々，Chapel HillのNorth Carolina大学にいるときに， Steven
M. Bellovin (<smb@research.att.com>)によって実装されました．
コードはその後Usenetの2人に捻りを加えられ，Rich $alz
(<rsalz@bbn.com>)とJim Berets (<jberets@bbn.com>)が，1990
年8月に完全に点検しました．GNUシステムに対する様々な修正は，David
MacKenzie，Jim Meyering他によってなされました．

   この章は元々，Franc,ois Pinard (<pinard@iro.umontreal.ca>)が
`getdate.y'ソースコードから生成し，K. Berry
(<kb@cs.umb.edu>)が編集しました．


File: fileutils-ja.info,  Node: Directory listing,  Next: Basic operations,  Prev: Date input formats,  Up: Top

5 ディレクトリのリストアップ
****************************

この章では，`ls'コマンドとその変形の`dir'と`vdir'を記述し，
それはファイルに関する情報をリストアップします．

* Menu:

* ls invocation::               List directory contents.
* dir invocation::              Briefly ls.
* vdir invocation::             Verbosely ls.
* dircolors invocation::        Color setup for ls, etc.


File: fileutils-ja.info,  Node: ls invocation,  Next: dir invocation,  Up: Directory listing

5.1 `ls': ディレクトリの内容をリストアップ
==========================================

`ls'プログラムは，ファイル(の形式で，ディレクトリを含む)に関する情
報をリストアップします．オプションとファイル引数は，通常のものと同様，任
意に混ぜることができます．

   オプションの無いコマンドラインのディレクトリ引数に対し，`ls'はデフォ
ルトで，ディレクトリの内容をリストアップし，それは再帰的ではなく，
`.'で始まる名前を持つファイルは除きます．他のオプションの無い引数に
対し，`ls'はデフォルトで，そのファイル名のみをリストアップします．
オプションではない引数が指定されない場合，`ls'は現在のディレクトリ
の内容をリストアップします．

デフォルトで，出力はアルファベット順に出力されます．標準出力が端末の場合，
出力は(垂直方向にソートされた)列になり，制御文字は疑問符として出力されま
す．それ以外の場合，出力は1行毎にリストアップされ，制御文字は同様になり
ます．

   `ls'はこのような基本的なプログラムなので，それは数年かけて多くのオ
プションを蓄積してきました．それらは以下のサブセクションで記述します．そ
れぞれのセクションで，オプションはアルファベット順に(大文字小文字を無視
して)リストアップされています．オプションをサブセクションに分けることは
絶対ではなく，それは，1つ以上の`ls'の処理の局面で影響するためです．

   `-g'オプションは受け入れられますが無視され，それはUnixの移植性のた
めです．*Note Common options::,も参照してください．

* Menu:

* Which files are listed::
* What information is listed::
* Sorting the output::
* More details about version sort::
* General output formatting::
* Formatting the file names::


File: fileutils-ja.info,  Node: Which files are listed,  Next: What information is listed,  Up: ls invocation

5.1.1 リストアップされるファイル
--------------------------------

これらのオプションは，`ls'がリストアップするファイルの情報を決定し
ます．デフォルトで，コマンドラインのあらゆるファイルとディレクトリの内容
が表示されます．

`-a'
`--all'
     `.'で始まるファイルを含め，ディレクトリの全てのファイルをリストアッ
     プします．

`-A'
`--almost-all'
     `.'と`..'以外の，ディレクトリの全てのファイルをリストアップし
     ます．

`-B'
`--ignore-backups'
     コマンドラインで与えられない限り，`~'で終るファイルをリストアップし
     ません．

`-d'
`--directory'
     ディレクトリの名前のみリストアップし，それはファイルの他の形式と同様で，
     その内容をリストアップしません．

`-I PATTERN'
`--ignore=PATTERN'
     それらがコマンドラインで与えられていない限り，シェルパターン(正規表現で
     はありません)PATTERNに一致する名前のファイルをリストアップしません．
     シェルと同様に，ファイル名の最初の`.'は，PATTERNの最初のワイ
     ルドカードに一致しません．このオプションを複数回与えると便利なときもあり
     ます．例えば，以下のようにします．

          $ ls --ignore='.??*' --ignore='.[^.]' --ignore='#*'

     最初のオプションは，`.'で始まる長さが3文字以上の名前を無視し，2番目
     は`..'以外の`.'で始まる全ての2文字の名前を無視し，3番目は
     `#'で始まる名前を無視します．

`-L'
`--dereference'
     長いリストで，シンボリックリンク自身ではなくシンボリックリンクの参照のファ
     イル情報(例えば，時間や許可)を表示します．

`-R'
`--recursive'
     全てのディレクトリの内容を，再帰的にリストアップします．



File: fileutils-ja.info,  Node: What information is listed,  Next: Sorting the output,  Prev: Which files are listed,  Up: ls invocation

5.1.2 リストアップされる情報
----------------------------

これらのオプションは，`ls'が表示する情報に影響します．デフォルトで，
ファイル名のみ表示されます．

`-D'
`--dired'
     長いリスト(`-l')の書式を用いた場合，主な出力の後に追加して以下を出
     力します．

          //DIRED// BEG1 END1 BEG2 END2 ...

     BEGNとENDNは，出力のそれぞれのファイル名の始めと終りのバイト
     位置を記録する符号無し整数です．これで，たとえスペースや改行といった通常
     用いない文字を含むときも，異常な検索をすること無く，Emacsは簡単に名前を
     見つけるようになります．

     ディレクトリが再帰的(`-R')にリストアップされる場合，出力はそれぞれ
     のサブディレクトリの後に，良く似た行を出力します．
          //SUBDIRED// FORMAT BEG1 END1 ...

     最終的に以下の形式の行を出力します．
          //DIRED-OPTIONS// --quoting-style=WORD
     WORDは引用形式です(*note Formatting the file names::)．

`-G'
`--no-group'
     長い書式のディレクトリのリスト表示で，グループ情報の表示を禁止します．
     (これはGNUではないバージョンの`ls'ではデフォルトで，我々は互換
     性のためにこのオプションを提供します．)

`-h'
`--human-readable'
     それぞれの大きさに，メガバイトに対する`M'のようなサイズ文字を追加し
     ます．1000倍ではなく1024倍が使用されます．`M'は1,048,576バイトを意
     味します．1000倍を望む場合，`--si'オプションを使用してください．

`-H'
`--si'
     それぞれの大きさに，メガバイトに対する`M'のようなサイズ文字を追加し
     ます．(SIは国際単位系で，それはこれらの文字を接頭辞として定義しています．
     1024倍ではなく1000倍が使用されます．`M'は1,000,000バイトを意味しま
     す．1024倍を望む場合，`-h'または`--human-readable'オプションを
     使用してください．

     警告：`-H'の意味は，将来POSIXに従い変更されます．古い意味に
     対しては`--si'を使用してください．

`-i'
`--inode'
     それぞれのファイルのinode番号(ファイルシリアル番号とインデックス番号と
     も呼ばれています)を，ファイル名の左に出力します．(この番号は，特定のファ
     イルシステム内の，それぞれのファイルを単一のものとして識別します．)

`-l'
`--format=long'
`--format=verbose'
     それぞれのファイル名に加えて，ファイル形式，許可，ハードリンク数，所有者
     名，バイトのサイズ，そしてタイムスタンプ(デフォルトで編集した時間)を出力
     します．6ヵ月以上前の時間や，未来のファイルについては，タイムスタンプは
     日付の時間の代わりに年を含みます．タイムスタンプが日付ではなく，年と今日
     の日付を含む場合，ファイルの時間は未来で，それはおそらく，ファイルの時間
     に依存する`make'のようなプログラムを破壊する可能性のある，時刻の
     ずれの問題があることを意味します．

     リストアップされたそれぞれのディレクトリに対し，`total
     BLOCKS'という行をファイルに前置し，そこでのBLOCKSは，そのディ
     レクトリの全てのファイルが占めるディスク全体です．ブロックサイズは，現在
     デフォルトで1024バイトですが，これに優先可能です(*note Block
     size::)．
     BLOCKSは，それぞれのハードリンクを別々に数えて計算します．これはお
     そらく欠陥です．

     リストアップされる許可は，象徴的なモードでの指定に似ています
     (*note Symbolic Modes::)．しかし，`ls'は，それぞれの許可の設定を複
     数のビットを3番目の文字に組み合わせ，以下のようにします．
    `s'
          setuidやsetgidビットと対応する実行可能ビットが，両方設定されている場合．

    `S'
          setuidやsetgidビットは設定されているが，対応する実行可能ビットが設定され
          ていない場合．

    `t'
          stickyビットとotherの実行可能ビットが両方設定されている場合．

    `T'
          stickyビットは設定されているが，otherの実行可能ビットが設定されていない
          場合．

    `x'
          実行可能ビットが設定されていて，上記は何も適応されない場合．

    `-'
          それ以外．

     許可ビットに続くものは，ファイルに適用するアクセス手法の変更を指定する単
     一の文字です．文字がスペースのとき，アクセス手法の変更はありません．印刷
     可能な文字(例えば`+')のとき，そのような手法があります．

`-o'
     長いディレクトリのリストの書式を生成しますが，グループ情報は表示しません．
     それは，`--no-group'を用いた`--format=long'の使用と同じです．
     このオプションは，`ls'の他のバージョンとの互換性のために供給されて
     います．

`-s'
`--size'
     ファイル名の左側に，それぞれのファイルのディスク占有量を出力します．これ
     は，ファイルが使用しているディスクスペースの総量で，それは通常ファイルサ
     イズよりわずかに多くなりますが，ファイルに欠陥がある場合は，より小さくな
     るはずです．

     通常ディスクの占有量は1024バイト単位で出力されますが，これに優先すること
     は可能です(*note Block size::)．

     HP-UXシステムからBSDシステムに，NFSでマウントされているファイルに対し，
     このオプションは，正しい値の半分のサイズを報告します．HP-UXシステムでは，
     BSDシステムからNFSでマウントされているファイルに対し，正しい値の2倍のサ
     イズを報告します．これは，HP-UXの欠点のためです．それはHP-UXの`ls'
     プログラムにも影響します．



File: fileutils-ja.info,  Node: Sorting the output,  Next: More details about version sort,  Prev: What information is listed,  Up: ls invocation

5.1.3 出力の並べ替え
--------------------

これらのオプションは，`ls'が並べ替える出力の情報の順序を変更します．
デフォルトで，並べ替えは文字コードによって行われます(例えば，ASCIIの順番
です)．

`-c'
`--time=ctime'
`--time=status'
`--time=use'
     長いリスト書式(例えば，`-l'，`-o')が使用されている場合，編集時
     間の代わりにステータス変更時間(inodeの`ctime')が出力されます．時間
     (`--sort=time'または`-t')で明示的に並べ替えをしたり，長いリス
     トの書式を使用しないとき，ステータスの変更時間によって並べ替えます．

`-f'
     主に，`-U'に似ています--並べ替えしません．ディレクトリに保存されて
     いるファイルの順番に，それらをリストアップします．しかし，`-a'(すべ
     てのファイルをリストアップ)も利用可能で，(前に`-f'が指定されている
     場合)`-l'，`--color'，そして`-s'は利用不可能です．

`-r'
`--reverse'
     並べ替えのあらゆる手法を反転します--例えば，アルファベットの逆順，新し
     いものを最初，小さいものを最初，またはすべて逆順にリストアップします．

`-S'
`--sort=size'
     ファイルサイズで，大きいものを最初にして並べ替えます．

`-t'
`--sort=time'
     編集時間(inodeの`mtime')で，新しいものを最初にして並べ替えます．

`-u'
`--time=atime'
`--time=access'
     長いリスト書式(例えば，`--format=long')が使用されている場合，最後に
     アクセスした時間(inodeの`atime')が出力されます．時間
     (`--sort=time'または`-t')で明示的に並べ替えをしたり，長いリス
     トの書式を使用しないとき，アクセスした時間によって並べ替えます．

`-U'
`--sort=none'
     並べ替えしません．ディレクトリに保存されている順番にファイルをリストアッ
     プします．(`-f'が行う，他と関連することは何もしません．) 並べ替えを
     行わないことで，目立って速くすることが可能なので，非常に大きなディレクト
     リをリストアップするとき，これは特に便利です．

`-v'
`--sort=version'
     バージョン名と数字で，小さいものを最初にして並べ替えます．それはデフォル
     トの並べ替えに似ている動作で，それぞれの10進数の並びが，索引/バージョン
     番号として数値的に扱われることが期待されます．(*Note More details
     about version sort::.)

`-X'
`--sort=extension'
     ディレクトリの内容を，ファイルの拡張子(最後の`.'の後の文字)で，アル
     ファベット順に並べ替えます．ファイルの拡張子がないものが最初になります．


File: fileutils-ja.info,  Node: More details about version sort,  Next: General output formatting,  Prev: Sorting the output,  Up: ls invocation

5.1.4 バージョンの並べ替えの詳細
--------------------------------

バージョンの並べ替えは，ファイル名が索引やバージョン番号を含むことが多い
という事実を考慮にいれています．標準的な並べ替え機能は，1文字づつを基本
に比較するため，通常，人々が期待する順序を生成しません．バージョンの並べ
替えは，この問題を提出し，その名前に索引/バージョン番号を伴うファイルを
多く含むディレクトリを眺めるとき特に役に立ちます．

           > ls -1            > ls -1v
           foo.zml-1.gz       foo.zml-1.gz
           foo.zml-100.gz     foo.zml-2.gz
           foo.zml-12.gz      foo.zml-6.gz
           foo.zml-13.gz      foo.zml-12.gz
           foo.zml-2.gz       foo.zml-13.gz
           foo.zml-25.gz      foo.zml-25.gz
           foo.zml-6.gz       foo.zml-100.gz

数字の部分にゼロが前置されていても，分数として考慮されることに注意して下
さい．

           > ls -1            > ls -1v
           abc-1.007.tgz      abc-1.007.tgz
           abc-1.012b.tgz     abc-1.01a.tgz
           abc-1.01a.tgz      abc-1.012b.tgz


File: fileutils-ja.info,  Node: General output formatting,  Next: Formatting the file names,  Prev: More details about version sort,  Up: ls invocation

5.1.5 一般的な出力書式
----------------------

これらのオプションは，出力の外観に影響します．

`-1'
`--format=single-column'
     ファイルを1行毎にリストアップします．これは，標準出力が端末でないときの
     デフォルトです．

`-C'
`--format=vertical'
     列で縦方向に並べ替えされてリストアップされます．標準出力が端末の場合，こ
     れはデフォルトです．`dir'と`d'プログラムに対し，それは常にデフォ
     ルトです．GNU `ls'は，最も少ない行で可能な限り多くのファイルを
     表示できるように，列の幅を変更して使用します．

`--color [=WHEN]'
     ファイル形式を区別するため使用する色を指定します．WHENは省略される，
     または以下の一つになります．
        * none - 色を全く使用しません．これはデフォルトです．

        * auto - 標準出力が端末の場合のみ色を使用します．

        * always - 常に色を使用します．
     `--color'を指定しWHENが無いことは，`--color=always'と同
     じです．色付きのリストを`more'や`less'の様なページャにパイプで
     渡すと，通常読むことができない結果を生成します．しかし，`more -f'を
     使用すると動作するでしょう．

`-F'
`--classify'
`--indicator-style=classify'
     ファイル形式を示す文字を，それぞれのファイル名に追加します．また，実行可
     能な標準ファイルに対し，`*'を加えます．ファイル形式表示子は，ディレ
     クトリに対する`/'，シンボリックリンクに対する`@'，FIFOに対す
     る`|'，ソケットに対する`='で，標準ファイルは何もありません．

`--full-time'
     標準的な省略の経験則を用いるのではなく，完全な時間をリストアップします．
     書式は現在，`date'に似ていますが，これは将来のリリースで変更される
     予定で，それは近代的なファイルタイムスタンプが，部分的により正確なためで
     す．これを変更することは不可能ですが，`cut'で日付文字列を抽出して，
     結果を`date -d'に渡すことができます．*Note `date' invocation:
     (sh-utils)date invocation.

     これは，時間出力が秒を出力するので，最も役に立ちます．(Unix
     ファイルシス
     テムは，最も近い秒でファイルのタイムスタンプを記録し，そのため，このオプ
     ションは存在するすべての情報を表示します．)例えば，正しくファイルを再生
     させていないMakefileがあるとき，これは役に立つはずです．

`--indicator-style=WORD'
     エントリー名にスタイルWORD文字表示子を以下のように追加します．
    `none'
          あらゆる文字表示子を追加しません．これはデフォルトです．

    `file-type'
          ディレクトリに対し`/'，シンボリックリンクに対し`@'，FIFOに対
          し`|'，ソケットに対し`='を追加し，標準ファイルには何も追加しま
          せん．これは`-p'や`--file-type'オプションと同じです．

    `classify'
          実行可能な標準ファイルに`*'を加え，それ以外は`file-type'として
          動作します．これは，`-F'や`--classify'オプションと同じです．

`-k'
`--kilobytes'
     ファイルの大きさを1024バイトブロックで出力し，デフォルトのブロックサイズ
     (*note Block size::)に優先します．

`-m'
`--format=commas'
     それぞれの行にできるだけ多くフィットするように，`, '
     (カンマとスペー ス)で分けて，水平方向にリストアップします．

`-n'
`--numeric-uid-gid'
     名前の代わりに，数値のUIDとGIDをリストアップします．

`-p'
`--file-type'
`--indicator-style=file-type'
     それぞれのファイル名にファイル形式を示す文字を追加します．これは
     `-F'に似ていますが，実行可能なものは印を付けません．

`-x FORMAT'
`--format=across'
`--format=horizontal'
     ファイルを列に，水平にソートしてリストアップします．

`-T COLS'
`--tabsize=COLS'
     それぞれのタブストップがCOLS列の幅だと考えます．デフォルトは8です．
     `ls'は，効率のために出力可能なところではタブを使用します．
     COLSが0の場合はタブを全く使用しません．

`-w'
`--width=COLS'
     画面がCOLS列の幅だと考えます．可能な場合，デフォルトは端末の設定で
     与えられます．それ以外で，環境変数`COLUMNS'が設定されている場合，そ
     れが使用されます．それ以外の場合，デフォルトの80です．



File: fileutils-ja.info,  Node: Formatting the file names,  Prev: General output formatting,  Up: ls invocation

5.1.6 ファイル名の書式化
------------------------

これらのオプションは，ファイル名自身を出力する方法を変更します．

`-b'
`--escape'
`--quoting-style=escape'
     ファイル名の表示不可能な文字を，Cで使用されるような，アルファベットと8進
     数のバックスラッシュシーケンスを用いて引用符で囲みます．

`-N'
`--literal'
     ファイル名を引用符で囲みません．

`-q'
`--hide-control-chars'
     ファイル名の表示不能な文字の代わりに疑問符を出力します．出力が端末の場合
     と，プログラムが`ls'の場合，これはデフォルトです．

`-Q'
`--quote-name'
`--quoting-style=c'
     2重引用符でファイル名を囲み，表示不可能な文字をCのように引用符で囲みます．

`--quoting-style=WORD'
     出力名の引用符に形式WORDを使用します．WORDは以下の一つになり ます．
    `literal'
          現状のまま名前を出力します．

    `shell'
          名前にシェルメタ文字を含んでいたり，不明瞭な出力を生じる場合，引用符で囲
          みます．

    `shell-always'
          シェルのため，通常は引用符が不要な場合でも名前を引用符で囲みます．

    `c'
          C言語の文字列で名前を引用符で囲みます．これは`-Q'や
          `--quote-name'オプションと同じです．

    `escape'
          周囲の二重引用符を省略した`c'を引用符として用います．これは，
          `-b'や`--escape'オプションと同じです．

    `clocale'
          ロケールに適切な引用符を使用する以外は，`c'を用いたように引用符で囲
          みます．

    `locale'
          `clocale'に似ていますが，デフォルトのCロケール"like
          this"の代わ りに，`like
          this'で囲みます．これは多くのディスプレイでより良く見え ます．

     `--quoting-style'オプションのデフォルト値を，環境変数
     `QUOTING_STYLE'で指定することが可能です．環境変数が設定されていない
     場合，デフォルト値は`literal'ですが，このデフォルトは，このパッケー
     ジの将来のバージョンで`shell'に変更されるかもしれません．

`--show-control-chars'
     ファイル名の出力不可能な文字をそのまま出力します．出力が端末の場合やプロ
     グラムが`ls'の場合以外では，これがデフォルトです．


File: fileutils-ja.info,  Node: dir invocation,  Next: vdir invocation,  Prev: ls invocation,  Up: Directory listing

5.2 `dir': ディレクトリの内容の短いリスト
=========================================

`dir'(と`d'としてインストールされるもの)は， `ls -C -b'と
同じです．すなわち，デフォルトでファイルは列にリストアップされ，縦方向に
並べ替えされ，そして特殊文字はバックスペースエスケープシーケンスで再表現
されます．

   *Note `ls': ls invocation.


File: fileutils-ja.info,  Node: vdir invocation,  Next: dircolors invocation,  Prev: dir invocation,  Up: Directory listing

5.3 `vdir': ディレクトリの内容の冗長なリスト
============================================

`vdir'は(`v'としてインストールされるものも)，`ls -l -b'と
同じです．すなわち，デフォルトでファイルは長い書式でリストアップされ，特
殊文字はバックスペースエスケープシーケンスで再表現されます．


File: fileutils-ja.info,  Node: dircolors invocation,  Prev: vdir invocation,  Up: Directory listing

5.4 `dircolors': `ls'の色をセットアップ
=======================================

`dircolors'は，`ls' (と`dir'等)から出力する色のために端末
を設定するシェルコマンドの順番を出力します．典型的な使用方法は以下の通り
です．

     eval `dircolors [OPTION]... [FILE]`

   FILEが指定された場合，`dircolors'は，ファイル形式と拡張子に対
して使用する色を決定するために，それを読み込みます．それ以外の場合，前もっ
てコンパイルされたデータベースが使用されます．これらのファイルの書式の詳
細のため，`dircolors --print-database'を実行してください．

   出力は，`LS_COLORS'環境変数を設定するためのシェルコマンドです．コマ
ンドラインで使用するシェル構文を指定することが可能で，そうでなければ
`dircolors'は`SHELL'環境変数の値から判別します．

   プログラムは以下のオプションも受け入れます．*Note Common
options::,も参照 してください．

`-b'
`--sh'
`--bourne-shell'
     Bourneシェルコマンドを出力します．`SHELL'環境変数が設定されていて，
     `csh'や`tcsh'で終わらない場合，これはデフォルトです．

`-c'
`--csh'
`--c-shell'
     Cシェルコマンドを出力します．`SHELL'が`csh'や`tcsh'で終わ
     る場合，これがデフォルトです．

`-p'
`--print-database'
     組み込みデフォルトカラー設定データベースを出力します．この出力は，それ自
     身有効な設定ファイルで，可能性をかなり記述しています．


File: fileutils-ja.info,  Node: Basic operations,  Next: Special file types,  Prev: Directory listing,  Up: Top

6 基本処理
**********

この章は，基本的なファイル操作に対するコマンドを記述します．コピー，移動
(名前の変更)，そして削除(リムーブ)です．

* Menu:

* cp invocation::               Copy files.
* dd invocation::               Convert and copy a file.
* install invocation::          Copy files and set attributes.
* mv invocation::               Move (rename) files.
* rm invocation::               Remove files or directories.
* shred invocation::            Remove files more securely.


File: fileutils-ja.info,  Node: cp invocation,  Next: dd invocation,  Up: Basic operations

6.1 `cp': ファイルとディレクトリのコピー
========================================

`cp'は，ファイル(または追加でディレクトリ)をコピーします．コピーは
オリジナルから完全に独立しています．一つのファイルをもう一つにコピーする，
または，任意の多くのファイルをコピー先のディレクトリにコピーすることのい
ずれかが可能です．構文は以下の通りです．

     cp [OPTION]... SOURCE DEST
     cp [OPTION]... SOURCE... DIRECTORY

   最後の引数が既存のディレクトリを指す場合，`cp'はそれぞれの
SOURCEファイルをそのディレクトリに(同じ名前のままで)コピーします．
それ以外で，2つのファイルが与えられた場合，最初のものを2番目のものにコピー
します．最後の引数がディレクトリでなく，2つ以上のオプションでない引数が
与えられた場合エラーとなります．

一般的に，ファイルは読み込まれたとおりに書き込まれます．例外は，以下の
`--sparse'オプションを参照してください．

   デフォルトで，`cp'はディレクトリをコピーしません．しかし，
`-R'，`-a'，そして`-r'オプションでは，`cp'
は元のディレクトリを下り，対応するコピー先のディレクトリにファイルをコピー
することで，再帰的にコピーします．

   デフォルトで，`cp'は再帰的にコピーしないときのみ，シンボリックリ
ンクをたどります．このデフォルトは，`--no-dereference'
(`-d')，`--dereference' (`-L')，そして`-H'オ
プションで優先することが可能です．これらのオプションの一つ以上が指定され
ている場合，最後のものが他のものに対して，そのまま優先します．

   `cp'は一般的に，以下の例外はありますが，ファイルの自分自身へのコピー
を拒絶します．`--force --backup'が同一のSOURCEとDESTで
指定して，通常のファイルを参照する場合，`cp'は，通常の方法 (*note
Backup options::)で指定されたように，通常または番号付きのバックアッ
プファイルを作成します．これは，変更前に既存のファイルのバックアップを単
に作成したいとき役に立ちます．

   プログラムは以下のオプションも受け入れます．*Note Common
options::,も参照 してください．

`-a'
`--archive'
     コピー時に元のファイルの構造と属性を可能な限り保持します(しかし，ディレ
     クトリ構造の保持は試みません．すなわち，`ls
     -U'はコピーされているディ
     レクトリの項目を，異なる順序でリストアップすることが可能です)．
     `-dpR'と同じです．

`-b'
`--backup[=METHOD]'
     *Note Backup options::.
     上書きされたり削除されたりするそれぞれのファイル
     のバックアップを作成します．特殊な場合として，強制とバックアップのオプショ
     ンが指定され，SOURCEとDESTが同じ名前で存在しているとき，通常
     のファイルとして，`cp'はSOURCEのバックアップを作成します．こ
     のオプションの組合わせの役に立つ応用の一つは，以下の小さなBourneシェルス
     クリプトです．

          #!/bin/sh
          # Usage: backup FILE...
          # Create a GNU-style backup of each listed FILE.
          for i in "$;" do
            cp --backup --force "$i" "$i"
          done

`-d'
`--no-dereference'
     シンボリックリンクを，それが示すファイルをコピーするのではなく，シンボリッ
     クリンクとしてコピーし，コピーのソースファイル間のハードリンクを保持しま
     す．

`-f'
`--force'
     このオプションを使用せずコピーし，コピー先のファイルが存在し書き込みで開
     くことができないとき，コピーは失敗します．しかし，`--force'を用いた
     場合，コピー先のファイルが開けないとき，`cp'はそれをアンリンクし，
     もう一度開こうとします．この動作と`--link'と`--symbolic-link'
     でそれを可能にすることと異なり，それによってコピー先ファイルは開かれるこ
     となく，無条件にアンリンクされます．`--remove-destination'の記述も
     参照してください．

`-H'
     コマンドライン引数がシンボリックリンクを指定している場合，シンボリックリ
     ンクではなく，ファイルをその位置にコピーします．しかし，再帰的な横断で遭
     遇するあらゆるシンボリックリンクを(その元を保存して)コピーします．

`-i'
`--interactive'
     既存の通常のコピー先のファイルを上書きするかどうか，プロンプトを表示しま
     す．

`-l'
`--link'
     ディレクトリ以外はコピーの代わりにハードリンクを作成します．

`-L'
`--dereference'
     常にシンボリックリンクをたどります．

`-p'
`--preserve'
     元のファイルの所有者，グループ，許可，そしてタイムスタンプを保持します．
     このオプションがないとき，それぞれのコピー先のファイルは，元のファイルに
     対応するパーミッションで作成され，umaskで設定されているビットがなくなり
     ます．*Note File permissions::.

`-P'
`--parents'
     ターゲットディレクトリに，スラッシュと指定されたソースファイルの名前を追
     加した，それぞれのコピー先のファイル名を作成します．`cp'に与える最
     後の引数は，既存のディレクトリ名にする必要があります．例えば，以下のよう
     なコマンドを入力します．

          cp --parents a/b/c existing_dir

     これはファイル`a/b/c'を`existing_dir/a/b/c'にコピーし，存在し
     ないあらゆる中間ディレクトリを作成します．

     警告：`-P'の意味はPOSIXに従うため，将来変更されるでしょう．
     古い意味に対しては`--parents'を使用し，新しい意味に対しては
     `--no-dereference'を使用してください．

`-r'
     再帰的にディレクトリをコピーし，ディレクトリでないものと特殊なファイル
     (例えば，シンボリックリン，FIFO，そしてデバイスファイル)を，通常のファイ
     ルのようにコピーします．これは，それぞれのソースファイルでデータを読み込
     み，コピー先のものにそれを書き出すということを意味します．FIFOのような特
     殊ファイルと，特に`/dev'で見つかるディレクトリに`cp -r'を適用
     すると通常失敗します．ほとんどの場合，`cp -r'はFIFOと
     `/dev/console' のような特殊ファイルからいつまでも読み込むことで待ち
     続け，`/dev/zero'をコピーする場合，それはコピー先のディスクをいっぱ
     いにします．特殊ファイルをコピーしたい場合，その内容をコピーするためそれ
     らを読み込む代わりに，特殊な性質を妨げるため，`--recursive' (`-R')
     を使用してください．

`-R'
`--recursive'
     ディレクトリ以外のものを避けながら，再帰的にディレクトリをコピーします
     (真上の`-r'とは異なります)．

`--remove-destination'
     それぞれの既存のコピー先ファイルを，それを開く前に削除します(上記の
     `-f'とは異なります)．

`--sparse=WHEN'
     "まばらなファイル"は"穴"--物理的なディスクブロックで発生しない
     ゼロバイトの列--を含みます．`read'システムコールはこれらをゼロとし
     て読み込みます．多くのバイナリファイルは多くのゼロバイトの連続を含むので，
     ディスクスペースの保存と速度を増加の両方が，これでかなり可能となります．
     デフォルトで`cp'は，情報の発見的手法を用い，入力ソースファイルで穴
     を見付け，対応する出力ファイルに同様にまばらにします．

     WHENの値は以下の一つになります．
    `auto'
          デフォルトの動作:入力ファイルがまばらの場合，出力ファイルはまばらになり
          ます．

    `always'
          常に，出力ファイルをまばらにします．まばらなファイルをサポートしないファ
          イルシステム(最も顕著な例は，SGI IRIX
          5.3とそれ以前の`efs'ファイル
          システム)に存在する入力ファイルで，出力ファイルはそれ以外のファイルシス
          テムのときこれは役に立ちます．

    `never'
          出力ファイルをまばらにしません．`mkswap'コマンドを用いてファイルを
          作成するとき，そのようなファイルには穴があってはならないので，これが役に
          立ちます．

`--strip-trailing-slashes'
     それぞれのSOURCE引数から，後置されるスラッシュを削除します． *Note
     Trailing slashes::.

`-s'
`--symbolic-link'
     ディレクトリでないものをコピーする代わりにシンボリックリンクを作成します．
     すべてのソースファイル名は，リンク先のファイルが現在のディレクトリにある
     場合以外，絶対的である(`/'で始まる)必要があります．シンボリックリン
     クをサポートしないシステムでは，このオプションは結果としてエラーメッセー
     ジを返すだけです．

`-S SUFFIX'
`--suffix=SUFFIX'
     それぞれの`-b'でのバックアップファイルにSUFFIXを追加します． *Note
     Backup options::.

`--target-directory=DIRECTORY'
     コピー先のDIRECTORYを指定します．*Note Target directory::.

`-v'
`--verbose'
     コピーする前にそれぞれのファイル名を出力します．

`-V METHOD'
`--version-control=METHOD'
     `-b'で作成するバックアップの形式を変更します．METHOD引数は，
     `none' (または`off')，`numbered' (または`t')， `existing'
     (または`nil')，または`never' (または `simple')が可能です．*Note
     Backup options::.

`-x'
`--one-file-system'
     コピーを開始したファイルシステムと異なるサブディレクトリを省略します．し
     かし，マウントポイントのディレクトリはコピー_されます_．



File: fileutils-ja.info,  Node: dd invocation,  Next: install invocation,  Prev: cp invocation,  Up: Basic operations

6.2 `dd': ファイルの変換とコピー
================================

`dd'は，変更可能なI/Oブロックサイズを用いて，(デフォルトで，標準入
力から標準出力に)ファイルをコピーし，オプションの動作でそれを変更します．
構文は以下のとおりです．

     dd [OPTION]...

   プログラムは，以下のオプションも受け入れます．*Note Common
options::,も参 照してください．

   以下(BYTESとBLOCKS)の数値的な値のオプションは，乗算を続ける
ことができます．それは，`b'=512，`c'=1，`w'=2，
`xM'=Mや，`k'=1024のようなあらゆるブロックサイズ接 尾子です(*note Block
size::)．

   スキップとI/Oに対し，異なるブロックサイズを使用するために，異なる
`dd'の呼び出しを使用してください．例えば，以下のシェルコマンドは
ディスクとテープの間で，512 kBブロックでデータをコピーしますが，ディスク
の最初の4 kBのラベルは，保存されたり復元されたりしません．

     disk=/dev/rdsk/c0t1d0s2
     tape=/dev/rmt/0

     # Copy all but the label from disk to tape.
     (dd bs=4k skip=1 count=0 && dd bs=512k) <$disk >$tape

     # Copy from tape back to disk, but leave the disk label alone.
     (dd bs=4k seek=1 count=0 && dd bs=512k) <$tape >$disk

`if=FILE'
     標準入力の代わりにFILEから読み込みます．

`of=FILE'
     標準出力の代わりにFILEに書き出します．`conv=notrunc'が与えら
     れていない場合，`dd'はFILEをゼロバイト(または，`seek='で
     指定されたサイズ)に切り詰めます．

`ibs=BYTES'
     一度にBYTESバイト読み込みます．

`obs=BYTES'
     一度にBYTESバイト書き出します．

`bs=BYTES'
     一度にBYTESバイト読み書きします．これは`ibs'と`obs'に優 先します．

`cbs=BYTES'
     一度にBYTESバイト変換します．

`skip=BLOCKS'
     コピーする前に入力ファイルで，BLOCKS `ibs'バイトブロックを省
     略します．

`seek=BLOCKS'
     コピーする前に出力ファイルで，BLOCKS `ibs'バイトブロックを省
     略します．

`count=BLOCKS'
     ファイルの終りまでのすべての代わりに，入力ファイルからBLOCKS
     `ibs'バイトブロックコピーします．

`conv=CONVERSION[,CONVERSION]...'
     CONVERSION引数で指定されたようにファイルを変換します．(カンマの回
     りにスペースはありません．)

     以下の変換です．

    `ascii'
          EBCDICをASCIIに変換します．

    `ebcdic'
          ASCIIをEBCDICに変換します．

    `ibm'
          ASCIIを別のEBCDICに変換します．

    `block'
          入力のそれぞれの行に対し，入力の改行をスペースに置換し，必要なスペースを
          埋め込みながら，`cbs'バイト出力します．

    `unblock'
          それぞれの`cbs'の大きさの入力ブロックで，末尾のスペースを改行に置換
          します．

    `lcase'
          大文字を小文字に変換します．

    `ucase'
          小文字を大文字に変換します．

    `swab'
          入力バイトのすべての組を入れ替えます．GNU `dd'は他と異なり，偶
          数バイトを読み込んだとき働きます--最後のバイトは，単にコピーされます．
          (入れ替えるバイトがないからです)．

    `noerror'
          読み込みエラー後も続けます．

    `notrunc'
          出力ファイルを切り詰めません．

    `sync'
          すべての入力ブロックを，後置するゼロバイトを埋め込み`ibs'サイズにし
          ます．`block'や`unblock'を使用するとき，ゼロバイトの代わりにス
          ペースで埋め込みます．



File: fileutils-ja.info,  Node: install invocation,  Next: mv invocation,  Prev: dd invocation,  Up: Basic operations

6.3 `install': ファイルのコピーと属性の設定
===========================================

`install'は，許可モードと，可能な場合は所有者とグループ設定しながら
ファイルをコピーします．構文は以下のとおりです．

     install [OPTION]... SOURCE DEST
     install [OPTION]... SOURCE... DIRECTORY
     install -d [OPTION]... DIRECTORY...

   これらの最初のものは，SOURCEファイルはDESTターゲットファイル
にコピーされます．２番目では，それぞれのSOURCEファイルはコピー先の
DIRECTORYにコピーされます．最後では，それぞれのDIRECTORY(と
足りない親ディレクトリ)がコピーされます．

   `install'は`cp'に似ていますが，コピー先のファイルの属性を制御
することが可能です．それは，プログラムをコピー先のディレクトリにコピーす
るとき，Makefileで一般的に使用されます．それ自身にファイルをコピーするこ
とは拒否されます．

   プログラムは，以下のオプションも受け入れます．*Note Common
options::,も参 照してください．

`-b'
`--backup[=METHOD]'
     *Note Backup options::.
     上書きされたり削除されたりするファイルのバックアッ プを作成します．

`-c'
     無視されます．古いUnixバージョンの`install'の互換性のためです．

`-d'
`--directory'
     与えられたそれぞれのディレクトリと足りない親ディレクトリを，コマンドライ
     ンで与えられたやデフォルトの所有者，グループとモードに設定しながら作成し
     ます．親ディレクトリも与えられた属性で作成されます．(これはSunOS
     4.x
     `install'と異なり，そこではディレクトリはデフォルトの属性が与えられ
     ます．)

`-g GROUP'
`--group=GROUP'
     インストールされるファイルやディレクトリのグループ所有権を，GROUP
     に設定します．デフォルトは，プロセスの現在のグループです．GROUPは，
     グループ名や数値的なグループIDが可能です．

`-m MODE'
`--mode=MODE'
     インストールされるファイルやディレクトリの許可をMODEに設定し，それ
     は8進数や`chmod'の象徴的なモードが可能で，0が出発点となります
     (*note File permissions::)．デフォルトモードは`u=rwx,go=rx'です--
     所有者の読み書き実行，グループとそれ以外は読み込みと実行です．

`-o OWNER'
`--owner=OWNER'
     `install'が適切な特権(ルートとして実行)を持つ場合，インストールされ
     るファイルやディレクトリの所有権はOWNERに設定されます．デフォルト
     は`root'です．OWNERは，ユーザ名または，数値のユーザIDが可能で す．

`-p'
`--preserve-timestamps'
     インストールされたそれぞれのファイルの，最後にアクセスした時間と最後に編
     集した時間を，対応するそれぞれの元ファイルに一致させます．このオプション
     なしでファイルがインストールされたとき，最後にアクセスした時間と最後に編
     集した時間は，どちらもインストールされた時間に設定されます．このオプショ
     ンは，最後にインストールされた時ではなく，最後にビルドされた時を追跡し続
     けるため，インストールされたファイルの最後に編集された時間を使用する場合，
     役に立ちます．

`-s'
`--strip'
     インストールされたバイナリ実行形式から，シンボルテーブルを取り除きます．

`-S SUFFIX'
`--suffix=SUFFIX'
     `-b'で作成されるそれぞれのバックアップファイルに，SUFFIXを追
     加します．*Note Backup options::.

`--target-directory=DIRECTORY'
     コピー先のDIRECTORYを指定します．*Note Target directory::.

`-v'
`--verbose'
     コピーする前に，それぞれのファイル名を出力します．

`-V METHOD'
`--version-control=METHOD'
     `-b'で作成されるバックアップの形式を変更します．METHOD引数は，
     `none' (または`off')，`numbered' (または`t')， `existing'
     (または`nil')，または，`never' (または `simple')が可能です．*Note
     Backup options::.



File: fileutils-ja.info,  Node: mv invocation,  Next: rm invocation,  Prev: install invocation,  Up: Basic operations

6.4 `mv': ファイルの移動(名前の変更)
====================================

`mv'は，ファイル(やディレクトリ)を移動したり名前を変更したりします．
構文は以下のとおりです．

     mv [OPTION]... SOURCE DEST
     mv [OPTION]... SOURCE... DIRECTORY

   最後の引数が，既存のディレクトリを示す場合，`mv'は，それ以外の与え
られたそれぞれのファイルを，同じファイル名で，そのディレクトリに移動しま
す．それ以外では，2つのファイルが与えられた場合，1番目の名前を2番目に変
更します．最後の引数がディレクトリではなく，2つ以上のファイルが与えられ
た場合，エラーとなります．

   `mv'は，一つのファイルシステムから別のものへ，あらゆる形式のファイ
ル移動が可能です．fileutilsのバージョン`4.0'以前では，`mv'は通
常のファイルのみファイルシステム間で移動が可能でした．例えば，現在の
`mv'は，一つのパーティションから別のものへ，特殊なデバイスファイル
を含むディレクトリ階層全体を移動可能です．それは最初に，要求されたディレ
クトリとファイルをコピーする`cp -a'で使用されているものと同じコード
を使用し，それから(コピーが成功したと仮定して)それは元を削除します．コピー
が失敗した場合，コピー先のパーティションにコピーされた部分が削除されます．
一つのパーティションから3つのディレクトリを別のものにコピーし，最初のディ
レクトリが成功し，2番目が失敗した場合，最初のものはコピー先のパーティショ
ンにのこり，2番目と3番目は元のパーティションに残ります．

   コピー先のファイルが存在し通常の書き込みが不可で，標準入力が端末で，
`-f'や`--force'オプションが与えられていない場合，`mv'はファ
イルを置換するかどうか，ユーザにプロンプトを表示します．(自分が所有する
ファイル，または，そのディレクトリに書き込み許可がある必要があります．)
応答が`y'または`Y'で始まらない場合，ファイルはスキップされます．

   _警告_：ディレクトリを示すシンボリックリンクを移動しようとし，スラッ
シュを後置したシンボリックリンクを指定した場合，`mv'はシンボリック
リンクを移動しませんが，その代わりにシンボリックリンクが参照するディレク
トリを移動します．*Note Trailing slashes::.

   プログラムは以下のオプションも受け入れます．*Note Common
options::,も参照 してください．

`-b'
`--backup[=METHOD]'
     *Note Backup options::.
     上書きされたり削除されたりするファイルのバックアッ プを作成します．

`-f'
`--force'
     コピー先のファイルを削除したり上書きしたりする前に，ユーザにプロンプトを
     表示しません．

`-i'
`--interactive'
     許可に因らず，それぞれの既存のコピー先のファイルを上書きするかどうかプロ
     ンプトを表示します．`y'や`Y'で始まらない返答の場合，ファイルは
     省略されます．

`-u'
`--update'
     同じまたは新しい編集時間を持つ既存のコピー先にディレクトリ以外のものを移
     動しません．

`-v'
`--verbose'
     移動する前にそれぞれのファイル名を出力します．

`--strip-trailing-slashes'
     それぞれのSOURCE引数から後置されるスラッシュを削除します． *Note
     Trailing slashes::.

`-S SUFFIX'
`--suffix=SUFFIX'
     `-b'で作成されるそれぞれのバックアップファイルに，SUFFIXを追
     加します．*Note Backup options::.

`--target-directory=DIRECTORY'
     コピー先のDIRECTORYを指定します．*Note Target directory::.

`-V METHOD'
`--version-control=METHOD'
     `-b'で作成されるバックアップの形式を変更します．METHOD引数は，
     `none' (または`off')，`numbered' (または`t')， `existing'
     (または`nil')，または，`never' (または `simple')が可能です．*Note
     Backup options::.



File: fileutils-ja.info,  Node: rm invocation,  Next: shred invocation,  Prev: mv invocation,  Up: Basic operations

6.5 `rm': ファイルやディレクトリの削除
======================================

`rm'は与えられたFILEを削除します．デフォルトでそれはディレク
トリを削除しません．構文は以下のとおりです．

     rm [OPTION]... [FILE]...

   ファイルに書き込みができない，標準入力が端末，そして`-f'または
`--force'オプションが与えられていない場合，または，`-i'または
`--interactive'オプションが与えられて_いる_場合，`rm'はユー
ザにファイルを削除するかどうかを促すプロンプトを表示します．`y' や
`Y'で始まらない返答の場合，ファイルは省略されます．

   プログラムは以下のオプションも受け入れます．*Note Common
options::,も参照 してください．

`-d'
`--directory'
     `rmdir'の代わりに`unlink'を用いてディレクトリの削除を試み，ア
     ンリンクを試みる前にディレクトリが空である必要はありません．適切な特権を
     持ち，オペレーティングシステムがディレクトリに対する`unlink'をサポー
     トしている場合のみ，これは動作します．ディレクトリのアンリンクはディレク
     トリ内のあらゆるファイルを参照できなくするため，この後でファイルシステム
     に`fsck' した方が賢明です．

`-f'
`--force'
     存在しないファイルを無視し，ユーザにプロンプトを表示しません．前にある
     `--interactive' (`-i')オプションを無視します．

`-i'
`--interactive'
     それぞれのファイルを削除するかどうかプロンプトを表示します．`y'や
     `Y'で始まらない返答の場合，ファイルは省略されます．前にある
     `--force' (`-f')オプションを無視します．

`-r'
`-R'
`--recursive'
     ディレクトリの内容を再帰的に削除します．

`-v'
`--verbose'
     削除する前にそれぞれのファイル名を出力します．


   よくある問題の一つは，`-'で始まる名前を持つファイルの削除の方法です．
GNU `rm'では，引数を解析する`getopt'関数を使用するすべて
のプログラムに似て，以下のすべての引数はオプションでないことを示す
`--'オプションを使用します．現在のディレクトリの`-f'というファ
イル名を削除するため，以下のどちらかを入力できます．

     rm -- -f

または，

     rm ./-f

   この目的に対する，Unix `rm'プログラムの単一の`-'の使用は，
getoptの標準構文の開発以前のものです．


File: fileutils-ja.info,  Node: shred invocation,  Prev: rm invocation,  Up: Basic operations

6.6 `shred': より安全なファイルの削除
=====================================

`shred'は，非常に高価なハードディスクでのデータの回復を妨げを助ける
ため，デバイスやファイルを上書きします．

   通常，ファイルを削除するとき(*note rm
invocation::)，データは実際には破
壊されません．ファイルが保存されている場所をリストアップしている索引のみ
破壊し，記憶装置は再利用可能になります．索引の再構築を試み，その部分が再
利用されていない場合，ファイルを元に戻すことが可能な，アンデリートユーティ
リティがあります．

ほとんど満タンのドライブを使用している忙しいシステムでは，スペースは数秒
で再利用可能になります．しかし，それが確かであることを知る方法はありませ
ん．機密データがあり，機密でないデータでファイルを実際に上書きすることで
リカバリが不可能だということを確かめたいかもしれません．

しかし，そうした後でも，研究所へディスクを持っていき，上書きされたデータ
の下の元データのかすかな"残響"を探すために感度の高い(そして高価な)多く
の機器を使用することが可能です．データが一度上書きされただけでは，それは
さほど難しくありません．

取り返しができないように何かを削除する最前の方法は，メディアに酸をかけて
破壊する，溶かしてしまう，またはそれに似たことをすることです．フロッピー
ディスクのような，安い着脱可能なメディアに対しては，これは好ましい方法で
す．しかし，ハードドライブは高価で，溶かすのが難しいため，`shred'ユー
ティリティは破壊することなく類似の効果を達成しようとします．

これは，古いデータに対するダメージを最大にするように選ばれたデータパター
ンで，上書き動作を何回も使用します．これがフロッピーディスクで動作してい
る間，パターンはハードドライブで最適な効果があるよう設計されています．詳
細は，ソースコードと，Sixth USENIX Security Symposium (San Jose,
California, 22-25 July, 1996)の予稿から，Peter Gutmannの論文 `Secure
Deletion of Data from Magnetic and Solid-State Memory'を参
照してください．論文は
`http://www.cs.auckland.ac.nz/~pgut001/pubs/secure_del.html'で，オン
ラインでも利用可能です．

   `shred'は非常に重要な仮定に依存していることに*注意してくださ
い*．それは，ファイルシステムがその場所のデータを上書きするということで
す．これはそうするための伝統的な方法ですが，現代の多くのファイルシステム
はこの仮定を満足するように設計されていません．例外は以下を含みます．

   *
     AIXとSolarisが提供するような，Log-structureまたはjournalファイルシステム．

   *
     RAIDベースのファイルシステムのように，重複したデータを書き込み，書き込み
     で失敗した場合でも続けるファイルシステム．

   * Network
     ApplianceのNFSサーバのような，スナップショットを作成するファイル
     システム．

   *
     NFSのバージョン３のクライアントのような，一時的な位置にキャッシュを作成
     するファイルシステム．

   * 圧縮されているファイルシステム．

ファイルシステムがどのように動作しているかよく分からない場合，その場所に
上書きされないと仮定すべきで，それは，そのファイルシステムの通常のファイ
ルで，`shred'が信頼できる動作を行うことができないことを意味します．

一般的にいって，これは，上記の意味で設計されたファイルシステムの問題をバ
イパスするため，ファイルではなくデバイスに`shred'することはより信頼
できます．しかし，デバイスを`shred'してさえ，常に完全に信頼すること
はできません．例えば，ほとんどのディスクは，不良セクタがアプリケーション
に見えないようにをマッピングします．不良セクタが機密データを含む場合，
`shred'はそれを破壊することは不可能です．

   `shred'は，バックアップについて何もしないように，これらの問題の検出
も報告も試みません．しかし，ファイルではなくデバイスに`shred'する方
がより信頼できるので，`shred'はデフォルトで出力ファイルを切り詰めた
り削除したりしません．このデフォルトはデバイスに対しより適していて，それ
は通常切り詰めもできませんし，削除もすべきではありません．

     shred [OPTION]... FILE[...]

   プログラムは以下のオプションも受け入れます．*Note Common
options::,も参照 してください．

`-f'
`--force'
     上書き可能が必要な場合，ファイルの許可に優先させます．

`-NUMBER'
`-n NUMBER'
`--iterations=NUMBER'
     デフォルトで，`shred'は25回の上書きを使用します．これで，少なくとも
     1回の使用で使用される有用な上書きパターンの全てに対して十分になります．
     時間の節約のため減らしたり，時間の無駄遣いをする場合に増やすことが可能で
     す．

`-s BYTES'
`--size=BYTES'
     ファイルの最初のBYTESバイトを`shred'します．デフォルトはファ
     イル全体を`shred'します．BYTESは乗数を指定するために，
     `k'，`M'，または`G'のようなサイズ指定を続けることができま
     す．*Note Block size::.

`-u'
`--remove'
     ファイルを`shred'した後，(可能な場合は)それを切り詰め，そして削除し
     ます．ファイルが複数のリンクを持つ場合，指名されたリンクのみ削除されます．

`-v'
`--verbose'
     バイ菌の増殖のようにステータスの表示を更新します．

`-x'
`--exact'
     通常，`shred'は，ファイルの最後のブロックまで完全に消去するため，ファ
     イルのサイズを，ファイルシステムのブロックサイズの次の乗数まで増加します．
     このオプションは，その動作を抑制します．このため，デフォルトでは，512バ
     イトのブロックを持つファイルシステム上の，10バイトのファイルを
     `shred'する場合，結果としてファイルは512バイトになります．このオプ
     ションを用いると，`shred'はファイルのサイズを増加させません．

`-z'
`--zero'
     通常，`shred'の書き込みの最終動作は，ランダムデータの作成です．これ
     が(例えば，暗号化されたデータのように見えるため)ハードディスク上で目立つ
     場合や，より整然としたいと考える場合，`--zero'オプションは全てをゼ
     ロビットを用いる上書き動作を追加します．これは，`--iterations'オプ
     ションで指定した動作の数に追加します．

`-'
     標準出力を`shred'します．

     この引数はオプションと見なされます．一般的な`--'オプションはコマン
     ドラインのオプションの終りを示すために使用されますが，`-'は普通のファ
     イルとして解釈されます．

     この使用目的は，削除された一時ファイルを`shred'することです．
     例です．

          i=`tempfile -m 0600`
          exec 3<>"$i"
          rm -- "$i"
          echo "Hello, world" >&3
          shred - >&3
          exec 3>-

     シェルコマンド`shred - >file'は，`shred'の呼び出しの前に，それ
     がFILEを切り詰めるため，FILEの内容を`shred'しないことに
     注意してください．コマンド`shred file'，または(Bourne互換シェルを使
     用している場合は)コマンド`shred - 1<>file'を代わりに使用してくださ
     い．


最初のドライブのフロッピーディスクに作成されたファイルシステムの，全ての
記録を消去するために，以下のコマンドを使用するかもしれません．そのコマン
ドは，1.44MBフロッピーを消去するために，約20分かかります．

     shred --verbose /dev/fd0

同様に，ハードディスクの選択されたパーティションの全てのデータを消去する
ために，以下のようなコマンドを与えることが可能です．

     shred --verbose /dev/sda5


File: fileutils-ja.info,  Node: Special file types,  Next: Changing file attributes,  Prev: Basic operations,  Up: Top

7 特殊ファイルの形式
********************

この章は，特殊な形式のファイルを作成する方法(と，特殊なファイル形式の
一つのディレクトリを削除する`rmdir'方法)を記述します．

Unixのようなオペレーティングシステムには，特殊なファイル形式は，他より
著しく少ないのですが，_すべて_が"通常のファイル"と差のないバ
イトストリームのみとして扱うことはできません．例えば，ファイルを作成し
たり削除したりするとき，システムはこの情報を記録する必要があり，それは
"ディレクトリ"--特殊な形式のファイル--で行います．ディレクトリを
通常のファイルとして読み込むこともできますが，気になる場合は，システム
がその仕事を行うために，ファイルのバイト上で構造，特定の順序を強制する
必要があります．このためそれは"特殊な"形式のファイルとなります．

ディレクトリ以外では，特殊なファイル形式は，名前付きパイプ(FIFO)，シンボ
リックリンク，ソケット，そして"特殊ファイル"と呼ばれるものを含みます．

* Menu:

* ln invocation::               Make links between files.
* mkdir invocation::            Make directories.
* mkfifo invocation::           Make FIFOs (named pipes).
* mknod invocation::            Make block or character special files.
* rmdir invocation::            Remove empty directories.


File: fileutils-ja.info,  Node: ln invocation,  Next: mkdir invocation,  Up: Special file types

7.1 `ln': ファイル間にリンクを作成
==================================

`ln'は，ファイル間のリンクを作成します．デフォルトで，それはハード
リンクを作成します．`-s'を用いると，シンボリック(または"ソフト")
リンクを作成します．構文は以下のとおりです．

     ln [OPTION]... TARGET [LINKNAME]
     ln [OPTION]... TARGET... DIRECTORY

   * 最後の引数が既存のディレクトリを示す場合，`ln'はそのディレクト
     リ内のそれぞれのTARGETファイルに，TARGETの名前を使用しながら
     リンクを作成します．(しかし，以下の`--no-dereference'オプションの記
     述を参照してください．)

   * 2つのファイル名が与えられた場合，`ln'は2番目から1番目へのリンク
     を作成します．

   * 一つのTARGETが与えられた場合，`ln'は，現在のディレクトリ
     のそのファイルにリンクを作成します．

   * 最後の引数がディレクトリでなく，2つ以上のファイルが与えられた場合
     はエラーとなります．`-f'や`-i' (以下を参照)を用いない場合,
     `ln'は既存のファイルを削除しません．`ln'に既存のファイルの名前
     を変えさせるために，`--backup'オプションを使用してください．


   "ハードリンク"は，既存のファイルの別名です．リンクとオリジナルは区別
できません．技術的には，それらは同じinodeを共有し，inodeはファイルに関す
る必要な情報をすべて含みます--実際，inodeがファイル_である_と言っ
ても間違いではありません．既存のすべての実装では，ディレクトリにハードリ
ンクを作成できず，ハードリンクはファイルシステム間をまたぐことができませ
ん．(しかしながら，これらの制限はPOSIXと一致しません．)

   一方，"シンボリックリンク" (短く言うと"symlinks")は，リンクファ
イルが実際には名前の異なるファイルを参照する特殊なファイル形式です(すべ
てのカーネルがサポートしているわけではありません．System V release 3(と
それより古いもの)はsymlinkがありません)．ほとんどの処理(開く，読み込む，
書き出す等)は，シンボリックリンクを通じて行われ，カーネルは自動的にリン
クを"dereferences"し，リンク先を処理します．しかし，リンク先ではなく
リンクファイル自身に作用する(例えば削除)処理もあります．*Note Symbolic
Links: (library)Symbolic Links.

   プログラムは以下のオプションも受け入れます．*Note Common
options::,も参照 してください．

`-b'
`--backup[=METHOD]'
     *Note Backup options::.
     上書きされたり削除されたりするそれぞれのファイル
     のバックアップを作成します．

`-d'
`-F'
`--directory'
     スーパーユーザがディレクトリのハードリンクを作成できるようにします．

`-f'
`--force'
     既存のリンク先ファイルを削除します．

`-i'
`--interactive'
     既存リンク先ファイルを削除するかどうか，プロンプトを表示します．

`-n'
`--no-dereference'
     明示的な，ディレクトリへのシンボリックリンクとなるリンク先が与えられたと
     き，リンク先を通常のファイルとして扱います．

     リンク先が(シンボリックリンクではない)実際のディレクトリのとき，不明瞭な
     ものはありません．しかし，指定されたリンク先がディレクトリへのシンボリッ
     クリンクの時，ユーザの要求の扱い方は，二通りあります．`ln'は，リン
     ク先を通常のディレクトリとして扱い，それに対するリンクを作成することがで
     きます．一方，リンク先を非ディレクトリ--シンボリックリンク--として見る
     こともできます．その場合，`ln'は，新しいリンクを作成する前に，その
     シンボリックリンクを削除またはバックアップする必要があります．デフォルト
     では，ディレクトリへのシンボリックリンクであるリンク先を，ディレクトリと
     同様に扱います．

`-s'
`--symbolic'
     ハードリンクの代わりにシンボリックリンクを作成します．このオプションは，
     シンボリックリンクをサポートしていないシステムでは，単にエラーメッセージ
     を生成します．

`-S SUFFIX'
`--suffix=SUFFIX'
     `-b'を用いて生成されるそれぞれのバックアップファイルにSUFFIX
     を追加します．*Note Backup options::.

`--target-directory=DIRECTORY'
     リンク先DIRECTORYを指定します．*Note Target directory::.

`-v'
`--verbose'
     リンクする前にそれぞれのファイル名を出力します．

`-V METHOD'
`--version-control=METHOD'
     `-b'で作成されるバックアップの形式を変更します．METHOD引数は，
     `none' (または`off')，`numbered' (または`t')， `existing'
     (または`nil')，または，`never' (または `simple')が可能です．*Note
     Backup options::.


   以下は例です．

     ln -s /some/name  # creates link ./name pointing to /some/name
     ln -s /some/name myname  # creates link ./myname pointing to /some/name
     ln -s a b ..      # creates links ../a and ../b pointing to ./a and ./b


File: fileutils-ja.info,  Node: mkdir invocation,  Next: mkfifo invocation,  Prev: ln invocation,  Up: Special file types

7.2 `mkdir': ディレクトリの作成
===============================

`mkdir'は指定された名前でディレクトリを作成します．構文は以下のとお
りです．

     mkdir [OPTION]... NAME...

   NAMEが既存のファイルでディレクトリではない場合，`mkdir'は標準
エラー出力に警告メッセージを出力し，残っているNAMEを処理した後，1
のステータスで終了します．NAMEが既存のディレクトリで，-p オプショ
ンが与えられていないときも同じです．NAMEが既存のディレクトリで，-p
オプションが与えられている場合，`mkdir'はそれを無視します．すなわち，
`mkdir'は警告の出力も，エラーの発生も，(-m オプションが与えられてい
ても)ディレクトリのモードの変更もせず，残りのNAMEの処理を続けます．

   プログラムは以下のオプションも受け入れます．*Note Common
options::,も参照 してください．

`-m MODE'
`--mode=MODE'
     作成されるディレクトリのモードをMODEで設定し，それは`chmod'で
     設定する抽象的なもので，(読み書きと実行を全員に許可する)`a=rwx'から
     目的のポイントのためにumaskのビットセットを引いたものを使用します．
     *Note File permissions::.

`-p'
`--parents'
     それぞれの引数に対し，足りない親ディレクトリを作成します．親ディレクトリ
     のモードは`u+wx'で編集されたumaskに設定します．既存のディレクトリに
     対する引数は無視します．

`-v'

`--verbose'
     作成されるそれぞれのディレクトリに対しメッセージを出力します．これは
     `--parents'とともに用いると最も便利です．


File: fileutils-ja.info,  Node: mkfifo invocation,  Next: mknod invocation,  Prev: mkdir invocation,  Up: Special file types

7.3 `mkfifo': FIFO(名前付きパイプ)の作成
========================================

`mkfifo'はFIFO("名前付きパイプ"とも呼ばれる)を指定された名前で作成しま
す．構文は以下のとおりです．

     mkfifo [OPTION] NAME...

   "FIFO"は，通信に依存するプロセスを可能にする特殊なファイル形式です．
一つのプロセスは書き込みで，もう一つは読み込みでFIFOを開き，データは，シェ
ルやその他の通常の名前なしパイプのように流れます．

   プログラムは以下のオプションも受け入れます．*Note Common
options::,も参照 してください．

`-m MODE'
`--mode=MODE'
     作成されるFIFOのモードをMODEに設定し，それは`chmod'で設定する
     抽象的なもので，(読み込みと書き出しを全員に許可する)`a=rw'から目的
     のポイントのためにumaskのビットセットを引いたものを使用します．
     *Note File permissions::.



File: fileutils-ja.info,  Node: mknod invocation,  Next: rmdir invocation,  Prev: mkfifo invocation,  Up: Special file types

7.4 `mknod': ブロックやキャラクタ特殊ファイルの作成
===================================================

`mknod'は，FIFO，キャラクタ特殊ファイルや，ブロック特殊ファイルを指
定された名前で作成します．構文は以下のとおりです．

     mknod [OPTION]... NAME TYPE [MAJOR MINOR]

   上記の"特殊ファイル形式"と異なり，"特殊ファイル"という用語は，Unix
上で技術的な意味があります．それはデータを生成または受信するものです．こ
れは通常，ハードウェアの物理的な部分に対応します．(これらのファイルは通
常システム設定時に作成されます．) `mknod'コマンドは，この形式のファ
イルを作成するものです．そのようなデバイスは，一度に一文字または一度に一
"ブロック"(多くの文字)読み込むことができ，そのため，"ブロック特殊"
ファイルと"キャラクタ特殊"ファイルがあると言っているのです．

   NAMEの後の引数は作成するファイルの形式を指定します．

`p'
     FIFOに対応します．

`b'
     ブロック特殊ファイルに対応します．

`c'
     キャラクタ特殊ファイルに対応します．


ブロックやキャラクタ特殊ファイルを作成しているとき，メジャーとマイナーデ
バイス番号をファイル形式の後に与える必要があります．

   プログラムは以下のオプションも受け入れます．*Note Common
options::,も参照 してください．

`-m MODE'
`--mode=MODE'
     作成されるファイルのモードをMODEに設定し，それは`chmod'で設定
     する抽象的なもので，`a=rw'から目的のポイントのためにumaskのビットセッ
     トを引いたものを使用します．*Note File permissions::.



File: fileutils-ja.info,  Node: rmdir invocation,  Prev: mknod invocation,  Up: Special file types

7.5 `rmdir': 空のディレクトリの削除
===================================

`rmdir'は空のディレクトリを削除します．構文は以下のとおりです．

     rmdir [OPTION]... DIRECTORY...

   DIRECTORY引数が既存の空のディレクトリを参照していない場合，エラー
となります．

   プログラムは以下のオプションも受け入れます．*Note Common
options::,も参照 してください．

`--ignore-fail-on-non-empty'
     ディレクトリが空でないため，それぞれ単独であるディレクトリ削除の失敗を無
     視します．

`-p'
`--parents'
     DIRECTORYを削除し，それぞれのDIRECTORYの構成要素の削除を試み
     ます．そのため，例えば，`rmdir -p a/b/c'は`rmdir a/b/c a/b a'
     ににています．同様に，これらのディレクトリが空でないと判明した場合は失敗
     します．そのような失敗で，診断を引き起こし，`rmdir'を失敗で終了させ
     ないため，`--ignore-fail-on-non-empty'オプションを使用してください．

`-v'

`--verbose'
     削除に成功したそれぞれの診断を与えます．DIRECTORYは削除されます．


   空でないディレクトリの(再帰的な)削除方法は，*Note rm invocation::.


File: fileutils-ja.info,  Node: Changing file attributes,  Next: Disk usage,  Prev: Special file types,  Up: Top

8 ファイル属性の変更
********************

ファイルは，その内容，名前，そしてファイル形式(*note Special file
types::)のみではありません．ファイルには，所有者(ユーザID)，グループ(グルー
プID)，許可(所有者がファイルに行えること，グループの人ができること，そし
て，その他誰でもできること)，様々なタイムスタンプ，そしてその他の情報が
あります．まとめて，これらをファイルの"属性"と呼びます．

   これらのコマンドはファイルの属性を変更します．

* Menu:

* chown invocation::            Change file owners and groups.
* chgrp invocation::            Change file groups.
* chmod invocation::            Change access permissions.
* touch invocation::            Change file timestamps.


File: fileutils-ja.info,  Node: chown invocation,  Next: chgrp invocation,  Up: Changing file attributes

8.1 `chown': ファイルの所有者とグループの変更
=============================================

`chown'は，与えられたそれぞれのFILEのユーザと/やグループの所
有権を，NEW-OWNERや，既存の参照ファイルのユーザとグループに変更し
ます，構文は以下のとおりです．

     chown [OPTION]... {NEW-OWNER | --reference=REF_FILE} FILE...

   NEW-OWNERが使用された場合，新しい所有者と/やグループを以下のように
指定します(空白は含みません)．

     [OWNER] [ [:] [GROUP] ]

   具体例です．

OWNER
     OWNER (ユーザ名または数値的なユーザID)のみ与えられた場合，そのユー
     ザが与えられたそれぞれのファイルの所有者になり，ファイルのグループは変更
     されません．

OWNER`:'GROUP
     OWNERにコロンとGROUP (グループ名または数値的なグループID)が，
     それら間にスペースを置かずに続く場合，ファイルのグループ所有権を
     (GROUPに)同様に変更します．

OWNER`:'
     コロンはあるが，グループ名がOWNERに続かない場合，ユーザがファイル
     の所有者になり，ファイルのグループはOWNERのログイングループに変更
     されます．

`:'GROUP
     コロンとそれに続くGROUPが与えられているが所有者が省略された場合，
     ファイルのグループのみ変更されます．この場合，`chown'は`chgrp'
     と同じ機能を果たします．


   `:'セパレータの場所に`.'を使用することが可能です．これは古いス
クリプトへの互換性のためのGNUの拡張です．GNU `chown'は，
OWNERが`.'文字を含む場合は失敗する可能性があるので，新しいス
クリプトでは`.'の使用を避けるべきです．

   プログラムは以下のオプションも受け入れます．*Note Common
options::,も参照 してください．

`-c'
`--changes'
     所有権が実際に変更されるそれぞれのFILEに対する動作を，冗長に記述し
     ます．

`-f'
`--silent'
`--quiet'
     所有権を変更できないファイルについてのエラーメッセージを出力しません．

`--from=OLD-OWNER'
     OLD-OWNERで指定されている現在の属性がある場合，FILEの所有権
     を変更します．OLD-OWNERは，上記のNEW-OWNERの記述と同じ形式で
     す．このオプションは，潜在的な悪習の窓をかなり狭めるという点で，セキュリ
     ティの立場から主に役に立ちます．例えば，以下のように，このオプションを使
     用しないで，ユーザのファイルに対してUIDの変更を反映させるために，
     `root'が実行したとします．

          find / -owner OLDUSER -print0 | xargs -0 chown NEWUSER

     しかし，`find'が既存のファイルの所有者をテストしたときと，
     `chown'が実際に事項したときの間が非常に長い可能性があるので，それは
     危険です．ギャップを小さくするひとつの方法は，それぞれのファイルに対し見
     つかったときに`chown'を呼び出すことです．

          find / -owner OLDUSER -exec chown NEWUSER {} \;

     しかし，影響されるファイルが多い場合は，それは非常に遅くなります．このオ
     プションを用いると，(ギャップを狭めたままで)完全ではありませんが，それは
     安全になります．

          chown -R --from=OLDUSER NEWUSER /

`--dereference'
     シンボリックリンク自身に動作せず，それが示すものに動作します．

`-h'
`--no-dereference'
     シンボリックリンクが示すものではなく，それ自身に動作します．これはデフォ
     ルトです．このモードは`lchown'システムコールに依存します．
     `lchown'システムコールが提供されていないシステムでは，コマンドライ
     ンで指定されるファイルがシンボリックリンクの時，`chown'は失敗します．
     デフォルトで，再帰的な処理の間に発見されるシンボリックリンクに対する診断
     結果は発行されませんが，それについては`--verbose'は参照してください．

`--reference=REF_FILE'
     それぞれのFILEのユーザとグループを，REF_FILEと同じになるよう
     に変更します．REF_FILEがシンボリックリンクの場合，シンボリックリン
     クのユーザとグループではなく，それが参照するファイルのものを使用します．

`-v'
`--verbose'
     処理された全てのファイルに対し，診断結果を出力します．`lchown'シス
     テムコールがないシステムで，再帰的な処理の間にシンボリックリンクが見つか
     り，`--no-dereference'の影響がある場合，シンボリックリンクもその参
     照先も変更されないことを告げる診断結果を発行します．

`-R'
`--recursive'
     ディレクトリとその内容の所有権を再帰的に変更します．



File: fileutils-ja.info,  Node: chgrp invocation,  Next: chmod invocation,  Prev: chown invocation,  Up: Changing file attributes

8.2 `chgrp': グループの所有権の変更
===================================

`chgrp'は，それぞれの与えられたFILEのグループ所有権を
GROUP(グループ名またはグループIDのどちらかで与えられるはずです)，
または，既存の参照ファイルのグループに変更します．構文は以下のとおりです．

     chgrp [OPTION]... {GROUP | --reference=REF_FILE} FILE...

   プログラムは以下のオプションも受け入れます．*Note Common
options::,も参照 してください．

`-c'
`--changes'
     グループが実際に変更されているそれぞれのFILEに対し，動作を冗長に記
     述します．

`-f'
`--silent'
`--quiet'
     グループを変更できなかったファイルに関するエラーメッセージを出力しません．

`--dereference'
     シンボリックリンク自身に作用するのではなく，それが指し示すものに作用しま
     す．

`-h'
`--no-dereference'
     シンボリックリンクを，それが指し示すものの代わりにそれ自身に動作します．
     これはデフォルトです．このモードは`lchown'システムコールに依存しま
     す．コマンドラインで指定されているファイルがシンボリックリンクの時，
     `chgrp'は失敗します．デフォルトで，再帰的な変換の間に見つかったシン
     ボリックリンクに対し診断結果は発行されませんが，それについては
     `--verbose'を参照してください．

`--reference=REF_FILE'
     それぞれのFILEのグループを，REF_FILEと同じになるように変更し
     ます．REF_FILEがシンボリックリンクの場合，シンボリックリンクのグルー
     プではなく，それが参照するファイルのものを使用します．

`-v'
`--verbose'
     処理した全てのファイルに対し，診断結果を出力します．`lchown'システ
     ムコールがないシステムで，再帰的な変換の間にシンボリックリンクが見つかり，
     `--no-dereference'が有効でない場合，シンボリックリンクも参照するも
     のも変更されないことを告げる診断結果を発行します．

`-R'
`--recursive'
     ディレクトリとその内容のグループ所有権を再帰的に変更します．



File: fileutils-ja.info,  Node: chmod invocation,  Next: touch invocation,  Prev: chgrp invocation,  Up: Changing file attributes

8.3 `chmod': アクセス許可の変更
===============================

`chmod'は指名されたファイルのアクセス許可を変更します．構文は以下の
とおりです．

     chmod [OPTION]... {MODE | --reference=REF_FILE} FILE...

   `chmod'システムコールはシンボリックリンクの許可を変更できないため，
`chmod'はそれらのの許可を決して変更しません．シンボリックリンクの許
可は決して使用されないので，これは問題ではありません．しかし，コマンドラ
インでリストアップされたそれぞれのシンボリックリンクに対し，`chmod'
は指し示されたファイルの許可を変更します．そのかわり，再帰的にディレクト
リを横断している間，`chmod'は，遭遇したシンボリックリンクを無視しま す．

   MODEが使用された場合，それは新しい許可を指定します．詳細は *Note
File permissions::,のセクションを参照してください．

   プログラムは以下のオプションも受け入れます．*Note Common
options::,も参照 してください．

`-c'
`--changes'
     許可が実際に変更されているそれぞれのFILEに対し，動作を冗長に記述し
     ます．

`-f'
`--silent'
`--quiet'
     許可を変更できなかったファイルに関するエラーメッセージを出力しません．

`-v'
`--verbose'
     与えられたすべてのFILEに対し，動作，非動作の冗長な記述を行います．

`--reference=REF_FILE'
     それぞれのFILEのモードを，REF_FILEと同じになるように変更しま
     す．*Note File permissions::. REF_FILEがシンボリックリンクの場合，
     シンボリックリンクのモードではなく，それが参照するファイルのものを使用し
     ます．

`-R'
`--recursive'
     ディレクトリとその内容の許可を再帰的に変更します．



File: fileutils-ja.info,  Node: touch invocation,  Prev: chmod invocation,  Up: Changing file attributes

8.4 `touch': ファイルのタイプスタンプの変更
===========================================

`touch'は，指定されたファイルのアクセスと/や編集された時間を変更し
ます．構文は以下のとおりです．

     touch [OPTION]... FILE...

   最初のFILEが`-t'オプションの有効な引数で，タイムスタンプが
`-d'，`-r'や，`-t'オプションで全く与えられておらず，
`--'引数が与えられていない場合，その引数はその他のファイルに対する
ファイル名としてではなく，時間として解釈されます．警告：この使用方法は時
代遅れで，POSIXの将来のバージョンではそれを取り消したサポートが要求
されるでしょう．代わりに`-t'を使用してください．

   存在しないFILEはすべて空として作成されます．

   アクセスと編集の時間の両方を現在の時間に変更するとき，`touch'は実行
しているユーザがファイルの所有者で無いが，書き込み許可があるもののタイム
スタンプを変更することができます．それ以外では，ユーザはそのファイルの所
有者である必要があります．

   `touch'は，ファイルの２つの時間 - 最後のアクセスと編集 - を変更す
るオプションを提供しますが，実際には3番目のinodeの変更時間も同じです．こ
れはファイルの`ctime'としてよく参照されます．inodeの変更時間は，ファ
イルのメタ情報を最後に変更された時間を表現します．一般的な例の一つは，ファ
イルの許可を変更したときです．許可の変更はファイルにアクセスしないので，
atimeを変更しませんし，ファイルも編集しないので，mtimeも変更しません．依
然としてファイル自身の何かは変っていますが，これはどこかに記録する必要が
あります．これはctimeフィールドの仕事です．例えば，バックアッププログラ
ムが新しい許可値まで含めてファイルの新しいコピーを作成することを可能にす
るために，これは必要です．他に影響しないようにファイルのctimeを編集する
もう一つの処理は，名前の変更です．通常の処理では，ユーザがctimeフィール
ドをユーザが指定した値に変更することは，いかなる場合でも不可能です．

   プログラムは以下のオプションも受け入れます．*Note Common
options::,も参照 して下さい．

`-a'
`--time=atime'
`--time=access'
`--time=use'
     アクセス時間のみ変更します．

`-c'
`--no-create'
     存在していないファイルを作成しません．

`-d'
`--date=time'
     現在の時間の代わりにTIMEを指定します．それは，月名，タイムゾーン，
     `am'と`pm'等を含むことができます．*Note Date input formats::.

`-f'
     無視されます．BSD版の`touch'の互換性のためです．

`-m'
`--time=mtime'
`--time=modify'
     編集時間のみ変更します．

`-r FILE'
`--reference=FILE'
     現在の時間の代わりに参照FILEの時間を使用します．

`-t [[CC]YY]MMDDhhmm[.ss]'
     現在の時間の代わりに引数(オプションの4桁または2桁の年，月，日，時間，分，
     オプションの秒)を使用します．年が2桁のみで指定された場合，CCは，0
     ... 68に対し20，69 ... 99に対し19になります．年の数字が指定され
     ない場合，今年の日付として解釈されます．



File: fileutils-ja.info,  Node: Disk usage,  Next: Index,  Prev: Changing file attributes,  Up: Top

9 ディクスの使用
****************

無限の量のデータを保てるディスクはありません．これらのコマンドは，ディス
クストレージの使用や利用可能な量を報告します．(これは_メインメモリ_，
すなわち，プログラムが実行時に使用するRAMの量に対しては重要なことはしま
せん．そのため，`ps'や`pstat'や`swap'やそのようなコマンド が必要です．)

* Menu:

* df invocation::               Report filesystem disk space usage.
* du invocation::               Estimate file space usage.
* sync invocation::             Synchronize memory and disk.


File: fileutils-ja.info,  Node: df invocation,  Next: du invocation,  Up: Disk usage

9.1 `df': ファイルシステムのディスクスペースの使用の報告
========================================================

`df'は，ファイルシステムの使用されているディスクスペースと利用可能
なディスクスペースの量を報告します．構文は以下のとおりです．

     df [OPTION]... [FILE]...

   引数を用いない場合，`df'は現在マウントされている(すべての形式の)す
べてのファイルシステムの使用されている，そして利用可能な空間を報告します．
それ以外では，`df'はそれぞれの引数のFILEを含むファイルシステ
ム上の内容を報告します．

通常ディスクスペースは1024単位で出力されますが，これに優先することもでき
ます(*note Block size::)．

   引数のFILEがマウントされているファイルシステムを含むディスクデバイ
スファイルの場合，`df'はデバイスノードを含むファイルシステム(すなわ
ちルートファイルシステム)ではなく，そのファイルシステムの利用可能な空間
を表示します．GNU `df'は，マウントしていないファイルシステムの
ディスクの使用を決定することは，ほとんどのシステムでファイルシステム構造
の極めて移植性のない緻密な知識を必要とするため，そうしようとしません．

   プログラムは以下のオプションも受け入れます．*Note Common
options::,も参照 してください．

`-a'
`--all'
     0ブロックの大きさのファイルシステムをリストに含め，それはデフォルトでは
     省略されます．そのようなファイルシステムは，通常は自動マウントエントリー
     のような，特定の目的の疑似ファイルシステムです．また，サポートされている
     システムもある"ignore"や"auto"形式のファイルシステムは，このオプショ
     ンが指定されたときのみ含まれます．

`-h'
`--human-readable'
     それぞれのサイズに，メガバイトに対する`M'のようなサイズ文字を追加し
     ます．1024倍が使用され，1000ではありません．`M'は1,048,576バイトを
     意味します．1000倍を好む場合は`-H'や`--si'オプションを使用して
     ください．

`-H'
`--si'
     それぞれのサイズに，メガバイトに対する`M'のようなサイズ文字を追加し
     ます．(SIは国際単位系で，それはこれらの文字をの接頭辞として定義していま
     す．)1000倍が使用され，1024ではありません．`M'は1,000,000バイトを意
     味します．1024倍を好む場合は`-h'や`--human-readable'オプション
     を使用してください．

`-i'
`--inodes'
     ブロックの使用の代わりに，inode使用の情報をリストアップします．
     inode(index
     nodeの省略)は，ファイルに関する，所有者，許可，タイムスタン
     プ，そしてディスクの位置のような情報を含みます．

`-k'
`--kilobytes'
     1024バイトブロックで出力し，デフォルトのブロックサイズに優先します
     (*note Block size::)．

`-l'
`--local'
     ローカルファイルシステムのリストに制限します．デフォルトではリモートファ
     イルシステムもリストアップされます．

`-m'
`--megabytes'
     メガバイト(すなわち1,048,576バイト)ブロックでサイズを出力します．

`--no-sync'
     あらゆる使用データの取得前に`sync'システムコールを呼び出しません．
     これは多くのディスクを持つシステム上で`df'の実行をかなり速くするか
     もしれませんが，システム(特にSunOS)によっては，結果がわずかに時代遅れに
     なるかもしれません．これはデフォルトです．

`-P'
`--portability'
     POSIX出力形式を使用します．これは，以下を除いてデフォルトの書式に似
     ています．

       1.
          それぞれのファイルシステムの情報は常に正確に1行で出力されます．マウント
          デバイスはその行に置かれません．これはマウントデバイスの名前が20文字以上
          (例えば，いくつかのネットワークマウント)の場合，列がきちんと並ばないこと
          を意味します．

       2.
          整数でない値は，切り捨てや，最も近い整数にされるのではなく，切り上げられ
          ます．

       3. ヘッダ出力行のラベルは，POSIXに従い変更されます．

`--sync'
     あらゆる使用データの取得前に`sync'システムコールを呼び出します．シ
     ステム(特にSunOS)によっては，こうすることで結果がより最新のものになりま
     すが，一般的に言って，特に多くのまたは非常に忙しいファイルシステムがある
     とき，このオプションで`df'はかなり遅くなります．

`-t FSTYPE'
`--type=FSTYPE'
     FSTYPE形式のファイルシステムのリストに制限します．複数のファイルシ
     ステム形式は，複数の`-t'オプションを与えることで指定できます．デフォ
     ルトでは何も省略されません．

`-T'
`--print-type'
     それぞれのファイルシステムの形式を出力します．ここで出力される形式は，
     `-t'と`-x'オプションで含めたり除外したりできるものと同じです．
     出力される特定の形式は，システムでサポートしているものすべてです．ここに
     共通の名前がいくつかあります(このリストはもちろん網羅的なものではありま
     せん)．

    `nfs'
          NFSファイルシステム，すなわち，他のマシンからネットワークでマウントされ
          たものです．これは，すべてのシステムで同じように使用されると思われる，一
          つの形式の名前です．

    `4.2, ufs, efs...'
          ローカルにマウントされたハードディスクのファイルシステムです．(システム
          はこれらの一つ以上のものをサポートするかもしれません．Linuxはそうです．)

    `hsfs, cdfs'
          CD-ROMドライブのファイルシステムです．HP-UXは`cdfs'を使用し，その他
          のほとんどのシステムは`hsfs' (`hs'は"High Sierra"です)を使用
          します．

    `pcfs'
          MS-DOSのファイルシステムで，通常ディスケット上です．


`-x FSTYPE'
`--exclude-type=FSTYPE'
     FSTYPE形式でないファイルシステムにリストを制限します．複数のファイ
     ルシステムの形式は，複数の`-x'オプションを使用することで排除できま
     す．デフォルトでは省略されるファイルシステム形式はありません．

`-v'
     無視されます．System V版の`df'への互換性のためです．



File: fileutils-ja.info,  Node: du invocation,  Next: sync invocation,  Prev: df invocation,  Up: Disk usage

9.2 `du': ファイルスペースの使用を推定
======================================

`du'は，指定されたファイルとそれぞれの(ディレクトリ引数の)サブディ
レクトリが使用しているディスクスペースの量を報告します．構文は以下のとお
りです．

     du [OPTION]... [FILE]...

   引数を用いない場合，`du'は現在のディレクトリのディスクスペースを報
告します．通常，ディスクスペースは1024バイト単位で出力されますが，これに
優先することもできます(*note Block size::)．

   プログラムは以下のオプションも受け入れます．*Note Common
options::,も参照 してください．

`-a'
`--all'
     ディレクトリだけでなく，すべてのファイルを数えたものを表示します．

`-b'
`--bytes'
     バイトで大きさを出力し，それはデフォルトのブロックサイズに優先します
     (*note Block size::)．

`-c'
`--total'
     すべての引数を処理した後，すべての引数の合計を出力します．これは，与えら
     れたファイルやディレクトリの集合の，ディスク使用の合計を知るために使用可
     能です．

`-D'
`--dereference-args'
     コマンドライン引数のシンボリックリンク自身を参照しません．その他のシンボ
     リックリンクには影響しません．これは，`/usr/tmp'のようにシンボリッ
     クリンクにされることが多いディレクトリのディスク使用を知りたいとき，役に
     立ちます．

`-h'
`--human-readable'
     それぞれのサイズに，メガバイトに対する`M'のようなサイズ文字を追加し
     ます．1024倍が使用され，1000ではありません．`M'は1,048,576バイトを
     意味します．1000倍を好む場合は`-H'や`--si'オプションを使用して
     ください．

`-H'
`--si'
     それぞれのサイズに，メガバイトに対する`M'のようなサイズ文字を追加し
     ます．(SIは国際単位系で，それはこれらの文字をの接頭辞として定義していま
     す．)1000倍が使用され，1024ではありません．`M'は1,000,000バイトを意
     味します．1024倍を好む場合は`-h'や`--human-readable'オプション
     を使用してください．

`-k'
`--kilobytes'
     1024バイトブロックで出力し，デフォルトのブロックサイズに優先します
     (*note Block size::)．

`-l'
`--count-links'
     すでに(ハードリンクとして)現れていた場合でも，すべてのファイルのサイズを
     計算します．

`-L'
`--dereference'
     シンボリックリンク自身を参照しません(リンクで使用しているスペースの代わ
     りに，リンクが示すファイルやディレクトリが使用しているディスクスペースを
     表示します)．

`--max-depth=DEPTH'
     階層のルートから最大MAX_DEPTHレベルまで降りて，それぞれのディレクトリ(と-
     allの場合はファイル)の合計を表示します．ルートはレベル０なので，`du
     --max-depth=0'は`du -s'と同じです．

`-m'
`--megabytes'
     メガバイト(すなわち1,048,576バイト)ブロックでサイズを出力します．

`-s'
`--summarize'
     それぞれの引数の合計のみ表示します．

`-S'
`--separate-dirs'
     サブディレクトリのサイズを含めず，それぞれのディレクトリのサイズを別々に
     報告します．

`-x'
`--one-file-system'
     処理を開始した引数のディレクトリと異なるファイルシステムを省略します．

`--exclude=PAT'
     循環しているとき，PATに一致するサブディレクトリやファイルを省略し
     ます．例えば，`du --exclude='*.o''は`.o'で終わる名前のファイル
     を除外します．

`-X FILE'
`--exclude-from=FILE'
     除外するパターンをFILEから受け取る以外，`--exclude'に似ていま
     す．FILEが`-'の場合，標準入力からパターンを受け取ります．


BSDシステムでは，HP-UXシステムからのNFSマウントされているファイルの正し
い値の半分のサイズを，`du'は報告します．HP-UXシステムでは，BSDシス
テムからのNFSマウントされているファイルの正しい値の２倍のサイズを報告し
ます．これはHP-UXの欠陥です．それはHP-UX `du'プログラムにも影響しま す．


File: fileutils-ja.info,  Node: sync invocation,  Prev: du invocation,  Up: Disk usage

9.3 `sync': ディスクのデータとメモリの同期
==========================================

`sync'は，メモリに蓄えられたあらゆるデータをディスクに書き出します．
これは，(制限はあるものの)編集されたスーパーブロック，編集されたinode，
そして遅延された読み書きを含むはずです．これはカーネルで実装されている必
要があります．`sync'プログラムは，`sync'システムコールの行使以
外，何もしません．

カーネルは，(相対的に遅い)ディクスの読み書きを避けるため，メモリのデータ
をそのままにします．これはパフォーマンスを改善しますが，コンピュータが壊
れた場合，結果としてデータが失われたり，ファイルシステムが壊れるかもしれ
ません．`sync'は，メモリにあるものすべてがディスクに書かれることを
確実にします．

   単独の`--help'や`--version' (*note Common options::)以外のあら
ゆるオプションは無視されます．


File: fileutils-ja.info,  Node: Index,  Prev: Disk usage,  Up: Top

索引
****

 [index ]
* Menu:

* -:                                     shred invocation.    (line 132)
* - and Unix rm:                         rm invocation.       (line  62)
* -, removing files beginning with:      rm invocation.       (line  50)
* --all <1>:                             du invocation.       (line  21)
* --all <2>:                             Which files are listed.
                                                              (line  12)
* --all:                                 df invocation.       (line  31)
* --almost-all:                          Which files are listed.
                                                              (line  17)
* --archive:                             cp invocation.       (line  46)
* --backup <1>:                          install invocation.  (line  28)
* --backup <2>:                          mv invocation.       (line  46)
* --backup <3>:                          Backup options.      (line  13)
* --backup <4>:                          cp invocation.       (line  54)
* --backup:                              ln invocation.       (line  51)
* --block-size=SIZE:                     Block size.          (line  14)
* --bourne-shell:                        dircolors invocation.
                                                              (line  27)
* --bytes:                               du invocation.       (line  25)
* --c-shell:                             dircolors invocation.
                                                              (line  33)
* --changes <1>:                         chgrp invocation.    (line  17)
* --changes <2>:                         chown invocation.    (line  50)
* --changes:                             chmod invocation.    (line  26)
* --classify:                            General output formatting.
                                                              (line  36)
* --color:                               General output formatting.
                                                              (line  21)
* --count-links:                         du invocation.       (line  63)
* --csh:                                 dircolors invocation.
                                                              (line  33)
* --date:                                touch invocation.    (line  53)
* --dereference <1>:                     Which files are listed.
                                                              (line  46)
* --dereference <2>:                     chown invocation.    (line  82)
* --dereference <3>:                     du invocation.       (line  68)
* --dereference <4>:                     chgrp invocation.    (line  26)
* --dereference:                         cp invocation.       (line 101)
* --dereference-args:                    du invocation.       (line  36)
* --directory <1>:                       Which files are listed.
                                                              (line  27)
* --directory <2>:                       install invocation.  (line  36)
* --directory <3>:                       ln invocation.       (line  58)
* --directory:                           rm invocation.       (line  22)
* --dired:                               What information is listed.
                                                              (line  11)
* --escape:                              Formatting the file names.
                                                              (line  11)
* --exact:                               shred invocation.    (line 116)
* --exclude-from=FILE:                   du invocation.       (line 101)
* --exclude-type:                        df invocation.       (line 136)
* --exclude=PAT:                         du invocation.       (line  95)
* --file-type:                           General output formatting.
                                                              (line  86)
* --force <1>:                           rm invocation.       (line  31)
* --force <2>:                           mv invocation.       (line  51)
* --force <3>:                           ln invocation.       (line  62)
* --force <4>:                           shred invocation.    (line  88)
* --force:                               cp invocation.       (line  77)
* --format <1>:                          General output formatting.
                                                              (line  76)
* --format:                              What information is listed.
                                                              (line  61)
* --from:                                chown invocation.    (line  59)
* --full-time:                           General output formatting.
                                                              (line  42)
* --group:                               install invocation.  (line  45)
* --help:                                Common options.      (line  11)
* --hide-control-chars:                  Formatting the file names.
                                                              (line  20)
* --human-readable <1>:                  df invocation.       (line  39)
* --human-readable <2>:                  du invocation.       (line  43)
* --human-readable <3>:                  Block size.          (line  85)
* --human-readable:                      What information is listed.
                                                              (line  37)
* --ignore-backups:                      Which files are listed.
                                                              (line  22)
* --ignore-fail-on-non-empty:            rmdir invocation.    (line  17)
* --ignore=PATTERN:                      Which files are listed.
                                                              (line  32)
* --indicator-style:                     General output formatting.
                                                              (line  36)
* --inode:                               What information is listed.
                                                              (line  54)
* --inodes:                              df invocation.       (line  54)
* --interactive <1>:                     cp invocation.       (line  92)
* --interactive <2>:                     rm invocation.       (line  36)
* --interactive <3>:                     mv invocation.       (line  56)
* --interactive:                         ln invocation.       (line  66)
* --iterations=NUMBER:                   shred invocation.    (line  93)
* --kilobytes <1>:                       General output formatting.
                                                              (line  71)
* --kilobytes <2>:                       du invocation.       (line  58)
* --kilobytes <3>:                       Block size.          (line  85)
* --kilobytes:                           df invocation.       (line  61)
* --link:                                cp invocation.       (line  97)
* --literal:                             Formatting the file names.
                                                              (line  16)
* --local:                               df invocation.       (line  66)
* --max-depth=DEPTH:                     du invocation.       (line  73)
* --megabytes <1>:                       du invocation.       (line  79)
* --megabytes:                           df invocation.       (line  71)
* --mode <1>:                            mkfifo invocation.   (line  20)
* --mode <2>:                            mknod invocation.    (line  39)
* --mode <3>:                            install invocation.  (line  51)
* --mode:                                mkdir invocation.    (line  24)
* --no-create:                           touch invocation.    (line  49)
* --no-dereference <1>:                  chgrp invocation.    (line  31)
* --no-dereference <2>:                  chown invocation.    (line  86)
* --no-dereference <3>:                  cp invocation.       (line  71)
* --no-dereference:                      ln invocation.       (line  70)
* --no-group:                            What information is listed.
                                                              (line  31)
* --no-sync:                             df invocation.       (line  74)
* --numeric-uid-gid:                     General output formatting.
                                                              (line  81)
* --one-file-system <1>:                 du invocation.       (line  92)
* --one-file-system:                     cp invocation.       (line 206)
* --owner:                               install invocation.  (line  58)
* --parents <1>:                         cp invocation.       (line 112)
* --parents <2>:                         rmdir invocation.    (line  22)
* --parents:                             mkdir invocation.    (line  31)
* --portability:                         df invocation.       (line  81)
* --preserve:                            cp invocation.       (line 105)
* --preserve-timestamps:                 install invocation.  (line  64)
* --print-database:                      dircolors invocation.
                                                              (line  38)
* --print-type:                          df invocation.       (line 110)
* --quiet <1>:                           chmod invocation.    (line  32)
* --quiet <2>:                           chgrp invocation.    (line  23)
* --quiet:                               chown invocation.    (line  56)
* --quote-name:                          Formatting the file names.
                                                              (line  26)
* --quoting-style:                       Formatting the file names.
                                                              (line  26)
* --recursive <1>:                       cp invocation.       (line 141)
* --recursive <2>:                       chmod invocation.    (line  46)
* --recursive <3>:                       chown invocation.    (line 107)
* --recursive <4>:                       chgrp invocation.    (line  52)
* --recursive <5>:                       rm invocation.       (line  43)
* --recursive:                           Which files are listed.
                                                              (line  51)
* --reference <1>:                       touch invocation.    (line  66)
* --reference <2>:                       chmod invocation.    (line  39)
* --reference <3>:                       chown invocation.    (line  94)
* --reference:                           chgrp invocation.    (line  39)
* --remove:                              shred invocation.    (line 107)
* --remove-destination:                  cp invocation.       (line 145)
* --reverse:                             Sorting the output.  (line  27)
* --separate-dirs:                       du invocation.       (line  87)
* --sh:                                  dircolors invocation.
                                                              (line  27)
* --show-control-chars:                  Formatting the file names.
                                                              (line  63)
* --si <1>:                              du invocation.       (line  50)
* --si <2>:                              Block size.          (line  85)
* --si <3>:                              df invocation.       (line  46)
* --si:                                  What information is listed.
                                                              (line  43)
* --silent <1>:                          chown invocation.    (line  56)
* --silent <2>:                          chmod invocation.    (line  32)
* --silent:                              chgrp invocation.    (line  23)
* --size:                                What information is listed.
                                                              (line 112)
* --size=BYTES:                          shred invocation.    (line 100)
* --sort:                                Sorting the output.  (line  55)
* --sparse=WHEN:                         cp invocation.       (line 149)
* --strip:                               install invocation.  (line  74)
* --strip-trailing-slashes <1>:          cp invocation.       (line 174)
* --strip-trailing-slashes:              mv invocation.       (line  70)
* --suffix <1>:                          mv invocation.       (line  75)
* --suffix <2>:                          install invocation.  (line  78)
* --suffix <3>:                          cp invocation.       (line 187)
* --suffix <4>:                          ln invocation.       (line  91)
* --suffix:                              Backup options.      (line  48)
* --summarize:                           du invocation.       (line  83)
* --symbolic:                            ln invocation.       (line  85)
* --symbolic-link:                       cp invocation.       (line 179)
* --sync:                                df invocation.       (line  97)
* --tabsize:                             General output formatting.
                                                              (line  96)
* --target-directory <1>:                Target directory.    (line  11)
* --target-directory <2>:                ln invocation.       (line  95)
* --target-directory <3>:                mv invocation.       (line  79)
* --target-directory <4>:                install invocation.  (line  82)
* --target-directory:                    cp invocation.       (line 191)
* --time <1>:                            Sorting the output.  (line  41)
* --time:                                touch invocation.    (line  62)
* --total:                               du invocation.       (line  30)
* --type:                                df invocation.       (line 104)
* --update:                              mv invocation.       (line  62)
* --verbose <1>:                         rmdir invocation.    (line  31)
* --verbose <2>:                         mkdir invocation.    (line  38)
* --verbose <3>:                         chown invocation.    (line 100)
* --verbose <4>:                         shred invocation.    (line 112)
* --verbose <5>:                         rm invocation.       (line  47)
* --verbose <6>:                         mv invocation.       (line  67)
* --verbose <7>:                         install invocation.  (line  86)
* --verbose <8>:                         chgrp invocation.    (line  45)
* --verbose <9>:                         cp invocation.       (line 195)
* --verbose <10>:                        ln invocation.       (line  99)
* --verbose:                             chmod invocation.    (line  36)
* --version:                             Common options.      (line  15)
* --version-control <1>:                 mv invocation.       (line  83)
* --version-control <2>:                 Backup options.      (line  54)
* --version-control <3>:                 cp invocation.       (line 199)
* --version-control <4>:                 install invocation.  (line  90)
* --version-control:                     ln invocation.       (line 103)
* --width:                               General output formatting.
                                                              (line 102)
* --zero:                                shred invocation.    (line 125)
* -1:                                    General output formatting.
                                                              (line  10)
* -a <1>:                                du invocation.       (line  21)
* -a:                                    cp invocation.       (line  46)
* -A:                                    Which files are listed.
                                                              (line  17)
* -a <1>:                                df invocation.       (line  31)
* -a <2>:                                touch invocation.    (line  45)
* -a:                                    Which files are listed.
                                                              (line  12)
* -b <1>:                                Backup options.      (line  13)
* -b <2>:                                install invocation.  (line  28)
* -b <3>:                                cp invocation.       (line  54)
* -b <4>:                                mv invocation.       (line  46)
* -b <5>:                                du invocation.       (line  25)
* -b <6>:                                dircolors invocation.
                                                              (line  27)
* -b:                                    Formatting the file names.
                                                              (line  11)
* -B:                                    Which files are listed.
                                                              (line  22)
* -b:                                    ln invocation.       (line  51)
* -c <1>:                                Sorting the output.  (line  14)
* -c <2>:                                chmod invocation.    (line  26)
* -c <3>:                                du invocation.       (line  30)
* -c <4>:                                chgrp invocation.    (line  17)
* -c <5>:                                chown invocation.    (line  50)
* -c <6>:                                dircolors invocation.
                                                              (line  33)
* -c:                                    install invocation.  (line  32)
* -C:                                    General output formatting.
                                                              (line  15)
* -c:                                    touch invocation.    (line  49)
* -D:                                    du invocation.       (line  36)
* -d <1>:                                touch invocation.    (line  53)
* -d <2>:                                rm invocation.       (line  22)
* -d:                                    Which files are listed.
                                                              (line  27)
* -D:                                    What information is listed.
                                                              (line  11)
* -d <1>:                                ln invocation.       (line  58)
* -d <2>:                                cp invocation.       (line  71)
* -d:                                    install invocation.  (line  36)
* -f <1>:                                chown invocation.    (line  56)
* -f <2>:                                chgrp invocation.    (line  23)
* -f <3>:                                chmod invocation.    (line  32)
* -f <4>:                                rm invocation.       (line  31)
* -f <5>:                                Sorting the output.  (line  20)
* -f <6>:                                shred invocation.    (line  88)
* -f <7>:                                cp invocation.       (line  77)
* -f <8>:                                ln invocation.       (line  62)
* -f:                                    touch invocation.    (line  57)
* -F <1>:                                ln invocation.       (line  58)
* -F:                                    General output formatting.
                                                              (line  36)
* -f:                                    mv invocation.       (line  51)
* -G:                                    What information is listed.
                                                              (line  31)
* -g:                                    install invocation.  (line  45)
* -g (ignored):                          ls invocation.       (line  28)
* -H:                                    df invocation.       (line  46)
* -h:                                    chown invocation.    (line  86)
* -H:                                    What information is listed.
                                                              (line  43)
* -h <1>:                                What information is listed.
                                                              (line  37)
* -h <2>:                                df invocation.       (line  39)
* -h <3>:                                Block size.          (line  85)
* -h:                                    du invocation.       (line  43)
* -H <1>:                                du invocation.       (line  50)
* -H:                                    cp invocation.       (line  86)
* -h:                                    chgrp invocation.    (line  31)
* -i <1>:                                mv invocation.       (line  56)
* -i <2>:                                rm invocation.       (line  36)
* -i <3>:                                cp invocation.       (line  92)
* -i:                                    ln invocation.       (line  66)
* -I:                                    Which files are listed.
                                                              (line  32)
* -i <1>:                                What information is listed.
                                                              (line  54)
* -i:                                    df invocation.       (line  54)
* -k <1>:                                Block size.          (line  85)
* -k <2>:                                du invocation.       (line  58)
* -k <3>:                                General output formatting.
                                                              (line  71)
* -k:                                    df invocation.       (line  61)
* -L <1>:                                Which files are listed.
                                                              (line  46)
* -L:                                    du invocation.       (line  68)
* -l:                                    cp invocation.       (line  97)
* -L:                                    cp invocation.       (line 101)
* -l <1>:                                du invocation.       (line  63)
* -l <2>:                                What information is listed.
                                                              (line  61)
* -l:                                    df invocation.       (line  66)
* -m <1>:                                install invocation.  (line  51)
* -m <2>:                                General output formatting.
                                                              (line  76)
* -m <3>:                                touch invocation.    (line  62)
* -m <4>:                                du invocation.       (line  79)
* -m <5>:                                mknod invocation.    (line  39)
* -m <6>:                                df invocation.       (line  71)
* -m <7>:                                mkfifo invocation.   (line  20)
* -m:                                    mkdir invocation.    (line  24)
* -n <1>:                                General output formatting.
                                                              (line  81)
* -n:                                    ln invocation.       (line  70)
* -N:                                    Formatting the file names.
                                                              (line  16)
* -n NUMBER:                             shred invocation.    (line  93)
* -o <1>:                                What information is listed.
                                                              (line 105)
* -o:                                    install invocation.  (line  58)
* -p <1>:                                install invocation.  (line  64)
* -p:                                    mkdir invocation.    (line  31)
* -P <1>:                                df invocation.       (line  81)
* -P:                                    cp invocation.       (line 112)
* -p <1>:                                cp invocation.       (line 105)
* -p <2>:                                dircolors invocation.
                                                              (line  38)
* -p:                                    rmdir invocation.    (line  22)
* -q:                                    Formatting the file names.
                                                              (line  20)
* -Q:                                    Formatting the file names.
                                                              (line  26)
* -r:                                    rm invocation.       (line  43)
* -R:                                    chgrp invocation.    (line  52)
* -r:                                    Sorting the output.  (line  27)
* -R:                                    chmod invocation.    (line  46)
* -r:                                    touch invocation.    (line  66)
* -R <1>:                                Which files are listed.
                                                              (line  51)
* -R <2>:                                chown invocation.    (line 107)
* -R <3>:                                cp invocation.       (line 141)
* -R:                                    rm invocation.       (line  43)
* -S <1>:                                Backup options.      (line  48)
* -S:                                    cp invocation.       (line 187)
* -s:                                    install invocation.  (line  74)
* -S <1>:                                Sorting the output.  (line  32)
* -S:                                    du invocation.       (line  87)
* -s:                                    What information is listed.
                                                              (line 112)
* -S:                                    ln invocation.       (line  91)
* -s <1>:                                ln invocation.       (line  85)
* -s:                                    du invocation.       (line  83)
* -S:                                    mv invocation.       (line  75)
* -s:                                    cp invocation.       (line 179)
* -S:                                    install invocation.  (line  78)
* -s BYTES:                              shred invocation.    (line 100)
* -t <1>:                                Sorting the output.  (line  36)
* -t:                                    df invocation.       (line 104)
* -T <1>:                                General output formatting.
                                                              (line  96)
* -T:                                    df invocation.       (line 110)
* -u:                                    Sorting the output.  (line  41)
* -U:                                    Sorting the output.  (line  48)
* -u <1>:                                shred invocation.    (line 107)
* -u:                                    mv invocation.       (line  62)
* -v:                                    install invocation.  (line  86)
* -V:                                    ln invocation.       (line 103)
* -v <1>:                                cp invocation.       (line 195)
* -v <2>:                                mkdir invocation.    (line  38)
* -v <3>:                                chgrp invocation.    (line  45)
* -v <4>:                                ln invocation.       (line  99)
* -v <5>:                                shred invocation.    (line 112)
* -v <6>:                                rm invocation.       (line  47)
* -v <7>:                                chown invocation.    (line 100)
* -v <8>:                                Sorting the output.  (line  55)
* -v:                                    rmdir invocation.    (line  31)
* -V <1>:                                mv invocation.       (line  83)
* -V:                                    cp invocation.       (line 199)
* -v <1>:                                mv invocation.       (line  67)
* -v:                                    chmod invocation.    (line  36)
* -V:                                    install invocation.  (line  90)
* -w:                                    General output formatting.
                                                              (line 102)
* -x <1>:                                df invocation.       (line 136)
* -x:                                    General output formatting.
                                                              (line  92)
* -X:                                    Sorting the output.  (line  62)
* -x <1>:                                cp invocation.       (line 206)
* -x <2>:                                shred invocation.    (line 116)
* -x:                                    du invocation.       (line  92)
* -X FILE:                               du invocation.       (line 101)
* -z:                                    shred invocation.    (line 125)
* 4.2 filesystem type:                   df invocation.       (line 122)
* abbreviations for months:              Calendar date items. (line  38)
* access permissions, changing:          chmod invocation.    (line   6)
* access time, changing:                 touch invocation.    (line  45)
* access time, printing or sorting files by: Sorting the output.
                                                              (line  41)
* across, listing files:                 General output formatting.
                                                              (line  92)
* adding permissions:                    Setting Permissions. (line  36)
* ago in date strings:                   Relative items in date strings.
                                                              (line  21)
* alternate ebcdic, converting to:       dd invocation.       (line  79)
* always color option:                   General output formatting.
                                                              (line  27)
* am in date strings:                    Time of day items.   (line  19)
* appropriate privileges:                install invocation.  (line  58)
* ascii, converting to:                  dd invocation.       (line  73)
* atime, changing:                       touch invocation.    (line  45)
* atime, printing or sorting files by:   Sorting the output.  (line  41)
* attributes, file:                      Changing file attributes.
                                                              (line   6)
* authors of getdate:                    Authors of getdate.  (line   6)
* auto color option:                     General output formatting.
                                                              (line  25)
* automounter filesystems:               df invocation.       (line  31)
* b for block special file:              mknod invocation.    (line  25)
* backslash sequences for file names:    Formatting the file names.
                                                              (line  11)
* backup files, ignoring:                Which files are listed.
                                                              (line  22)
* backup options:                        Backup options.      (line   6)
* backup suffix:                         Backup options.      (line  48)
* backups, making <1>:                   install invocation.  (line  28)
* backups, making <2>:                   ln invocation.       (line  51)
* backups, making <3>:                   Backup options.      (line  13)
* backups, making <4>:                   mv invocation.       (line  46)
* backups, making:                       cp invocation.       (line  54)
* backups, making only:                  cp invocation.       (line  34)
* beginning of time, for POSIX:          Date input formats.  (line  34)
* Bellovin, Steven M.:                   Authors of getdate.  (line   6)
* Berets, Jim:                           Authors of getdate.  (line   6)
* Berry, K.:                             Authors of getdate.  (line  13)
* block (space-padding):                 dd invocation.       (line  82)
* block size <1>:                        Block size.          (line   6)
* block size:                            dd invocation.       (line  49)
* block size of conversion:              dd invocation.       (line  52)
* block size of input:                   dd invocation.       (line  43)
* block size of output:                  dd invocation.       (line  46)
* block special files:                   mknod invocation.    (line  11)
* block special files, creating:         mknod invocation.    (line   6)
* BLOCK_SIZE:                            Block size.          (line  14)
* Bourne shell syntax for color setup:   dircolors invocation.
                                                              (line  27)
* bs:                                    dd invocation.       (line  49)
* BSD touch compatibility:               touch invocation.    (line  57)
* bugs, reporting:                       Introduction.        (line  12)
* byte-swapping:                         dd invocation.       (line  96)
* c for character special file:          mknod invocation.    (line  28)
* C shell syntax for color setup:        dircolors invocation.
                                                              (line  33)
* calendar date item:                    Calendar date items. (line   6)
* case, ignored in dates:                General date syntax. (line  59)
* cbs:                                   dd invocation.       (line  52)
* CD-ROM filesystem type:                df invocation.       (line 126)
* cdfs filesystem type:                  df invocation.       (line 126)
* changed files, verbosely describing:   chgrp invocation.    (line  17)
* changed owners, verbosely describing:  chown invocation.    (line  50)
* changing access permissions:           chmod invocation.    (line   6)
* changing file attributes:              Changing file attributes.
                                                              (line   6)
* changing file ownership:               chown invocation.    (line   6)
* changing file timestamps:              touch invocation.    (line   6)
* changing group ownership <1>:          chgrp invocation.    (line   6)
* changing group ownership:              chown invocation.    (line   6)
* changing special permissions:          Changing Special Permissions.
                                                              (line   6)
* character special files:               mknod invocation.    (line  11)
* character special files, creating:     mknod invocation.    (line   6)
* chgrp:                                 chgrp invocation.    (line   6)
* chmod:                                 chmod invocation.    (line   6)
* chown:                                 chown invocation.    (line   6)
* color database, printing:              dircolors invocation.
                                                              (line  38)
* color setup:                           dircolors invocation.
                                                              (line   6)
* color, distinguishing file types with: General output formatting.
                                                              (line  21)
* COLUMNS:                               General output formatting.
                                                              (line 102)
* commas, outputting between files:      General output formatting.
                                                              (line  76)
* comments, in dates:                    General date syntax. (line  59)
* common options:                        Common options.      (line   6)
* conditional executability:             Conditional Executability.
                                                              (line   6)
* conv:                                  dd invocation.       (line  67)
* conversion block size:                 dd invocation.       (line  52)
* converting while copying a file:       dd invocation.       (line   6)
* copying directories recursively:       cp invocation.       (line 127)
* copying existing permissions:          Copying Permissions. (line   6)
* copying files and directories:         cp invocation.       (line   6)
* copying files and setting attributes:  install invocation.  (line   6)
* count:                                 dd invocation.       (line  63)
* cp:                                    cp invocation.       (line   6)
* crashes and corruption:                sync invocation.     (line  12)
* creating directories:                  mkdir invocation.    (line   6)
* creating FIFOs (named pipes):          mkfifo invocation.   (line   6)
* creating links (hard or soft):         ln invocation.       (line   6)
* csh syntax for color setup:            dircolors invocation.
                                                              (line  33)
* ctime, printing or sorting by:         Sorting the output.  (line  14)
* data, erasing:                         shred invocation.    (line   6)
* database for color setup, printing:    dircolors invocation.
                                                              (line  38)
* date format, ISO 8601:                 Calendar date items. (line  30)
* date input formats:                    Date input formats.  (line   6)
* day in date strings:                   Relative items in date strings.
                                                              (line  26)
* day of week item:                      Day of week items.   (line   6)
* dd:                                    dd invocation.       (line   6)
* dereferencing symbolic links:          ln invocation.       (line  37)
* destination directory <1>:             ln invocation.       (line  95)
* destination directory <2>:             mv invocation.       (line  79)
* destination directory <3>:             Target directory.    (line  11)
* destination directory <4>:             install invocation.  (line  82)
* destination directory:                 cp invocation.       (line 191)
* device file, disk:                     df invocation.       (line  19)
* df:                                    df invocation.       (line   6)
* DF_BLOCK_SIZE:                         Block size.          (line  14)
* dir:                                   dir invocation.      (line   6)
* dircolors:                             dircolors invocation.
                                                              (line   6)
* directories, copying:                  cp invocation.       (line   6)
* directories, copying recursively:      cp invocation.       (line 127)
* directories, creating:                 mkdir invocation.    (line   6)
* directories, creating with given attributes: install invocation.
                                                              (line  36)
* directories, removing (recursively):   rm invocation.       (line  43)
* directories, removing empty:           rmdir invocation.    (line   6)
* directories, removing with unlink:     rm invocation.       (line  22)
* directory deletion, ignoring failures: rmdir invocation.    (line  17)
* directory deletion, reporting:         rmdir invocation.    (line  31)
* directory listing:                     ls invocation.       (line   6)
* directory listing, brief:              dir invocation.      (line   6)
* directory listing, recursive:          Which files are listed.
                                                              (line  51)
* directory listing, verbose:            vdir invocation.     (line   6)
* directory order, listing by:           Sorting the output.  (line  20)
* dired Emacs mode support:              What information is listed.
                                                              (line  11)
* disk allocation:                       What information is listed.
                                                              (line 112)
* disk device file:                      df invocation.       (line  19)
* disk usage:                            Disk usage.          (line   6)
* disk usage by filesystem:              df invocation.       (line   6)
* disk usage for files:                  du invocation.       (line   6)
* diskette filesystem:                   df invocation.       (line 131)
* displacement of dates:                 Relative items in date strings.
                                                              (line   6)
* DOS filesystem:                        df invocation.       (line 131)
* du:                                    du invocation.       (line   6)
* DU_BLOCK_SIZE:                         Block size.          (line  14)
* ebcdic, converting to:                 dd invocation.       (line  76)
* efs filesystem type:                   df invocation.       (line 122)
* Eggert, Paul:                          Authors of getdate.  (line   6)
* empty files, creating:                 touch invocation.    (line  18)
* epoch, for POSIX:                      Date input formats.  (line  34)
* erasing data:                          shred invocation.    (line   6)
* error messages, omitting <1>:          chmod invocation.    (line  32)
* error messages, omitting <2>:          chgrp invocation.    (line  23)
* error messages, omitting:              chown invocation.    (line  56)
* excluding files from du:               du invocation.       (line 101)
* executables and file type, marking:    General output formatting.
                                                              (line  36)
* execute permission:                    Mode Structure.      (line  14)
* execute permission, symbolic:          Setting Permissions. (line  59)
* existing backup method:                Backup options.      (line  38)
* extension, sorting files by:           Sorting the output.  (line  62)
* FIFOs, creating:                       mkfifo invocation.   (line   6)
* file attributes, changing:             Changing file attributes.
                                                              (line   6)
* file information, preserving:          cp invocation.       (line 105)
* file ownership, changing:              chown invocation.    (line   6)
* file permissions:                      File permissions.    (line   6)
* file permissions, numeric:             Numeric Modes.       (line   6)
* file space usage:                      du invocation.       (line   6)
* file timestamps, changing:             touch invocation.    (line   6)
* file type and executables, marking:    General output formatting.
                                                              (line  36)
* file type, marking:                    General output formatting.
                                                              (line  86)
* file types:                            Special file types.  (line   9)
* file types, special:                   Special file types.  (line   6)
* file utilities:                        Top.                 (line   6)
* files beginning with -, removing:      rm invocation.       (line  50)
* files, copying:                        cp invocation.       (line   6)
* filesystem disk usage:                 df invocation.       (line   6)
* filesystem space, retrieving current data more slowly: df invocation.
                                                              (line  97)
* filesystem space, retrieving old data more quickly: df invocation.
                                                              (line  74)
* filesystem types, limiting output to certain: df invocation.
                                                              (line 104)
* filesystem types, printing:            df invocation.       (line 110)
* filesystems and hard links:            ln invocation.       (line   6)
* filesystems, omitting copying to different: cp invocation.  (line 206)
* first in date strings:                 General date syntax. (line  25)
* force deletion:                        shred invocation.    (line  88)
* fortnight in date strings:             Relative items in date strings.
                                                              (line  14)
* fsck:                                  rm invocation.       (line  22)
* general date syntax:                   General date syntax. (line   6)
* getdate:                               Date input formats.  (line   6)
* giving away permissions:               Umask and Protection.
                                                              (line  12)
* grand total of disk space:             du invocation.       (line  30)
* group owner, default:                  Mode Structure.      (line  26)
* group ownership of installed files, setting: install invocation.
                                                              (line  45)
* group ownership, changing <1>:         chgrp invocation.    (line   6)
* group ownership, changing:             chown invocation.    (line   6)
* group, permissions for:                Setting Permissions. (line  24)
* hard link, defined:                    ln invocation.       (line  30)
* hard links to directories:             ln invocation.       (line  58)
* hard links, counting in du:            du invocation.       (line  63)
* hard links, creating:                  ln invocation.       (line   6)
* hard links, preserving:                cp invocation.       (line  71)
* help, online:                          Common options.      (line  11)
* High Sierra filesystem:                df invocation.       (line 126)
* history:                               Introduction.        (line  18)
* holes, copying files with:             cp invocation.       (line 149)
* horizontal, listing files:             General output formatting.
                                                              (line  92)
* hour in date strings:                  Relative items in date strings.
                                                              (line  14)
* hsfs filesystem type:                  df invocation.       (line 126)
* human-readable output <1>:             Block size.          (line  35)
* human-readable output <2>:             What information is listed.
                                                              (line  37)
* human-readable output <3>:             du invocation.       (line  43)
* human-readable output:                 df invocation.       (line  39)
* ibs:                                   dd invocation.       (line  43)
* if:                                    dd invocation.       (line  35)
* ignore filesystems:                    df invocation.       (line  31)
* inode number, printing:                What information is listed.
                                                              (line  54)
* inode usage:                           df invocation.       (line  54)
* inode, and hard links:                 ln invocation.       (line  30)
* inodes, written buffered:              sync invocation.     (line   6)
* input block size:                      dd invocation.       (line  43)
* install:                               install invocation.  (line   6)
* introduction:                          Introduction.        (line   6)
* ISO 8601 date format:                  Calendar date items. (line  30)
* items in date strings:                 General date syntax. (line   6)
* iterations, selecting the number of:   shred invocation.    (line  93)
* kilobytes for filesystem sizes:        df invocation.       (line  61)
* language, in dates:                    General date syntax. (line  41)
* last DAY:                              Day of week items.   (line  16)
* last in date strings:                  General date syntax. (line  25)
* lcase, converting to:                  dd invocation.       (line  90)
* lchown <1>:                            chgrp invocation.    (line  31)
* lchown <2>:                            chown invocation.    (line  82)
* lchown:                                chgrp invocation.    (line  26)
* leading directories, creating missing: install invocation.  (line  36)
* limiting output of du:                 du invocation.       (line  73)
* links, creating:                       ln invocation.       (line   6)
* Linux filesystem types:                df invocation.       (line 122)
* ln:                                    ln invocation.       (line   6)
* local filesystem types:                df invocation.       (line 122)
* long ls format:                        What information is listed.
                                                              (line  61)
* ls:                                    ls invocation.       (line   6)
* LS_BLOCK_SIZE:                         Block size.          (line  14)
* LS_COLORS:                             dircolors invocation.
                                                              (line  17)
* MacKenzie, David:                      Authors of getdate.  (line   6)
* Makefiles, installing programs in:     install invocation.  (line  18)
* manipulating files:                    Basic operations.    (line   6)
* megabytes for filesystem sizes <1>:    df invocation.       (line  71)
* megabytes for filesystem sizes:        du invocation.       (line  79)
* Meyering, Jim:                         Authors of getdate.  (line   6)
* midnight in date strings:              Time of day items.   (line  19)
* minute in date strings:                Relative items in date strings.
                                                              (line  14)
* minutes, time zone correction by:      Time of day items.   (line  27)
* mkdir:                                 mkdir invocation.    (line   6)
* mkfifo:                                mkfifo invocation.   (line   6)
* mknod:                                 mknod invocation.    (line   6)
* modes and umask:                       Umask and Protection.
                                                              (line   6)
* modes of created directories, setting: mkdir invocation.    (line  24)
* modes of created FIFOs, setting:       mkfifo invocation.   (line  20)
* modification time, sorting files by:   Sorting the output.  (line  36)
* modify time, changing:                 touch invocation.    (line  62)
* month in date strings:                 Relative items in date strings.
                                                              (line  14)
* month names in date strings:           Calendar date items. (line  38)
* months, written-out:                   General date syntax. (line  34)
* MS-DOS filesystem:                     df invocation.       (line 131)
* mtime, changing:                       touch invocation.    (line  62)
* multiple changes to permissions:       Multiple Changes.    (line   6)
* multipliers after numbers:             dd invocation.       (line  15)
* mv:                                    mv invocation.       (line   6)
* named pipes, creating:                 mkfifo invocation.   (line   6)
* newer files, moving only:              mv invocation.       (line  62)
* next DAY:                              Day of week items.   (line  16)
* next in date strings:                  General date syntax. (line  25)
* NFS filesystem type:                   df invocation.       (line 117)
* NFS mounts from BSD to HP-UX <1>:      du invocation.       (line 105)
* NFS mounts from BSD to HP-UX:          What information is listed.
                                                              (line 120)
* noerror:                               dd invocation.       (line 101)
* non-directories, copying as special files: cp invocation.   (line 127)
* none backup method:                    Backup options.      (line  30)
* none color option:                     General output formatting.
                                                              (line  23)
* none, sorting option for ls:           Sorting the output.  (line  48)
* noon in date strings:                  Time of day items.   (line  19)
* notrunc:                               dd invocation.       (line 104)
* now in date strings:                   Relative items in date strings.
                                                              (line  29)
* numbered backup method:                Backup options.      (line  34)
* numbers, written-out:                  General date syntax. (line  25)
* numeric modes:                         Numeric Modes.       (line   6)
* numeric uid and gid:                   General output formatting.
                                                              (line  81)
* obs:                                   dd invocation.       (line  46)
* octal numbers for file modes:          Numeric Modes.       (line   6)
* of:                                    dd invocation.       (line  38)
* one filesystem, restricting du to:     du invocation.       (line  92)
* one-line output format:                df invocation.       (line  81)
* ordinal numbers:                       General date syntax. (line  25)
* other permissions:                     Setting Permissions. (line  27)
* output block size:                     dd invocation.       (line  46)
* output format, portable:               df invocation.       (line  81)
* owner of file, permissions for:        Setting Permissions. (line  21)
* owner, default:                        Mode Structure.      (line  26)
* ownership of installed files, setting: install invocation.  (line  58)
* p for FIFO file:                       mknod invocation.    (line  22)
* parent directories and cp:             cp invocation.       (line 112)
* parent directories, creating:          mkdir invocation.    (line  31)
* parent directories, creating missing:  install invocation.  (line  36)
* parent directories, removing:          rmdir invocation.    (line  22)
* PC filesystem:                         df invocation.       (line 131)
* pcfs:                                  df invocation.       (line 131)
* permissions of files:                  File permissions.    (line   6)
* permissions of installed files, setting: install invocation.
                                                              (line  51)
* permissions, changing access:          chmod invocation.    (line   6)
* permissions, copying existing:         Copying Permissions. (line   6)
* permissions, for changing file timestamps: touch invocation.
                                                              (line  20)
* permissions, output by ls:             What information is listed.
                                                              (line  77)
* Pinard, F.:                            Authors of getdate.  (line  13)
* pm in date strings:                    Time of day items.   (line  19)
* portable output format:                df invocation.       (line  81)
* POSIX output format:                   df invocation.       (line  81)
* POSIX.2:                               Introduction.        (line  10)
* POSIXLY_CORRECT, and block size:       Block size.          (line  14)
* printing color database:               dircolors invocation.
                                                              (line  38)
* prompting, and ln:                     ln invocation.       (line  66)
* prompting, and mv:                     mv invocation.       (line  30)
* prompting, and rm:                     rm invocation.       (line  11)
* prompts, forcing:                      mv invocation.       (line  56)
* prompts, omitting:                     mv invocation.       (line  51)
* pure numbers in date strings:          Pure numbers in date strings.
                                                              (line   6)
* quoting style:                         Formatting the file names.
                                                              (line  29)
* read errors, ignoring:                 dd invocation.       (line 101)
* read permission:                       Mode Structure.      (line   8)
* read permission, symbolic:             Setting Permissions. (line  53)
* read system call, and holes:           cp invocation.       (line 149)
* recursive directory listing:           Which files are listed.
                                                              (line  51)
* recursively changing access permissions: chmod invocation.  (line  46)
* recursively changing file ownership:   chown invocation.    (line 107)
* recursively changing group ownership:  chgrp invocation.    (line  52)
* recursively copying directories:       cp invocation.       (line 127)
* relative items in date strings:        Relative items in date strings.
                                                              (line   6)
* removing empty directories:            rmdir invocation.    (line   6)
* removing files after shredding:        shred invocation.    (line 107)
* removing files or directories:         rm invocation.       (line   6)
* removing permissions:                  Setting Permissions. (line  40)
* restricted deletion flag:              Mode Structure.      (line  45)
* reverse sorting:                       Sorting the output.  (line  27)
* rm:                                    rm invocation.       (line   6)
* rmdir:                                 rmdir invocation.    (line   6)
* root as default owner:                 install invocation.  (line  58)
* Salz, Rich:                            Authors of getdate.  (line   6)
* seek:                                  dd invocation.       (line  59)
* self-backups:                          cp invocation.       (line  34)
* setgid:                                Mode Structure.      (line  39)
* setting permissions:                   Setting Permissions. (line  44)
* setuid:                                Mode Structure.      (line  36)
* setup for color:                       dircolors invocation.
                                                              (line   6)
* sh syntax for color setup:             dircolors invocation.
                                                              (line  27)
* SHELL environment variable, and color: dircolors invocation.
                                                              (line  17)
* shred:                                 shred invocation.    (line   6)
* SI output <1>:                         du invocation.       (line  50)
* SI output <2>:                         df invocation.       (line  46)
* SI output <3>:                         Block size.          (line  35)
* SI output:                             What information is listed.
                                                              (line  43)
* simple backup method:                  Backup options.      (line  43)
* SIMPLE_BACKUP_SUFFIX:                  Backup options.      (line  48)
* single-column output of files:         General output formatting.
                                                              (line  10)
* size of file to shred:                 shred invocation.    (line 100)
* size of files, reporting:              What information is listed.
                                                              (line 112)
* size of files, sorting files by:       Sorting the output.  (line  32)
* skip:                                  dd invocation.       (line  55)
* sorting ls output:                     Sorting the output.  (line   6)
* sparse files, copying:                 cp invocation.       (line 149)
* special file types:                    Special file types.  (line   9)
* special files:                         mknod invocation.    (line  11)
* status time, printing or sorting by:   Sorting the output.  (line  14)
* sticky:                                Mode Structure.      (line  45)
* stripping symbol table information:    install invocation.  (line  74)
* stripping trailing slashes <1>:        cp invocation.       (line 174)
* stripping trailing slashes:            mv invocation.       (line  70)
* subtracting permissions:               Setting Permissions. (line  40)
* superblock, writing:                   sync invocation.     (line   6)
* swab (byte-swapping):                  dd invocation.       (line  96)
* swap space, saving text image in:      Mode Structure.      (line  45)
* symbol table information, stripping:   install invocation.  (line  74)
* symbolic (soft) links, creating:       ln invocation.       (line   6)
* symbolic link, defined:                ln invocation.       (line  37)
* symbolic links, changing group:        chgrp invocation.    (line  31)
* symbolic links, changing owner <1>:    chown invocation.    (line  86)
* symbolic links, changing owner:        chgrp invocation.    (line  26)
* symbolic links, copying:               cp invocation.       (line  71)
* symbolic links, copying with:          cp invocation.       (line 179)
* symbolic links, dereferencing:         Which files are listed.
                                                              (line  46)
* symbolic links, dereferencing in du:   du invocation.       (line  68)
* symbolic links, permissions of:        chmod invocation.    (line  11)
* symbolic modes:                        Symbolic Modes.      (line   6)
* sync:                                  sync invocation.     (line   6)
* sync (padding with nulls):             dd invocation.       (line 107)
* synchronize disk and memory:           sync invocation.     (line   6)
* target directory <1>:                  install invocation.  (line  82)
* target directory <2>:                  mv invocation.       (line  79)
* target directory <3>:                  cp invocation.       (line 191)
* target directory <4>:                  Target directory.    (line  11)
* target directory <5>:                  ln invocation.       (line  95)
* target directory:                      Target directory.    (line   6)
* terminal, using color iff:             General output formatting.
                                                              (line  25)
* text image, saving in swap space:      Mode Structure.      (line  45)
* this in date strings:                  Relative items in date strings.
                                                              (line  29)
* time:                                  touch invocation.    (line  53)
* time of day item:                      Time of day items.   (line   6)
* time zone correction:                  Time of day items.   (line  27)
* time zone item <1>:                    General date syntax. (line  41)
* time zone item:                        Time zone items.     (line   6)
* timestamps of installed files, preserving: install invocation.
                                                              (line  64)
* timestamps, changing file:             touch invocation.    (line   6)
* today in date strings:                 Relative items in date strings.
                                                              (line  29)
* tomorrow in date strings:              Relative items in date strings.
                                                              (line  26)
* touch:                                 touch invocation.    (line   6)
* trailing slashes:                      Trailing slashes.    (line   6)
* truncating output file, avoiding:      dd invocation.       (line 104)
* ucase, converting to:                  dd invocation.       (line  93)
* ufs filesystem type:                   df invocation.       (line 122)
* umask and modes:                       Umask and Protection.
                                                              (line   6)
* unblock:                               dd invocation.       (line  86)
* unlink:                                rm invocation.       (line  22)
* unsorted directory listing:            Sorting the output.  (line  20)
* use time, changing:                    touch invocation.    (line  45)
* use time, printing or sorting files by: Sorting the output. (line  41)
* utilities for file handling:           Top.                 (line   6)
* vdir:                                  vdir invocation.     (line   6)
* verbose ls format:                     What information is listed.
                                                              (line  61)
* version number, finding:               Common options.      (line  15)
* version, sorting option for ls:        Sorting the output.  (line  55)
* version-control Emacs variable:        Backup options.      (line  23)
* VERSION_CONTROL <1>:                   cp invocation.       (line  54)
* VERSION_CONTROL <2>:                   mv invocation.       (line  46)
* VERSION_CONTROL <3>:                   install invocation.  (line  28)
* VERSION_CONTROL <4>:                   ln invocation.       (line  51)
* VERSION_CONTROL:                       Backup options.      (line  13)
* vertical sorted files in columns:      General output formatting.
                                                              (line  15)
* week in date strings:                  Relative items in date strings.
                                                              (line  14)
* write permission:                      Mode Structure.      (line  11)
* write permission, symbolic:            Setting Permissions. (line  56)
* year in date strings:                  Relative items in date strings.
                                                              (line  14)
* yesterday in date strings:             Relative items in date strings.
                                                              (line  26)



Tag Table:
Node: Top2415
Node: Introduction3148
Node: Common options4350
Node: Backup options5158
Node: Block size7283
Node: Target directory10726
Node: Trailing slashes12923
Node: File permissions13975
Node: Mode Structure14551
Node: Symbolic Modes16701
Node: Setting Permissions17670
Node: Copying Permissions20022
Node: Changing Special Permissions20765
Node: Conditional Executability22301
Node: Multiple Changes22912
Node: Umask and Protection24437
Node: Numeric Modes25462
Node: Date input formats27017
Ref: Date input formats-Footnote-129648
Node: General date syntax29703
Node: Calendar date items32008
Node: Time of day items33833
Node: Time zone items35380
Node: Day of week items36142
Node: Relative items in date strings37020
Node: Pure numbers in date strings38662
Node: Authors of getdate39469
Node: Directory listing40126
Node: ls invocation40624
Node: Which files are listed42240
Node: What information is listed43865
Node: Sorting the output48826
Node: More details about version sort51178
Node: General output formatting52335
Node: Formatting the file names56233
Node: dir invocation58324
Node: vdir invocation58776
Node: dircolors invocation59187
Node: Basic operations60559
Node: cp invocation61160
Node: dd invocation69335
Node: install invocation72535
Node: mv invocation76044
Node: rm invocation79415
Node: shred invocation81525
Node: Special file types88137
Node: ln invocation89425
Node: mkdir invocation93778
Node: mkfifo invocation95250
Node: mknod invocation96149
Node: rmdir invocation97661
Node: Changing file attributes98776
Node: chown invocation99571
Node: chgrp invocation103569
Node: chmod invocation105481
Node: touch invocation107088
Node: Disk usage109850
Node: df invocation110474
Node: du invocation115849
Node: sync invocation119396
Node: Index120270

End Tag Table
