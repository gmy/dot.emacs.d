-*- coding: utf-8 -*-
START-INFO-DIR-ENTRY
* Shell utilities(ja): (sh-utils-ja).             GNU shell utilities.
* basename(ja): (sh-utils-ja)basename invocation. Strip directory and suffix.
* chroot(ja): (sh-utils-ja)chroot invocation.     Specify the root directory.
* date(ja): (sh-utils-ja)date invocation.         Print/set system date and time.
* dirname(ja): (sh-utils-ja)dirname invocation.   Strip non-directory suffix.
* echo(ja): (sh-utils-ja)echo invocation.         Print a line of text.
* env(ja): (sh-utils-ja)env invocation.           Modify the environment.
* expr(ja): (sh-utils-ja)expr invocation.         Evaluate expressions.
* factor(ja): (sh-utils-ja)factor invocation.     Print prime factors
* false(ja): (sh-utils-ja)false invocation.       Do nothing, unsuccessfully.
* groups(ja): (sh-utils-ja)groups invocation.     Print group names a user is in.
* hostname(ja): (sh-utils-ja)hostname invocation. Print or set system name.
* id(ja): (sh-utils-ja)id invocation.             Print real/effective uid/gid.
* logname(ja): (sh-utils-ja)logname invocation.   Print current login name.
* nice(ja): (sh-utils-ja)nice invocation.         Modify scheduling priority.
* nohup(ja): (sh-utils-ja)nohup invocation.       Immunize to hangups.
* pathchk(ja): (sh-utils-ja)pathchk invocation.   Check file name portability.
* printenv(ja): (sh-utils-ja)printenv invocation. Print environment variables.
* printf(ja): (sh-utils-ja)printf invocation.     Format and print data.
* pwd(ja): (sh-utils-ja)pwd invocation.           Print working directory.
* seq(ja): (sh-utils-ja)seq invocation.           Print numeric sequences
* sleep(ja): (sh-utils-ja)sleep invocation.       Delay for a specified time.
* stty(ja): (sh-utils-ja)stty invocation.         Print/change terminal settings.
* su(ja): (sh-utils-ja)su invocation.             Modify user and group id.
* tee(ja): (sh-utils-ja)tee invocation.           Redirect to multiple files.
* test(ja): (sh-utils-ja)test invocation.         File/string tests.
* true(ja): (sh-utils-ja)true invocation.         Do nothing, successfully.
* tty(ja): (sh-utils-ja)tty invocation.           Print terminal name.
* uname(ja): (sh-utils-ja)uname invocation.       Print system information.
* users(ja): (sh-utils-ja)users invocation.       Print current user names.
* who(ja): (sh-utils-ja)who invocation.           Print who is logged in.
* whoami(ja): (sh-utils-ja)whoami invocation.     Print effective user id.
* yes(ja): (sh-utils-ja)yes invocation.           Print a string indefinitely.
END-INFO-DIR-ENTRY

   このファイルは，GNUシェルユーティリティを説明します．

   Copyright (C) 1994, 95, 96 Free Software Foundation, Inc.

   Permission is granted to make and distribute verbatim copies of this
manual provided the copyright notice and this permission notice are
preserved on all copies.

   Permission is granted to copy and distribute modified versions of
this manual under the conditions for verbatim copying, provided that
the entire resulting derived work is distributed under the terms of a
permission notice identical to this one.

   Permission is granted to copy and distribute translations of this
manual into another language, under the above conditions for modified
versions, except that this permission notice may be stated in a
translation approved by the Foundation.


File: sh-utils-ja.info,  Node: Top,  Next: Introduction,  Up: (dir)

GNUシェルユーティリティ
***********************

このマニュアルは，GNUシェルユーティリティのバージョン2.0を解 説します．

* Menu:

* Introduction::                Caveats, overview, and authors.
* Common options::              Common options.

* Date input formats::          Specifying date strings.
* Printing text::               echo printf yes
* Conditions::                  false true test expr
* Redirection::                 tee
* File name manipulation::      dirname basename pathchk
* Working context::             pwd stty printenv tty
* User information::            id logname whoami groups users who
* System context::              date uname hostname
* Modified command invocation:: chroot env nice nohup su
* Delaying::                    sleep
* Numeric operations::          factor seq

* Index::                       General index.


File: sh-utils-ja.info,  Node: Introduction,  Next: Common options,  Prev: Top,  Up: Top

1 はじめに
**********

まずはじめに，このマニュアルは不完全です．特に`stty'セクションは，
他のGNUマニュアルの標準に到達するまでには，本質的な再構成と追加の説明文
が必要です．一般的に説明文が足りません．マニュアルは現在，何をするべきか
知っていて，その方法を思い出す必要しかない人を想定しています．このため，
興味がある場合はこのマニュアルの改善に参加してください．GNUコミュニティ
全体が恩恵をあずかります．

これらのプログラムには，シェルスクリプトを書くときのみ役に立つものもあり
ます．このようなユーティリティは，実際，シェルスクリプト(を拡張する)
"言語"です．それ以外は，対話的なとき役に立つときがあります．

   GNUシェルユーティリティは，POSIX.2標準とほとんど互換性があります．

   バグを`bug-sh-utils@gnu.org'に報告してください．バージョンナンバー，
マシンアーキテクチャ，入力ファイル，期待したもの，得られたもの，そして，
なぜ間違っているかを含めることを忘れないでください．差分は歓迎しますが，
推察が困難なときもあるので，同様に問題の記述も含めてください． *Note
Bugs: (gcc)Bugs.

このマニュアルは元々，配布されているUnixのmanページから持ってきていて，
それはDavid MacKenzieが書き，Jim Meyeringが更新しました．今読んでいるも
のは，これらのユーティリティに対する権威のあるドキュメントです．manペー
ジは既に管理されていません．Franc,ois Pinardが，最初にTexinfo書式
に変更しました．Karl Berryが，索引の作成，いくつかの再編成，そして，結果
の編集を行いました．Richard Stallmanは，全体の処理についていつもの有益な
洞察を寄与しました．


File: sh-utils-ja.info,  Node: Common options,  Next: Date input formats,  Prev: Introduction,  Up: Top

2 共通のオプション
******************

ある特定のオプションはこれらのプログラムの全てで利用可能です．それぞれの
プログラムの個別の記述で書くのではなく，ここで記述します．(実際，全ての
GNUプログラムはそれらを受け入れる(または受け入れるべき)です．)

これらのプログラムの多くは曖昧な文字列を引数として受け入れます．その場合，
`--help'と`--version'は，コマンドライン引数にただ一つだけある
場合のみこれらのオプションとして受け入れます．

`--help'
     全ての利用可能なオプションをリストアップする使用方法のメッセージを出力し，
     正しく終了します．

`--version'
     バージョンナンバーを出力し，正しく終了します．



File: sh-utils-ja.info,  Node: Date input formats,  Next: Printing text,  Prev: Common options,  Up: Top

3 日付入力の書式
****************

最初の引用：

     我々の時間を計る単位は，秒から月まであり，かなり複雑で，非対称で，連結で
     きないので，徹頭徹尾，頭の計算で間に合わせることは，ほとんど不可能です．
     本当に，非道な神が我々を時間の奴隷にし，ぼんやりした繰り返し仕事と不快な
     驚きへの従属から，我々が逃げることをほとんど不可能にしようと企てたので，
     彼は我々の現在のシステムを伝える以上のことを行うことができませんでした．
     それは，台形の建築用ブロックの集合に似ていて，垂直や水平の表面が無く，最
     も単純な考えで，建造物を飾り立てることを要求された言語に似ていて，役に立
     たない微粒子と長い遠回しな表現です．我々がはっきりとした，または，少なく
     とも頭打ちな経験に直面することを可能にした，より成功した言語と科学ののパ
     ターンと異なり，我々の時間を計るシステムは，静かにそして繰り返し，時間の
     恐怖を呼び起こします．

     ... それは，建築家がフィートで長さを，メートルで幅を，そしてellで高
     さを計る必要があるかのようなものです．基本的な指示用のマニュアルで，五つ
     の異なる言語の知識を必要とするかのようなものです．我々が，どうにもならな
     い混乱した気分で，この間の火曜日や日曜日からの一週間といった，短い過去あ
     るいは近い将来を調査することがよくあるのは，不思議ではありません．
     ... (1)

     -- Robert Grudin, `Time and the Art of Living'.

このセクションでは，GNUプログラムが受け入れる，文章上での日付の表現を記
述します．これらは，ユーザが様々なプログラムの引数として供給可能な文字列
です．(`getdate'関数による)Cのインターフェースはここでは述べません．

ここでの日付の構文は，西暦0年から表現することは可能ですが，コンピュータ
の整数は，そのような(比較的)長い時間に対し余りに大きすぎます．Unixシステ
ム上で意味があるものとして利用可能な最も早い日付は，UTCの1970年の1月1日
の真夜中です．

* Menu:

* General date syntax::            Common rules.
* Calendar date item::             19 Dec 1994.
* Time of day item::               9:20pm.
* Time zone item::                 EST, DST, BST, UTC, ...
* Day of week item::               Monday and others.
* Relative item in date strings::  next tuesday, 2 years ago.
* Pure numbers in date strings::   19931219, 1440.
* Authors of getdate::             Bellovin, Salz, Berets, et al.

   ---------- Footnotes ----------

   (1) この引用の訳は，訳者本人が理解できていません．


File: sh-utils-ja.info,  Node: General date syntax,  Next: Calendar date item,  Up: Date input formats

3.1 一般的な日付の構文
======================

"日付"は，空白で分けられた多くの項目を含む，空も可能な文字列です．曖
昧にならないとき，空白は省略できます．空の文字列は今日の始まり(すなわち
真夜中)を意味します．項目の順序は重要ではありません．日付の文字列は，項
目の多くの特色を含むことができます．

   * カレンダーの日付項目

   * その日の時間の項目

   * タイムゾーンの項目

   * 曜日の項目

   * 相対的な項目

   * 純粋な数字

我々は，これらの項目形式のそれぞれを，以下で順番に記述します．

いくつかの数字を，ほとんどの文脈で単語で書き出すことができます．これは曜
日の項目や相対的な項目を指定するとき，最も役に立ちます(以下を参照してく
ださい)．ここにリストがあります．1に対する`first'，2に対する
`next'，3に対する`third'，4に対する`fourth'，5に対する
`fifth'，6に対する`sixth'，7に対する`seventh'，8に対する
`eighth'，9に対する`ninth'，10に対する`tenth'，11に対する
`eleventh'，そして12に対する`twelfth'です．また`last'は，
正確に-1を意味します．

月をこの方法で書くとき，"完全な綴り"の代わりに，それは数字で書かれてい
ると考えられます．これは文字に変更することもできます．

英文字の大文字小文字は，日付では完全に無視されます．コメントは，適切に入
れ子状になった丸カッコに含まれる限り，丸カッコの間で導入可能です．数字に
続かないハイフンは，現在無視されます．数字の前に前置されるゼロは無視され
ます．


File: sh-utils-ja.info,  Node: Calendar date item,  Next: Time of day item,  Prev: General date syntax,  Up: Date input formats

3.2 カレンダーの日付の項目
==========================

"カレンダーの日付の項目"は年の日付を指定します．それは，月が数字で指
定されるか文字で指定されるかによって異なりますこれら全ての文字列は，同じ
カレンダーの日付を指定します．

     1970-09-17           # ISO 8601.
     70-9-17              # これは，世紀をデフォルトで想定します．
     70-09-17             # 前置されるゼロは無視されます．
     9/17/72              # U.S.の一般的な表記です．
     24 September 1972
     24 Sept 72           # Septemberの省略指定です．
     24 Sep 72            # 三文字の省略は常に利用可能です．
     Sep 24, 1972
     24-sep-72
     24sep72

年も削除できます．この場合，最後に指定された年，または，無ければ現在の年
が利用されます．例えば，以下のようになります．

     9/17
     sep 17

   ここに規則があります．

   数字の月に対し，ISO 8601書式`YEAR-MONTH-DAY'が可
能で，YEARは正の数，MONTHは01と12の間の数，そしてDAYは
01と31の間の数です．数字が10未満の場合，前置されるゼロが存在する必要があ
ります．YEARが100未満の場合，この世紀を強制するために1900が加えら
れます．対称的に，合州国でよく使用される
`MONTH/DAY/YEAR'も受け入れられます．同様に，年を
削除すると`MONTH/DAY'です．

   文字の月は完全に綴ることもできます．`January'，`February'，
`March'，`April'，`May'，`June'，`July'，
`August'，`September'，`October'，`November'，または，
`December'です．文字の月は最初の三文字で省略でき，省略のドットの後
置も可能です．`September'の代わりに`Sept'と書くことも許可され ています．

月が文字で書かれるとき，カレンダーの日付は以下のようにして与えられます．

     DAY MONTH YEAR
     DAY MONTH
     MONTH DAY YEAR
     DAY-MONTH-YEAR

   または，年を省略します．

     MONTH DAY


File: sh-utils-ja.info,  Node: Time of day item,  Next: Time zone item,  Prev: Calendar date item,  Up: Date input formats

3.3 日付の時間の項目
====================

日付文字列での"日付の時間の項目"は，与えられた日付の時間を指定します．
ここにいくつか例があり，全て同じ時間を表現しています．

     20:02:0
     20:02
     8:02pm
     20:02-0500      # EST(合州国東部標準時)

   より一般的に，日付の時間は，`HOUR:MINUTE:SECOND'
として与えることができ，HOURは0と23の間の数字，MINUTEは0と59
の間の数字，そしてSECONDは0と59の間の数字です．代わりに，
`:SECOND'は省略でき，その場合，それは0です．

   時間に`am'や`pm'(または，`a.m.'や`p.m.')が続く場合，
HOURは1から12までの実行に限定され，`:MINUTE'は省略でき
ます(ゼロとされます)．`am'は午前を示し，`pm'は午後を示します．
この注釈で，12は1の前になります．真夜中は`12am'で，一方正午は
`12pm'です．

   時刻は，代わりにタイムゾーン修正を続けることができ，それは
`SHHMM'として表現され，Sは`+'または
`-'，HHは時間の数字，そしてMMは地域の分の数字になります．
タイムゾーン修正がこのように与えられるとき，それは，世界標準時(UTC)に関
連する時間として解釈され，タイムゾーンや地域的タイムゾーンに対する，あら
ゆる前置される指定に優先します．日付の時間のMINUTEの部分は，タイム
ゾーン修正が使用されるとき省略できません．これは，時間の分数部分でタイム
ゾーン修正を指定する唯一の方法です．

   `am'/`pm'やタイムゾーン修正は，どちらか一方のみ指定でき，両方
はできません．


File: sh-utils-ja.info,  Node: Time zone item,  Next: Day of week item,  Prev: Time of day item,  Up: Date input formats

3.4 タイムゾーンの項目
======================

"タイムゾーンの項目"は，国際的なタイムゾーンを指定し，小さな文字集合
で示されます．それらは下位互換性の理由でサポートされますが，それらは実際
は曖昧なので推奨されません．例えば，省略の`EST'はオーストラリアと合
州国では異なる意味を持ちます．含まれるピリオドは全て無視されます．軍のタ
イムゾーン指定は単一文字を使用します．現在，完全な地域の時間のみ，タイム
ゾーン項目で表現できます．タイムゾーン修正のより優れた制御に付いては，前
のセクションを参照してください．

ここに，多くのサマータイムを使用しないタイムゾーンがあり，地域の時間の値
で印付けされています．

-1200
     軍では`Y'です．

-1100
     軍では`X'です．

-1000
     軍では`W'です．

-0900
     軍では`V'です．

-0800
     `PST'はPacific Standardで，軍では`U'です．

-0700
     `MST'はMountain Standardで，軍では`T'です．

-0600
     `CST'はCentral Standardで，軍では`S'です．

-0500
     `EST'はEastern Standardで，軍では`R'です．

-0400
     `AST'はAtlantic Standardで，軍では`Q'です．

-0300
     軍では`P'です．

-0200
     軍では`O'です．

-0100
     軍では`N'です．

+0000
     `GMT'はGreenwich Mean，`UT'はUniversal，`UTC'は Coordinated
     Universal，`WET'はWestern European，そして，ISO 8601と
     軍では`Z'です．

+0100
     軍では`A'で，`CET'はCentral European，`MET'はMidden Europesche
     Tijd (Dutch)，そして`MEZ'はMittel-Europa"ische Zeit (German)です．

+0200
     軍では`B'で，`EET'はEastern Europeanです．

+0300
     軍では`C'です．

+0400
     軍では`D'です．

+0500
     軍では`E'です．

+0600
     軍では`F'です．

+0700
     軍では`G'です．

+0800
     軍では`H'です．

+0900
     軍では`IC'で，`JST'は日本標準時です．

+1000
     軍では`K'で，`GST'はGuam Standardです．

+1100
     軍では`L'です．

+1200
     軍では`M'で`NZST'はNew Zealand Standardです．

ここに，多くのサマータイム(DST)のタイムゾーンがあり，地域の時間の値で印
付けされています．また，以下のDSTではないタイムゾーンで，分けられた単語
(すなわち，空白で分けられているもの)の文字列`DST'が続くものは，対応
するDSTタイムゾーンが指定できます．

-0700
     `PDT'はPacific Daylightです．

-0600
     `MDT'はMountain Daylightです．

-0500
     `CDT'はCentral Daylightです．

-0400
     `EDT'はEastern Daylightです．

-0300
     `ADT'はAtlantic Daylightです．

+0100
     `BST'はBritish Summerで，`WEST'はWestern European Summerです．

+0200
     `CEST'はCentral European Summer，`MEST'はMidden Europesche S. Tijd
     (Dutch)，そして`MESZ'はMittel-Europa"ische Sommerzeit
     (German)です．

+1300
     `NZDT'はNew Zealand Daylightです．


File: sh-utils-ja.info,  Node: Day of week item,  Next: Relative item in date strings,  Prev: Time zone item,  Up: Date input formats

3.5 曜日の項目
==============

曜日の明示的な記述は，将来，曜日に到達するよう，(必要なら)日付に前置され
ます．

   曜日は，完全に綴ることができます．`Sunday'，`Monday'，
`Tuesday'，`Wednesday'，`Thursday'，`Friday'，または，
`Saturday'．曜日は，最初の三文字で省略でき，追加のピリオドを続ける
ことができます．特別な省略として，`Tuesday'に対する`Tues'，
`Wednesday'に対する`Wednes'，そして，`Thursday'に対する
`Thur'や`Thurs'も許可されます．

前置された追加分の週を移動するため，数字を曜日項目に前置することができま
す．それは，`third monday'のような表現が最も良い使用法です．この文
脈では，`last DAY'や`next DAY'も受け入れられます．
それらはDAYで表現されている日付の1週間前，または後になります．

   曜日に続くカンマは無視されます．


File: sh-utils-ja.info,  Node: Relative item in date strings,  Next: Pure numbers in date strings,  Prev: Day of week item,  Up: Date input formats

3.6 日付文字の相対的な項目
==========================

`相対的な項目'は，日付(それが無い場合は現在の日付)を前後に調整しま
す．相対的な項目の効果は蓄積されます．ここにいくつか例があります．

     1 year
     1 year ago
     3 years
     2 days

   時間の置換の単位は，年や月全体を移動するため，文字列`year'や
`month'が選択できます．年や月は全てが同じ期間ではないので，これらは
曖昧な単位です．より正確な単位は，14日と等価な`fortnight'，7日と等
価な`week'，24時間と等価な`day'，60分と等価な`hour'，60秒
と等価な`minute'や`min'，そして1秒と等価な`second'や
`sec'です．これらの単位の`s'接尾子は受け入れられ，無視されます．

時間の単位は乗数を前置でき，それは追加の符号付きの数字で与えられます．符
号無しの数字は，正の符号として扱われます．全く数字が無いものは，乗数とし
て1が暗示されます．文字列`ago'が続く相対的な項目は，値-1の乗
数が前置された単位と等価です．

   文字列`tomorrow'は，未来の1日と等価で(`day'と等価)，文字列
`yesterday'は，過去の1日と等価です(`day ago'と等価)．

   文字列`now'や`today'は，ゼロ値の時間を置換する相対的な項目で，
これらの文字列は，，ゼロ値の時間を置換することは，前の項目で変化されてい
ないときの現在時間を表現するという事実に由来します．それらは`12:00
today'のように，他の項目を強調するために使用できます．文字列`this'
もゼロ値の時間を置換する意味を持ちますが，`this thursday'のような日
付文字列で好まれます．

相対的な項目が，DSTと非DST(またはその逆)の境界を跨る日付を結果として生じ
るとき，時間は現地時間にしたがって調整されます．


File: sh-utils-ja.info,  Node: Pure numbers in date strings,  Next: Authors of getdate,  Prev: Relative item in date strings,  Up: Date input formats

3.7 日付文字列の純粋な数字
==========================

純粋な10進数の正確な解釈は，日付文字列の文脈に依存します．

   10進数が，形式YYYYMMDDで，他のカレンダーの日付項目 (*note Calendar
date item::)が，その日付項目の前に現われない場合，
YYYYは年，MMは月の数字，そしてDDは月の日付として，指定
されたカレンダーの日付として読み込まれます．

   10進数が形式HHMMで，他の日付の時間の項目がその日付文字列の前
に現われない場合，HHは日付の時間，そしてMMは時間の分として，
指定された日付の時間として読み込まれます．MMは省略もできます．

カレンダーの日付と日付の時間が，両方とも日付文字列の数字の左に現われ，そ
して相対的な項目が無い場合，数字は年に優先します．


File: sh-utils-ja.info,  Node: Authors of getdate,  Prev: Pure numbers in date strings,  Up: Date input formats

3.8 `getdate'の著者
===================

`getdate'は元々，Chapel HillのNorth Carolina大学にいるときにSteven M.
Bellovin (<smb@research.att.com>)によって実装されました．コー
ドはその後Usenetの2人に捻りを加えられ，Rich $alz (<rsalz@bbn.com>)とJim
Berets (<jberets@bbn.com>)が，1990
年8月に完全に点検しました．GNUシステムに対する様々な修正は，David
MacKenzie，Jim Meyering他によってなされました．

   この章は元々，Franc,ois Pinard (<pinard@iro.umontreal.ca>)が
`getdate.y'ソースコードから生成し，K. Berry
(<kb@cs.umb.edu>)が編集しました．


File: sh-utils-ja.info,  Node: Printing text,  Next: Conditions,  Prev: Date input formats,  Up: Top

4 テキストの表示
****************

このセクションは，テキスト文字列を画面に表示するコマンドを説明します．

* Menu:

* echo invocation::             Print a line of text.
* printf invocation::           Format and print data.
* yes invocation::              Print a string until interrupted.


File: sh-utils-ja.info,  Node: echo invocation,  Next: printf invocation,  Up: Printing text

4.1 `echo': テキストの行を表示(Print a line of text)
====================================================

`echo'は，与えられたそれぞれのSTRINGを，それぞれの間にスペー
スを用い，最後のものの後に改行を用いて，標準出力に書き出します．構文は以
下のとおりです．

     echo [OPTION]... [STRING]...

   プログラムは以下のオプションも受け入れます．*Note Common
options::,も参照 してください．

`-n'
     終りの改行を出力しません．

`-e'
     それぞれのSTRINGで，以下のバックスペースエスケープされた文字の解釈
     を可能にします．

    `\a'
          警報(ベル)

    `\b'
          バックスペース

    `\c'
          終りの改行を抑制

    `\f'
          用紙送り

    `\n'
          改行

    `\r'
          キャリッジリターン

    `\t'
          水平タブ

    `\v'
          垂直タブ

    `\\'
          バックスラッシュ

    `\NNN'
          ASCIIコードがNNN(８進数)の文字．NNNが有効な数字でない場合，
          それは文字通りに出力されます．



File: sh-utils-ja.info,  Node: printf invocation,  Next: yes invocation,  Prev: echo invocation,  Up: Printing text

4.2 `printf': データの書式化と出力
==================================

`printf'はテキストの書式化された表示を行います．構文は以下のとおり
です．

     printf FORMAT [ARGUMENT]...

   `printf'は，C `printf'関数と同じ方法で，`%'指示語と
`\'エスケープを解釈しながらFORMAT文字列を表示します．与えられ
たARGUMENTのすべてを変換する必要があるので，FORMAT引数は再利
用されます．

   `printf'は追加の指示語`%b'があり，それは，FORMAT文字列と
同じ方法で`\'エスケープを解釈しながら，その引数文字列を表示します．

   `printf'は，表示文字を指定するとき，FORMAT内の`\0ooo'を
(OOOが0から3桁の8進の場合)8進数として，そして，表示文字を指定する
とき，`\xhhh'を(HHHが0から3桁の16進の場合)16進数として解釈し ます．

   追加のエスケープ`\c'は，`printf'にそれ以上の出力を生成させませ ん．

   オプションは，単独の`--help'や`--version'だけです． *Note Common
options::.


File: sh-utils-ja.info,  Node: yes invocation,  Prev: printf invocation,  Up: Printing text

4.3 `yes': 中断するまで文字列を出力
===================================

`yes'は，スペースで分けられた改行が続くコマンド行引数を，キルされる
まで永遠に出力します．引数が与えられない場合は，改行が続く`y'を，キ
ルされるまで永遠に出力します．

   オプションは，単独の`--help'や`--version'だけです． *Note Common
options::.


File: sh-utils-ja.info,  Node: Conditions,  Next: Redirection,  Prev: Printing text,  Up: Top

5 条件
******

このセクションは，その出力ではなく，終了ステータスが主に役に立つコマンド
を記述します．このためそれらは，シェルの`if'文の条件やパイプライン
の最後のコマンドとしてよく使用されます．

* Menu:

* false invocation::            Do nothing, unsuccessfully.
* true invocation::             Do nothing, successfully.
* test invocation::             Check file types and compare values.
* expr invocation::             Evaluate expressions.


File: sh-utils-ja.info,  Node: false invocation,  Next: true invocation,  Up: Conditions

5.1 `false': 何もせず失敗します
===============================

`false'は，"失敗"を意味する1の終了ステータスを返す以外何もしま
せん．それは，シェルスクリプトの失敗のコマンドが必要な位置で使用すること
が可能です．

   `false'は，`--help'と`--version'を含む，すべてのコマンド
ライン引数を無視し，それは，そうしない場合，プログラマがあてにしている期
待する動作を変更するためです．(1)

   このバージョンの`false'は，Cプログラムとして実装されていて，そのた
め，シェルスクリプトの実装より安全かつ高速になり，アカウントの使用を禁止
する目的のダミーシェルとして安全に使用できます．

   ---------- Footnotes ----------

   (1) 訳注：実際にはこれらのオプション
を受け入れますが，失敗の終了ステータスを返します．


File: sh-utils-ja.info,  Node: true invocation,  Next: test invocation,  Prev: false invocation,  Up: Conditions

5.2 `true': 何もせず成功します
==============================

`true'は，"成功"を意味する0の終了ステータスを返す以外何もしませ
ん．それは，シェルスクリプトの成功のコマンドが必要な位置で使用することが
可能ですが，シェル組み込みコマンド `:' (コロン)は同じことをより高速
に行います．

   `true'は，`--help'と`--version'を含む，すべてのコマンドラ
イン引数を無視し，それは，そうしない場合，プログラマがあてにしている期待
する動作を変更するためです．(1)

   このバージョンの`true'は，Cプログラムとして実装されていて，そのため，
シェルスクリプトの実装より安全かつ高速になり，アカウントの使用を禁止する
目的のダミーシェルとして安全に使用できます．

   ---------- Footnotes ----------

   (1) 訳注：実際にはこれらのオプションを
受け入れますが，成功の終了ステータスを返します．


File: sh-utils-ja.info,  Node: test invocation,  Next: expr invocation,  Prev: true invocation,  Up: Conditions

5.3 `test': ファイル形式の調査と値の比較
========================================

条件式EXPRの評価に依存して，0(真)または1(偽)のステータスを返します．
表現のそれぞれの部分は，分離された引数にする必要があります．

   `test'には，ファイルのステータスの調査，文字演算子，そして数字比較
の演算子があります．

ほとんどのシェルは，同じ名前の組み込みコマンドがあるため，スクリプト内や
対話的に簡素なコマンド名を使用すると，ここで記述するものと異なる機能を得
る可能性があります．

   以下のオプションの他に，`test'は，単独の`--help'や
`--version'を受け入れます．*Note Common options::. 単一のオプション
なしの引数も可能です．`test'は，引数がnullでない場合，真を返します．

* Menu:

* File type tests::             -[bcdfhLpSt]
* Access permission tests::     -[gkruwxOG]
* File characteristics tests::  -e -s -nt -ot -ef
* String tests::                -z -n = !=
* Numeric tests::               -eq -ne -lt -le -gt -ge
* Connectives for test::        ! -a -o


File: sh-utils-ja.info,  Node: File type tests,  Next: Access permission tests,  Up: test invocation

5.3.1 ファイル形式のテスト
--------------------------

これらのオプションは，ファイルの特定の形式をテストします．(ファイルのす
べてですが，すべてのファイルが同じではありません！)

`-b FILE'
     FILEが存在し，ブロックスペシャルデバイスの場合，真です．

`-c FILE'
     FILEが存在し，キャラクタスペシャルデバイスの場合は真です．

`-d FILE'
     FILEが存在し，ディレクトリの場合は真です．

`-f FILE'
     FILEが存在し，通常のファイルの場合は真です．

`-h FILE'
`-L FILE'
     FILEが存在し，シンボリックリンクの場合は真です．

`-p FILE'
     FILEが存在し，名前付きパイプの場合は真です．

`-S FILE'
     FILEが存在し，ソケットの場合は真です．

`-t [FD]'
     FDが端末上で開かれている場合は真です．FDが省略された場合，そ
     れはデフォルトで1(標準出力)になります．



File: sh-utils-ja.info,  Node: Access permission tests,  Next: File characteristics tests,  Prev: File type tests,  Up: test invocation

5.3.2 アクセス許可のテスト
--------------------------

これらのオプションは，特定のアクセス許可をテストします．

`-g FILE'
     FILEが存在し，そのセットグループidビットが設定されている場合は真で
     す．

`-k FILE'
     FILEが存在し，"スティッキー"ビットが設定されている場合は真です．

`-r FILE'
     FILEが存在し，読み込み可能な場合は真です．

`-u FILE'
     FILEが存在し，セットユーザidビットが設定されている場合は真です．

`-w FILE'
     FILEが存在し，書き込み可能な場合は真です．

`-x FILE'
     FILEが存在し，実行可能な場合は真です．

`-O FILE'
     FILEが存在し，現在実施中のユーザidに所有されている場合は真です．

`-G FILE'
     FILEが存在し，現在実施中のグループidに所有されている場合は真です．



File: sh-utils-ja.info,  Node: File characteristics tests,  Next: String tests,  Prev: Access permission tests,  Up: test invocation

5.3.3 ファイルの特徴テスト
--------------------------

これらのオプションはその他のファイルの特徴を調査します．

`-e FILE'
     FILEが存在している場合は真です．

`-s FILE'
     FILEが存在し，大きさがゼロより大きい場合は真です．

`FILE1 -nt FILE2'
     FILE1がFILE2より(修正日で)新しい場合は真です．

`FILE1 -ot FILE2'
     FILE1がFILE2より(修正日で)古い場合は真です．

`FILE1 -ef FILE2'
     FILE1とFILE2が同じデバイスとi-node番号を持つ場合，すなわち，
     それらがお互いにハードリンクの場合は真です．



File: sh-utils-ja.info,  Node: String tests,  Next: Numeric tests,  Prev: File characteristics tests,  Up: test invocation

5.3.4 文字列のテスト
--------------------

これらのオプションは文字列の特徴をテストします．文字列は`test'に対
し引用符で囲みませんが，例えばスペースのような，シェルで特別な意味を持つ
文字を保護するために，それらを引用符で囲む必要があるかもしれません．

`-z STRING'
     STRINGの長さがゼロの場合は真です．

`-n STRING'
`STRING'
     STRINGの長さがゼロではないの場合は真です．

`STRING1 = STRING2'
     文字列が等しい場合は真です．

`STRING1 != STRING2'
     文字列が等しくない場合は真です．



File: sh-utils-ja.info,  Node: Numeric tests,  Next: Connectives for test,  Prev: String tests,  Up: test invocation

5.3.5 数値テスト
----------------

数値の関係です．引数は，完全な数値(負も可能です)，または，STRINGの
長さを評価する特別な式`-l STRING'にする必要があります．

`ARG1 -eq ARG2'
`ARG1 -ne ARG2'
`ARG1 -lt ARG2'
`ARG1 -le ARG2'
`ARG1 -gt ARG2'
`ARG1 -ge ARG2'
     これらの算数の二項演算子は，それぞれ，ARG1がARG2に比べて，等
     しい，等しくない，小さい，以下，大きい，または以上の場合に真を返します．


   例えば以下のようにします．

     test -1 -gt -2 && echo yes
     => yes
     test -l abc -gt 1 && echo yes
     => yes
     test 0x100 -eq 1
     error--> test: integer expression expected before -eq


File: sh-utils-ja.info,  Node: Connectives for test,  Prev: Numeric tests,  Up: test invocation

5.3.6 `test'に対する連結
------------------------

通常の論理結合子です．

`! EXPR'
     EXPRが偽の場合は真です．

`EXPR1 -a EXPR2'
     EXPR1とEXPR2の両方が真の場合は真です．

`EXPR1 -o EXPR2'
     EXPR1またはEXPR2のどちらかが真の場合は真です．



File: sh-utils-ja.info,  Node: expr invocation,  Prev: test invocation,  Up: Conditions

5.4 `expr': 式の評価
====================

`expr'は式を評価し，結果を標準出力に書き出します．それぞれの式のトー
クンは，分離している引数にする必要があります．

   オペランドは数字または文字列のどちらかになります．`expr'は，あらゆ
るものが，適用されているオペレーションに依存して，整数または文字列がオペ
ランドの位置に存在することを強制します．

   文字列は`expr'対し引用符で囲みませんが，例えばスペースのような，シェ
ルで特別な意味を持つ文字を保護するために，それらを引用符で囲む必要がある
かもしれません．

演算子は，挿入辞シンボルや前置キーワードとして与えることができます．カッ
コは，通常の方法のグループとして使用可能です(しかし，シェルがカッコを評
価することを避けるために，カッコを引用符で囲む必要があります)．

   終了ステータスは，以下のようになります．

     0 式がnullでも0でもない場合．
     1 式がnullまたは0の場合．
     2 有効な式の場合．

* Menu:

* String expressions::          <colon> match substr index length quote
* Numeric expressions::         + - * / %
* Relations for expr::          | & < <= = == != >= >
* Examples of expr::            Examples.


File: sh-utils-ja.info,  Node: String expressions,  Next: Numeric expressions,  Up: expr invocation

5.4.1 文字列式
--------------

`expr'は，パターンマッチングと，その他の文字列演算子をサポートしま
す．これらは，(次のセクションの)数字と関係の両演算子より低い優先順位にな
ります．

`STRING : REGEX'
     パターンマッチングを実行します．引数は文字列に制限され，2番目は，
     `^'が暗黙に前置された(基本的にGNU流の`grep'の)正規表現と考慮さ
     れます．最初の引数は，この正規表現に対し一致の評価がなされます．

     一致の評価が成功し，REGEXが`\('と`\)'を使用している場合，
     `:'式は，サブ式に一致したSTRINGの一部となります．それ以外の場
     合は一致した文字の数を返します．

     一致の評価に失敗した場合，REGEXで`\('と`\)'が使用されて
     いれば`:'演算子はnull文字を返し，それ以外では0を返します．

     最初の`\( ... \)'の組のみ，戻り値に関係します．追加の組は，正規
     表現演算子のグループ化の意味しかありません．

     正規表現内では，`\+'，`\?'，そして`\|'は，それぞれ，1以上，
     ゼロ以上，オア分離の選択肢の演算子です．SunOSとその他の`expr'はこれ
     らを通常の文字として扱います．(POSIXは，どちらの動作も許可します．)正規
     表現の構文の詳細は，*Note Regular Expression Library:
     (regex)Top.例は*Note Examples of expr::,にあります．

`match STRING REGEX'
     パターンマッチングを行う別の方法です．これは，`STRING : REGEX'と同じです．

`substr STRING POSITION LENGTH'
     少なくともLENGTHの長さの，POSITIONから始まる，STRINGの
     サブ文字列を返します．POSITIONまたはLENGTHのどちらかが，負，
     ゼロ，または数字以外の場合，null文字列を返します．

`index STRING CHARSET'
     CHARSETの最初の文字が見つかった，STRINGの最初の位置を返しま
     す．CHARSETの文字がSTRINGで見つからない場合は，0を返します．

`length STRING'
     STRINGの長さを返します．

`quote TOKEN'
     キーワードのようなMATCHや，演算子のような`/'の場合でも，
     TOKENを文字列として解釈します．これで，`expr length quote
     "$x"'や`expr quote "$x" : '.*/\(.\)''のテストが可能となり，$X
     の値が(例えば)`/'や`index'に偶然なった場合でも，正しくなります．
     この演算子はGNUの拡張です．環境変数`POSIXLY_CORRECT'が設定されている
     ときは，利用不可能です．


   `expr'にキーワードとして文字列を解釈させるために，`quote'演算
子を使用する必要があります．


File: sh-utils-ja.info,  Node: Numeric expressions,  Next: Relations for expr,  Prev: String expressions,  Up: expr invocation

5.4.2 数式
----------

`expr'は，通常の算術演算子をサポートし，優先順位は順に増加します．
(前のセクションの)文字列演算子は，より順位の低い演算子で，(次のセクショ
ンの)連結子は，より順位が高くなります．

`+ -'
     加算と減算です．どちらの引数も数字が強制されます．そうでない場合はエラー
     を生じます．

`* / %'
     乗算，除算，剰余です．どちらの引数も数字が強制されます．そうでない場合は
     エラーを生じます．



File: sh-utils-ja.info,  Node: Relations for expr,  Next: Examples of expr,  Prev: Numeric expressions,  Up: expr invocation

5.4.3 `expr'の関係式
--------------------

`expr'は，通常の論理結合と関係式をサポートします．これらは(前のセク
ションの)文字や数字の演算子より優先順位が高くなっています．ここに，低い
優先順位を最初にしたリストがあります．

`|'
     最初の引数がnullや0でない場合はそれを，それ以外では二番目の引数を返しま
     す．

`&'
     どちらの引数もnullや0でない場合は最初の引数を，それ以外では0を返します．

`< <= = == != >= >'
     引数を比較し，関係が真の場合は1を，それ以外では0を返します．`=='は
     `='の同義語です．`expr'は最初に，両方の引数を数字に強制し，数
     値の比較を行います．どちらかの強制が失敗した場合，辞書的な比較を行います．



File: sh-utils-ja.info,  Node: Examples of expr,  Prev: Relations for expr,  Up: expr invocation

5.4.4 `expr'の使用例
--------------------

ここに，シェルのメタ文字を引用符で囲むものを含む，いくつかの例があります．

   Bourne互換シェルで，シェル変数`foo'に1を加えます．
     foo=`expr $foo + 1`

   `$fname'に保存されているファイル名のディレクトリ以外の部分を，
`/'を含めずに出力します．
     expr $fname : '.*/\(^.*\)' '^|' $fname

   `\+'が演算子だということを表示する例です．
     expr aaa : 'a\+'
     => 3

     expr abc : 'a\(.\)c'
     => b
     expr index abcdef cz
     => 3
     expr index index a
     error--> expr: syntax error
     expr index quote index a
     => 0


File: sh-utils-ja.info,  Node: Redirection,  Next: File name manipulation,  Prev: Conditions,  Up: Top

6 リダイレクション
******************

Unixシェルは，通常いくつかの形式の"リダイレクション"を提供します--
コマンドの入力元や出力先を変更する方法です．しかし，一つの便利なリダイレ
クションは，シェルではなく，コマンドで分けられて実行ます．その記述がここ
にあります．

* Menu:

* tee invocation::              Redirect output to multiple files.


File: sh-utils-ja.info,  Node: tee invocation,  Up: Redirection

6.1 `tee': 出力を複数のファイルにリダイレクトする
=================================================

`tee'コマンドは，標準入力を標準出力と，引数で与えられたあらゆるファ
イルにコピーします．これは，データをパイプに送るだけでなく，コピーを保存
したいときに役に立ちます．構文は以下のとおりです．

     tee [OPTION]... [FILE]...

存在しないファイルに書き出す場合，それは作成されます．既存のファイルに書
き出す場合，前から含まれているデータは，`-a'オプションが使用されな
い場合は上書きされます．

   プログラムは以下のオプションを受け入れます．*Note Common
options::,も参照 してください．

`-a'
`--append'
     標準入力を与えられたファイルに，上書きせずに追加します．

`-i'
`--ignore-interrupts'
     中断シグナルを無視します．



File: sh-utils-ja.info,  Node: File name manipulation,  Next: Working context,  Prev: Redirection,  Up: Top

7 ファイル名の操作
******************

このセクションはファイル名を操作するコマンドを記述します．

* Menu:

* basename invocation::         Strip directory and suffix from a file name.
* dirname invocation::          Strip non-directory suffix from a file name.
* pathchk invocation::          Check file name portability.


File: sh-utils-ja.info,  Node: basename invocation,  Next: dirname invocation,  Up: File name manipulation

7.1 `basename': ディレクトリと接尾子をファイル名から除去
========================================================

`basename'は，前置されるディレクトリ要素をNAMEから削除します．
構文は以下のとおりです．

     basename NAME [SUFFIX]

   SUFFIXが指定され，NAMEの終りが同じ場合，それはNAMEから
同様に削除されます．`basename'は結果を標準出力に出力します．

   オプションは`--help'と`--version'だけです．*Note Common options::.


File: sh-utils-ja.info,  Node: dirname invocation,  Next: pathchk invocation,  Prev: basename invocation,  Up: File name manipulation

7.2 `dirname': ディレクトリ以外の接尾子をファイル名から除去
===========================================================

`dirname'は，最後のスラッシュで分離されている(おそらくファイル名と
なる)文字列の内容以外をすべて出力します．構文は以下のとおりです．

     dirname NAME

   NAMEは単一の要素で，`dirname'は(現在のディレクトリを意味する)
`.'を表示します．

   オプションは`--help'と`--version'だけです．*Note Common options::.


File: sh-utils-ja.info,  Node: pathchk invocation,  Prev: dirname invocation,  Up: File name manipulation

7.3 `pathchk': ファイル名の移植性を調査
=======================================

`pathchk'は，ファイル名の移植性を調査します．構文は以下のとおりです．

     pathchk [OPTION]... NAME...

   それぞれのNAMEに対し，`pathchk'はこれらの条件が真かどうかのメッ
セージを出力します．
  1. NAMEに存在するディレクトリの一つが検索(実行)許可を持たない．

  2. NAMEの長さが，ファイルシステムのファイル名の長さの最大より長い．

  3. 既存のディレクトリ名に一致するNAMEの一つの要素の長さが，ファイルシ
     ステムのファイル名の要素の長さの最大より長い．

   プログラムは以下のオプションも受け入れます．*Note Common
options::,も参照 してください．

`-p'
`--portability'
     根底にあるファイルシステムの長さ調査を実行する代わりに，POSIX.1の移植性
     のための最小制限に対し，それぞれのファイル名とその要素の長さをテストしま
     す．ファイル名が，ファイル名文字集合の，移植性にない文字を含まないことも
     調査します．


   終了ステータス．

     0 すべての指定されたファイル名が，すべてのテストを通過した場合．
     1 それ以外．


File: sh-utils-ja.info,  Node: Working context,  Next: User information,  Prev: File name manipulation,  Up: Top

8 作業中のコンテクスト
**********************

このセクションは，作業しているコンテクストを表示または変更するコマンドを
記述します．現在のディレクトリ，端末設定，その他です．次のセクションのユー
ザ関連のコマンドも参照してください．

* Menu:

* pwd invocation::              Print working directory.
* stty invocation::             Print or change terminal characteristics.
* printenv invocation::         Print environment variables.
* tty invocation::              Print file name of terminal on standard input.


File: sh-utils-ja.info,  Node: pwd invocation,  Next: stty invocation,  Up: Working context

8.1 `pwd': 作業中のディレクトリを表示
=====================================

`pwd'は，現在のディレクトリの完全に解決された名前を出力します．すな
わち，出力される名前のすべての要素は，実際のディレクトリ名です--シンボ
リックリンクではありません．

ほとんどのシェルは同じ名前の組み込みコマンドがあるので，装飾なしのスクリ
プト内や対話的なコマンド名を用いると，ここで記述している以外の異なる機能
を得る可能性があります．

   オプションは単独の`--help'と`--version'だけです．*Note Common
options::.


File: sh-utils-ja.info,  Node: stty invocation,  Next: printenv invocation,  Prev: pwd invocation,  Up: Working context

8.2 `stty': 端末の特徴を表示または変更
======================================

`stty'は，ボーレートのような，端末の特徴を表示または変更します．構
文は以下のとおりです．

     stty [OPTION] [SETTING]...
     stty [OPTION]

   設定行がない場合，`stty'は，ボーレート，(システムがサポートする)回
線制御数，そして`stty sane'で設定された値から変更された回線設定を表
示します．デフォルトで，モードの読み込みと設定は標準入力に接続されている
tty回線で実行されますが，これは`--file'オプションで修正可能です．

   `stty'は，端末回線処理の状況を変更する，以下で記述するような多くの
オプションではない引数を受け入れます．

   プログラムは以下のオプションを受け入れます．*Note Common
options::,も参照 してください．

`-a'
`--all'
     すべての現在の設定を人間が読める形式で出力します．このオプションは，あら
     ゆる回線設定と組み合わせて使用することはできません．

`-F DEVICE'
`--file DEVICE'
     標準入力に接続しているtty回線の代わりに，DEVICEで指定されているファ
     イル名で開かれた回線を設定します．このオプションは，`clocal'が設定
     されていない場合，キャリア検出回線が高速ではないので，POSIX
     ttyのブロッ
     キングを避けるために，`O_NONDELAY'フラグの使用を要求するPOSIX ttyを
     開くために必要です．そのため，従来の方法でシェルがデバイスを開くことが，
     常に可能なわけではありません．

`-g'
`--save'
     他の`stty'コマンドが現在の設定を復元するための引数として使用可能な
     形式で，すべての現在の設定を表示します．このオプションは，あらゆる回線設
     定と組み合わせて使用することはできません．


   多くの設定は，前置される`-'で止めることが可能です．そのような引数は，
それら記述で"取り消し可能"として以下では印がついています．記述自身は，
肯定の場合を述べていて，すなわち，(もちろん，明言されていなければ)取り消
しでは_ありません_．

設定には，拡張を使用しているため，すべてのPOSIXシステムで利用可能ではな
いものもあります．そのような引数はその記述で"非POSIX"という印がついて
います．非POSIXシステムでは，これらやその他の設定も利用可能ではありませ
んが，すべてのバリエーションを説明するのは実行不可能です．まずは，試して
みてください．

* Menu:

* Control::                     Control settings
* Input::                       Input settings
* Output::                      Output settings
* Local::                       Local settings
* Combination::                 Combination settings
* Characters::                  Special characters
* Special::                     Special settings


File: sh-utils-ja.info,  Node: Control,  Next: Input,  Up: stty invocation

8.2.1 制御設定
--------------

制御設定です．

`parenb'
     出力の一般的なパリティビットと，入力の期待するパリティビットです．取り消
     し可能です．

`parodd'
     (取り消す場合も)偶パリティです．取り消し可能です．

`cs5'
`cs6'
`cs7'
`cs8'
     文字サイズを5，6，7，または8ビットに設定します．

`hup'
`hupcl'
     最後の処理がttyを閉じるとき，ハングアップシグナルを送ります．取り消し可
     能です．

`cstopb'
     2つのストップビット(取消しの場合は1つ)を使用します．取り消し可能です．

`cread'
     入力の受信を許可します．取り消し可能です．

`clocal'
     モデム制御シグナルを利用不可能にします．取り消し可能です．

`crtscts'
     RTS/CTSフロー制御を利用可能にします．非POSIXです．取り消し可能です．


File: sh-utils-ja.info,  Node: Input,  Next: Output,  Prev: Control,  Up: stty invocation

8.2.2 入力設定
--------------

`ignbrk'
     ブレーク文字を無視します．取り消し可能です．

`brkint'
     ブレークを中断シグナルにします．取り消し可能です．

`ignpar'
     パリティエラーの文字を無視します．取り消し可能です．

`parmrk'
     (255-0の文字の順に)パリティーエラーに印を付けます．取り消し可能です．

`inpck'
     入力パリティチェックを可能にします．取り消し可能です．

`istrip'
     入力文字のハイビット(8番目)をクリアします．取り消し可能です．

`inlcr'
     ニューラインをキャリッジリターンに変換します．取り消し可能です．

`igncr'
     キャリッジリターンを無視します．取り消し可能です．

`icrnl'
     キャリッジリターンをニューラインに変換します．取り消し可能です．

`ixon'
     XON/XOFFフロー制御(すなわち，`CTRL-S'/`CTRL-Q')を可能にします．
     取り消し可能です．

`ixoff'
`tandem'
     システム入力バッファがほぼいっぱいのときの`stop'文字と，再びほとん
     ど空になったときの`start'文字の送信を可能にします．取り消し可能です．

`iuclc'
     大文字を小文字に変換します．非POSIXです．取り消し可能です．

`ixany'
     あらゆる文字の出力の再開を許可します(取消しの場合は開始文字のみです)．非
     POSIXです．取り消し可能です．

`imaxbel'
     入力バッファがいっぱいになったときに文字が届いた場合，ビープを鳴し，入力
     バッファをフラッシュしないことを可能にします．非POSIXです．取り消し可能
     です．


File: sh-utils-ja.info,  Node: Output,  Next: Local,  Prev: Input,  Up: stty invocation

8.2.3 出力設定
--------------

これらの引数は出力に関連する処理です．

`opost'
     出力を後処理します．取り消し可能です．

`olcuc'
     小文字を大文字に変換します．非POSIXです．取り消し可能です．

`ocrnl'
     キャリッジリターンをニューラインに変換します．非POSIXです．取り消し可能
     です．

`onlcr'
     ニューラインをキャリッジリターンに変換します．非POSIXです．取り消し可能
     です．

`onocr'
     最初の列のキャリッジリターンを出力しません．非POSIXです．取り消し可能で
     す．

`onlret'
     ニューラインがキャリッジリターンを実行します．非POSIXです．取り消し可能
     です．

`ofill'
     遅延に対する時間調整の代わりに，文字の補充(パディング)を使用します．非
     POSIXです．取り消し可能です．

`ofdel'
     補充に対し，null文字の代わりにデリート文字を使用します．非POSIXです．取
     り消し可能です．

`nl1'
`nl0'
     ニューラインの遅延形式です．非POSIXです．

`cr3'
`cr2'
`cr1'
`cr0'
     キャリッジリターンの遅延形式です．非POSIXです．

`tab3'
`tab2'
`tab1'
`tab0'
     水平タブの遅延形式です．非POSIXです．

`bs1'
`bs0'
     バックスペースの遅延形式です．非POSIXです．

`vt1'
`vt0'
     垂直タブの遅延形式です．非POSIXです．

`ff1'
`ff0'
     フォームフィードの遅延形式です．非POSIXです．


File: sh-utils-ja.info,  Node: Local,  Next: Combination,  Prev: Output,  Up: stty invocation

8.2.4 ローカル設定
------------------

`isig'
     `interrupt'， `quit'，そして`suspend'特殊文字を可能にしま
     す．取り消し可能です．

`icanon'
     `erase'，`kill'，`werase'，そして`rprnt'特殊文字を可
     能にします．取り消し可能です．

`iexten'
     非POSIX特殊文字を可能にします．取り消し可能です．

`echo'
     入力文字をエコーバックします．取り消し可能です．

`echoe'
`crterase'
     `erase'文字をバックスペース-スペース-バックスペースとしてエコーバッ
     クします．取り消し可能です．

`echok'
     `kill'文字の後のニューラインをエコーバックします．取り消し可能です．

`echonl'
     他の文字をエコーバックしていなくても，ニューラインをエコーバックします．
     取り消し可能です．

`noflsh'
     `interrupt'と`quit'特殊文字の後のフラッシュを不可能にします．
     取り消し可能です．

`xcase'
     `icanon'が設定されているとき，同じ小文字に`\'を前置することで，
     入力と出力の大文字を可能にします．非POSIXです．取り消し可能です．

`tostop'
     端末に書き込もうとしているバックグラウンド処理を停止します．非POSIXです．
     取り消し可能です．

`echoprt'
`prterase'
     削除された文字を後方の`\'と`/'の間にエコーバックします．非
     POSIXです．取り消し可能です．

`echoctl'
`ctlecho'
     制御文字を，そのままではなく，ハット表示(`^C')でエコーバック
     します．非POSIXです．取り消し可能です．

`echoke'
`crtkill'
     `echoctl'と`echok'の設定の代わりに，`echoprt'と
     `echoe'の設定で示すものとして，行のそれぞれの文字を削除することで，
     `kill'特殊文字をエコーバックします．非POSIXです．取り消し可能です．


File: sh-utils-ja.info,  Node: Combination,  Next: Characters,  Prev: Local,  Up: stty invocation

8.2.5 組み合わせ設定
--------------------

組み合わせ設定です．

`evenp'
`parity'
     `parenb -parodd
     cs7'と同じです．取り消し可能です．取り消しの場合は， `-parenb
     cs8'と同じです．

`oddp'
     `parenb parodd cs7'と同じです．取り消し可能です．取り消しの場合は，
     `-parenb cs8'と同じです．

`nl'
     `-icrnl -onlcr'と同じです．取り消し可能です．取り消しの場合は，
     `icrnl -inlcr -igncr onlcr -ocrnl -onlret'と同じです．

`ek'
     `erase'と`kill'特殊文字をそのデフォルト値にリセットします．

`sane'
     以下と同じです．
          cread -ignbrk brkint -inlcr -igncr icrnl -ixoff -iuclc -ixany
          imaxbel opost -olcuc -ocrnl onlcr -onocr -onlret -ofill -ofdel
          nl0 cr0 tab0 bs0 vt0 ff0 isig icanon iexten echo echoe echok
          -echonl -noflsh -xcase -tostop -echoprt echoctl echoke
     そして，すべての特殊文字をそのデフォルト値に設定します．

`cooked'
     `brkint ignpar istrip icrnl ixon opost isig icanon'と同じで，
     `min'と`time'文字が`eof'と`eol'文字と同じ場合は，
     `eof'と`eol'文字をそのデフォルト値に設定します．取り消し可能で
     す．取り消しの場合は，`raw'と同じです．

`raw'
     以下と同じです．
          -ignbrk -brkint -ignpar -parmrk -inpck -istrip -inlcr -igncr
          -icrnl -ixon -ixoff -iuclc -ixany -imaxbel -opost -isig -icanon
          -xcase min 1 time 0
     取り消し可能です．取り消しの場合は，`cooked'と同じです．

`cbreak'
     `-icanon'と同じです．取り消し可能です．取り消しの場合は，
     `icanon'と同じです．

`pass8'
     `-parenb -istrip
     cs8'と同じです．取り消し可能です．取り消しの場合は， `parenb
     istrip cs7'と同じです．

`litout'
     `-parenb -istrip -opost cs8'と同じです．取り消し可能です．取り消し
     の場合は，`parenb istrip opost cs7'同じです．

`decctlq'
     `-ixany'と同じです．非POSIXです．取り消し可能です．

`tabs'
     `tab0'と同じです．取り消し可能です．取り消しの場合は，`tab3'と
     同じです．

`lcase'
`LCASE'
     `xcase iuclc olcuc'と同じです．非POSIXです．取り消し可能です．

`crt'
     `echoe echoctl echoke'と同じです．

`dec'
     `echoe echoctl echoke -ixany intr ^C erase ^? kill C-u'と同じです．


File: sh-utils-ja.info,  Node: Characters,  Next: Special,  Prev: Combination,  Up: stty invocation

8.2.6 特殊文字
--------------

特殊文字のデフォルト値はシステム毎に異なります．それらは，構文`name
value'で設定され，nameは以下にリストアップされていて，valueはハット表示
(`^C')の文字通り，または，16進を示す`0x'，8真数を示す
`0'，または，10進を示すその他もので始まる整数のどちらかで，与えるこ
とが可能です．

   GNU sttyに対し，`^-'や`undef'の値を与えることで，特殊文字を使
用不可能にします．(これは，Ultrix `stty'と互換性がなく，それは特殊
文字を使用不可能にするために`u'の値を使用します．GNU `stty'は，
値`u'を他と同じように扱い，言い換えると，特殊文字を<U>に設定し ます．)

`intr'
     中断シグナルを送信します．

`quit'
     終了シグナルを送信します．

`erase'
     最後に入力された文字を削除します．

`kill'
     現在の行を削除します．

`eof'
     ファイルの終りを送信します(入力を終了します)．

`eol'
     行の終りです．

`eol2'
     行の終りの別文字です．非POSIXです．

`swtch'
     異なるシェルレイヤーに切り替えます．非POSIXです．

`start'
     停止後の出力を再開します．

`stop'
     出力を停止します．

`susp'
     端末の停止シグナルを送信します．

`dsusp'
     入力をフラッシュした後，停止シグナルを送信します．非POSIXです．

`rprnt'
     現在の行を再描画します．非POSIXです．

`werase'
     最後に入力された単語を消去します．非POSIXです．

`lnext'
     入力された次の文字を，それが特殊文字の場合でも，そのまま入力します．非
     POSIXです．


File: sh-utils-ja.info,  Node: Special,  Prev: Characters,  Up: stty invocation

8.2.7 特殊設定
--------------

`min N'
     `-icanon'が設定されているとき，制限されている時間値までに安全に読み
     込む文字の最小数を設定します．

`time N'
     `-icanon'が設定されているとき，文字の最小数が読み込まれていない場合，
     読み込み時間切れまでの10秒単位の数字を設定します．

`ispeed N'
     入力速度をNに設定します．

`ospeed N'
     出力速度をNに設定します．

`rows N'
     ttyカーネルドライバに端末の行数Nを伝えます．非POSIXです．

`cols N'
`columns N'
     カーネルに端末の列数Nを伝えます．非POSIXです．

`size'
     端末が持っているとカーネルが想像する，列と行の数を表示します．(カーネル
     で行と列をサポートしないシステムでは，特に環境変数`LINES'と
     `COLUMNS'が代わりに使用されます．しかし，GNU `stty'はそれについ
     て何も知りません．)非POSIXです．

`line N'
     回線制御Nを使用します．非POSIXです．

`speed'
     端末の速度を出力します．

`N'
     入出力の速度をNに設定します．Nは，以下の一つになります．0 50 75
     110 134 134.5 150 200 300 600 1200 1800 2400 4800 9600 19200 38400
     `exta' `extb'です．`exta'は19200と同じです．`extb'は
     38400と同じです．`-clocal'が設定されている場合，0は回線を切断します．


File: sh-utils-ja.info,  Node: printenv invocation,  Next: tty invocation,  Prev: stty invocation,  Up: Working context

8.3 `printenv': すべてまたはいくつかの環境変数を出力
====================================================

`printenv'は，環境変数の値を出力します．構文は以下のとおりです．

     printenv [OPTION] [VARIABLE]...

   引数がしていされていない場合，`printenv'はすべての環境変数の値を出
力します．それ以外の場合，それは，それぞれの設定されているVARIABLE
の値を出力し，設定されていないものには何もしません．

   オプションは，単独の`--help'または`--version'だけです． *Note Common
options::.

   終了ステータス．

     0 すべての指定された変数が見つかった場合．
     1 指定された変数の少なくとも一つが見つかった場合．
     2 書き込みエラーが発生した場合．


File: sh-utils-ja.info,  Node: tty invocation,  Prev: printenv invocation,  Up: Working context

8.4 `tty': 標準入力につながっている端末のファイル名を出力
=========================================================

`tty'は，標準入力が接続してある端末のファイル名を出力します．標準入
力が端末でない場合，それは，`not a tty'を出力します．構文は以下のと
おりです．

     tty [OPTION]...

   プログラムは以下のオプションも受け入れます．*Note Common
options::,も参照 してください．

`-s'
`--silent'
`--quiet'
     何も出力しません．終了ステータスを返すだけです．

   `tty'の終了ステータスです．

     0 標準入力が端末の場合．
     1 標準入力が端末でない場合．
     2 不正な引数が与えられた場合．
     3 書き込みエラーが発生した場合．


File: sh-utils-ja.info,  Node: User information,  Next: System context,  Prev: Working context,  Up: Top

9 ユーザ情報
************

このセクションは，ユーザに関連する情報を出力するコマンドを記述します．
login，グループ，その他です．

* Menu:

* id invocation::               Print real and effective uid and gid.
* logname invocation::          Print current login name.
* whoami invocation::           Print effective user id.
* groups invocation::           Print group names a user is in.
* users invocation::            Print login names of users currently logged in.
* who invocation::              Print who is currently logged in.


File: sh-utils-ja.info,  Node: id invocation,  Next: logname invocation,  Up: User information

9.1 `id': 実際と実効のuidとgidを出力
====================================

`id'は，与えられたユーザや，ユーザが指定されていない場合はそれを実
行しているプロセスの情報を出力します．構文は以下のとおりです．

     id [OPTION]... [USERNAME]

デフォルトで，それは実際のユーザid，実際のグループid，実際のユーザidと異
なる場合は実効ユーザid，実際のグループidと異なる場合は実効グループid，そ
して，追加のグループidを出力します．

それぞれのこれらの数値は，識別文字が前置され，カッコ内に対応するユーザや
グループ名が続きます．

   オプションで，`id'は，上記の情報の一部のみを出力します．*Note Common
options::,も参照してください．

`-g'
`--group'
     グループidのみ出力します．

`-G'
`--groups'
     追加のグループのみ出力します．

`-n'
`--name'
     ID番号の代わりにユーザやグループの名前を出力します．`-u'，`-g'，
     または`-G'が必要です．

`-r'
`--real'
     実効の代わりに，実際のユーザやグループのidを出力します．`-u'，
     `-g'，または`-G'が必要です．

`-u'
`--user'
     ユーザidのみ出力します．


File: sh-utils-ja.info,  Node: logname invocation,  Next: whoami invocation,  Prev: id invocation,  Up: User information

9.2 `logname': 現在のログイン名を出力
=====================================

`logname'は，ファイル`/etc/utmp'に見つかる，呼び出しているユー
ザ名を出力し，0のステータスで終了します．呼び出しているプロセスに対する
`/etc/utmp'項目がない場合，`logname'はエラーメッセージを出力し，
1のステータスで終了します．

   オプションは`--help'と`--version'のみです．*Note Common options::.


File: sh-utils-ja.info,  Node: whoami invocation,  Next: groups invocation,  Prev: logname invocation,  Up: User information

9.3 `whoami': 実効ユーザidの出力
================================

`whoami'は，現在の実効ユーザidに関連しているユーザ名を出力します．
コマンド`id -un'と同じです．

   オプションは`--help'と`--version'のみです．*Note Common options::.


File: sh-utils-ja.info,  Node: groups invocation,  Next: users invocation,  Prev: whoami invocation,  Up: User information

9.4 `groups': ユーザが所属するグループ名を出力
==============================================

`groups'は，与えられたそれぞれのUSERNAME，または，名前が与え
られない場合は現在のプロセスに対する，プライマリと追加のグループ名を出力
します．名前が与えられた場合は，それぞれのユーザ名が，ユーザのグループの
リストの前に出力されます．構文は以下のとおりです．

     groups [USERNAME]...

   グループリストは，コマンド`id -Gn'の出力と同じです．

   オプションは`--help'と`--version'のみです．*Note Common options::.


File: sh-utils-ja.info,  Node: users invocation,  Next: who invocation,  Prev: groups invocation,  Up: User information

9.5 `users': 現在ログインしているユーザのログイン名を出力
=========================================================

`users'は，現在のホストに現在ログインしているユーザの，空白で分けら
れたユーザ名のリストを，単一行に出力します．それぞれのユーザ名はログイン
セッションに対応するので，一回以上のログインセッションがあるユーザは，ユー
ザ名が回数と同じ数だけ出力にあらわれます．構文は以下のとおりです．

     users [FILE]

   FILE引数がない場合は，`users'は，その情報をファイル
`/etc/utmp'から，抽出します．ファイル引数が与えられた場合は，
`users'は，代わりにそのファイルを使用します．普通は，
`/etc/wtmp'を選択します．

   オプションは`--help'と`--version'だけです．*Note Common options::.


File: sh-utils-ja.info,  Node: who invocation,  Prev: users invocation,  Up: User information

9.6 `who': 現在ログインしているユーザを出力
===========================================

`who'は，現在ログオンしているユーザの情報を出力します．構文は以下の
とおりです．

     `who' [OPTION] [FILE] [am i]

   非オプション引数が与えられていない場合，`who'は，現在ログオンしてい
るそれぞれのユーザに対し，以下の情報を出力します．ログイン名，端末回線，
ログイン時間，そして，リモートホスト名やXディスプレイです．

   非オプション引数が1つ与えられている場合，`who'は，`/etc/utmp'
の代わりに，それをログオンしているユーザの記録を含むファイル名として使用
します．通常，以前ログインしていた人を見るために，`/etc/wtmp'が引数
として与えられます．

   非オプションが2つ与えられている場合，`who'は，(標準入力から決定され
る)それを実行しているユーザの項目のみ出力し，それにはホスト名が前置され
ます．伝統的に，2つの与えられる引数は，`am i'で，`who am i'と なります．

   プログラムは以下のオプションも受け入れます．*Note Common
options::,も参照 してください．

`-m'
     `who am i'と同じです．

`-q'
`--count'
     ログイン名と，ログオンしているユーザの数のみを出力します．他のすべてのオ
     プションに優先します．

`-s'
     無視します．他のバージョンの`who'との互換性のためです．

`-i'
`-u'
`--idle'
     ログイン時間後，ユーザがアイドル状態の時間と分の数を出力します．`.'
     は，ユーザがこの1分間の間にアクティブだったということを意味します．
     `old'は，ユーザが24時間以上アイドル状態だということを意味します．

`-l'
`--lookup'
     DNSルックアップを通じて，utmpで見つかるホスト名の標準化を試みます．これ
     は，自動ダイアルアップインターネットアクセスを用いたシステムで，重大な遅
     延を引き起こすため，デフォルトではありません．

`-H'
`--heading'
     列の見出しを出力します．

`-w'
`-T'
`--mesg'
`--message'
`--writable'
     それぞれのログイン名の後に，ユーザのメッセージステータスを示す文字を出力
     します．

          `+' `write'メッセージが利用可能です．
          `-' `write'メッセージが利用不可能です．
          `?' 端末デバイスが見つかりません．



File: sh-utils-ja.info,  Node: System context,  Next: Modified command invocation,  Prev: User information,  Up: Top

10 システムコンテクスト
***********************

このセクションは，システム全体の情報を出力または変更するコマンドを記述し
ます．

* Menu:

* date invocation::             Print or set system date and time.
* uname invocation::            Print system information.
* hostname invocation::         Print or set system name.


File: sh-utils-ja.info,  Node: date invocation,  Next: uname invocation,  Up: System context

10.1 `date': システムの日付と時間を出力または設定
=================================================

引数を伴わない`date'は，(以下で記述する)`%c'指示語の書式で，現
在の時間と日付を出力します．構文は以下のとおりです．

     date [OPTION]... [+FORMAT]
     date [-u|--utc|--universal] [ MMDDHHMM[[CC]YY][.SS] ]

   `+'で始まる引数が与えられた場合，`date'は現在の時間と日付(また
は，以下で参照できる，`--date'オプションで指定された日付と時間)を，
引数で定義された書式で出力し，それは，`strftime'関数と同じです．
`%'で始まる指示語以外の，書式文字列内の文字は，変更されずに出力され
ます．指示語は以下で記述します．

* Menu:

* Time directives::             %[HIklMprsSTXzZ]
* Date directives::             %[aAbBcdDhjmUwWxyY]
* Literal directives::          %[%nt]
* Padding::                     Pad with zeroes, spaces (%_), or nothing (%-).
* Setting the time::            Changing the system clock.
* Options for date::            Instead of the current time.
* Examples of date::            Examples.


File: sh-utils-ja.info,  Node: Time directives,  Next: Date directives,  Up: date invocation

10.1.1 時間指示語
-----------------

時間に関連する`date'の指示語です．

`%H'
     時間(00...23)

`%I'
     時間(01...12)

`%k'
     時間( 0...23)

`%l'
     時間( 1...12)

`%M'
     分(00...59)

`%p'
     ロケールの午前または午後

`%r'
     時間で，12時間基準(hh:mm:ss [AP]M)

`%s'
     エポック，すなわち1970年1月1日00:00:00
     UTCからの秒(GNU拡張)です．この値
     は，エポックとlocaltimeシステムコールで定義される現在の日付の間の時間だ
     ということに注意してください．それは，`--date'オプションで変更され
     ません．

`%S'
     秒(00...61)

`%T'
     時間で，24時間基準(hh:mm:ss)

`%X'
     ロケールの時間表現(%H:%M:%S)

`%z'
     RFC-822スタイルの数値的なタイムゾーン(例えば，-0600や+0100)，または，タ
     イムゾーンが決定できない場合は何もしません．この値は_現在の_タイム
     ゾーンを反映します．それは，`--date'オプションで変更されません．

`%Z'
     タイムゾーン(例えば，EDT)，または，タイムゾーンが決定できない場合は何も
     しません．この値は_現在の_タイムゾーンを反映することに注意してくだ
     さい．それは，`--date'オプションで変更されません．


File: sh-utils-ja.info,  Node: Date directives,  Next: Literal directives,  Prev: Time directives,  Up: date invocation

10.1.2 日付指示語
-----------------

日付に関連する`date'指示語です．

`%a'
     ロケール略記される曜日の名前(Sun...Sat)

`%A'
     ロケールの完全な週の曜日の名前で，可変長(Sunday...Saturday)

`%b'
     ロケールの略記される月の名前(Jan...Dec)

`%B'
     ロケールの完全な月の名前で，可変長(January...December)

`%c'
     ロケールの日付と時間(Sat Nov 04 12:02:33 EST 1989)

`%d'
     月の何日目(01...31)

`%D'
     日付(mm/dd/yy)

`%h'
     %bと同じ

`%j'
     年の何日目(001...366)

`%m'
     月(01...12)

`%U'
     日曜日を週の最初の日として用いた，年の何週目(00...53)です．新年の最
     初の日曜日の前の日付は，0週目になります．

`%V'
     月曜日を週の最初の日として用いた，年の何週目の10進(00...53)です．新
     年の1月1日が含まれる週が，4日以上の日を含む場合，それは第1週と考えられま
     す．それ以外の場合は，前年の53週目となり，翌週が第1週となります．(ISO
     8601: 1988標準を参照してください．)

`%w'
     週の何日目(0...6)で，0は日曜日に対応します．

`%W'
     月曜日を週の最初の日として用いた，年の何週目(00...53)です．新年の最
     初の月曜日の前の日付は，0週目になります．

`%x'
     ロケールの日付表現(mm/dd/yy)

`%y'
     最後の2桁を用いた年(00...99)

`%Y'
     年(1970....)


File: sh-utils-ja.info,  Node: Literal directives,  Next: Padding,  Prev: Date directives,  Up: date invocation

10.1.3 リテラル指示語
---------------------

リテラル文字列を生成する`date'の指示語です．

`%%'
     リテラルの%

`%n'
     改行

`%t'
     水平タブ


File: sh-utils-ja.info,  Node: Padding,  Next: Setting the time,  Prev: Literal directives,  Up: date invocation

10.1.4 パディング
-----------------

デフォルトで，`date'は数値フィールドをゼロでパディングし，例えば，
数字の月は，常に2桁で出力されます．GNU `date'は，以下の`%'と指
示語の間の数値修飾子を認識します．

`-'
     (ハイフン)
     フィールドをパディングしません．出力を人間が利用する目的の場
     合役に立ちます．

`_'
     (アンダースコア)フィールドをスペースでパディングします．出力に固定数の文
     字が必要で，ゼロでは混乱する場合，役に立ちます．

これらはGNU拡張です．

   ここに違いを表現する例があります．

     date +%d/%m -d "Feb 1"
     => 01/02
     date +%-d/%-m -d "Feb 1"
     => 1/2
     date +%_d/%_m -d "Feb 1"
     =>  1/ 2


File: sh-utils-ja.info,  Node: Setting the time,  Next: Options for date,  Prev: Padding,  Up: date invocation

10.1.5 時間の設定
-----------------

`+'で始まらない引数が与えられた場合，`date'は，システム時計を
その引数(以下で記述)で指定された時間と日付に設定します．システム時計を設
定するため，適切な特権を持っている必要があります．`--date'と
`--set'オプションは，引数として使用できません．`--universal'オ
プションは，指定された時間と日付がローカルなタイムゾーンではなく世界標準
時に関連することを示すために，引数として使用できます．

引数は，完全な数字から成り立つ必要があり，それは以下の意味を持ちます．

MM
     月

DD
     月の日付

HH
     時間

MM
     分

CC
     年の最初の2桁(オプション)

YY
     年の最後の2桁(オプション)

SS
     秒(オプション)

   `--set'オプションもシステム時計を設定します．次のオプションを参照し
てください．


File: sh-utils-ja.info,  Node: Options for date,  Next: Examples of date,  Prev: Setting the time,  Up: date invocation

10.1.6 `date'のオプション
-------------------------

プログラムは以下のオプションも受け入れます．*Note Common
options::,も参照 してください．

`-d DATESTR'
`--date=DATESTR'
     現在の時間と日付の代わりに，DATESTRで指定された時間と日付を表示し
     ます．DATESTRは，ほとんどあらゆる一般的な書式が可能です．月の名前，
     タイムゾーン，`am'と`pm'，`yesterday'，`ago'，
     `next'，等を含めることが可能です．*Note Date input formats::.

`-f DATEFILE'
`--file=DATEFILE'
     `-d'と同様に，DATEFILEのそれぞれの行を解析し，結果の時間と日
     付を表示します．DATEFILEが`-'の場合，標準入力を使用します．
     `date'の実行を何度も開始するシステムのオーバーへッドは無視できない
     ので，これは多くの日付を処理するとき役に立ちます．

`-I[TIMESPEC]'
`--iso-8601[=TIMESPEC]'
     ISO 8601書式`%Y-%m-%d'を使用して日付を表示します．

     オプション引数のTIMESPECは，含める時間の追加の単語の数を指定します．
     以下の一つになるはずです．
    `auto'
          デフォルトの動作です．日付のみ出力します．

    `hours'
          日付に時間を追加します．

    `minutes'
          時間と分を追加します．

    `seconds'
          時間，分，そして秒を追加します．

     時間の用語を表示する場合，書式`%z'を使用したタイムゾーンを含めます．
     `--utc'も指定されている場合，`%z'の場所に`%Z'を使用します．

`-R'
`--rfc-822'
     RFC-822で指定される書式`%a, %_d %b %Y %H:%M:%S %z'で時間と日付を表
     示します．`--utc'も指定されている場合，`%z'の場所に`GMT'
     を使用します．

`-r FILE'
`--reference=FILE'
     現在の時間と日付の代わりに，FILEが最後に編集された時間を参照して，
     時間と日付を表示します．

`-s DATESTR'
`--set=DATESTR'
     時間と日付をDATESTRに設定します．上記の`-d'を参照してください．

`-u'
`--utc'
`--universal'
     ローカル(壁時計の)時間の代わりに，世界標準時で時間と日付を表示または設定
     を行います．


File: sh-utils-ja.info,  Node: Examples of date,  Prev: Options for date,  Up: date invocation

10.1.7 `date'の例
-----------------

ここにいくつかの例があります．上記セクションの`-d'オプションに対す
るドキュメントも参照してください．

   * 一昨日の日付を出力します．
          date --date='2 days ago'

   * これから3ヶ月と1日先の日付を出力します．
          date --date='3 months 1 day'

   * 今年のクリスマスが年の何日目かを出力します．
          date --date='25 Dec' +%j

   * 現在の月の完全な名前と日を出力します．
          date '+%B %d'

     しかし，月の最初の9日の間，`%d'はゼロパディングした2桁のフィールド
     に展開するため，これは期待するものでない可能性があり，例えば，`date
     -d 1may '+%B %d''は`May 01'を出力します．

   *
     1桁の日の前置されるゼロを日付に付けないで出力するため，パディングを完全
     に抑制する(GNU拡張)の`-'修飾子を使用可能です．
          date -d=1may '+%B %-d'

   * システム時計を設定するとき，`date'の多くの非GNUバージョンが要求する
     書式で，現在の日付と時間を出力します．
          date +%m%d%H%M%Y.%S

   * システム時計を2分進める設定です．
          date --set='+2 minutes'

   * RFC-822で指定される書式で日付を出力するため，`date --rfc'を使用して
     ください．そうするとこのようになりました．

          Mon, 25 Mar 1996 23:34:17 -0600

   * 日付文字を，エポック(1970-01-01 00:00:00
     UTC)からの秒数に変換するため，
     `%s'書式を用いた`--date'オプションを使用してください．それは，
     日付毎の並べ替え，および/または，グラフ化，および/または，比較に役立つは
     ずです．以下のコマンドは，エポックより1秒以上後の時間に対し，エポックか
     らの秒数を出力しますが，タイムゾーンの5時間後(ケンブリッジ，マサチューセッ
     ツ) では，このように全体でエポックの5時間と1秒後となります．

          date --date='1970-01-01 00:00:01 UTC +5 hours' +%s
          18001

     上記の例でタイムゾーン情報を指定_していない_と仮定します．そのとき，
     文字列を解釈するとき，日付はコンピュータのタイムゾーンの考えを使用します．
     イングランドのグリニッジにいる場合，得るものはこのようになります．

          # local time zone used
          date --date='1970-01-01 00:00:01' +%s
          1

   *
     日付を並べ替えたりグラフ化したりしている場合，生の日付の値は，エポックか
     らの秒として表現可能です．しかし，ほとんどの人は，日付`946684800'を
     見て，"ああ，それは2000年最初の秒だ"と簡単には気が付きません．

          date --date='2000-01-01 UTC' +%s
          946684800

     そのような扱いにくい秒数を，より読みやすい形式に変換するため，このような
     コマンドを使用してください．

          date -d '1970-01-01 946684800 sec' +"%Y-%m-%d %T %z"
          2000-01-01 00:00:00 +0000



File: sh-utils-ja.info,  Node: uname invocation,  Next: hostname invocation,  Prev: date invocation,  Up: System context

10.2 `uname': システム情報の出力
================================

`uname'は，実行しているマシンとオペレーティングシステムの情報を出力
します．オプションが与えられない場合，`uname'は`-s'オプション
が与えられたかのように動作します．構文は以下のとおりです．

     uname [OPTION]...

   複数のオプションや`-a'が与えられた場合，選択された情報は，この順番
で出力されます．

     SYSNAME NODENAME RELEASE OSVERSION MACHINE

   少なくとも，OSVERSIONは複数の単語となります．例えば，以下のように
なります．

     uname -a
     => Linux hayley 1.0.4 #3 Thu May 12 18:06:34 1994 i486

   プログラムは，以下のオプションも受け入れます．*Note Common
options::,も参 照してください．

`-a'
`--all'
     以下の情報すべてを出力します．

`-m'
`--machine'
     マシン(ハードウェア)タイプを出力します．

`-n'
`--nodename'
     マシンのネットワークノードのホスト名を出力します．

`-p'
`--processor'
     マシンのプロセッサタイプを出力します．

`-r'
`--release'
     オペレーティングシステムのリリースを出力します．

`-s'
`--sysname'
     オペレーティングシステムの名前を出力します．

`-v'
     オペレーティングシステムのバージョンを出力します．



File: sh-utils-ja.info,  Node: hostname invocation,  Prev: uname invocation,  Up: System context

10.3 `hostname': システム名の出力や設定
=======================================

引数がない場合，`hostname'は現在のホストシステムの名前を出力します．
1つの引数を用いた場合，それは現在のホスト名を指定された文字列に設定しま
す．ホスト名の設定には適切な特権が必要です．構文は以下のとおりです．

     hostname [NAME]

   オプションは，`--help'と`--version'だけです．*Note Common options::.


File: sh-utils-ja.info,  Node: Modified command invocation,  Next: Delaying,  Prev: System context,  Up: Top

11 変更されたコマンドの呼び出し
*******************************

このセクションは，現在と異なる状況で他のコマンドを実行するコマンドを記述
します．異なるユーザとして環境を変更するなどです．

* Menu:

* chroot invocation::           Modify the root directory.
* env invocation::              Modify environment variables.
* nice invocation::             Modify scheduling priority.
* nohup invocation::            Immunize to hangups.
* su invocation::               Modify user and group id.


File: sh-utils-ja.info,  Node: chroot invocation,  Next: env invocation,  Up: Modified command invocation

11.1 `chroot': 異なるルートディレクトリでコマンドを実行
=======================================================

`chroot'は，指定されたルートディレクトリでコマンドを実行します．多
くのシステムでは，スーパーユーザのみこれが可能です．構文は以下のとおりで
す．

     chroot NEWROOT [COMMAND [ARGS]...]
     chroot OPTION

   通常，ファイル名は，ディレクトリ構造のルート，すなわち`/'を起点とし
て調べられます．`chroot'は，ルートをNEWROOTディレクトリ(存在
する必要があります)に変更し，オプションのARGSを用いてCOMMAND
を実行します．COMMANDが指定されていない場合，デフォルトは， `SHELL'
環境変数や，設定されていない場合は`/bin/sh'の値が，
`-i'オプションで呼び出されますす．

   オプションは`--help'と`--version'だけです．*Note Common options::.


File: sh-utils-ja.info,  Node: env invocation,  Next: nice invocation,  Prev: chroot invocation,  Up: Modified command invocation

11.2 `env': 変更された環境でコマンドを実行
==========================================

`env'は，変更された環境でコマンドを実行します．構文は以下のとおりで す．

     env [OPTION]... [NAME=VALUE]... [COMMAND [ARGS]...]
     env

   `VARIABLE=VALUE'の形式の引数は，環境変数VARIABLE
を値VALUEに設定します．VALUEは空にもできます
(`VARIABLE=')．変数をからの値に設定することは，アンセットする
こととは異なります．

   残りの最初の引数は，呼び出すプログラム名を指定します．それは`PATH'環
境変数によって検索されます．あらゆる残りの引数は，引数としてそのプログラ
ムに渡されます．

環境指定に続いてコマンド名が指定されていない場合，結果となる環境が出力さ
れます．これは，`printenv'のコマンド名を指定することに似ています．

   プログラムは以下のオプションも受け入れます．*Note Common
options::,も参照 してください．

`-u NAME'
`--unset=NAME'
     変数NAMEが環境の場合，それを環境から削除します．

`-'
`-i'
`--ignore-environment'
     継承された環境を無視して，空の環境を用いて開始します．



File: sh-utils-ja.info,  Node: nice invocation,  Next: nohup invocation,  Prev: env invocation,  Up: Modified command invocation

11.3 `nice': 変更されたスケジュール優先順位でコマンドを実行
===========================================================

`nice'は，ジョブのスケジュールの優先順位を出力または変更します．構
文は以下のとおりです．

     nice [OPTION]... [COMMAND [ARG]...]

   引数が与えられていない場合，`nice'は現在のスケジュールの優先順位を
出力し，それは継承されます．それ以外の場合，`nice'は，与えられたコ
マンドをそのスケジュール優先順位を調整しながら実行します．
ADJUSTMENTが与えられていない場合，コマンドの優先順位は10増加します．
負の調整を指定するためには適切な特権が必要です．`nice'が調整可能な
優先順位は，-20(最優先)から19(最低)までです．

ほとんどのシェルには同じ名前のシェル組み込みコマンドがあるので，装飾なし
のスクリプトのコマンド名や対話的に使用すると，ここで記述されていない異な
る機能を得る可能性があります．

   プログラムは以下のオプションも受け入れます．*Note Common
options::,も参照 してください．

`-n ADJUSTMENT'
`-ADJUSTMENT'
`--adjustment=ADJUSTMENT'
     コマンドの優先順位に，10の代わりにADJUSTMENTを加えます．


File: sh-utils-ja.info,  Node: nohup invocation,  Next: su invocation,  Prev: nice invocation,  Up: Modified command invocation

11.4 `nohup': ハングアップを免除したコマンドの実行
==================================================

`nohup'は，ログアウト後にバックグランドでコマンドを実行し続けること
を可能にするため，ハングアップシグナルを無視して，与えられたコマンドを実
行します．構文は以下のとおりです．

     nohup COMMAND [ARG]...

   `nohup'は，COMMANDのスケジュールの優先順位を5増加するので，実
行が若干小さく変更されます．標準出力が端末の場合，それとその標準エラーは，
ファイル`nohup.out'に追加するようにリダイレクトされます．書き込み不
可能な場合，それらはファイル`$HOME/nohup.out'に追加します．それも書
き込み不可能な場合，コマンドは実行されません．

   `nohup'が`nohup.out'や`$HOME/nohup.out'を作成する場合，
"group"や"other"のアクセス許可を用いてそれを作成しません．出力ファイ
ルが既存の場合は，その許可を変更しません．

   `nohup'は，バックグランドで実行するようにするコマンドを，自動的に配
置しません．コマンド行の終りに`&'を用いて，明示する必要があります．

   オプションは`--help'と`--version'のみです．*Note Common options::.


File: sh-utils-ja.info,  Node: su invocation,  Prev: nohup invocation,  Up: Modified command invocation

11.5 `su': 適切なユーザとグループidを用いてコマンドを実行
=========================================================

`su'は，あるユーザが一時的に他のユーザになることを可能とします．そ
れは実際の実効ユーザidと，与えられたUSERの追加グループでコマンドを
(しばしば対話的シェルで)実行します．構文は以下のとおりです．

     su [OPTION]... [USER [ARG]...]

   USERが与えられない場合，デフォルトは`root'のスーパーユーザで
す．使用するシェルは，USERの`passwd'項目から得られたもの，ま
たは，そこで指定されていない場合は`/bin/sh'を使用します．USER
にパスワードを持つ場合，実行ユーザidがゼロ(スーパーユーザ)の実行でなけれ
ば，`su'はパスワードの入力を促します．

   デフォルトで，`su'はカレントディレクトリを変更しません．それは環境
変数`HOME'と`SHELL'をUSERのパスワード項目から設定し，
USERがスーパーユーザでない場合，`USER'と`LOGNAME'を
USERに設定します．デフォルトでシェルはログインシェルではありません．

   追加のARGは，シェルの追加の引数として与えられます．

   GNU `su'は，`/bin/sh'や他の特殊なものを扱いません(例えば，
`argv[0]'を`-su'に設定する，`-c'をあるシェルに渡す等で す．)．

   `su'は，`su'の試みに対し，オプションの失敗とオプションの成功を
報告するために`syslog'を使用するようにコンパイル可能です．(システム
が`syslog'をサポートしている場合です．)しかし，GNU `su'は，ユー
ザが`wheel'グループのメンバーかどうか調査しません．以下を参照してく
ださい．

   プログラムは，以下のオプションを受け入れます．*Note Common
options::,も参 照してください．

`-c COMMAND'
`--command=COMMAND'
     単一のコマンドラインで実行するCOMMANDを，対話的シェルを開始する代
     わりに，`-c'オプションを用いて渡します．

`-f'
`--fast'
     シェルに`-f'オプションを渡します．これはおそらく，シェルの実行が
     `csh'や`tcsh'の場合にのみ意味があり，それらに対する`-f'オ
     プションは，スタートアップファイル(`.cshrc')の読み込みを妨げます．
     Bourneのようなシェルを用いた場合，`-f'オプションはファイル名のパター
     ン拡張(glob)を利用不可能にし，それは役に立つとは思えません．

`-'
`-l'
`--login'
     シェルをログインシェルにします．これは以下のことを意味します．`TERM'，
     `HOME'，そして`SHELL'(上記で記述されるように設定されている)，そ
     して`USER'と`LOGNAME'(スーパーユーザでも，上記で記述されるように
     設定されている)以外の，すべての環境変数をアンセットし，`PATH'をコン
     パイルされているデフォルト値に設定します．USERのホームディレクトリ
     に変更します．ログインスタートアップファイルを読み込ませるために，
     `-'をシェルの名前の前に前置してください．

`-m'
`-p'
`--preserve-environment'
     環境変数`HOME'，`USER'，`LOGNAME'，または`SHELL'を変更し
     ません．`su'を実行しているユーザがスーパーユーザで，USERのシェ
     ルが制限されていない場合は，USERのパスワード項目から得られるシェル
     の代わりに，環境変数`SHELL'で与えられたシェルを実行します．"制限
     されているシェル"は，ファイル`/etc/shells'や，そのファイルが存在し
     ない場合はコンパイルされたリストにリストアップされていないものです．この
     オプションが行うことの一部は，`--login'と`--shell'で優先可能で す．

`-s SHELL'
`--shell=SHELL'
     `su'を実行しているユーザがスーパーユーザで，USERのシェルが限
     定されていない(真上の`-m'を参照してください)場合は，USERのパ
     スワード項目から得られるシェルの代わりに，SHELLを実行します．


GNU `su'が`wheel'グループをサポートしない理由
=============================================

(このセクションは，Richard Stallmanが作成しました．)

数人のユーザが，残り全員以上の総合的な権力を持ちたいと思うときもあります．
例えば，1984年に，MIT AI labの数人のユーザが，Twenexシステムのオペレータ
パスワードを変更し，他の全員に秘密にし続けることで，権力を占有しようとし
ました．(私は，このクーデターを妨害し，カーネルにパッチを行いユーザに力
を取り戻させようとしましたが，Unixでそうする方法を知りませんでした．)

   しかし，支配者がだれかに告げることもあります．通常の`su'メカニズム
では，一旦，普通のユーザに同情する誰かが，ルートのパスワードを知ると，彼
または彼女は残りを伝えることができます．"wheel group"の特徴は，これを
不可能にし，そのため支配者の権力は固まります．

私は多数の味方で支配者の味方ではありません．ボスとシスアドのあらゆる作業
をサポートすることに慣れている場合，最初にこの考えが奇妙だと分かることで
しょう．


File: sh-utils-ja.info,  Node: Delaying,  Next: Numeric operations,  Prev: Modified command invocation,  Up: Top

12 遅延
*******

* Menu:

* sleep invocation::            Delay for a specified time.


File: sh-utils-ja.info,  Node: sleep invocation,  Up: Delaying

12.1 `sleep': 指定した時間の遅延(Delay for a specified time)
============================================================

`sleep'は，コマンドライン引数の値の合計で指定された時間，一時停止し
ます．構文は以下のとおりです．

     sleep [NUMBER[smhd]]...

それぞれの引数は，オプションの単位が続く数字です．デフォルトは秒です．単
位は以下のとおりです．

`s'
     秒

`m'
     分

`h'
     時間

`d'
     日

   オプションは`--help'と`--version'だけです．*Note Common options::.


File: sh-utils-ja.info,  Node: Numeric operations,  Next: Index,  Prev: Delaying,  Up: Top

13 数値処理
***********

これらのプログラムは数値に関する処理を行います．

* Menu:

* factor invocation::              Show factors of numbers.
* seq invocation::                 Print sequences of numbers.


File: sh-utils-ja.info,  Node: factor invocation,  Next: seq invocation,  Up: Numeric operations

13.1 `factor': 素因数を出力
===========================

`factor'は，素因数を出力します．構文は以下のとおりです．

     factor [NUMBER]...
     factor OPTION

   コマンドラインにNUMBERが指定されない場合，`factor'は標準入力
から読み込み，それは，改行，タブ，またはスペースで区切られています．

   オプションは，`--help'と`--version'のみです．*Note Common options::.


File: sh-utils-ja.info,  Node: seq invocation,  Prev: factor invocation,  Up: Numeric operations

13.2 `seq': 数列を出力
======================

`seq'は，数字の列を標準出力に出力します．構文は以下のとおりです．

     seq [OPTION]... [FIRST [STEP]] LAST...

   `seq'は，FIRSTからLASTまでSTEPおきに，数字を出力
します．デフォルトで，FIRSTとSTEPは両方とも1で，それぞれの数
字は単独行に出力されます．すべての数字は実数ですが，整数のみではありませ
ん．

   プログラムは以下のオプションを受け入れます．*Note Common
options::,も参照 してください．

`-f FORMAT'
`--format=FORMAT'
     すべての数字をFORMATを使用して出力します．デフォルトは`%g'で
     す．FORMATは，標準的な浮動小数点出力書式の，`%e'，`%f'，
     または`%g'の内，ただ1つだけを含む必要があります．

`-s STRING'
`--separator=STRING'
     数字をSTRINGで分離します．デフォルトは改行です．出力は，常に改行で
     終了します．

`-w'
`--equal-width'
     すべての数字を同じ幅で出力し，ゼロを前置してパディングします．(他の種類
     のパディングをするため，`--format'を使用してください)．



File: sh-utils-ja.info,  Node: Index,  Prev: Numeric operations,  Up: Top

索引
****

 [index ]
* Menu:

* !:                                     Connectives for test. (line  9)
* !=:                                    String tests.         (line 21)
* %:                                     Numeric expressions.  (line 15)
* &:                                     Relations for expr.   (line 15)
* *:                                     Numeric expressions.  (line 15)
* +:                                     Numeric expressions.  (line 11)
* - <1>:                                 Numeric expressions.  (line 11)
* - <2>:                                 env invocation.       (line 33)
* -:                                     su invocation.        (line 53)
* --adjustment:                          nice invocation.      (line 28)
* --all <1>:                             stty invocation.      (line 25)
* --all:                                 uname invocation.     (line 28)
* --append:                              tee invocation.       (line 21)
* --command:                             su invocation.        (line 39)
* --count:                               who invocation.       (line 32)
* --date:                                Options for date.     (line 11)
* --fast:                                su invocation.        (line 44)
* --file <1>:                            stty invocation.      (line 30)
* --file:                                Options for date.     (line 18)
* --format=FORMAT:                       seq invocation.       (line 20)
* --group:                               id invocation.        (line 23)
* --groups:                              id invocation.        (line 27)
* --heading:                             who invocation.       (line 53)
* --help:                                Common options.       (line 15)
* --idle:                                who invocation.       (line 41)
* --ignore-environment:                  env invocation.       (line 33)
* --ignore-interrupts:                   tee invocation.       (line 25)
* --iso-8601[=TIMESPEC]:                 Options for date.     (line 25)
* --login:                               su invocation.        (line 53)
* --lookup:                              who invocation.       (line 47)
* --machine:                             uname invocation.     (line 32)
* --mesg:                                who invocation.       (line 60)
* --message:                             who invocation.       (line 60)
* --name:                                id invocation.        (line 31)
* --nodename:                            uname invocation.     (line 36)
* --portability:                         pathchk invocation.   (line 24)
* --preserve-environment:                su invocation.        (line 64)
* --processor:                           uname invocation.     (line 40)
* --quiet:                               tty invocation.       (line 18)
* --real:                                id invocation.        (line 36)
* --reference:                           Options for date.     (line 52)
* --release:                             uname invocation.     (line 44)
* --rfc-822:                             Options for date.     (line 46)
* --save:                                stty invocation.      (line 40)
* --set:                                 Options for date.     (line 57)
* --shell:                               su invocation.        (line 74)
* --silent:                              tty invocation.       (line 18)
* --sysname:                             uname invocation.     (line 48)
* --universal:                           Options for date.     (line 62)
* --user:                                id invocation.        (line 41)
* --utc:                                 Options for date.     (line 62)
* --version:                             Common options.       (line 19)
* --writable:                            who invocation.       (line 60)
* -a <1>:                                uname invocation.     (line 28)
* -a <2>:                                stty invocation.      (line 25)
* -a <3>:                                tee invocation.       (line 21)
* -a:                                    Connectives for test. (line 12)
* -ADJUSTMENT:                           nice invocation.      (line 28)
* -b:                                    File type tests.      (line 10)
* -c <1>:                                File type tests.      (line 13)
* -c:                                    su invocation.        (line 39)
* -d <1>:                                File type tests.      (line 16)
* -d:                                    Options for date.     (line 11)
* -e <1>:                                File characteristics tests.
                                                               (line  9)
* -e:                                    echo invocation.      (line 19)
* -ef:                                   File characteristics tests.
                                                               (line 21)
* -eq:                                   Numeric tests.        (line 15)
* -f:                                    su invocation.        (line 44)
* -F:                                    stty invocation.      (line 30)
* -f <1>:                                Options for date.     (line 18)
* -f:                                    File type tests.      (line 19)
* -f FORMAT:                             seq invocation.       (line 20)
* -G:                                    Access permission tests.
                                                               (line 31)
* -g <1>:                                Access permission tests.
                                                               (line  9)
* -g:                                    stty invocation.      (line 40)
* -G:                                    id invocation.        (line 27)
* -g:                                    id invocation.        (line 23)
* -ge:                                   Numeric tests.        (line 15)
* -gt:                                   Numeric tests.        (line 15)
* -h:                                    File type tests.      (line 23)
* -H:                                    who invocation.       (line 53)
* -i <1>:                                who invocation.       (line 41)
* -i <2>:                                tee invocation.       (line 25)
* -i:                                    env invocation.       (line 33)
* -I[TIMESPEC]:                          Options for date.     (line 25)
* -k:                                    Access permission tests.
                                                               (line 13)
* -L:                                    File type tests.      (line 23)
* -l <1>:                                su invocation.        (line 53)
* -l:                                    who invocation.       (line 47)
* -le:                                   Numeric tests.        (line 15)
* -lt:                                   Numeric tests.        (line 15)
* -m <1>:                                who invocation.       (line 28)
* -m <2>:                                uname invocation.     (line 32)
* -m:                                    su invocation.        (line 64)
* -n <1>:                                String tests.         (line 15)
* -n <2>:                                nice invocation.      (line 28)
* -n <3>:                                id invocation.        (line 31)
* -n <4>:                                uname invocation.     (line 36)
* -n:                                    echo invocation.      (line 16)
* -ne:                                   Numeric tests.        (line 15)
* -nt:                                   File characteristics tests.
                                                               (line 15)
* -o:                                    Connectives for test. (line 15)
* -O:                                    Access permission tests.
                                                               (line 28)
* -ot:                                   File characteristics tests.
                                                               (line 18)
* -p <1>:                                File type tests.      (line 26)
* -p <2>:                                uname invocation.     (line 40)
* -p <3>:                                pathchk invocation.   (line 24)
* -p:                                    su invocation.        (line 64)
* -q:                                    who invocation.       (line 32)
* -r <1>:                                id invocation.        (line 36)
* -r:                                    Options for date.     (line 52)
* -R:                                    Options for date.     (line 46)
* -r <1>:                                Access permission tests.
                                                               (line 16)
* -r:                                    uname invocation.     (line 44)
* -s <1>:                                who invocation.       (line 36)
* -s <2>:                                uname invocation.     (line 48)
* -s:                                    tty invocation.       (line 18)
* -S:                                    File type tests.      (line 29)
* -s <1>:                                Options for date.     (line 57)
* -s <2>:                                File characteristics tests.
                                                               (line 12)
* -s:                                    su invocation.        (line 74)
* -su:                                   su invocation.        (line 25)
* -t:                                    File type tests.      (line 32)
* -T:                                    who invocation.       (line 60)
* -u <1>:                                Access permission tests.
                                                               (line 19)
* -u <2>:                                env invocation.       (line 28)
* -u <3>:                                who invocation.       (line 41)
* -u <4>:                                Options for date.     (line 62)
* -u:                                    id invocation.        (line 41)
* -unset:                                env invocation.       (line 28)
* -v:                                    uname invocation.     (line 51)
* -w <1>:                                Access permission tests.
                                                               (line 22)
* -w:                                    who invocation.       (line 60)
* -x:                                    Access permission tests.
                                                               (line 25)
* -z:                                    String tests.         (line 11)
* .cshrc:                                su invocation.        (line 44)
* /:                                     Numeric expressions.  (line 15)
* /bin/sh:                               su invocation.        (line 12)
* /etc/passwd:                           su invocation.        (line 12)
* /etc/shells:                           su invocation.        (line 64)
* /etc/utmp <1>:                         who invocation.       (line 15)
* /etc/utmp <2>:                         users invocation.     (line 13)
* /etc/utmp:                             logname invocation.   (line  6)
* /etc/wtmp <1>:                         users invocation.     (line 13)
* /etc/wtmp:                             who invocation.       (line 15)
* <:                                     Relations for expr.   (line 18)
* <=:                                    Relations for expr.   (line 18)
* = <1>:                                 String tests.         (line 18)
* =:                                     Relations for expr.   (line 18)
* ==:                                    Relations for expr.   (line 18)
* >:                                     Relations for expr.   (line 18)
* >=:                                    Relations for expr.   (line 18)
* \( regexp operator:                    String expressions.   (line 22)
* \+ regexp operator:                    String expressions.   (line 25)
* \0ooo:                                 printf invocation.    (line 19)
* \0xhhh:                                printf invocation.    (line 19)
* \? regexp operator:                    String expressions.   (line 25)
* \c:                                    printf invocation.    (line 23)
* \| regexp operator:                    String expressions.   (line 25)
* abbreviations for months:              Calendar date item.   (line 37)
* access permission tests:               Access permission tests.
                                                               (line  6)
* addition:                              Numeric expressions.  (line 11)
* ago in date strings:                   Relative item in date strings.
                                                               (line 21)
* am i:                                  who invocation.       (line 20)
* am in date strings:                    Time of day item.     (line 19)
* and operator <1>:                      Connectives for test. (line 12)
* and operator:                          Relations for expr.   (line 15)
* appropriate privileges <1>:            nice invocation.      (line  6)
* appropriate privileges <2>:            Setting the time.     (line  6)
* appropriate privileges:                hostname invocation.  (line  6)
* arbitrary date strings, parsing:       Options for date.     (line 11)
* arbitrary text, displaying:            echo invocation.      (line  6)
* arithmetic tests:                      Numeric tests.        (line  6)
* authors of getdate:                    Authors of getdate.   (line  6)
* background jobs, stopping at terminal write: Local.          (line 41)
* backslash escapes:                     echo invocation.      (line 19)
* basename:                              basename invocation.  (line  6)
* baud rate, setting:                    Special.              (line 40)
* beeping at input buffer full:          Input.                (line 50)
* beginning of time:                     Time directives.      (line 30)
* beginning of time, for Unix:           Date input formats.   (line 33)
* Bellovin, Steven M.:                   Authors of getdate.   (line  6)
* Berets, Jim:                           Authors of getdate.   (line  6)
* Berry, K.:                             Authors of getdate.   (line 13)
* Berry, Karl:                           Introduction.         (line 25)
* block special check:                   File type tests.      (line 10)
* breaks, cause interrupts:              Input.                (line 10)
* breaks, ignoring:                      Input.                (line  7)
* brkint:                                Input.                (line 10)
* bsN:                                   Output.               (line 56)
* bugs, reporting:                       Introduction.         (line 19)
* built-in shell commands, conflicts with <1>: test invocation.
                                                               (line 12)
* built-in shell commands, conflicts with <2>: nice invocation.
                                                               (line 18)
* built-in shell commands, conflicts with: pwd invocation.     (line 10)
* C-s/C-q flow control:                  Input.                (line 34)
* calendar date item:                    Calendar date item.   (line  6)
* case translation:                      Local.                (line 37)
* case, ignored in dates:                General date syntax.  (line 37)
* cbreak:                                Combination.          (line 47)
* change or print terminal settings:     stty invocation.      (line  6)
* character size:                        Control.              (line 19)
* character special check:               File type tests.      (line 13)
* characters, special:                   Characters.           (line  6)
* check file types:                      test invocation.      (line  6)
* chroot:                                chroot invocation.    (line  6)
* clocal:                                Control.              (line 33)
* cols:                                  Special.              (line 25)
* COLUMNS:                               Special.              (line 28)
* columns:                               Special.              (line 25)
* combination settings:                  Combination.          (line  6)
* commands for delaying:                 Delaying.             (line  6)
* commands for exit status:              Conditions.           (line  6)
* commands for file name manipulation:   File name manipulation.
                                                               (line  6)
* commands for invoking other commands:  Modified command invocation.
                                                               (line  6)
* commands for printing text:            Printing text.        (line  6)
* commands for printing the working context: Working context.  (line  6)
* commands for printing user information: User information.    (line  6)
* commands for redirection:              Redirection.          (line  6)
* commands for system context:           System context.       (line  6)
* comments, in dates:                    General date syntax.  (line 37)
* common options:                        Common options.       (line  6)
* compare values:                        test invocation.      (line  6)
* comparison operators:                  Relations for expr.   (line 18)
* conditions:                            Conditions.           (line  6)
* conflicts with shell built-ins <1>:    pwd invocation.       (line 10)
* conflicts with shell built-ins <2>:    test invocation.      (line 12)
* conflicts with shell built-ins:        nice invocation.      (line 18)
* connectives, logical <1>:              Connectives for test. (line  6)
* connectives, logical:                  Relations for expr.   (line  6)
* context, system:                       System context.       (line  6)
* control characters, using ^C:          Local.                (line 51)
* control settings:                      Control.              (line  6)
* cooked:                                Combination.          (line 34)
* coordinated universal time:            Options for date.     (line 62)
* Coordinated Universal Time:            Time zone item.       (line 54)
* cread:                                 Control.              (line 30)
* crN:                                   Output.               (line 46)
* crt:                                   Combination.          (line 71)
* crterase:                              Local.                (line 22)
* crtkill:                               Local.                (line 56)
* crtscts:                               Control.              (line 36)
* csN:                                   Control.              (line 19)
* cstopb:                                Control.              (line 27)
* ctlecho:                               Local.                (line 51)
* current working directory, printing:   pwd invocation.       (line  6)
* date:                                  date invocation.      (line  6)
* date directives:                       Date directives.      (line  6)
* date format, ISO 8601:                 Calendar date item.   (line 29)
* date input formats:                    Date input formats.   (line  6)
* date options:                          Options for date.     (line  6)
* date strings, parsing:                 Options for date.     (line 11)
* day in date strings:                   Relative item in date strings.
                                                               (line 26)
* day of week item:                      Day of week item.     (line  6)
* daylight-saving time:                  Time zone item.       (line 95)
* dec:                                   Combination.          (line 74)
* decctlq:                               Combination.          (line 60)
* delay for a specified time:            sleep invocation.     (line  6)
* delaying commands:                     Delaying.             (line  6)
* destinations, multiple output:         tee invocation.       (line  6)
* directives, date:                      Date directives.      (line  6)
* directives, literal:                   Literal directives.   (line  6)
* directives, time:                      Time directives.      (line  6)
* directory check:                       File type tests.      (line 16)
* directory components, printing:        dirname invocation.   (line  6)
* directory, stripping from file names:  basename invocation.  (line  6)
* dirname:                               dirname invocation.   (line  6)
* disabling special characters:          Characters.           (line 12)
* displacement of dates:                 Relative item in date strings.
                                                               (line  6)
* displaying text:                       echo invocation.      (line  6)
* division:                              Numeric expressions.  (line 15)
* do nothing, successfully:              true invocation.      (line  6)
* do nothing, unsuccessfully:            false invocation.     (line  6)
* dsusp:                                 Characters.           (line 51)
* echo <1>:                              echo invocation.      (line  6)
* echo:                                  Local.                (line 18)
* echoctl:                               Local.                (line 51)
* echoe:                                 Local.                (line 22)
* echok:                                 Local.                (line 26)
* echoke:                                Local.                (line 56)
* echonl:                                Local.                (line 29)
* echoprt:                               Local.                (line 46)
* effective uid and gid, printing:       id invocation.        (line  6)
* effective UID, printing:               whoami invocation.    (line  6)
* eight-bit characters <1>:              Control.              (line 19)
* eight-bit characters:                  Combination.          (line 51)
* eight-bit input:                       Input.                (line 22)
* ek:                                    Combination.          (line 23)
* env:                                   env invocation.       (line  6)
* environment variables, printing:       printenv invocation.  (line  6)
* environment, preserving:               su invocation.        (line 64)
* environment, printing:                 env invocation.       (line 20)
* environment, running a program in a modified: env invocation.
                                                               (line  6)
* eof:                                   Characters.           (line 30)
* eol:                                   Characters.           (line 33)
* eol2:                                  Characters.           (line 36)
* epoch, for Unix:                       Date input formats.   (line 33)
* epoch, seconds since:                  Time directives.      (line 30)
* equal string check:                    String tests.         (line 18)
* erase:                                 Characters.           (line 24)
* evaluation of expressions:             expr invocation.      (line  6)
* even parity:                           Control.              (line 13)
* evenp:                                 Combination.          (line  9)
* examples of date:                      Examples of date.     (line  6)
* examples of expr:                      Examples of expr.     (line  6)
* executable file check:                 Access permission tests.
                                                               (line 25)
* existence-of-file check:               File characteristics tests.
                                                               (line  9)
* exit status commands:                  Conditions.           (line  6)
* exit status of expr:                   expr invocation.      (line 21)
* exit status of false:                  false invocation.     (line  6)
* exit status of pathchk:                pathchk invocation.   (line 30)
* exit status of printenv:               printenv invocation.  (line 17)
* exit status of true:                   true invocation.      (line  6)
* exit status of tty:                    tty invocation.       (line 20)
* expr:                                  expr invocation.      (line  6)
* expression evaluation <1>:             expr invocation.      (line  6)
* expression evaluation:                 test invocation.      (line  6)
* expressions, numeric:                  Numeric expressions.  (line  6)
* expressions, string:                   String expressions.   (line  6)
* factor:                                factor invocation.    (line  6)
* failure exit status:                   false invocation.     (line  6)
* false:                                 false invocation.     (line  6)
* fascism:                               su invocation.        (line 79)
* ffN:                                   Output.               (line 64)
* fields, padding numeric:               Padding.              (line  6)
* file characteristics tests:            File characteristics tests.
                                                               (line  6)
* file name manipulation:                File name manipulation.
                                                               (line  6)
* file name pattern expansion, disabled: su invocation.        (line 44)
* file names, checking validity and portability: pathchk invocation.
                                                               (line  6)
* file names, stripping directory and suffix: basename invocation.
                                                               (line  6)
* file type tests:                       File type tests.      (line  6)
* first in date strings:                 General date syntax.  (line 25)
* flow control, hardware:                Control.              (line 36)
* flow control, software:                Input.                (line 39)
* flushing, disabling:                   Local.                (line 33)
* formatting of numbers in seq:          seq invocation.       (line 20)
* formatting times:                      date invocation.      (line 12)
* fortnight in date strings:             Relative item in date strings.
                                                               (line 14)
* general date syntax:                   General date syntax.  (line  6)
* getdate:                               Date input formats.   (line  6)
* globbing, disabled:                    su invocation.        (line 44)
* Greenwich Mean Time <1>:               Time zone item.       (line 54)
* Greenwich Mean Time:                   Options for date.     (line 62)
* group wheel, not supported:            su invocation.        (line 79)
* groups:                                groups invocation.    (line  6)
* hangups, immunity to:                  nohup invocation.     (line  6)
* hard link check:                       File characteristics tests.
                                                               (line 21)
* hardware flow control:                 Control.              (line 36)
* hardware type:                         uname invocation.     (line 32)
* hat notation for control characters:   Local.                (line 51)
* help, online:                          Common options.       (line 15)
* history:                               Introduction.         (line 25)
* HOME:                                  su invocation.        (line 18)
* host processor type:                   uname invocation.     (line 40)
* hostname <1>:                          hostname invocation.  (line  6)
* hostname:                              uname invocation.     (line 36)
* hour in date strings:                  Relative item in date strings.
                                                               (line 14)
* hup[cl]:                               Control.              (line 23)
* icanon:                                Local.                (line 11)
* icrnl:                                 Input.                (line 31)
* id:                                    id invocation.        (line  6)
* idle time:                             who invocation.       (line 41)
* iexten:                                Local.                (line 15)
* ignbrk:                                Input.                (line  7)
* igncr:                                 Input.                (line 28)
* ignpar:                                Input.                (line 13)
* imaxbel:                               Input.                (line 50)
* immunity to hangups:                   nohup invocation.     (line  6)
* index:                                 String expressions.   (line 40)
* information, about current users:      who invocation.       (line  6)
* inlcr:                                 Input.                (line 25)
* inpck:                                 Input.                (line 19)
* input settings:                        Input.                (line  6)
* intr:                                  Characters.           (line 18)
* introduction:                          Introduction.         (line  6)
* invocation of commands, modified:      Modified command invocation.
                                                               (line  6)
* isig:                                  Local.                (line  7)
* ISO 8601 date format:                  Calendar date item.   (line 29)
* ispeed:                                Special.              (line 15)
* istrip:                                Input.                (line 22)
* items in date strings:                 General date syntax.  (line  6)
* iuclc:                                 Input.                (line 43)
* ixany:                                 Input.                (line 46)
* ixoff:                                 Input.                (line 39)
* ixon:                                  Input.                (line 34)
* kill:                                  Characters.           (line 27)
* last DAY <1>:                          Options for date.     (line 11)
* last DAY:                              Day of week item.     (line 16)
* last in date strings:                  General date syntax.  (line 25)
* lcase:                                 Combination.          (line 68)
* LCASE:                                 Combination.          (line 68)
* leading directory components, stripping: basename invocation.
                                                               (line  6)
* length:                                String expressions.   (line 44)
* line:                                  Special.              (line 34)
* line settings of terminal:             stty invocation.      (line  6)
* LINES:                                 Special.              (line 28)
* literal directives:                    Literal directives.   (line  6)
* litout:                                Combination.          (line 56)
* lnext:                                 Characters.           (line 60)
* local settings:                        Local.                (line  6)
* logging out and continuing to run:     nohup invocation.     (line  6)
* logical and operator <1>:              Relations for expr.   (line 15)
* logical and operator:                  Connectives for test. (line 12)
* logical connectives <1>:               Relations for expr.   (line  6)
* logical connectives:                   Connectives for test. (line  6)
* logical or operator <1>:               Connectives for test. (line 15)
* logical or operator:                   Relations for expr.   (line 11)
* login name, printing:                  logname invocation.   (line  6)
* login sessions, printing users with:   users invocation.     (line  6)
* login shell:                           su invocation.        (line 18)
* login shell, creating:                 su invocation.        (line 53)
* login time:                            who invocation.       (line 11)
* LOGNAME:                               su invocation.        (line 18)
* logname:                               logname invocation.   (line  6)
* lowercase, translating to output:      Output.               (line 12)
* machine type:                          uname invocation.     (line 32)
* machine-readable stty output:          stty invocation.      (line 40)
* MacKenzie, David <1>:                  Authors of getdate.   (line  6)
* MacKenzie, David:                      Introduction.         (line 25)
* manipulation of file names:            File name manipulation.
                                                               (line  6)
* match:                                 String expressions.   (line 32)
* matching patterns:                     String expressions.   (line 11)
* message status:                        who invocation.       (line 60)
* Meyering, Jim <1>:                     Introduction.         (line 25)
* Meyering, Jim:                         Authors of getdate.   (line  6)
* midnight in date strings:              Time of day item.     (line 19)
* min:                                   Special.              (line  7)
* minute in date strings:                Relative item in date strings.
                                                               (line 14)
* minutes, time zone correction by:      Time of day item.     (line 25)
* MIT AI lab:                            su invocation.        (line 84)
* modem control:                         Control.              (line 33)
* modified command invocation:           Modified command invocation.
                                                               (line  6)
* modified environment, running a program in a: env invocation.
                                                               (line  6)
* modifying scheduling priority:         nice invocation.      (line  6)
* month in date strings:                 Relative item in date strings.
                                                               (line 14)
* month names in date strings:           Calendar date item.   (line 37)
* months, written-out:                   General date syntax.  (line 34)
* multiplication:                        Numeric expressions.  (line 15)
* name of operating system:              uname invocation.     (line 48)
* named pipe check:                      File type tests.      (line 26)
* network node name:                     uname invocation.     (line 36)
* newer-than file check:                 File characteristics tests.
                                                               (line 15)
* newline echoing after kill:            Local.                (line 26)
* newline, echoing:                      Local.                (line 29)
* newline, translating to crlf:          Output.               (line 19)
* newline, translating to return:        Input.                (line 25)
* next DAY <1>:                          Options for date.     (line 11)
* next DAY:                              Day of week item.     (line 16)
* next in date strings:                  General date syntax.  (line 25)
* nice:                                  nice invocation.      (line  6)
* nl:                                    Combination.          (line 19)
* nlN:                                   Output.               (line 40)
* no-op:                                 true invocation.      (line  6)
* node name:                             uname invocation.     (line 36)
* noflsh:                                Local.                (line 33)
* nohup:                                 nohup invocation.     (line  6)
* nohup.out:                             nohup invocation.     (line  6)
* non-directory suffix, stripping:       dirname invocation.   (line  6)
* nonempty file check:                   File characteristics tests.
                                                               (line 12)
* nonzero-length string check:           String tests.         (line 15)
* noon in date strings:                  Time of day item.     (line 19)
* not-equal string check:                String tests.         (line 21)
* now in date strings:                   Relative item in date strings.
                                                               (line 29)
* numbers, written-out:                  General date syntax.  (line 25)
* numeric expressions:                   Numeric expressions.  (line  6)
* numeric field padding:                 Padding.              (line  6)
* numeric operations:                    Numeric operations.   (line  6)
* numeric sequences:                     seq invocation.       (line  6)
* numeric tests:                         Numeric tests.        (line  6)
* ocrnl:                                 Output.               (line 15)
* odd parity:                            Control.              (line 13)
* oddp:                                  Combination.          (line 15)
* ofdel:                                 Output.               (line 35)
* ofill:                                 Output.               (line 31)
* olcuc:                                 Output.               (line 12)
* older-than file check:                 File characteristics tests.
                                                               (line 18)
* onlcr:                                 Output.               (line 19)
* onlret:                                Output.               (line 27)
* onocr:                                 Output.               (line 23)
* operating system name:                 uname invocation.     (line 48)
* operating system release:              uname invocation.     (line 44)
* operating system version:              uname invocation.     (line 51)
* opost:                                 Output.               (line  9)
* options for date:                      Options for date.     (line  6)
* or operator <1>:                       Relations for expr.   (line 11)
* or operator:                           Connectives for test. (line 15)
* ordinal numbers:                       General date syntax.  (line 25)
* ospeed:                                Special.              (line 18)
* output settings:                       Output.               (line  6)
* owned by effective gid check:          Access permission tests.
                                                               (line 31)
* owned by effective uid check:          Access permission tests.
                                                               (line 28)
* pad character:                         Output.               (line 35)
* pad instead of timing for delaying:    Output.               (line 31)
* padding of numeric fields:             Padding.              (line  6)
* parenb:                                Control.              (line  9)
* parentheses for grouping:              expr invocation.      (line 17)
* parity:                                Combination.          (line 10)
* parity errors, marking:                Input.                (line 16)
* parity, ignoring:                      Input.                (line 13)
* parmrk:                                Input.                (line 16)
* parodd:                                Control.              (line 13)
* parsing date strings:                  Options for date.     (line 11)
* pass8:                                 Combination.          (line 51)
* passwd entry, and su shell:            su invocation.        (line 12)
* PATH <1>:                              env invocation.       (line 16)
* PATH:                                  su invocation.        (line 53)
* pathchk:                               pathchk invocation.   (line  6)
* pattern matching:                      String expressions.   (line 11)
* permission tests:                      Access permission tests.
                                                               (line  6)
* Pinard, F.:                            Authors of getdate.   (line 13)
* Pinard, Franc,ois:                     Introduction.         (line 25)
* pipe fitting:                          tee invocation.       (line  6)
* pm in date strings:                    Time of day item.     (line 19)
* portable file names, checking for:     pathchk invocation.   (line  6)
* POSIX.2:                               Introduction.         (line 17)
* prime factors:                         factor invocation.    (line  6)
* print name of current directory:       pwd invocation.       (line  6)
* print system information:              uname invocation.     (line  6)
* print terminal file name:              tty invocation.       (line  6)
* printenv:                              printenv invocation.  (line  6)
* printf:                                printf invocation.    (line  6)
* printing all or some environment variables: printenv invocation.
                                                               (line  6)
* printing current user information:     who invocation.       (line  6)
* printing current usernames:            users invocation.     (line  6)
* printing groups a user is in:          groups invocation.    (line  6)
* printing real and effective uid and gid: id invocation.      (line  6)
* printing text:                         echo invocation.      (line  6)
* printing text, commands for:           Printing text.        (line  6)
* printing the current time:             date invocation.      (line  6)
* printing the effective UID:            whoami invocation.    (line  6)
* printing the hostname:                 hostname invocation.  (line  6)
* printing user's login name:            logname invocation.   (line  6)
* priority, modifying:                   nice invocation.      (line  6)
* prterase:                              Local.                (line 46)
* pure numbers in date strings:          Pure numbers in date strings.
                                                               (line  6)
* pwd:                                   pwd invocation.       (line  6)
* quit:                                  Characters.           (line 21)
* quote:                                 String expressions.   (line 47)
* raw:                                   Combination.          (line 40)
* read from stdin and write to stdout and files: tee invocation.
                                                               (line  6)
* readable file check:                   Access permission tests.
                                                               (line 16)
* real uid and gid, printing:            id invocation.        (line  6)
* redirection:                           Redirection.          (line  6)
* regular expression matching:           String expressions.   (line 11)
* regular file check:                    File type tests.      (line 19)
* relations, numeric or string:          Relations for expr.   (line  6)
* relative items in date strings:        Relative item in date strings.
                                                               (line  6)
* release of operating system:           uname invocation.     (line 44)
* remainder:                             Numeric expressions.  (line 15)
* remote hostname:                       who invocation.       (line 11)
* repeated output of a string:           yes invocation.       (line  6)
* restricted shell:                      su invocation.        (line 64)
* return, ignoring:                      Input.                (line 28)
* return, translating to newline <1>:    Input.                (line 31)
* return, translating to newline:        Output.               (line 15)
* root directory, running a program in a specified: chroot invocation.
                                                               (line  6)
* root, becoming:                        su invocation.        (line  6)
* rows:                                  Special.              (line 21)
* rprnt:                                 Characters.           (line 54)
* RTS/CTS flow control:                  Control.              (line 36)
* running a program in a modified environment: env invocation. (line  6)
* running a program in a specified root directory: chroot invocation.
                                                               (line  6)
* Salz, Rich:                            Authors of getdate.   (line  6)
* same file check:                       File characteristics tests.
                                                               (line 21)
* sane:                                  Combination.          (line 26)
* scheduling priority, modifying:        nice invocation.      (line  6)
* seconds since the epoch:               Time directives.      (line 30)
* separator for numbers in seq:          seq invocation.       (line 26)
* seq:                                   seq invocation.       (line  6)
* sequence of numbers:                   seq invocation.       (line  6)
* set-group-id check:                    Access permission tests.
                                                               (line  9)
* set-user-id check:                     Access permission tests.
                                                               (line 19)
* setting the hostname:                  hostname invocation.  (line  6)
* setting the time:                      Setting the time.     (line  6)
* SHELL:                                 su invocation.        (line 18)
* shell utilities:                       Top.                  (line  6)
* size:                                  Special.              (line 28)
* sleep:                                 sleep invocation.     (line  6)
* socket check:                          File type tests.      (line 29)
* software flow control:                 Input.                (line 39)
* special characters:                    Characters.           (line  6)
* special settings:                      Special.              (line  6)
* speed:                                 Special.              (line 37)
* Stallman, Richard:                     Introduction.         (line 25)
* start:                                 Characters.           (line 42)
* sticky bit check:                      Access permission tests.
                                                               (line 13)
* stop:                                  Characters.           (line 45)
* stop bits:                             Control.              (line 27)
* strftime and date:                     date invocation.      (line 12)
* string expressions:                    String expressions.   (line  6)
* string tests:                          String tests.         (line  6)
* strip directory and suffix from file names: basename invocation.
                                                               (line  6)
* stripping non-directory suffix:        dirname invocation.   (line  6)
* stty:                                  stty invocation.      (line  6)
* su:                                    su invocation.        (line  6)
* substitute user and group ids:         su invocation.        (line  6)
* substr:                                String expressions.   (line 35)
* subtraction:                           Numeric expressions.  (line 11)
* successful exit:                       true invocation.      (line  6)
* suffix, stripping from file names:     basename invocation.  (line  6)
* super-user, becoming:                  su invocation.        (line  6)
* supplementary groups, printing:        groups invocation.    (line  6)
* susp:                                  Characters.           (line 48)
* swtch:                                 Characters.           (line 39)
* symbolic link check:                   File type tests.      (line 23)
* symbolic links and pwd:                pwd invocation.       (line  6)
* syslog:                                su invocation.        (line 28)
* system context:                        System context.       (line  6)
* system information, printing:          uname invocation.     (line  6)
* system name, printing:                 hostname invocation.  (line  6)
* tabN:                                  Output.               (line 52)
* tabs:                                  Combination.          (line 63)
* tandem:                                Input.                (line 39)
* tee:                                   tee invocation.       (line  6)
* TERM:                                  su invocation.        (line 53)
* terminal check:                        File type tests.      (line 32)
* terminal file name, printing:          tty invocation.       (line  6)
* terminal lines, currently used:        who invocation.       (line 11)
* terminal settings:                     stty invocation.      (line  6)
* test:                                  test invocation.      (line  6)
* text, displaying:                      echo invocation.      (line  6)
* this in date strings:                  Relative item in date strings.
                                                               (line 29)
* time:                                  Special.              (line 11)
* time directives:                       Time directives.      (line  6)
* time formats:                          date invocation.      (line 12)
* time of day item:                      Time of day item.     (line  6)
* time setting:                          Setting the time.     (line  6)
* time units:                            sleep invocation.     (line 11)
* time zone correction:                  Time of day item.     (line 25)
* time zone item:                        Time zone item.       (line  6)
* time, printing or setting:             date invocation.      (line  6)
* today in date strings:                 Relative item in date strings.
                                                               (line 29)
* tomorrow:                              Options for date.     (line 11)
* tomorrow in date strings:              Relative item in date strings.
                                                               (line 26)
* tostop:                                Local.                (line 41)
* true:                                  true invocation.      (line  6)
* tty:                                   tty invocation.       (line  6)
* Twenex:                                su invocation.        (line 84)
* two-way parity:                        Control.              (line  9)
* u, and disabling special characters:   Characters.           (line 12)
* uname:                                 uname invocation.     (line  6)
* Universal Coordinated Time:            Time zone item.       (line 54)
* Universal Time (Coordinated):          Time zone item.       (line 54)
* uppercase, translating to lowercase:   Input.                (line 43)
* USER:                                  su invocation.        (line 18)
* user id, switching:                    su invocation.        (line  6)
* user information, commands for:        User information.     (line  6)
* user name, printing:                   logname invocation.   (line  6)
* usernames, printing current:           users invocation.     (line  6)
* users:                                 users invocation.     (line  6)
* utilities for shell programming:       Top.                  (line  6)
* utmp:                                  logname invocation.   (line  6)
* valid file names, checking for:        pathchk invocation.   (line  6)
* version number, finding:               Common options.       (line 19)
* version of operating system:           uname invocation.     (line 51)
* vtN:                                   Output.               (line 60)
* week in date strings:                  Relative item in date strings.
                                                               (line 14)
* werase:                                Characters.           (line 57)
* wheel group, not supported:            su invocation.        (line 79)
* who:                                   who invocation.       (line  6)
* who am i:                              who invocation.       (line 20)
* whoami:                                whoami invocation.    (line  6)
* working context:                       Working context.      (line  6)
* working directory, printing:           pwd invocation.       (line  6)
* writable file check:                   Access permission tests.
                                                               (line 22)
* write, allowed:                        who invocation.       (line 60)
* xcase:                                 Local.                (line 37)
* XON/XOFF flow control:                 Input.                (line 34)
* year in date strings:                  Relative item in date strings.
                                                               (line 14)
* yes:                                   yes invocation.       (line  6)
* yesterday:                             Options for date.     (line 11)
* yesterday in date strings:             Relative item in date strings.
                                                               (line 26)
* zero-length string check:              String tests.         (line 11)
* |:                                     Relations for expr.   (line 11)



Tag Table:
Node: Top3447
Node: Introduction4373
Node: Common options5903
Node: Date input formats6623
Ref: Date input formats-Footnote-18962
Node: General date syntax9017
Node: Calendar date item10427
Node: Time of day item12221
Node: Time zone item13626
Node: Day of week item16282
Node: Relative item in date strings17152
Node: Pure numbers in date strings18767
Node: Authors of getdate19571
Node: Printing text20224
Node: echo invocation20620
Node: printf invocation21656
Node: yes invocation22622
Node: Conditions23038
Node: false invocation23583
Ref: false invocation-Footnote-124287
Node: true invocation24379
Ref: true invocation-Footnote-125172
Node: test invocation25264
Node: File type tests26333
Node: Access permission tests27199
Node: File characteristics tests28044
Node: String tests28685
Node: Numeric tests29303
Node: Connectives for test30028
Node: expr invocation30375
Node: String expressions31540
Node: Numeric expressions33795
Node: Relations for expr34343
Node: Examples of expr35110
Node: Redirection35795
Node: tee invocation36244
Node: File name manipulation37036
Node: basename invocation37471
Node: dirname invocation38005
Node: pathchk invocation38571
Node: Working context39694
Node: pwd invocation40324
Node: stty invocation40914
Node: Control43443
Node: Input44227
Node: Output45639
Node: Local46939
Node: Combination48562
Node: Characters50788
Node: Special52246
Node: printenv invocation53479
Node: tty invocation54252
Node: User information54983
Node: id invocation55625
Node: logname invocation56722
Node: whoami invocation57223
Node: groups invocation57586
Node: users invocation58221
Node: who invocation59033
Node: System context61093
Node: date invocation61536
Node: Time directives62634
Node: Date directives63798
Node: Literal directives65111
Node: Padding65376
Node: Setting the time66132
Node: Options for date66978
Node: Examples of date68918
Node: uname invocation71567
Node: hostname invocation72816
Node: Modified command invocation73303
Node: chroot invocation73907
Node: env invocation74755
Node: nice invocation75868
Node: nohup invocation77023
Node: su invocation78170
Node: Delaying82423
Node: sleep invocation82626
Node: Numeric operations83167
Node: factor invocation83469
Node: seq invocation83935
Node: Index84978

End Tag Table
