Info file: gnus-ja.info,    -*-Text-*-
produced by `texinfo-format-buffer'
from file `gnus-ja.texi'
using `texinfmt.el' version 2.41 of  1 Mar 2005.

Copyright (C) 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003,
2004, 2005, 2006 Free Software Foundation, Inc.

     Permission is granted to copy, distribute and/or modify this
     document under the terms of the GNU Free Documentation License,
     Version 1.2 or any later version published by the Free Software
     Foundation; with no Invariant Sections, with the Front-Cover
     texts being "A GNU Manual", and with the Back-Cover Texts as in
     (a) below.  A copy of the license is included in the section
     entitled "GNU Free Documentation License" in the Emacs manual.

     この文書を、フリーソフトウェア財団発行の GNU フリー文書利用許諾契
     約書第 1.2 版またはそれ以降の版が定める条件の下で複製、配布、ある
     いは変更することを許可します。変更不可部分は指定しません。“A GNU
     Manual”は表表紙テキスト、以下の (a) は裏表紙テキストです。この利
     用許諾契約書の複写は“Emacs manual”の「GNU フリー文書利用許諾契約
     書」という章に含まれています。

     (a) The FSF's Back-Cover Text is: "You have freedom to copy and
     modify this GNU Manual, like GNU software.  Copies published by
     the Free Software Foundation raise funds for GNU development."

     (a) FSF の裏表紙テキスト:「あなたにはこの GNU Manual を GNU ソフト
     ウェアのように複製したり変更する自由があります。複製はフリーソフト
     ウェア財団によって出版されました。(フリーソフトウェア財団は) GNU
     の開発のために必要な資金を集めています。」

     This document is part of a collection distributed under the GNU
     Free Documentation License.  If you want to distribute this
     document separately from the collection, you can do so by adding
     a copy of the license to the document, as described in section 6
     of the license.

     この文書は「GNU フリー文書利用許諾契約書」に基づいて配布された収集
     著作物の一部です。もしあなたがこの文書を収集著作物から分離して配布
     したいときは、契約書の第 6 章に記述されているように、文書に契約書
     の複写を付加することによって、行なうことができます。



INFO-DIR-SECTION Emacs
START-INFO-DIR-ENTRY
* Gnus-ja: (gnus-ja).           The newsreader Gnus (Japanese).
END-INFO-DIR-ENTRY





File: gnus-ja.info, Node: Subscription Commands, Next: Group Data, Prev: Selecting a Group, Up: Group Buffer

購読制御コマンド
================

`S t'
`u'
     現在のグループを購読する/しないを切り替えます
     (`gnus-group-unsubscribe-current-group')。

`S s'
`U'
     グループを購読するかどうかを確認し、購読します。すでに購読するよう
     になっている場合には、購読を止めます
     (`gnus-group-unsubscribe-group')。

`S k'
`C-k'
     現在のグループを kill します (`gnus-group-kill-group')。

`S y'
`C-y'
     最後に kill したグループを yank します (`gnus-group-yank-group')。

`C-x C-t'
     二つのグループの順序を置き換えます
     (`gnus-group-transpose-groups')。これは本当は購読コマンドではあり
     ませんが、kill と yank を何度か続ける代わりにこのコマンドが使えま
     す。

`S w'
`C-w'
     リージョン内のすべてのグループを kill します
     (`gnus-group-kill-region')。

`S z'
     すべてのゾンビグループを kill します
     (`gnus-group-kill-all-zombies')。

`S C-k'
     あるレベルのグループをすべて kill します
     (`gnus-group-kill-level')。kill した後、これらのグループを yank で
     戻すことはできないので、このコマンドはいくらか注意して使って下さい。
     このコマンドが本当に便利になるのは、`.newsrc' に捨ててしまいたい未
     購読のグループがたくさんあるときだけです。レベル 7 で `S C-k' を行
     なうと、`.newsrc' ファイル中にメッセージ番号がない未購読グループを
     すべて kill します。

*Note Group Levels:: も参照して下さい。



File: gnus-ja.info, Node: Group Data, Next: Group Levels, Prev: Subscription Commands, Up: Group Buffer

グループデータ
==============

`c'
     そのグループ内のすべての無印の記事を既読にします
     (`gnus-group-catchup-current')。グループバッファーから既読にした場
     合は `gnus-group-catchup-group-hook' が呼び出されます。

`C'
     そのグループの全記事を、印付きの記事も含めて既読にします
     (`gnus-group-catchup-current-all')。

`M-c'
     現在のグループのすべてのデータをクリアします--印と既読記事のリスト
     を消し去ります (`gnus-group-clear-data')。

`M-x gnus-group-clear-data-on-native-groups'
     もし NNTP サーバーを別のものに切り替えたとすると、すべての印と既読
     情報はもう役には立ちません。このコマンドを使って基本グループのすべ
     てのデータをクリアすることができます。注意して使ってね。



File: gnus-ja.info, Node: Group Levels, Next: Group Score, Prev: Group Data, Up: Group Buffer

グループレベル
==============

すべてのグループは「購読度」("subscribedness") のレベルを持ちます。例え
ば、あるグループがレベル 2 だとすれば、それはレベル 5 のグループよりも
「より購読している」ということです。Gnus に対して、あるレベルかそれより
小さいレベルのグループのみ一覧表示するように頼むこともできるし (*Note
Listing Groups::)、あるレベルかそれより小さいレベルのグループの新着記事
のみを確認することもできます (*Note Scanning New Messages::)。

忘れないで: グループのレベルが大きいほど、重要度は低くなるということ。

`S l'
     現在のグループのレベルを設定します。数値の接頭引数が与えられると、
     そこから N 個のグループのレベルが設定されます。レベルを入力するた
     めのプロンプトが出ます。

Gnus はレベル 1 から `gnus-level-subscribed' (この値を含む) (ディフォル
トは 5) までのグループを購読、`gnus-level-subscribed' (この値を含まない)
から `gnus-level-unsubscribed' (この値を含む) (ディフォルトは 7) までの
グループを非購読、`gnus-level-zombie' をゾンビ (歩く屍) (ディフォルトは
8)、`gnus-level-killed' を kill されている (完全に死んでいる) (ディフォ
ルトは 9) と判断します。Gnus は購読と非購読のグループはまったく同様に扱
いますが、ゾンビと kill グループは、どの記事を読んだか、存在するかなど
の情報を一切持ちません。この死んでいるグループと生きているグループの区
別は、別にそれがきれいだからとか賢いからというわけではなく、純粋に効率
的な理由のためです。

メール用のグループは (もしあれば) 非常に小さいレベル (例えば 1 か 2) に
しておくことをお勧めします。

次の Gnus のディフォルトの動作の説明は、ことによると、これらのレベルの
すべてを理解する助けになるかもしれません。ディフォルトでは、Gnus は講読
している空でないグループを表示しますが、`L' を叩くことによって空のグルー
プや非講読のグループも表示させることができます。つまり、非講読のグルー
プは隠されている、と言っても良いでしょう。

ゾンビと kill グループは、ディフォルトでは隠されている点で非講読のグルー
プに似ています。しかし、Gnus がニュースサーバーに対してゾンビと kill グ
ループに関する情報 (記事数、未読記事数) の問い合わせをしない点で、購読
および非購読のグループとは違っています。ふつう、あなたは興味の無いグルー
プを `C-k' で kill しますよね。もし、ほとんどのグループが kill されてい
ると、Gnus は速くなります。

なぜ Gnus はゾンビと kill グループを区別するのでしょう?  ええと、サーバー
に新しいグループができると、Gnus はディフォルトでそれをゾンビにします。
これは、あなたがふつうは新しいグループに煩わされないことを意味しますが、
あなたは `A z' で新しいグループのリストを得ることができます。あなたは好
みのものを講読し、要らないものは kill すれば良いのです。(`A k' で kill
されたグループのリストを表示します。)

もしレベル変数で遊びたいのであれば、多少注意をしてまわる必要があります。
いったんそれを設定したら、二度とそれに触らないで下さい。さらに言えば、
自分で何をやっているかを正確に理解していない限り、一切触らないで下さい。

身近に関係する二つの変数は `gnus-level-default-subscribed' (ディフォル
トは 3) と `gnus-level-default-unsubscribed' (ディフォルトは 6) です。
これらは新しいグループが (非) 購読されたときのレベルです。もちろん、こ
れら二つの変数の値は、意味のある正しい範囲でなくてはなりません。

`gnus-keep-same-level' が `nil' 以外であれば、移動コマンドのいくつかは
同一 (あるいはそれより小さい) レベルのグループのみの移動になります。特
に、あるグループの最後の記事から次のグループに移るとき、次の同一 (ある
いはそれより小さい) レベルのグループに移動します。これは残りのグループ
を読むより先に、より重要なグループを読んでおきたいときには便利かもしれ
ません。

もしこの値が `best' だったら、最も重要な (最もレベルの値が小さい) グルー
プに移動します。

ディフォルトでは `gnus-group-default-list-level' と同じかそれより小さい
レベルのグループが、グループバッファーに一覧表示されます。

`gnus-group-list-inactive-groups' が `nil' 以外であれば、未読のグループ
にアクティブでないグループも一緒に表示します。この変数はディフォルトで
は `t' です。もしこれが `nil' であれば、アクティブでないグループは表示
されません。

`gnus-group-use-permanent-levels' が `nil' 以外であれば、いったん `g'
や `l' コマンドの接頭引数にレベルを与えると、その後のすべてのコマンドに
おいてそのレベルが「作用する」レベルになります。

Gnus は通常、`gnus-activate-level' かそれより小さいレベルのグループのみ
を起動します (つまりサーバーに問い合わせをする)。購読していないグループ
を起動したくなければ、この変数を例えば 5 に設定するとよいかもしれません。
ディフォルトは 6 です。



File: gnus-ja.info, Node: Group Score, Next: Marking Groups, Prev: Group Levels, Up: Group Buffer

グループのスコア
================

普通は重要なグループは高レベルにしておくでしょうけれども、この方法では
少々制限がきついですよね。ひょっとしたら、グループをどれくらい頻繁に読
むかによってグループバッファーを並べ替えたいなあ、なんて思いませんか?
理にかなってるでしょ?

「グループスコア」("group score") はそのためのものです。Gnus に以下で説
明されている機構で、それぞれのグループに対してスコアを指定することがで
きます。そしてグループバッファーをこのスコアを基に並べ替えることができ
ます。あるいは、スコア順で並べ替えてその後レベルで並べ替えることもでき
ます。(レベルとスコアをひとまとめにして、グループの「ランク」("rank")
と呼びます。レベルが 4 でスコアが 1 のグループは、レベルが 5 でスコアが
300 のグループよりも高いランクとなります。(レベルの方が重要度が高く、ス
コアの方は重要度が低くなります。))

頻繁に読むグループに、めったに読まないグループよりも高いスコアを与えた
いときは、`gnus-summary-exit-hook' フックに
`gnus-summary-bubble-group' 関数を追加することができます。これでバブル
並べ替えの実行結果が (並べ替えの後で) 得られるでしょう。概略モードを終
了するたびにこの活動をさせたいのであれば、同じフックに
`gnus-group-sort-groups-by-rank' または
`gnus-group-sort-groups-by-score' を追加できますが、いくらか遅くなるで
しょう。



File: gnus-ja.info, Node: Marking Groups, Next: Foreign Groups, Prev: Group Score, Up: Group Buffer

グループへの印
==============

もしいくつかのグループに対して何らかの命令を実行したい場合で、それらが
グループバッファーに連続してある場合には、通常通り命令に対して数値接頭
引数を与えるだけです。そうすればほとんどのグループ命令は、これらのグルー
プに対してあなたの命令に従います。

しかしそれらのグループが順番に並んでいない場合においても、いくつかのグ
ループに対して命令を実行することができます。単に始めにプロセス印でグルー
プに印を付けておき、そして命令を実行するだけです。

`#'
`M m'
     現在のグループに印を付ける (`gnus-group-mark-group')。

`M-#'
`M u'
     現在のグループから印を削除する (`gnus-group-unmark-group')。

`M U'
     すべてのグループから印を削除する (`gnus-group-unmark-all-groups')。

`M w'
     ポイントとマークの間のすべてのグループに印を付ける
     (`gnus-group-mark-region')。

`M b'
     バッファー内のすべてのグループに印を付ける
     (`gnus-group-mark-buffer')。

`M r'
     ある正規表現に合致するすべてのグループに印を付ける
     (`gnus-group-mark-regexp')。

*Note Process/Prefix:: も参照して下さい。

プロセス印が付けられているすべてのグループに対して何かの命令を実行した
いときは、`M-&' (`gnus-group-universal-argument') 命令を使うことができ
ます。プロンプトから実行したい命令を入力します。



File: gnus-ja.info, Node: Foreign Groups, Next: Group Parameters, Prev: Marking Groups, Up: Group Buffer

外部グループ
============

以下では、一般的な外部グループの作成、変更を行なうグループモードの命令
をいくつか、および特別な目的のグループを簡単に作成する命令を紹介します。
これらの命令はすべて、新規に作成したグループをポイント位置に挿入しま
す---`gnus-subscribe-newsgroup-method' は参照されません。

`G m'
     新しいグループを作成します (`gnus-group-make-group')。Gnus はプロン
     プトを表示して、名前と方法と、場合によっては "address" の入力を求め
     てきます。より簡単に NNTP グループを購読する方法については、
     *Note Browse Foreign Server:: を参照して下さい。

`G M'
     一時ニュースグループを作成します
     (`gnus-group-read-ephemeral-group')。 Gnus はプロンプトを表示して、
     名前、方法および "address" の入力を求めます。

`G r'
     現在のグループの名前を、何か別のものに変更します
     (`gnus-group-rename-group')。これはある種のグループ--主にメールグ
     ループに対してのみ有効です。このコマンドはバックエンドによっては非
     常に遅いことも有り得ます。

`G c'
     グループパラメーターをカスタマイズする (`gnus-group-customize')。

`G e'
     現在のグループの選択方法を修正するためのバッファーに移動します
     (`gnus-group-edit-group-method')。

`G p'
     グループパラメーターを修正するためのバッファーに移動します
     (`gnus-group-edit-group-parameters')。

`G E'
     グループ情報を修正するためのバッファーに移動します
     (`gnus-group-edit-group')。

`G d'
     ディレクトリーグループを作成します (*Note Directory Groups::)。ディ
     レクトリー名をプロンプトで入力します
     (`gnus-group-make-directory-group')。

`G h'

     Gnus ヘルプグループを作成します (`gnus-group-make-help-group')。

`G a'
     Gnus アーカイブグループを作成します
     (`gnus-group-make-archive-group')。ディフォルトでは最も最近の記事
     を指しているグループが作成されますが
     (`gnus-group-recent-archive-directory')、接頭引数を与えるとすべて
     の記事を含むグループが `gnus-group-archive-directory' を基に作成さ
     れます。

`G k'
     kiboze グループを作成します。プロンプトで名前と、kiboze グループに
     「含めたい」グループに合う正規表現と、ヘッダーに合う文字列の組を入
     力します (`gnus-group-make-kiboze-group')。*Note Kibozed
     Groups::.

`G D'
     任意のディレクトリーを `nneething' バックエンドニュースグループであ
     るかのように読み込みます (`gnus-group-enter-directory')。
     *Note Anything Groups::.

`G f'
     何らかのファイルをもとにグループを作成します
     (`gnus-group-make-doc-group')。このコマンドに接頭引数を与えた場合、
     ファイル名とファイルタイプをプロンプトで入力します。現在サポートさ
     れているファイルタイプは `mbox', `babyl', `digest', `news',
     `rnews', `mmdf', `forward', `rfc934', `rfc822-forward',
     `mime-parts', `standard-digest', `slack-digest', `clari-briefs',
     `nsmail', `outlook', `oe-dbx' および `mailman' です。接頭引数なし
     でこのコマンドを実行すると、Gnus はファイルタイプを推測します。
     *Note Document Groups::.

`G u'
     `gnus-useful-groups' にあるグループの一つを作ります
     (`gnus-group-make-useful-group')。

`G w'
     ウェブ検索結果をもとに一時的なグループを作成しま
     す (`gnus-group-make-web-group')。このコマンドに接頭引数を与えると、
     一時的ではなく固定したグループを作成します。プロンプトで検索エンジンの種
     類 (search engine type) と検索文字列を入力します。有効な検索エンジンの種
     類には `google', `dejanews', `gmane' があります。
     *Note Web Searches::.

     もし、`google' 検索エンジンを用いる場合には、`shaving
     group:alt.sysadmin.recovery' のような合致する文字列を用いることに
     よって、検索対象を特定のグループに限定することが可能です。

`G R'
     RSS feed に基づくグループを作りま
     す (`gnus-group-make-rss-group')。URL の入力を促されます。
     *Note RSS::.

`G DEL'
     この関数は現在のグループを削除します (`gnus-group-delete-group')。
     接頭引数が与えられると、この関数はそのグループ内の全記事を本当に削
     除し、グループ自身をこの世から強制的に抹殺してしまいます。接頭引数
     は、あなたが何をやろうとしているか、本当に自信があるときにのみ使っ
     て下さい。まあ、このコマンドは (`nntp' グループのような) 読み出し
     専用グループには使えませんけれど。

`G V'
     新しい、新鮮な、空の `nnvirtual' グループを作成します
     (`gnus-group-make-empty-virtual')。*Note Virtual Groups::.

`G v'
     現在のグループを `nnvirtual' グループに追加します
     (`gnus-group-add-to-virtual')。これはプロセス印/接頭引数の習慣に従
     います。

さまざまな選択方法に関するさらなる情報は *Note Select Methods:: を参照
して下さい。

もし `gnus-activate-foreign-newsgroups' が正の数であれば、Gnus は起動時
に、この数かそれよりも小さいレベルの外部グループをすべてチェックします。
これは特に違った NNTP サーバーからたくさんのグループを購読している場合
には、しばらく時間がかかるかもしれません。*Note Group Levels:: も参照し
て下さい。`gnus-activate-level' も外部ニュースグループの活性化に影響を
及ぼします。



File: gnus-ja.info, Node: Group Parameters, Next: Listing Groups, Prev: Foreign Groups, Up: Group Buffer

グループパラメーター
====================

グループパラメーターは、ある特定のグループに固有な情報を保持します。以
下はグループパラメーターリストの例です:

     ((to-address . "ding@gnus.org")
      (auto-expire . t))

それぞれの要素は『点対』(dotted pair)---つまり点 (dot) の前に鍵、点の後
ろに値があるもの、で構成されます。すべてのパラメーターはこの形式を取り
ますが、*例外* としてローカル変数の指定は点対ではなく通常のリスト (訳注:
後述の `(VARIABLE FORM)' の項を参照) になります。

いくつかのパラメーターは対応するカスタマイズ可能な変数を持っています。
それらは正規表現と値の連想リストです。

以下は利用可能なグループパラメーターです:

`to-address'
     フォローアップとニュースへの投稿をするときに使用されるアドレス。

          (to-address . "some@where.com")

     これは主に、閉じたメーリングリストを表わすメールグループにおいて便
     利なものです--すなわちメーリングリストに投稿する人はすべてそれを購
     読しているはず、というメーリングリストのことです。このパラメーター
     を使用すると、メールはそのメーリングリストにしか投稿されないことが
     保証されるので、参加者はあなたのフォローアップ記事を二通受け取るこ
     とはありません。

     `to-address' を指定すると、そのグループが外部グループであるかどう
     かに関わらず有効になります。例えば `fa.4ad-l' というグループがサー
     バー上にあったとしましょう。これは本当のニュースグループですが、サー
     バーはメールニュースゲートウェイを通して記事を受け付けます。つまり
     このグループに対して直接投稿することは不可能で、代わりにそのメーリ
     ングリストにメールを送信しなければなりません。

     `gnus-parameter-to-address-alist' も参照して下さい。

`to-list'
     そのグループで `a' を押したときに使用されるアドレス。

          (to-list . "some@where.com")

     これはフォローアップをしたときは完全に無視されます--例外はそれが
     ニュースグループを表わしているときは、`f' を押したときにメールグルー
     プのルールが適用されるということです。

     もし `a' コマンドをメールグループで実行したときに、`to-list' グルー
     プパラメーターも `to-address' もグループパラメーターも無ければ、
     `to-list' グループパラメーターは、`gnus-add-to-list' が `t' に設定
     されていればメッセージ送信時に自動的に付加されます。

     もしこのグループパラメーターが設定されていると、概略バッファーに入っ
     たときに `gnus-mailing-list-mode' が有効になります。

     `gnus-parameter-to-list-alist' も参照して下さい。

     
`subscribed'
     もしこのパラメーターが `t' に設定されていると、Gnus はあなたがこの
     グループを to-address と to-list パラメーターのアドレスで購読して
     いるメーリングリストであると解釈します。この情報を Gnus に与えるこ
     とは、あなたがそれらのメーリングリストに投稿するときに正しい
     Mail-Followup-To ヘッダーを生成するための (ほんの) 第一歩です。二
     歩目は `.gnus.el' に以下を入れることです。

          (setq message-subscribed-address-functions
                '(gnus-find-subscribed-addresses))

     利用できる MFT 対応機能を完全に扱うには、ここ (*Note メーリングリ
     スト: (message-ja)Mailing Lists.) を見て下さい。

`visible'
     グループパラメーターのリスト中に `(visible . t)' という要素があれ
     ば、そのグループはグループバッファーにおいて、未読記事があるかどう
     かに関わらず、常に表示されます。

     このパラメーターを `gnus-parameters' を介して設定することはできま
     せんが、代わりに `gnus-permanently-visible-groups' を使えば良いで
     しょう。

`broken-reply-to'
     `(broken-reply-to . t)' という要素があれば、そのグループでは
     `Reply-To' は無視され、`reply-to' が
     `gnus-boring-article-headers' の部分であれば、ヘッダーが隠されると
     いう意味です。これはある listserv によるメーリングリストを購読して
     いて、それが `Reply-To' 欄を listserv 自身に返すように付けられてい
     る場合に有効でしょう。これはおかしな振る舞いです。だからこれが要る
     んです!

`to-group'
     `(to-group . "some.group.name")' という要素は、そのグループへの投
     稿はすべて `some.group.name' に送られる、という意味です。

`newsgroup'
     グループパラメーターリストに `(newsgroup . t)' があれば、Gnus はす
     べての応答をニュース記事に対する応答であるかのように扱います。これ
     は実際にはニュースグループのミラーであるメールグループに対して有効
     です。

`gcc-self'
     グループパラメーターリストに `(gcc-self . t)' があれば、新しく作成
     するメッセージは現在のグループに `Gcc' されます。もし
     `(gcc-self . none)' があれば、`Gcc:' 欄は生成されず、
     `(gcc-self . "string")' があればこの文字列はそのまま `gcc' 欄に挿
     入されます。このパラメーターは以下で説明するどんなディフォルトの
     `Gcc' の規則よりも優先されます (*Note Archived Messages::)。

     *警告*: `nntp' (またはその種の) グループのパラメーターリストに
     `(gcc-self . t)' を加えることに効力はありません。`nntp' サーバーは
     記事を受け入れません。

`auto-expire'
     グループパラメーターに `(auto-expire . t)' のような要素があれば、す
     べての既読記事は期限切れ消去されるように印を付けられます。他の方法は、
     *Note Expiring Mail::.

     `gnus-auto-expirable-newsgroups' も参照して下さい。

`total-expire'
     グループパラメーターに `(total-expire . t)' のような要素があれば、
     既読記事は、期限切れ消去の印が付いていなくてもすべて期限切れ消去処
     理を施されます。注意して使用して下さい。未読記事、印付き記事、保留
     記事は期限切れ消去されません。

     `gnus-total-expirable-newsgroups' も参照して下さい。

`expiry-wait'
     グループパラメーターに `(expiry-wait . 10)' のような要素があれば、
     この値は記事を期限切れ消去するときに `nnmail-expiry-wait' と
     `nnmail-expiry-wait-function' の設定 (*Note Expiring Mail::) より
     も優先されます。この値は期限切れ消去の日数 (整数である必要はない)
     かもしくは `never' か `immediate' のシンボルを指定できます。

`expiry-target'
     期限切れ消去されるメッセージの果てる場所。このパラメーターは
     `nnmail-expiry-target' よりも優先されます。

`score-file'
     `(score-file . "file")' のような要素は、`file' を現在のグループに
     適用されるスコアファイルにします。すべての適用されるスコア・エント
     リーはこのファイルに入ります。

`adapt-file'
     `(adapt-file . "file")' のような要素は、`file' を現在のグループの
     適応ファイルにします。すべての適応スコア・エントリーはこのファイル
     に入ります。

`admin-address'
     メーリングリストから脱会するときは、脱会通知メールをそのメーリング
     リスト自身に送信してはいけません。代わりに管理用アドレスにメッセー
     ジを送信します。このパラメーターにはどこか都合の良いな管理用アドレ
     スを書いておくことができます。

`display'
     `(display . MODE)' のような要素は、グループに入るときにどの記事を
     表示するかを指定します。有効な値は、

     `all'
          未読、既読記事の両方をすべて表示します。

     `an integer'
          そのグループの最後の INTEGER 個の記事を表示します。これは
          `C-u INTEGER' でそのグループに入るのと同じです。

     `default'
          ディフォルトの記事を表示します。これは通常は未読記事と可視記
          事です。

     `配列'
          述語を満足するように記事を表示します。

          いくつか例を挙げます:

          `[unread]'
               未読の記事だけを表示します。

          `[not expire]'
               期限切れ消去可能な記事以外のすべてを表示します。

          `[and (not reply) (not expire)]'
               期限切れ消去可能とすでに返信した記事以外のすべてを表示し
               ます。

          利用できる演算子は `not', `and' および `or' です。述語
          は `tick', `unsend', `undownload', `unread',
          `dormant', `expire', `reply', `killed',
          `bookmark', `score', `save', `cache', `forward',
          `unseen' および `recent' を含みます。

     `display' パラメーターは、概略バッファーを指定した一部の組だけに制
     限するように働きます。制限を外すのは `/ w' コマンドでできます
     (*Note Limiting::)。

`comment'
     `(comment . "This is a comment")' のような要素は、そのグループに対
     する任意のコメントです。グループ行に表示することができます (*Note
     Group Line Specification::)。

`charset'
     `(charset . iso-8859-1)' のような要素は、`iso-8859-1' をディフォル
     トの文字セットにします。すなわち、文字セットを指定しないすべての記
     事に、その文字セットが使われます。

     `gnus-group-charset-alist' も見て下さい。

`ignored-charsets'
     `(ignored-charsets x-unknown iso-8859-1)' のような要素は、
     `iso-8859-1' と `x-unknown' を無視します。すなわち、記事のデコード
     にディフォルトの文字セットが使われます。

     `gnus-group-ignored-charsets-alist' も見て下さい。

`posting-style'
     このグループの追加の投稿様式をここに保存することができます (*Note
     Posting Styles::)。書式は `gnus-posting-style' 連想リストと同じで
     すが、ここにはグループ名に合致する正規表現はありません (当然です)。
     このグループの様式の要素は `gnus-posting-styles' で見つかったもの
     よりも優先されます。

     例えば、このグループのみ、かっこいい名前と署名にしたいなら、
     `gnus-posting-styles' をいじらずに、このようなものをグループパラメー
     ターに入れることができます:

          (posting-style
            (name "Funky Name")
            ("X-My-Header" "Funky Value")
            (signature "Funky Signature"))

`post-method'
     もしこれが設定されていると、メッセージを送信するための選択方法とし
     て `gnus-post-method' の代わりに使われます。

`banner'
     `(banner . REGEX)' のような項目は、記事のすべての場所で正規表現
     REGEX に合致するものを削除します。REGEX の代わりにシンボル
     `signature' (最後の署名を削除) や連想リスト
     `gnus-article-banner-alist' の各要素を使うこともできます。

`sieve'
     このパラメーターは、入ってきたメールがこのグループに置くに値するか
     どうかを調べる Sieve (ふるい) テストを持ちます。このグループパラメー
     ターを元に `fileinto "group.name";' というテスト条件を本体に持つ、
     Sieve の `IF' 制御構造体が作られます。

     例えば、もし `INBOX.list.sieve' グループが `(sieve address
     sender" "sieve-admin@extundo.com")' というグループパラメーターを持っ
     ていたならば、グループパラメーターを Sieve スクリプトに変換する
     (*Note Sieve Commands::) ときに、以下の Sieve コードが作られます:

          if address "sender" "sieve-admin@extundo.com" {
                  fileinto "INBOX.list.sieve";
          }

     複数の電子メールアドレスのためのテストを生成するには、`(sieve
     address "sender" ("name@one.org" else@two.org"))' のようなグループ
     パラメーターを使って下さい。Sieve スクリプト (*Note Sieve
     Commands::) を生成すると、以下のような Sieve コードが作られます:

          if address "sender" ["name@one.org", "else@two.org"] {
                  fileinto "INBOX.list.sieve";
          }

     Sieve パラメーターに関連する重要なコマンドと変数については、*Note
     Sieve Commands:: を参照して下さい。

     Sieve 言語は RFC 3028 で述べられています (*Note Emacs Sieve:
     (sieve-ja)Top.)。

`(agent parameters)'
     エージェントを使うようにしてあると、個々のグループでエージェントの
     振る舞いを制御するどのパラメーターも設定することができます。エージェ
     ントパラメーターについては *Note Category Syntax:: を参照して下さ
     い。たいていの利用者は、設定に要する苦労を最小限にするために、エー
     ジェントカテゴリーかグループトピックのどちらかでエージェントパラメー
     ターを設定することを選ぶでしょう。

`(VARIABLE FORM)'
     グループに入るときに、そのグループローカルの変数を設定するグループ
     パラメーターを使用することができます。`news.answers' においてスレッ
     ド表示を行ないたくないときは、そのグループにグループパラメーターに
     `(gnus-show-threads nil)' と書けます。`gnus-show-threads' は、その
     概略バッファーの中のローカル変数になり、form の `nil' はそこで
     `eval' (評価) されます。

     この機能は、変数を概略バッファーでローカルに設定することに注意して
     下さい。でも、いくつかの変数は記事バッファーか (返信、フォロー、あ
     るいは新規に作られたメッセージの) メッセージバッファーで評価されま
     す。代わりに、問題の変数を `gnus-newsgroup-variables' に加えること
     が助けになるかもしれません。したがって、グループパラメーターを介し
     て `message-from-style' を設定したいならば、`~/.gnus' ファイルのど
     こか他のところに、次の述語が必要になるかもしれません:

          (add-to-list 'gnus-newsgroup-variables 'message-from-style)

     この機能の用途の一つは、記事の表題欄からメーリングリストの標識タグ
     をはぎ取ることです。もしニュースグループ

          nntp+news.gnus.org:gmane.text.docbook.apps

     が、すべての記事の表題に `DOC-BOOK-APPS:' というタグを持っているな
     らば、そのグループのグループパラメーターに
     `(gnus-list-identifiers "DOCBOOK-APPS:")' を入れることによって、そ
     のグループの概略バッファーに表示される記事の表題からタグをはぎ取る
     ことができます。

     これはもし必要であれば、グループ毎のフック関数としても使用できます。
     もしあるグループに入ったときにビープ音を鳴らしたければ、そのグルー
     プのパラメーターに `(dummy-variable (ding))' みたいなものを書いて
     おくこともできます。`dummy-variable' という変数に (無意味な)
     `(ding)' の評価結果が設定されます。

     あるいは、VARIABLE はそのグループに対してローカルになるので、この
     様式は一時的にフックを変更するために使うことができます。例えば、以
     下のものがグループパラメーターに追加されると、

          (gnus-summary-prepared-hook
            '(lambda nil (local-set-key "d" (local-key-binding "n"))))

     そのグループに入ったときに `d' キーは記事に期限切れ消去の印を付け
     ないようになります。

グループパラメーターの修正には `G p' か `G c' 命令を使って下さい (`G
p' は Lisp ベースの、`G c' は Custom ふうのインターフェースを提供しま
す)。トピックパラメーターについて読んでみることも面白いでしょう (*Note
Topic Parameters::)。

グループパラメーターは `gnus-parameters' 変数を介在して設定することもで
きます。でもいくつかのパラメーター、例えば `visible' は効力を発揮しませ
ん (その場合、代替として `gnus-permanently-visible-groups' を使うことが
できます)。例です:

     (setq gnus-parameters
           '(("mail\\..*"
              (gnus-show-threads nil)
              (gnus-use-scoring nil)
              (gnus-summary-line-format
               "%U%R%z%I%(%[%d:%ub%-23,23f%]%) %s\n")
              (gcc-self . t)
              (display . all))

             ("^nnimap:\\(foo.bar\\)$"
              (to-group . "\\1"))

             ("mail\\.me"
              (gnus-use-scoring  t))

             ("list\\..*"
              (total-expire . t)
              (broken-reply-to . t))))

文字列の値は、`to-group' の例が示すように、正規表現による置き換えを受け
ることがあります。

グループ名と `gnus-parameters' で指定されたこれらの正規表現の一つを比較
するときに大文字と小文字を区別するかどうかは、ディフォルトではその比較
を行なう時点での `case-fold-search' の値に依存します。一般的に
`case-fold-search' の値は `t' で、それは例えば `("INBOX\\.FOO"
(total-expire . t))' という要素が、`INBOX.FOO' グループと `INBOX.foo'
グループの両方に適用されることを意味します。これらの正規表現が常に大文
字と小文字を区別するようにしたい場合は、
`gnus-parameters-case-fold-search' 変数の値を `nil' に設定して下さい。
あるいは、それらが常に大文字と小文字を区別しないようにしたいなら、それ
を `t' に設定して下さい。

`gnus-parameters' を介することによって、グループによって異なる並べ替え
を定義することができます。これは、NNTP グループでは最新のニュースが先頭
になるように日付で、RSS グループでは表題で、それぞれ並べ替えを行なう例
です。この例の最初のグループは、news.gmane.org から取得する Debian のデ
イリーニュースです。RSS グループは RSS フィードで配信されている Debian
のウィークリーニュース
`http://packages.debian.org/unstable/newpkg_main.en.rdf' に対応します。
*Note RSS::.

     (setq
      gnus-parameters
      '(("nntp.*gmane\\.debian\\.user\\.news"
         (gnus-show-threads nil)
         (gnus-article-sort-functions '((not gnus-article-sort-by-date)))
         (gnus-use-adaptive-scoring nil)
         (gnus-use-scoring nil))
        ("nnrss.*debian"
         (gnus-show-threads nil)
         (gnus-article-sort-functions 'gnus-article-sort-by-subject)
         (gnus-use-adaptive-scoring nil)
         (gnus-use-scoring t)
         (gnus-score-find-score-files-function 'gnus-score-find-single)
         (gnus-summary-line-format "%U%R%z%d %I%(%[ %s %]%)\n"))))



File: gnus-ja.info, Node: Listing Groups, Next: Sorting Groups, Prev: Group Parameters, Up: Group Buffer

グループの一覧表示
==================

これらのコマンドは、利用できるグループをいろいろに切り分けて表示します。

`l'
`A s'
     未読記事を持つすべてのグループを表示します
     (`gnus-group-list-groups')。数値接頭引数を使うと、このコマンドは引
     数の数かそれよりも小さいレベルのグループのみを表示します。ディフォ
     ルトでは、これはレベル 5 (つまり `gnus-group-default-list-level')
     かそれより小さいレベル (すなわち購読しているグループのみ) を表示し
     ます。

`L'
`A u'
     未読記事のあるなしに関わらず、すべてのグループを表示します
     (`gnus-group-list-all-groups')。数値接頭引数を使用すると、このコマ
     ンドは引数の数かそれよりも小さいレベルのグループのみを表示します。
     ディフォルトでは 7 かそれよりも小さいレベルのグループ (すなわち購
     読、非購読のグループのみ) が表示されます。

`A l'
     未読記事があるグループのうち、指定したレベルのものだけを表示します
     (`gnus-group-list-level')。接頭引数を与えると、未読記事の無いグルー
     プも含めて表示します。

`A k'
     kill されたグループをすべて表示します (`gnus-group-list-killed')。
     接頭引数を与えると、購読または非購読のどちらにもなっていないすべて
     の利用可能なグループを表示します。これはサーバーからアクティブファ
     イルを読むことになるでしょう。

`A z'
     すべてのゾンビグループを表示します (`gnus-group-list-zombies')。

`A m'
     正規表現に合致する名前を持つグループで、未読記事のある購読グループ
     をすべて表示します (`gnus-group-list-matching')。

`A M'
     正規表現に合致するグループを表示します
     (`gnus-group-list-all-matching')。

`A A'
     今接続しているサーバーのアクティブファイルにあるグループを、本当に
     全部表示します (`gnus-group-list-active')。これはしばらく時間がか
     かることも有り得ます。たぶん `A M' を実行して、合致させたい部分を
     `.' としてすべての合致するリストを表示させた方が良いでしょう。また、
     このコマンドは (まだ) 存在しないグループも表示するかもしれませ
     ん--これは kill されたグループであるかのように表示されます。出力は
     多少割り引いて受け取ってね。

`A a'
     正規表現に合致する名前を持つグループをすべて表示します
     (`gnus-group-apropos')。

`A d'
     正規表現に合致する名前か説明文を持つグループをすべて表示します
     (`gnus-group-description-apropos')。

`A c'
     キャッシュ記事を持つグループをすべて表示します
     (`gnus-group-list-cached')。

`A ?'
     保留記事を持つグループをすべて表示します
     (`gnus-group-list-dormant')。

`A /'
     現在の選択された範囲に限定したグループを表示します
     (`gnus-group-list-limit')。

`A f'
     現在の選択されたグループを書き出します (`gnus-group-list-flush')。

`A p'
     現在の選択されたグループを加えたグループを表示します
     (`gnus-group-list-plus')。

`gnus-permanently-visible-groups' 正規表現に合致するグループは、未読記
事があるかないかに関わらず常に表示されます。あるいはグループパラメーター
において `visible' 要素を追加することでも同様の効果を得ることができます。

印付きの記事のみを持つグループは通常グループバッファーに表示されます。
もし `gnus-list-groups-with-ticked-articles' が `nil' であれば、そのグ
ループは完全に空のグループであるかのように扱われます。ディフォルトは
`t' です。



File: gnus-ja.info, Node: Sorting Groups, Next: Group Maintenance, Prev: Listing Groups, Up: Group Buffer

グループの並べ替え
==================

`C-c C-s' (`gnus-group-sort-groups') 命令は、グループバッファーを
`gnus-group-sort-function' 変数で与えられる関数に従って並べ替えます。利
用可能な並べ替え関数 (sorting function) には以下のものがあります:

`gnus-group-sort-by-alphabet'
     グループ名でアルファベット順に並べ替えます。これがディフォルトです。

`gnus-group-sort-by-real-name'
     グループを本当の (前に何も付いていない) グループ名でアルファベット
     順に並べ変えます。

`gnus-group-sort-by-level'
     グループレベルで並べ替えます。

`gnus-group-sort-by-score'
     グループのスコアで並べ替えます。*Note Group Score::.

`gnus-group-sort-by-rank'
     グループのスコアで並べ替え、次にグループレベルで並べ替えます。レベ
     ルとスコアは、ひとまとめにして「ランク」と呼ばれます。*Note Group
     Score::.

`gnus-group-sort-by-unread'
     未読記事の数で並べ替えます。

`gnus-group-sort-by-method'
     選択方法のアルファベット順で並べ替えます。

`gnus-group-sort-by-server'
     サーバー名のアルファベット順で並べ替えます。

`gnus-group-sort-function' は並べ替え関数のリストであっても構いません。
この場合、もっとも重要な並べ替えの鍵を持つ関数は最後でなくてはなりませ
ん。

ある種の並べ替え用には、直接並べ替える命令もいくつかあります。

`G S a'
     グループバッファーをグループ名のアルファベット順で並べ替えます
     (`gnus-group-sort-groups-by-alphabet')。

`G S u'
     グループバッファーを未読記事の数で並べ替えます
     (`gnus-group-sort-groups-by-unread')。

`G S l'
     グループバッファーをグループレベルで並べ替えます
     (`gnus-group-sort-groups-by-level')。

`G S v'
     グループバッファーをグループのスコアで並べ替えます
     (`gnus-group-sort-groups-by-score')。*Note Group Score::.

`G S r'
     グループバッファーをグループのランクで並べ替えます
     (`gnus-group-sort-groups-by-rank')。*Note Group Score::.

`G S m'
     グループバッファーをバックエンドの名前でアルファベット順に並べ替え
     ます (`gnus-group-sort-groups-by-method')。

`G S n'
     グループバッファーを本当の (前に何も付いていない) グループ名でアル
     ファベット順に並べ替えます
     (`gnus-group-sort-groups-by-real-name')。

以下のすべての命令はプロセス/接頭引数の習慣に従います (*Note
Process/Prefix::)。

シンボル接頭引数 (*Note Symbolic Prefixes::) が与えられたときは、これら
すべての命令は逆順で並び換えます。

また、グループの一部を並べ替えることもできます。

`G P a'
     グループをグループ名のアルファベット順で並べ替えます
     (`gnus-group-sort-selected-groups-by-alphabet')。

`G P u'
     グループを未読記事の数で並べ替えます
     (`gnus-group-sort-selected-groups-by-unread')。

`G P l'
     グループをグループレベルで並べ替えます
     (`gnus-group-sort-selected-groups-by-level')。

`G P v'
     グループをグループのスコアで並べ替えま
     す (`gnus-group-sort-selected-groups-by-score')。
     *Note Group Score::.

`G P r'
     グループをグループのランクで並べ替えます
     (`gnus-group-sort-selected-groups-by-rank')。*Note Group Score::.

`G P m'
     グループをバックエンドの名前でアルファベット順に並べ替えます
     (`gnus-group-sort-selected-groups-by-method')。

`G P n'
     グループを本当の (前に何も付いていない) グループ名でアルファベット
     順に並べ替えます (`gnus-group-sort-selected-groups-by-real-name')。

`G P s'
     グループを `gnus-group-sort-function' に従って並べ替えます。

最後に、`C-k' と `C-y' を使って、手動でグループをあちこちに移動できるこ
ともお忘れなく。



File: gnus-ja.info, Node: Group Maintenance, Next: Browse Foreign Server, Prev: Sorting Groups, Up: Group Buffer

グループの管理
==============

`b'
     不正なグループを見つけて、削除します
     (`gnus-group-check-bogus-groups')。

`F'
     新しいグループを見つけて、それらを処理します
     (`gnus-group-find-new-groups')。一回の `C-u' の後で押されると、サー
     バーに新しいグループを尋ねるために `ask-server' の方法を使います。
     二回の `C-u' の後で押されると、サーバーに新しいグループを尋ねるた
     めに最も完全であると思われる方法を用い、新しいグループをゾンビとし
     て購読します。

`C-c C-x'
     現在のグループの期限切れ消去可能な記事に対して (もしあれば) すべて
     期限切れ消去の処理を行ないます (`gnus-group-expire-articles')。こ
     れは、そのグループにしばらく存在していた期限切れ消去可能なすべての
     記事を消去するということです。(*Note Expiring Mail::)。

`C-c C-M-x'
     すべてのグループのすべての期限切れ消去可能な記事に対して、期限切れ
     消去の処理を行ないます。(`gnus-group-expire-all-groups')。



File: gnus-ja.info, Node: Browse Foreign Server, Next: Exiting Gnus, Prev: Group Maintenance, Up: Group Buffer

外部サーバーの閲覧
==================

`B'
     選択方法とサーバー名を聞かれます。Gnus はこのサーバーに接続し、そ
     こにあるグループを閲覧しようとします
     (`gnus-group-browse-foreign-server')。

利用可能なグループのリストを持った新しいバッファーが現れます。このバッ
ファーは `gnus-browse-mode' を使用します。このバッファーは通常のグルー
プバッファーにちょっと (というか、とっても) 似ています。

以下が閲覧モード (browse mode) で使用できるキー操作のリストです:

`n'
     次のグループに移動します (`gnus-group-next-group')。

`p'
     一つ前のグループに移動します (`gnus-group-prev-group')。

`SPACE'
     現在のグループに入り、最初の記事を表示します
     (`gnus-browse-read-group')。

`RET'
     現在のグループに入ります (`gnus-browse-select-group')。

`u'
     現在のグループを非購読にします。と言うよりは (訳注: このコマンドは
     トグルなので)、この場合は購読することになるのでしょうけれど
     (`gnus-browse-unsubscribe-current-group')。

`l'
`q'
     閲覧モード (browse mode) を終了します (`gnus-browse-exit')。

`d'
     現在のグループを購読にします (`gnus-browse-describe-group')。

`?'
     閲覧モード (browse mode) を簡単に説明します (まあ、大して説明する
     こともないんですけれどね) (`gnus-browse-describe-briefly')。



File: gnus-ja.info, Node: Exiting Gnus, Next: Group Topics, Prev: Browse Foreign Server, Up: Group Buffer

Gnus の終了
===========

そう、Gnus は最後 (サイコー) です (訳注: く、苦しい。原文は“Yes, Gnus
is ex(c)iting.”)。

`z'
     Gnus を中断します (`gnus-group-suspend')。これは Gnus を実際には終
     了させず、グループバッファー以外のすべてのバッファーを消すだけです。
     僕はこれのうれしさがよくわかんないんだけど、誰か分かる人います?

`q'
     Gnus を終了します (`gnus-group-exit')。

`Q'
     `.newsrc' ファイルを保存せずに Gnus を終了します
     (`gnus-group-quit')。ドリブルファイルは保存されますけれど (*Note
     Auto Save::)。

Gnus を中断するときは `gnus-suspend-gnus-hook' が呼び出されます。Gnus
を終了するときは `gnus-exit-gnus-hook' が呼び出され、さらに Gnus を終了
するときの最後として `gnus-after-exiting-gnus-hook' が呼び出されます。

Note:

     ミス Lisa Cannifax は英語の授業中、後ろに座っている少年が彼女のプ
     ラスティックの椅子の背越しに、鉛筆で繰り返し線を描くのにつられて、
     足がしびれて重くなり、意識が朦朧としてきました。



File: gnus-ja.info, Node: Group Topics, Next: Misc Group Stuff, Prev: Exiting Gnus, Up: Group Buffer

Group Topics
============

もしあなたがたーくさんのグループを読んでいるのであれば、グループをトピッ
ク毎に階層分けできると便利でしょう。Emacs のグループをこっちへ、セック
スのグループをあっちへ、で、残りを (え? グループが二つくらいしかないの?)
邪魔にならないようにその他のセクションに入れましょう。あるいは Emacs セッ
クスのグループを Emacs グループ、セックスグループのどちらかの副トピック
とすることさえもできます--あるいは両方に! すんごいでしょう!

これが例です:

     Gnus
       Emacs -- こいつはすげーぜ!
          3: comp.emacs
          2: alt.religion.emacs
         えっちな Emacs
          452: alt.sex.emacs
            0: comp.talk.emacs.recovery
       その他
          8: comp.binaries.fractals
         13: comp.sources.unix

この *素晴らしい* 機能を使うには、`gnus-topic' マイナーモードを (何と!)
単にスイッチオンするだけ--グループバッファーで、`t' を押して下さい (こ
れはトグルコマンドです)。

さあやってみよう。とにかく試してみて。君が戻ってくるまで、僕はここで待っ
てるからさ。ララ、タララン...、いい曲だね、これ...ラ、ラ、ラ...え? 戻っ
てきた? よし、じゃ次は `l' を押してみて。ほら。これですべてのグループが
`misc' の下に表示されました。興奮してクラクラしてこない? アツくって、い
まいましいくらいでしょ?

これをずっと有効にしたければ、グループモードのフックにこのマイナーモー
ドを追加して下さい。以下の行を `~/.gnus.el' ファイルに入れて、ね。

     (add-hook 'gnus-group-mode-hook 'gnus-topic-mode)

* Menu:

* Topic Commands::              超簡単対話型命令
* Topic Variables::             Lisp でトピックをカスタマイズする方法
* Topic Sorting::               トピック毎別々に並べ替える
* Topic Topology::              全世界の地図
* Topic Parameters::            あるトピックのすべてのグループに適用されるパラメーター



File: gnus-ja.info, Node: Topic Commands, Next: Topic Variables, Prev: Group Topics, Up: Group Topics

トピック命令
------------

トピックマイナーモードが有効であるときは、`T' サブマップが新しく利用で
きるようになります。さらに標準キーの中でも、定義がちょっと変わるものが
少しあります。

だいたいにおいて、次のようなトピックの操作が可能です。まず第一に、あな
たはトピックを作ることを望むでしょう。第二に、あなたはグループをトピッ
クに入れて、それらをあなたの好みの順序になるまで、あちこちに移動するこ
とを望むでしょう。第三に行なう操作は、それらの一切合切を表示したり隠す
ことでしょう。他のグループの概要を見やすくするために、あなたは副トピッ
クやグループによっては、トピックが隠れるようにする必要があるかもしれま
せんね。

ここには、あなたの好むやり方でトピックを設定するために必要になりそうな、
基本的なキーのリストがあります。

`T n'
     新しいトピック名の入力を促し、それを作成します
     (`gnus-topic-create-topic')。

`T TAB'
`TAB'
     現在のトピックの「字下げ」を行ない、その前のトピックの副トピックに
     します (`gnus-topic-indent')。接頭引数を与えると、反対にそのトピッ
     クの字下げを回復 (un-indent) します。

`M-TAB'
     現在のトピックの「字下げ回復」(un-indent) を行ない、それが現在の親
     の親の副トピックになるようにします (`gnus-topic-unindent')。

以下の二つのキーは、グループとトピックをあちこち移動するために使われま
す。それらは、よく知られているカット＆ペーストのように動作します。
`C-k' はカット、`C-y' はペーストです。もちろん、Emacs ではカット＆ペー
ストではなくて kill & yank という用語を使いますが。

`C-k'
     グループあるいはトピックを kill します (`gnus-topic-kill-group')。
     トピック内にあったグループもすべて、トピックと一緒に削除されます。

`C-y'
     直前の kill されたグループあるいはトピックを yank します
     (`gnus-topic-yank-group')。すべてのトピックは、すべてのグループの
     前に yank されることに気を付けて下さい。

     ですから、あるトピックをトピックのリストの先頭に移動するには、単に
     そこで `C-k' を叩きます。これはカット＆ペーストのカットに相当しま
     す。そうしたらカーソルをバッファーの先頭 (“Gnus”トピックの真下)
     に移動して、`C-y' を叩いて下さい。これはカット＆ペーストのペースト
     に相当します。なあんだ、簡単じゃん。

     `C-k' と `C-y' はトピックと同様にグループにも使えます。すなわち、
     あなたはグループと同じようにトピックの移動もできるのです。

あなたの望みのままにトピックを使えるようにした後で、あなたはトピックを
隠したり再び見えるようにしようと思うでしょう。そのために以下のキーを用
意しています。

`RET'
`SPACE'
     グループを選択するか、あるいはトピックを折りたたみます
     (`gnus-topic-select-group')。グループの上でこのコマンドを実行する
     と、通常通りそのグループに入ります。トピック行の上で行なうと、その
     トピックは (すでに表示されているときは) 折りたたまれるか、(すでに
     折りたたまれているときは) 展開されます。つまりトピックに対してはこ
     れはトグルコマンドです。さらに、数値の接頭引数を与えると、そのレベ
     ル (とそれよりも小さいレベル) のグループが表示されます。

さてお次は、他のコマンドのリストです。順序には特に意味はありません。

`T m'
     現在のグループを、どこか他のトピックに移動させます
     (`gnus-topic-move-group')。このコマンドはプロセス印/接頭引数の習慣
     に従います (*Note Process/Prefix::)。

`T j'
     トピックにジャンプします (`gnus-topic-jump-to-topic')。

`T c'
     現在のグループを、どこか他のトピックにコピーします
     (`gnus-topic-copy-group')。このコマンドはプロセス印/接頭引数の習慣
     に従います (*Note Process/Prefix::)。

`T h'
     現在のトピックを隠します。接頭引数が与えらると、そのトピックを永久
     に隠します。

`T s'
     現在のトピックを表示します。接頭引数が与えられると、そのトピックを
     永久に表示します。

`T D'
     グループを現在のトピックから削除します
     (`gnus-topic-remove-group')。この命令は主にいくつかのトピックに同
     じグループがあって、それをトピックの一つから取り除きたいときに役立
     ちます。あなたはグループをすべてのトピックから取り除くかもしれませ
     んが、その場合は、Gnus はあなたが次回に Gnus を起動したときにそれ
     をルートトピックに付け加えます。実際のところ、すべての新しいグルー
     プ (もちろん、それはどのトピックにも属していません) はルートトピッ
     クに現われます。

     この命令はプロセス印/接頭引数の習慣に従います (*Note
     Process/Prefix::)。

`T M'
     正規表現に合致するすべてのグループを、あるトピックに移動させます
     (`gnus-topic-move-matching')。

`T C'
     正規表現に合致するすべてのグループを、あるトピックにコピーします
     (`gnus-topic-copy-matching')。

`T H'
     空のトピックの表示・非表示を切り替えます
     (`gnus-topic-toggle-display-empty-topics')。

`T #'
     現在のトピックにあるグループすべてにプロセス印を付けます
     (`gnus-topic-mark-topic')。接頭引数が与えられない場合、このコマン
     ドは副トピックに対して再帰的に働きます。

`T M-#'
     現在のトピックにあるすべてのグループからプロセス印を消します
     (`gnus-topic-unmark-topic')。接頭引数が与えられない場合、このコマ
     ンドは副トピックに対して再帰的に働きます。

`C-c C-x'
     (もしあれば) 現在のグループかトピックかのすべての期限切れ消去可能
     記事を期限切れ消去します (`gnus-topic-expire-articles')。(*Note
     Expiring Mail::)。

`T r'
     トピックの名前を変更します (`gnus-topic-rename')。

`T DEL'
     空のトピックを削除します (`gnus-topic-delete')。

`A T'
     Gnus が知っているトピック化されたグループをすべて表示します
     (`gnus-topic-list-active')。

`T M-n'
     次のトピックに移動します (`gnus-topic-goto-next-topic')。

`T M-p'
     前のトピックに移動します (`gnus-topic-goto-previous-topic')。

`G p'
     トピックパラメーターを修正します (`gnus-topic-edit-parameters')。
     *Note Topic Parameters::.



File: gnus-ja.info, Node: Topic Variables, Next: Topic Sorting, Prev: Topic Commands, Up: Group Topics

トピック変数
------------

前の章では、どのトピックを表示するかを Gnus に言う方法を説明しました。
この章では、それぞれのトピックの何を表示するかを Gnus に言う方法を説明
します。

トピック行それ自体は、`gnus-topic-line-format' 変数の値に従って作成され
ます (*Note Formatting Variables::)。有効な要素は、

`i'
     字下げ。
`n'
     トピック名。
`v'
     見えるかどうか。
`l'
     レベル。
`g'
     トピック中のグループの数。
`a'
     トピック中の未読記事の数。
`A'
     トピックとすべての副トピックの未読記事の数。

各副トピック (と副トピック内のグループ) は、トピックレベル数の
`gnus-topic-indent-level' 倍の空白分の字下げが行なわれます。ディフォル
トは 2 です。

`gnus-topic-mode-hook' はトピックマイナーモードバッファーで呼び出されま
す。

`gnus-topic-display-empty-topics' はトピックの中に未読記事が無い場合で
もそのトピックを表示するようにします。ディフォルトは `t' です。



File: gnus-ja.info, Node: Topic Sorting, Next: Topic Topology, Prev: Topic Variables, Up: Group Topics

トピックの並べ替え
------------------

以下に示す命令で、各トピック毎に別々にグループを並べ替えることができま
す:

`T S a'
     現在のトピックをグループ名のアルファベット順に並べ替えます
     (`gnus-topic-sort-groups-by-alphabet')。

`T S u'
     現在のトピックを未読記事の数で並べ替えます
     (`gnus-topic-sort-groups-by-unread')。

`T S l'
     現在のトピックをグループのレベルで並べ替えます
     (`gnus-topic-sort-groups-by-level')。

`T S v'
     現在のトピックをグループのスコアで並べ替えます
     (`gnus-topic-sort-groups-by-score')。*Note Group Score::.

`T S r'
     現在のトピックをグループのランクで並べ替えます
     (`gnus-topic-sort-groups-by-rank')。*Note Group Score::.

`T S m'
     現在のトピックをバックエンドの名前でアルファベット順に並べ替えます
     (`gnus-topic-sort-groups-by-method')。

`T S e'
     現在のトピックをサーバーの名前でアルファベット順に並べ替えます
     (`gnus-topic-sort-groups-by-server')。

`T S s'
     現在のトピックを、変数 `gnus-group-sort-function' で与えられる関数
     に従って並べ替えます (`gnus-topic-sort-groups')。

接頭引数が与えられると、これらすべてのコマンドは逆順の並べ替えを行ない
ます。グループの並べ替えについてのさらなる情報は *Note Sorting
Groups:: を参照して下さい。



File: gnus-ja.info, Node: Topic Topology, Next: Topic Parameters, Prev: Topic Sorting, Up: Group Topics

トピックの位相構造
------------------

それでは、グループバッファーの例を見ていきましょう。

     Gnus
       Emacs -- こいつはすげーぜ!
          3: comp.emacs
          2: alt.religion.emacs
         えっちな Emacs
          452: alt.sex.emacs
            0: comp.talk.emacs.recovery
       その他
          8: comp.binaries.fractals
         13: comp.sources.unix

つまり、ここでは一つのトップレベルのトピック (`Gnus') があり、その下に
二つのトピックがあり、そのうちの一方の副トピック中に一つ副トピックがあ
ります (トップレベルトピックは常に一つしかありません)。この構造は、以下
のように表現できます:

     (("Gnus" visible)
      (("Emacs -- こいつはすげーぜ!" visible)
       (("えっちな Emacs" visible)))
      (("その他" visible)))

これは実に、上記の表示を行なうための、変数 `gnus-topic-topology' の値そ
のものなのです。この変数は `.newsrc.eld' ファイルに保存され、手でいじく
り回してはいけません--本当にやりたいときは別ですが。この変数は
`.newsrc.eld' ファイルから読み込まれるので、その他のスタートアップファ
イルの設定にはまったく影響を与えません。

この構造は、どのトピックがどのトピックの副トピックであるかと、どのトピッ
クが表示されているかを示しています。現在は二つの設定値---`visible' と
`invisible' を使うことができます。



File: gnus-ja.info, Node: Topic Parameters, Prev: Topic Topology, Up: Group Topics

トピックパラメーター
--------------------

トピック内のすべてのグループはグループパラメーターを、その親 (と先祖)
のトピックパラメーターから継承します。グループパラメーターとして正しい
ものはすべて、トピックパラメーターとしても正しいものです (*Note Group
Parameters::)。エージェントを使うようにしてあると、すべてのエージェント
パラメーター (*Note Category Syntax:: の Agent Parameters を参照 (訳注:
必要なら Index を使って)) は有効なトピックパラメーターでもあります。

さらに、以下のパラメーターはトピックパラメーターとしてのみ有効です:

`subscribe'
     トピックで新しいグループを購読している場合 (*Note Subscription
     Methods::)、`subscribe' トピックパラメーターはどのグループがどのト
     ピックに行くかを指定します。値はそのトピックに行くグループに合致す
     る正規表現である必要があります。

`subscribe-level'
     トピックで新しいグループを購読している場合 (`subscribe' パラメーター
     を参照)、そのグループの購読度のレベルは
     `gnus-level-default-subscribed' の代わりに `subscribe-level' トピッ
     クパラメーターの値になります。

グループパラメーターは (もちろん) トピックパラメーターよりも優先され、
副トピックのトピックパラメーターは親トピックのトピックパラメーターより
も優先されます。分かるよね。ごく普通の継承ルールです (ルール ("Rules")
はここでは名詞であって、動詞の「線を引く」ではありません。このルールに
は反対したくなるかもしれないけど、それはご自由に)。

     Gnus
       Emacs
          3: comp.emacs
          2: alt.religion.emacs
        452: alt.sex.emacs
         息抜き
          452: alt.sex.emacs
            0: comp.talk.emacs.recovery
       その他
          8: comp.binaries.fractals
         13: comp.sources.unix
        452: alt.sex.emacs

`Emacs' トピックはトピックパラメーター `(score-file . "emacs.SCORE")'
を持っています。`息抜き' トピックはトピックパラメーター
`(score-file . "relief.SCORE")' を持ち、`その他' トピックはトピックパラ
メーター `(score-file . "emacs.SCORE")' を持っています。さらに、
`alt.religion.emacs' はグループパラメーター
`(score-file . "religion.SCORE")' を持っています。

さて、ここで `息抜き' トピックの `alt.sex.emacs' グループに入ったとき、
`relief.SCORE' が基本スコアファイルとなります。もし `Emacs' トピックの
同じグループに入ると、`emacs.SCORE' が基本スコアファイルになるでしょう。
`alt.religion.emacs' グループに入れば、`religion.SCORE' が基本スコアファ
イルになるでしょう。

これってとっても簡単で自明のことのように見えるでしょ? まあ、その通りで
す。ですが問題がある場合もあります。特に `total-expiry' パラメーターに
関してです。例えばあるメールグループを二つのトピックの中に、一方は
`total-expiry' ありで、もう一方はそれなしで持っているとしましょう。ここ
で `M-x gnus-expire-all-expirable-groups' を実行すると、何が起こるでしょ
うか? Gnus は、あなたがどちらのトピックから記事を期限切れ消去したいのか
を知る方法がないため、最悪の事態が発生するかもしれません。実際、私はこ
のとき何が起こるのかは「未定義 "undefined"」である、とここに宣言します。
この手のことをやりたい場合には十分注意しなければなりません。



File: gnus-ja.info, Node: Misc Group Stuff, Prev: Group Topics, Up: Group Buffer

その他のグループ関連
====================

* Menu:

* Scanning New Messages::       Gnus に新しいメッセージが到着したかどうかを聞く
* Group Information::           グループと Gnus に関する情報とヘルプ
* Group Timestamp::             Gnus に最後にいつグループを読んだかを記録させる
* File Commands::               Gnus のファイルの読み書き
* Sieve Commands::              Sieve スクリプトの管理

`v'
     `v' キーはユーザー用に予約されています。そのまま何かの機能に割り当
     てても構いませんが、接頭キーとして使う方が良いでしょう。例です:

          (define-key gnus-group-mode-map (kbd "v j d")
            (lambda ()
              (interactive)
              (gnus-group-jump-to-group "nndraft:drafts")))

     Emacs でユーザー用に予約されているキーとキーバインドについては、
     *Note Keymaps: (emacs)Keymaps.

`^'
     サーバーバッファーモードに入ります (`gnus-group-enter-server-mode')。
     *Note Server Buffer::.

`a'
     メッセージ (ディフォルトはニュース) の作成を開始しま
     す (`gnus-group-post-news')。接頭引数が与えられると、現在位置のグルー
     プに投稿します。もし接頭引数が 1 だったら、どのグループに投稿するかを尋
     ねます。この関数の名前から連想されることとは裏腹に、接頭引数でメールグルー
     プが指定された場合は、ニュースの代わりにメールの様式が用意されます。
     *Note Composing Messages::.

`m'
     メールをどこかに送ります (`gnus-group-mail')。接頭引数が与えられる
     と、現在位置のグループの投稿様式 (posting style) を使います。もし接頭引
     数が 1 だったら、どのグループの投稿様式を使うかを尋ねます。
     *Note Composing Messages::.

`i'
     ニュースの作成を開始します (`gnus-group-news')。接頭引数が与えられ
     ると、現在位置のグループに投稿します。もし接頭引数が 1 だったら、
     どのグループに投稿するかを尋ねます。*Note Composing Messages::.

     この関数は、たとえメールグループで使われたとしても、実際にはニュー
     スの様式を用意します。これは、メッセージを実際にはネットワーク経由
     で送らずに、メールグループに「投稿」するのに便利です; それらは当の
     グループに単に直接保存されます。対応するバックエンドが投稿のための
     メソッド (request-post method) を持っていなければなりませんが。

以下はグループバッファーのための変数です:

`gnus-group-mode-hook'
     グループバッファーが作成された時に呼び出されます。

`gnus-group-prepare-hook'
     グループバッファーが生成されたあとに呼び出されます。これはバッファー
     を何か変な、自然ではない方法で修正したいときに使われるかもしれませ
     ん。

`gnus-group-prepared-hook'
     グループバッファーが生成された後の一番最後に呼び出されます。例えば
     ポイントをどこかに移動させたいときなどに使えます。

`gnus-permanently-visible-groups'
     この正規表現に合致するグループは、それが空であるかどうかに関わらず、
     常にグループバッファーに表示されます。

`gnus-group-name-charset-method-alist'
     グループ名用の選択方法と文字セットの連想リストです。これは英字では
     ないグループ名を表示するために使います。

     例:
          (setq gnus-group-name-charset-method-alist
              '(((nntp "news.com.cn") . cn-gb-2312)))

`gnus-group-name-charset-group-alist'
     グループ名用のグループ名の正規表現と文字セットの連想リストです。こ
     れは英字ではないグループ名を表示するために使います。UTF-8 がサポー
     トされている場合は `((".*" utf-8))' がディフォルト値で、それ以外の
     場合のディフォルトは `nil' です。

     例:
          (setq gnus-group-name-charset-group-alist
              '(("\\.com\\.cn:" . cn-gb-2312)))



File: gnus-ja.info, Node: Scanning New Messages, Next: Group Information, Prev: Misc Group Stuff, Up: Misc Group Stuff

新着メッセージを探す
--------------------

`g'
     サーバーの新着記事をチェックします。数値の接頭引数を使用すると、こ
     の命令は引数 ARG かそれより小さいレベルのグループのみをチェックし
     ます (`gnus-group-get-new-news')。数値以外の接頭引数を与えると、こ
     の命令はそのバックエンドからアクティブファイルを強制的に全部読み直
     します。

`M-g'
     現在のグループに新着記事があるかどうかをチェックします
     (`gnus-group-get-new-news-this-group')。
     `gnus-goto-next-group-when-activating' はこの命令が次のグループ位
     置へ移動するかどうかを決めます。ディフォルトは `t' です。

`C-c M-g'
     無条件にすべてのグループを起動します (`gnus-activate-all-groups')。

`R'
     Gnus を再起動します (`gnus-group-restart')。これは `.newsrc' ファ
     イルをセーブし、すべてのサーバーの接続を閉じ、すべての Gnus ランタ
     イム変数をクリアした後、Gnus をもう一度最初から開始します。

`gnus-get-new-news-hook' は新着ニュースをチェックする直前に実行されます。

`gnus-after-getting-new-news-hook' 新着ニュースをチェックした後に実行さ
れます。



File: gnus-ja.info, Node: Group Information, Next: Group Timestamp, Prev: Scanning New Messages, Up: Misc Group Stuff

グループ情報
------------

`H f'
     現在のグループの FAQ を取得しようとします
     (`gnus-group-fetch-faq')。Gnus は FAQ を
     `gnus-group-faq-directory' から取得しようとします。これは通常リモー
     トマシン上のディレクトリーです。この変数はディレクトリーのリストで
     あっても構いません。この場合、このコマンドに接頭引数を与えることで
     いくつかのサイトの中から選ぶことができます。ファイルの取得には
     `ange-ftp' (または `efs') が使用されます。

     もし最初のサイトからの取得が失敗した場合、Gnus は
     `gnus-group-faq-directory' の値をすべて、一つ一つオープンしてみよ
     うとします。

`H c'
     現在のグループの憲章を web ブラウザーで開こうとします
     (`gnus-group-fetch-charter')。接頭引数が与えられるとグループ名を尋
     ねます。

     Gnus は `gnus-group-charter-alist' を使って憲章の所在を探します。
     所在がわからなかったら、Gnus はそのグループのコントロールメッセー
     ジを取得します。それには憲章を含んでいることがありますから。

`H C'
     そのグループのコントロールメッセージを `ftp.isc.org' の記録庫から
     取得します (`gnus-group-fetch-control')。接頭引数が与えられるとグ
     ループ名を尋ねます。

     `gnus-group-fetch-control-use-browse-url' が非-`nil' だったら、
     Gnus は `browse-url' を使ってコントロールメッセージを開きます。そ
     うでない場合は `ange-ftp' を使って取得され、一時グループに表示され
     ます。

     コントロールメッセージは圧縮されていることに注意して下さい。このコ
     マンドを使うには `auto-compression-mode' を on にしておく必要があ
     ります (*Note Compressed Files: (emacs)Compressed Files.)。

`H d'
`C-c C-d'
     現在のグループの説明を表示します (`gnus-group-describe-group')。接
     頭引数を与えると、説明文をサーバーから強制的に再読み込みします。

`M-d'
     すべてのグループの説明を表示します
     (`gnus-group-describe-all-groups')。接頭引数を与えると、説明文ファ
     イルをサーバーから強制的に再読み込みします。

`H v'
`V'
     現在の Gnus のバージョン番号を表示します (`gnus-version')。

`?'
     とても短いヘルプメッセージを与えます
     (`gnus-group-describe-briefly')。

`C-c C-i'
     Gnus の info ノードに移動します (`gnus-info-find-node')。



File: gnus-ja.info, Node: Group Timestamp, Next: File Commands, Prev: Group Information, Up: Misc Group Stuff

グループの日付
--------------

Gnus に、あなたが最後にいつグループを読んだかを記録させると便利かもしれ
ません。この活動を始めさせるには、`gnus-group-set-timestamp' を
`gnus-select-group-hook' に追加して下さい。

     (add-hook 'gnus-select-group-hook 'gnus-group-set-timestamp)

これを行なった後、あなたがグループに入るたびにそれが記録されます。

この情報はさまざまな方法で表示できます--もっとも簡単なのは、グループ行
フォーマットで `%d' 指定を使う方法です:

     (setq gnus-group-line-format
           "%M\%S\%p\%P\%5y: %(%-40,40g%) %d\n")

この結果として、各行は以下のように表示されます:

     *        0: mail.ding                                19961002T012943
              0: custom                                   19961002T012713

見て分かるとおり、日付はコンパクトな ISO 8601 形式で表示されます。これ
ではちょっとあんまりなので、以下のような感じにすると日付だけを表示でき
ます。

     (setq gnus-group-line-format
           "%M\%S\%p\%P\%5y: %(%-40,40g%) %6,6~(cut 2)d\n")

もっと凝った日付の形式をお望みなら、利用者定義によるフォーマットの仕様
を使うことができます。以下のようなものはうまくいくでしょう:

     (setq gnus-group-line-format
           "%M\%S\%p\%P\%5y: %(%-40,40g%) %ud\n")
     (defun gnus-user-format-function-d (headers)
       (let ((time (gnus-group-timestamp gnus-tmp-group)))
         (if time
             (format-time-string "%b %d  %H:%M" time)
           "")))



File: gnus-ja.info, Node: File Commands, Next: Sieve Commands, Prev: Group Timestamp, Up: Misc Group Stuff

ファイル命令
------------

`r'
     初期化ファイルの再読み込みを行ないます (`gnus-init-file'、ディフォ
     ルトは `~/.gnus.el') (`gnus-group-read-init-file')。

`s'
     `.newsrc.eld' ファイル (と、もしそうしたければ `.newsrc' ファイル)
     をセーブします (`gnus-group-save-newsrc')。




File: gnus-ja.info, Node: Sieve Commands, Prev: File Commands, Up: Misc Group Stuff

Sieve コマンド
--------------

Sieve はサーバー側で使われるメールフィルター言語です。Gnus では、各グルー
プに適用される sieve の規則を指定する、`sieve' グループパラメーター
(*Note Group Parameters::) を使うことができます。guns はそれらすべての
グループパラメーターを、サーバーで使うことも可能な正しい Sieve スクリプ
トに翻訳する、二つのコマンドを提供します。

作成された Sieve スクリプトは `gnus-sieve-file' (ディフォルトは
`~/.sieve') に置かれます。Gnus が作るコードは二つの区切り記号
`gnus-sieve-region-start' と `gnus-sieve-region-end' の間に置かれるので、
これらの区切り記号の外に追加の Sieve コードを書いても、次回 Sieve スク
リプトを再作成するときに消されてしまうことはありません。

変数 `gnus-sieve-crosspost' は Sieve スクリプトがどのように作られるかを
制御します。もし非-`nil' (ディフォルト) だったら記事は規則に合致するす
べてのグループに置かれます。そうでない場合、記事は最初の規則に合致する
グループだけに置かれます。例えばグループパラメーター `(sieve address
sender" "owner-ding@hpc.uh.edu")' は、`gnus-sieve-crosspost' が `nil'
だったら以下の Sieve コードの断片を作ります。(`gnus-sieve-crosspost' が
非-`nil' だった場合は、行が含む `stop' の呼び出しが削除されること以外は
同じです。)

     if address "sender" "owner-ding@hpc.uh.edu" {
             fileinto "INBOX.ding";
             stop;
     }

*Note Emacs Sieve: (sieve)Top.

`D g'
     `sieve' グループパラメーターから Sieve スクリプトを再作成して、
     `gnus-sieve-file' に書き込みます。以前の内容は保存されません。

`D u'
     `sieve' グループパラメーターを元に `gnus-sieve-file' の Gnus が管
     理している部分を再作成してファイルにセーブし、`sieveshell' プログ
     ラムを使ってサーバーにアップロードします。



File: gnus-ja.info, Node: Summary Buffer, Next: Article Buffer, Prev: Group Buffer, Up: Top

概略バッファー
**************

概略バッファー (summary buffer) ではそれぞれの記事が一行で表示されます。
その中を動き回り、記事を読み、投稿し、返答をすることができます。

概略バッファーに移る一番普通の方法は、グループバッファーでグループを選
択することです (*Note Selecting a Group::)。

好きなだけたくさんの概略バッファーを開いておくことができます。

`v' キーはユーザー用に予約されています。そのまま何かの機能に割り当てて
も構いませんが、接頭キーとして使う方が良いでしょう。例です:

     ;; 副スレッドのスコアを下げる。
     (define-key gnus-summary-mode-map (kbd "v -") "LrS")

* Menu:

* Summary Buffer Format::       概略バッファーの外観を決定する
* Summary Maneuvering::         概略バッファーを動き回る
* Choosing Articles::           記事を読む
* Paging the Article::          読んでいる記事をスクロールする
* Reply Followup and Post::     記事を投稿する
* Delayed Articles::            記事を後で送る
* Marking Articles::            記事に既読や期限切れ消去可能等の印を付ける
* Limiting::                    概略バッファーに制限を加えることができる
* Threading::                   スレッドがどのように作られるか
* Sorting the Summary Buffer::  スレッドと記事がどのように並びかえられるか
* Asynchronous Fetching::       Gnus は記事を先に取得することができる
* Article Caching::             キャッシュに記事を貯めておける
* Persistent Articles::         記事を期限切れ消去しなくさせる
* Article Backlog::             すでに読んだ記事を残しておく
* Saving Articles::             記事の保存をカスタマイズする方法
* Decoding Articles::           Gnus は一連の (uu)encode された記事を扱える
* Article Treatment::           記事バッファーはお望みどおりに目茶苦茶にできる
* MIME Commands::               記事の MIME のあれこれを操作する
* Charsets::                    文字セットのこと
* Article Commands::            記事バッファーでいろいろなことをする
* Summary Sorting::             いろいろな方法で概略バッファーを並べ替える
* Finding the Parent::          子記事が探せないって? 親記事を取得しなさい
* Alternative Approaches::      ディフォルトではない概略を使って読む
* Tree Display::                もっと視覚的なスレッドの表示
* Mail Group Commands::         いくつかの命令はメールグループだけで使うことができる
* Various Summary Stuff::       他のどの章にも納まらなかったもの
* Exiting the Summary Buffer::  グループバッファーに戻る、または現在のグループを再び選択する
* Crosspost Handling::          クロスポストされた記事がどのように扱われるか
* Duplicate Suppression::       クロスポストの扱いに失敗したときの代替手段
* Security::                    暗号のデコードと検証
* Mailing List::                メーリングリストマイナーモード



File: gnus-ja.info, Node: Summary Buffer Format, Next: Summary Maneuvering, Prev: Summary Buffer, Up: Summary Buffer

概略バッファーの様式
====================

* Menu:

* Summary Buffer Lines::        概略バッファーがどのように見えるべきかを指定できる
* To From Newsgroups::          自分自身の名前を表示しない方法
* Summary Buffer Mode Line::    モード行の見え方を決められる
* Summary Highlighting::        概略バッファーをきれいで素敵にする

Gnus は変数 `gnus-extract-address-components' の値を `From' ヘッダーの
名前とアドレスの部分を抽出するための関数として使います。すでに定義され
ている関数が二つ存在します: ディフォルトは
`gnus-extract-address-components' で、とても簡単に割り切った解決法です
が非常に速く動作します。`mail-extract-address-components' は良く動作し
ますが遅いです。ディフォルトの関数は 5% の割合で間違った答を返します。
もしこれに我慢ならないのであれば、代わりに他の関数を使って下さい:

     (setq gnus-extract-address-components
           'mail-extract-address-components)

`gnus-summary-same-subject' は今読んでいる記事が、その前の記事と同じ表
題 (subject) であることを示す文字列です。この文字列は、それを要求する書
法仕様で使われます。ディフォルトでは `""' です。



File: gnus-ja.info, Node: Summary Buffer Lines, Next: To From Newsgroups, Prev: Summary Buffer Format, Up: Summary Buffer Format

概略バッファーの行
------------------

変数 `gnus-summary-line-format' の値を変えることによって、概略バッファー
の行の様式 (format) を変更することができます。いくつかの拡張 (*Note
Formatting Variables::) とともに、普通の `format' 文字列と同じように動
作します。

行には常にコロンかポイント位置のマーカーが存在していなければなりません。
操作した後に、カーソルはいつもコロンかポイント位置のマーカーの場所に移
動します。(もちろん、この動作を変えることができないとしたら Gnus にはあ
るまじきことです。関数 `gnus-goto-colon' を、あなたが好きなカーソルの動
きになるように、新たに書けば良いのです。) *Note Positioning Point::.

ディフォルトの文字列は `%U%R%z%I%(%[%4L: %-23,23f%]%) %s\n' です。

以下の様式指示文字と拡張様式指示を使うことができます:

`N'
     記事数。
`S'
     表題の文字列。`gnus-list-identifiers' の設定によってメーリングリス
     トの標識が削除されます。*Note Article Hiding::.
`s'
     スレッド (thread) の元記事であるときか直前の記事が違う表題のときは
     その表題で、それ以外は `gnus-summary-same-subject'。
     (`gnus-summary-same-subject' はディフォルトで `""'。)
`F'
     完全な `From' 欄。
`n'
     名前 (`From' 欄より)。
`f'
     名前、`To' 欄の内容、または `Newsgroups' 欄の内容のどれかです
     (*Note To From Newsgroups::)。
`a'
     名前 (`From' 欄より)。これと `n' との違いは、これは変数
     `gnus-extract-address-components' で指定されている関数を使って名前
     を取得することです。この方が遅いですが、おそらくより完全に近いでしょ
     う。
`A'
     名前 (`From' 欄より)。これは `a' と同じように動作します。
`L'
     記事の行数。
`c'
     記事の文字数。この名前指定子は (nnfolder のような) いくつかの選択
     方法をサポートしません。
`k'
     整形された記事の文字数; 例えば `1.2k' や `0.4M'。
`I'
     スレッドのレベルによる字下げ (*Note Customizing Threading::)。
`B'
     複雑な trn 様式のスレッド木 (tree)。どのような応答が行なわれたかの
     記録を表示します。スレッドはこのように描かれるでしょう:

          >
          +->
          | +->
          | | \->
          | |   \->
          | \->
          +->
          \->

     以下のオプションで見栄えをカスタマイズすることができます。ディフォ
     ルトの ASCII 文字を線描画用の図案で置き換えることによって、スレッ
     ド表示を実に巧妙に見せることができることに気付いて下さい。

     `gnus-sum-thread-tree-root'
          スレッドの根 (root) に使われます。`nil' だったら、代わりに表
          題を使います。ディフォルトは `> ' です。

     `gnus-sum-thread-tree-false-root'
          スレッドのにせの根に使われます (*Note Loose Threads::)。
          `nil' だったら、代わりに表題を使います。ディフォルトは `> '
          です。

     `gnus-sum-thread-tree-single-indent'
          単一のメッセージのスレッドに使われます。`nil' だったら、代わ
          りに表題を使います。ディフォルトは `' です。

     `gnus-sum-thread-tree-vertical'
          縦線の描画に使われます。ディフォルトは `| ' です。

     `gnus-sum-thread-tree-indent'
          行下げ (indenting) に使われます。ディフォルトは ` ' です。

     `gnus-sum-thread-tree-leaf-with-other'
          兄弟がいる葉っぱに使われます。ディフォルトは `+-> ' です。

     `gnus-sum-thread-tree-single-leaf'
          兄弟がいない葉っぱに使われます。ディフォルトは `\-> ' です。

`T'
     記事が元記事であれば何も表示せず、そうでない場合はたくさんの空白で
     す (それより後のものをすべて画面の外に追い出してしまいます)。
`['
     開き括弧。普通は `[' ですが、養子記事には `<' にすることができます
     (*Note Customizing Threading::)。
`]'
     閉じ括弧。普通は `[' ですが、養子記事には `<' にすることができます。
`>'
     それぞれのスレッドのレベルに対して一つの空白。
`<'
     (20 - スレッドレベル) 個の空白。
`U'
     未読。*Note Read Articles::.

`R'
     この紛らわしい名前指定子は「第二の印」(the secondary mark) です。
     この印は記事がすでに返答済みのものか、キャッシュされたものか、ある
     いは保存されたものかを表します。*Note Other Marks::.

`i'
     数値としてのスコア (*Note Scoring::)。
`z'
     これは、zcore でディフォルトのレベルよりも上であれば `+' で、ディ
     フォルトのレベルよりも下であれば `-' です。
     `gnus-summary-default-score' との差が `gnus-summary-zcore-fuzz' よ
     りも小さいと、この仕様は使われません。
`V'
     スレッド全体のスコア。
`x'
     `Xref'.
`D'
     `Date'.
`d'
     `DD-MM' 様式による `Date'。
`o'
     YYYYMMDD`T'HHMMSS 様式による `Date'。
`M'
     `Message-ID'.
`r'
     `References'.
`t'
     現在の副スレッドの記事の数。この仕様を使うと概略バッファーの生成が
     幾分遅くなります。
`e'
     記事に子記事があると、`=' (`gnus-not-empty-thread-mark') が表示さ
     れます。
`P'
     行数。
`O'
     ダウンロードの印。
`*'
     カーソルを (最初のコロンの後ろの代わりに) 置く場所。
`&user-date;'
     経過時間の様式。いろいろな様式が `gnus-user-date-format-alist' で
     定義されています。
`u'
     利用者定義指定子。フォーマット文字列の中の次の文字は英字でなければ
     なりません。これにより Gnus は関数 `gnus-user-format-function-'X
     を呼び出しますが、ここで X は `%u' の次の文字です。関数には現在の
     記事のヘッダーが引数として渡されます。関数は文字列を返さなければな
     りません。それは他の概略指定と同様に概略に挿入されます。

`%(' と `%)' の間にあるテキストは、そこにマウスがあるときに
`gnus-mouse-face' でハイライトされます。そういう領域は一つだけです。

`%U' (状態), `%R' (返答済み), `%z' (zcore) の扱いには気を付ける必要があ
ります。効率のために、Gnus はこれらの文字がどの桁に現れるかを計算し、
『ハード・コード』します。これは、可変長の仕様の後では、これらは意味を
持たないということです。まぁ、さすがに逮捕はされないでしょうが、概略バッ
ファーは変になります。それでも十分悲しいでしょうけど。

賢い選択はこれらの指定をできるだけ左に持ってくることです。(でも、そうい
うことはすべてに当てはまるのではないでしょうか。閑話休題。)

この制限は将来の版では無くなるかもしれません。



