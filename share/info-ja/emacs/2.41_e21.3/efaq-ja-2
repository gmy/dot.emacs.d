Info file: efaq-ja,    -*-Text-*-
produced by `texinfo-format-buffer'
from file `faq.texi'
using `texinfmt.el' version 2.41 of  1 Mar 2005.

INFO-DIR-SECTION Emacs
START-INFO-DIR-ENTRY
* Emacs-FAQ-ja: (efaq-ja).	        Emacs21.3日本語FAQ
END-INFO-DIR-ENTRY





File: efaq-ja, Node: Evaluating Emacs Lisp code, Next: Changing the length of a Tab, Prev: Valid X resources, Up: Common requests

Emacs Lisp のコードを実行(評価)する方法は?
==========================================

   Emacs Lisp の "式" を実行(lisp の言葉では "評価" と言う)するには幾つ
かの方法があります。


   * Emacs を起動するとき毎回評価したい式はホームディレクトリの
     `.emacs' と言う名前のファイルに書き加える。これは個人の環境設定用
     ファイルです。

   * `*scratch*' バッファで式を入力してポイントを式の後ろに置き、<LFD>
     (または `C-j') を入力する。評価結果はバッファに挿入される。

   * `emacs-lisp-mode' では `C-M-x' でポイントの直前、あるいはポイント
     を含む top-level の式が評価される。

   * `C-x C-e' でモードによらずにポイントの直前の Lisp 式が評価されてエ
     コーエリアに評価結果が表示される。

   * `M-:' (`M-x eval-expression') でミニバッファに式を入力して評価でき
     る。入力は <RET> で確定する。

   * ファイルに記述されているすべての Lisp 式を評価するには`M-x
     load-file' を使う。(Lisp でファイルをロードするには関数 `load' を
     使う。)

     次の関数を使っても Lisp 式を評価することができます。

          `load-library', `eval-region', `eval-current-buffer',
          `require', `autoload'

     詳細については *Note Emacs Lisp documentation:: 参照。




File: efaq-ja, Node: Changing the length of a Tab, Next: Inserting > at the beginning of each line, Prev: Evaluating Emacs Lisp code, Up: Common requests

タブ位置を変更する方法は?
=========================

   変数 `default-tab-width' の値を設定してください。たとえば 10 カラム
にしたかったら次の様に `.emacs' に書き加えてください。

     (setq default-tab-width 10)

   変数 `tab-width' と変数 `tab-stop-list' を混同しないで下さい。
`tab-width' は表示を制御する変数で、`tab-stop-list' は特定のモードで
<TAB> を入力した時にバッファに挿入される文字を決定します。



File: efaq-ja, Node: Inserting > at the beginning of each line, Next: Underlining paragraphs, Prev: Changing the length of a Tab, Up: Common requests

`>' をすべての行頭に挿入する方法は?
===================================

   `M-< M-x replace-regexp <RET> ^ <RET> > <RET>' と入力してください。

選択領域内に制限したい時は `M-x string-insert-rectangle' を使ってください。
`>' を挿入したい最初の行に移動してマークし(`C-<SPC>')、
`>' を挿入したい最後の行に移動してから
`M-x string-insert-rectangle <RET>' を入力してください。
バッファ全体に適用するには
`C-x h M-x string-insert-rectangle <RET>' と入力してください。

   メールのリプライで引用したメールの行頭に `>' を挿入したい場合は変数
`mail-yank-prefix' を使うと良いでしょう。Supercite (*Note Supercite::
参照)を使うと色々な引用の仕方をすることができます。Supercite は Emacs
19.20 以降には付属しています。詳しくは *Note Changing the included
text prefix:: を参照してください。



File: efaq-ja, Node: Underlining paragraphs, Next: Repeating a command as many times as possible, Prev: Inserting > at the beginning of each line, Up: Common requests

選択領域中の書く文字の前に "_^H" を挿入してアンダーラインを引く方法は?
======================================================================

`M-x underline-region <RET>'



File: efaq-ja, Node: Repeating a command as many times as possible, Next: Forcing the cursor to remain in the same column, Prev: Underlining paragraphs, Up: Common requests

コマンドをできるだけ繰り返して実行する方法は?
=============================================

   `C-x (' と `C-x )' で一連のコマンドを実行するキーボードマクロを定義
してから `M-0 C-x e' と入力してください。

   コマンドがエコーエリアに出力するメッセージは抑制されます。

数回だけコマンドを繰り返したい場合は `C-x z' も使えます。
*Note Repeating commands:: 参照。



File: efaq-ja, Node: Forcing the cursor to remain in the same column, Next: Forcing Emacs to iconify itself, Prev: Repeating a command as many times as possible, Up: Common requests

上下の行が短くてもカラム位置を変えずにカーソルを上下に移動させる方法は?
=======================================================================

`M-x picture-mode'.



File: efaq-ja, Node: Forcing Emacs to iconify itself, Next: Using regular expressions, Prev: Forcing the cursor to remain in the same column, Up: Common requests

Emacs に自分自身をアイコン化させる方法は? _(2004/07/28)_
========================================================

   X などのウィンドウシステム上で Emacs を実行しているなら`C-z' でアイ
コン化します。文字端末上ならサスペンドします。詳しくは *Note Frame
Commands: (emacs)Frame Commands を参照してください。



File: efaq-ja, Node: Using regular expressions, Next: Replacing text across multiple files, Prev: Forcing Emacs to iconify itself, Up: Common requests

正規表現の使い方は?
===================

*Note (emacs)Regexps:: 参照。

"または" は `\|' です。`|' ではありません。
同様にグループ化オペレータは `\(' と `\)' です。
また文字列のシンタックスではバックスラッシュ(`\')を表すには
`\\' を使います。
つまり正規表現 `xxx\(foo\|bar\)' の文字列による表示は
`"xxx\\(foo\\|bar\\)"' になります。

   バックスラッシュを二重にすることを忘れないように!


   * Unix の `grep' や `sed' などとは異なり、文字集合が改行文字(<LFD>,
     `C-j' `\n')を含んでいなければその補集合(`[^...]')は改行文字を含み
     ます。

   * シンタックスによる正規表現(たとえば `\sw')は文字集合の正規表現(た
     とえば `[aeiou]')内では特別な意味を持ちません。(これは正規表現のシ
     ンタックスとしては典型的なものです)




File: efaq-ja, Node: Replacing text across multiple files, Next: Documentation for etags, Prev: Using regular expressions, Up: Common requests

複数のファイルにまたがる置換をする方法は?
=========================================

Emacs の "tags" 機能にはコマンド `tags-query-replace' があって、
`TAGS' ファイルに記述されるすべてのファイルに対して
コマンド `query-replace' を実行します。
*Note (emacs)Tags Search:: 参照。

   Emacs 19.29 では `dired-mode' (`C-x d' (`M-x dired'))に
`dired-do-query-replace' というコマンドがあり、複数のファイルに対して置
換をすることができます。



File: efaq-ja, Node: Documentation for etags, Next: Disabling backups, Prev: Replacing text across multiple files, Up: Common requests

`etags' のドキュメントはどこにありますか?
=========================================

`etags' の man page は `emacs' の man page と同じ場所にあるはずです。


   コマンドラインオプションの簡単な説明は `etags -H' で見られます。



File: efaq-ja, Node: Disabling backups, Next: Disabling auto-save-mode, Prev: Documentation for etags, Up: Common requests

バックアップファイルを作らないようにする方法は?
===============================================

   バックアップは重要なのでそのようなことは勧められません。

   バックアップファイル(や "重要でない" ファイル)を `dired-mode' で見え
ない様にするには `dired-x.el' をロードするように `.emacs' に次のように
書き加えてください。

     (add-hook 'dired-load-hook
               (lambda () (load "dired-x")))

   `dired-x.el' をロードすると `M-o' でバックアップファイルを表示するか
否かを切り替えられます。自動で表示しないようにするには `.emacs' に次の
様に書き加えてください。

     (add-hook 'dired-mode-hook 'dired-omit-toggle)

   Unix のシェルで `ls' を実行する度にバックアップファイルが見えるのが
嫌なら、GNU の `ls' で `-B' オプションを付けて実行してみてください。
GNU `ls' は GNU Fileutils パッケージに含まれていて、
`ftp://ftp.gnu.org' またはそのミラーサイトから入手できます。(*Note
Informational files for Emacs:: 参照)

バックアップを止めたり、バックアップのファイル名を変更したい場合は
*Note (emacs)Backup Names:: を参照してください。

   Emacs 21.1 以降では変数 `backup-directory-alist' を設定することでバッ
クアップファイルを作るディレクトリを指定できます。この変数の値はファイ
ル名の正規表現とディレクトリの連想リストで、バックアップファイルを*すべ
て*特定のディレクトリ `DIR' に作るようにするには `("." . "DIR")' を要素
として追加します。



File: efaq-ja, Node: Disabling auto-save-mode, Next: Going to a line by number, Prev: Disabling backups, Up: Common requests

`auto-save-mode' にしない方法は? _(2004/07/28)_
===============================================

   auto-save は Emacs やマシンがクラッシュしたときに重要なのでそのよう
なことは勧められません。

   変数 `auto-save-interval' を設定することで auto-save の回数を減らす
ことはできます。この変数は何回キーを押すと auto-save するか決めます。こ
の変数の値を増やすことで auto-save の回数が減らせます。

   Sebastian Kremer の `auto-save' パッケージを使っても良いでしょう
(*Note Packages that do not come with Emacs:: 参照)。このパッケージを使
うとバックアップファイルを特定のディレクトリ(たとえば `/tmp')にまとめる
ことができます。

`auto-save-mode' の挙動を変更したいときは
*Note (emacs)Auto Save:: 参照。



File: efaq-ja, Node: Going to a line by number, Next: Modifying pull-down menus, Prev: Disabling auto-save-mode, Up: Common requests

指定した行番号に移動する方法は?
===============================

本当に行番号という情報からその行に移動したいのですか?
コンパイラがエラーメッセージを出した場所に移動したいのではありませんか?
もしそうなら Emacs の中から `M-x compile', {M-x recompile} と
入力してコンパイルしてください。
Emacs はコンパイラの出力を `*compilation' バッファに取り込み、
`C-x `' と入力することでエラーメッセージに対応する場所を順に表示します。
`*compilation*' バッファのエラーメッセージ上で
`Mouse-2' または <RET> を入力することで直接表示させることもできます。

   もし本当に特定の行番号の行に移動したいなら `M-x goto-line <RET>' と
入力してから行番号を入力して移動することができます。

   プレフィクスキーを利用して行番号を先に指定することもできます。たとえ
ば `C-u 286 M-x goto-line <RET>' で 286 行目に移動します。

   このコマンドを頻繁に利用するなら適当なキーに割り当てておくと良いでしょ
う。次の様に `.emacs' に書き加えれば `C-x g' で `goto-line' が起動され
るようになります。

     (global-set-key "\C-xg" 'goto-line)




File: efaq-ja, Node: Modifying pull-down menus, Next: Deleting menus and menu options, Prev: Going to a line by number, Up: Common requests

メニューバーの項目を変更する方法は?
===================================

   `File', `Edit', `Buffers' などのメニュータイトルは一つのキーマップを
表します。メニュータイトルをマウスで選択するとそのキーマップに定義され
ているメニューを表示します。

   メニューに新しい項目を加えるにはそのキーマップに新しい項目を定義して
ください。`forward word' を `Edit' メニューに追加するには次のようにしま
す。

     (define-key global-map
       [menu-bar edit forward]
       '("Forward word" . forward-word))

最初の引数にキーマップ `global-map' を指定することでメニュー定義はグロー
バルになります。 `global-map' を適当なキーマップに置き換えれば特定のモー
ドに対してメニューを追加することができます。

   二番目の引数は新しい項目のメニューでの位置を表しています。`edit' を
`file' に置き換えれば `Files' メニューに項目を追加することになります。

   三番目の引数は cons cell で、第一要素はメニューに表示される文字列、
第二要素はメニュー項目を選択した時に実行されるコマンドです。

   メニュー項目としてサブメニューを追加するにはメニュー定義にキーマップ
を指定します。

     (define-key global-map [menu-bar words]
       (cons "Words" (make-sparse-keymap "Words")))

   このコードでは新しいキーマップを定義してメニューバーにサブメニュー
`Words' を追加します。`Words' メニューに `Forward Word' を追加するには
次の様にします。

     (define-key global-map
       [menu-bar words forward]
       '("Forward word" . forward-word))

キーマップの内部構造の問題から、新しいメニューの項目は一番上に追加されます。
たとえば `foo', `bar', `baz' の順に
メニュー項目を追加するとメニューは
`baz', `bar', `foo' の順になります。

この問題を回避するには `define-key-after' を使ってください。
この関数は `define-key' と同様にキーマップを変更しますが、
新しい定義の位置を指定することができます。
`Edit' メニューの `Undo' の一つ下に
`Forward Word' を追加するには次の様にします。

     (define-key-after
       (lookup-key global-map [menu-bar edit])
       [forward]
       '("Forward word" . forward-word)
       'undo)

   `define-key-after' の二番目の引数と三番目の引数が `define-key' と異
なり、また四番目の引数があることに注意してください。四番目の引数に指定
されるメニューの次に追加されます。メニューの最後に追加したい場合は第四
引数を `t' にします。

   同一のサブメニュー内でメニュー項目を別の位置に移動したい場合は単に
`define-key-after' を新しい位置を指定して評価してください。

   詳細については`Emacs Lisp Reference Manual'(*Note Emacs Lisp
documentation:: 参照) の "Menu Keymaps" にあります。
(Emacs Lisp Reference Manual がインストールされているなら
*Note (elisp)Menu Keymaps:: 参照)



File: efaq-ja, Node: Deleting menus and menu options, Next: Turning on syntax highlighting, Prev: Modifying pull-down menus, Up: Common requests

メニューバーの項目を削除する方法は?
===================================

   最も単純な方法はキーマップを `nil' にしてしまうことです。たとえば
(*Note Modifying pull-down menus:: の) `Words' メニューを削除するには次
の様にします。

     (define-key global-map [menu-bar words] nil)


   同様にメニューの項目を削除するにもキーマップの定義を `nil' にします。
たとえば(*Note Modifying pull-down menus:: で追加した) `Forward Word'
を `Edit' メニューから削除するには次の様にします。

     (define-key global-map [menu-bar edit forward] nil)



File: efaq-ja, Node: Turning on syntax highlighting, Next: Scrolling only one line, Prev: Deleting menus and menu options, Up: Common requests

構文を強調表示させる方法は?
===========================

   `font-lock-mode' は Emacs で構文の強調表示を行う標準的な方法です。
`font-lock-mode' を使うと違う型の文字は違う色で表示されます。たとえば何
かのプログラム言語のモードで `font-lock-mode' にすると変数はある色で、
キーワードは別の色で、コメントは更に別の色で表示されます。

   以前のバージョンの Emacs では同様の事をするパッケージに hilit19 があ
りましたが、 hilit19 の利用は現在では標準ではありません(しかし
`hilit19.el' は Emacs に付属しています)。現在 hilit19 は誰も保守してい
ません。

`font-lock-mode' にするには `M-x font-lock-mode' と入力してください。

   特定のメジャーモードで `font-lock-mode' にするにはモードの hook を使っ
てください。たとえば `c-mode' で `font-lock-mode' にするには次のように
`.emacs' に書き加えてください。

     (add-hook 'c-mode-hook 'turn-on-font-lock)

   メジャーモードによらずに `font-lock-mode' にするには `.emacs' に次の
ように書き加えてください。

     (global-font-lock-mode 1)

これで `font-lock-global-mode' にあるすべてのメジャーモードで
`font-lock-mode' になります。`pie-ala-mode' でファイルを編集するときに
`pie-ala-mode' に対する`font-lock-mode' の定義がなければそのバッファに
対しては上の式は意味を持ちません。

   `font-lock-mode' を用いた強調表示には時間がかかるので、表示が遅いこ
とにいらいらさせられるかもしれません。これを回避するための仕組みがいく
つかあります。

   Emacs 21 以降では `font-lock-mode' は `jit-lock-mode' の提供する新し
い "その場での(Just-In-Time)文字の装飾" を利用します。`jit-lock-mode'
はバッファの見えていない部分に対しての文字の装飾を実際に表示されるまで
遅らせることができます。また Emacs が入力待ち状態になったときには変更を
加えます。この様にすることで表示にかかる時間を最小限に抑えています。
`jit-lock-mode' の設定については `C-h f jit-lock-mode <RET>' で説明を読
んでください。

   Emacs 20 以前では装飾レベルを設定することができます。装飾レベルには
ささやかなものから派手なものまであり、派手な装飾ほど時間(または速いマシ
ン)が必要です。装飾レベルは `font-lock-maximum-decoration' で決まります。
`nil' が標準の装飾(大抵は最も簡素な装飾)で、`t' が最も派手な装飾となり
ます。その場合は `.emacs' に次の様に書き加えます。

     (setq font-lock-maximum-decoration t)

モードごとに装飾レベルを設定することもできます。詳しい方法は `C-h v
font-lock-maximum-decoration <RET>' で説明を読んでください。

   Emacs 20 以前では文字装飾に `fast-lock-mode' や `lazy-lock-mode' が
あります。これらは Emacs 21 の `jit-lock-mode' に相当します。
`lazy-lock-mode' の有利な点はある条件が満たされたときにだけ装飾をするこ
とです。それはたとえばある一定期間 Emacs が入力待ちになった時であるとか、
スクロールした時などです。詳しくは `C-h f lazy-lock-mode <RET>' (`M-x
describe-function <RET> lazy-lock-mode <RET>') で説明を読んでください。

   `C-h f font-lock-mode' (`M-x describe-function <RET> font-lock-mode
<RET>') で `font-lock-mode' の説明も参考にして下さい。

   詳細については `font-lock-mode' FAQ を読んでください。FAQ は Jari
Aalto <jari.aalto@ntc.nokia.com> が保守していて、次のところから入手可能
です。

`ftp://cs.uta.fi/pub/ssjaaa/ema-font.gui'

   文字装飾付きで(色付けやフォント指定などをしたまま) バッファの内容を
印刷したい時は`M-x ps-print-buffer-with-faces' または`M-x
ps-print-region-with-faces' を利用してください。これは PostScript プリ
ンタまたはインタプリタ(Ghostscript など)を必要とします。変数
`ps-printer-name', `ps-lpr-command', `ps-lpr-switches' の説明を参考にし
て下さい。



File: efaq-ja, Node: Scrolling only one line, Next: Replacing highlighted text, Prev: Turning on syntax highlighting, Up: Common requests

ウィンドウの一番上や下から移動するときに一行だけスクロールさせる方法は?
=======================================================================

`.emacs' に次の様に書き加えてください。

     (setq scroll-step 1)

*Note Scrolling: (emacs)Scrolling.



File: efaq-ja, Node: Replacing highlighted text, Next: Editing MS-DOS files, Prev: Scrolling only one line, Up: Common requests

選択領域を入力で置き換えるようにする方法は?
===========================================

`delete-selection-mode' を使ってください。
`delete-selection-mode' にするには
`.emacs' に次の様に書き加えてください。

     (delete-selection-mode t)

   `delete-selection-mode' の説明(`M-x describe-function <RET>
delete-selection-mode <RET>' で読めます)には次の様に書かれています。

     有効になっているときは選択領域を入力で置き換えます。無効になってい
     るときはポイント位置にテキストを挿入するだけです。

   `delete-selection-mode' が有効になっているときは選択領域を <DEL> で
削除できます。



File: efaq-ja, Node: Editing MS-DOS files, Next: Filling paragraphs with a single space, Prev: Replacing highlighted text, Up: Common requests

MS-DOS 形式のテキストファイルを Emacs で編集する方法は?
=======================================================

   Emacs 20 では MS-DOS(と Windows)のファイルを自動的に判別して扱うので
特に意識することなくファイルを編集することができます。

   MS-DOS 形式のファイルを編集している時は、モードラインにそれが表示さ
れます。Unix や GNU/Linux システム、Mac では `(DOS)' と左端のほうに表示
されます。DOS や Windows ではバックスラッシュ(`\')が表示されます。

   Emacs 19 以前では `crypt++' パッケージを入手してください(*Note
Packages that do not come with Emacs:: 参照)．`crypt++' パッケージを使
うと MS-DOS と Unix の改行コードの違いを意識することなくファイルを編集
できます。



File: efaq-ja, Node: Filling paragraphs with a single space, Next: Escape sequences in shell output, Prev: Editing MS-DOS files, Up: Common requests

ピリオドの後にスペースを入力した時に自動的に改行させる方法は?
=============================================================

Ulrich Mueller <ulm@vsnhd1.cern.ch> は
`.emacs' に次の様に書き加えると良いと言っています。

     (setq sentence-end "[.?!][]\"')}]*\\($\\|[ \t]\\)[ \t\n]*")
     (setq sentence-end-double-space nil)



File: efaq-ja, Node: Escape sequences in shell output, Prev: Filling paragraphs with a single space, Up: Common requests

シェルモードで `ls' を使うと表示される変な文字列を消す方法は?
=============================================================

   `ls' が `ls --color' にエイリアスされているためです。この問題を回避
するには次の様な方法があります。

   * 環境変数 `EMACS' を調べてエイリアスしない様にする。
     Emacs はサブシェルを実行するとき、環境変数 `Emacs' の値を
     `t' に設定します。

   * `ansi-color' パッケージ(Emacs 21 以降には付属しています)を利用する。
     このパッケージを使うと ANSI のエスケープシーケンスを解釈して色を付
     けることができます。



File: efaq-ja, Node: Bugs and problems, Next: Compiling and installing Emacs, Prev: Common requests, Up: Top

Bugs and problems _(2004/07/28)_
********************************

   オンラインマニュアルにも良く発生する問題について書かれています。この
章を読んでも問題が解決しない場合は*Note (emacs)Lossage::を参照して下さ
い。バグを発見した場合は
*Note (emacs)Bugs::を参照して報告して下さい。

   Emacs の配布パッケージに含まれる `etc/PROBLEMS' にEmacs をコンパイル
する時・利用する時に発生する様々な問題がコンピュータの種類毎に記されて
います。このファイルは `C-h P' と入力することで読むことができます。

* Menu:

* Problems with very large files::  巨大なファイル
* ^M in the shell buffer::      シェルモードの ^M
* Shell process exits abnormally::  プロセスの異常終了
* Problems with Shell Mode on MS-Windows::
* Termcap/Terminfo entries for Emacs::  Termcap/Terminfo
* Spontaneous entry into isearch-mode::  勝手に I-search:
* Problems talking to certain hosts::  通信に失敗
* Errors with init files::      初期化ファイル中のエラー
* Emacs ignores X resources::   X リソース指定
* Emacs ignores frame parameters::  frame パラメタ指定
* Emacs takes a long time to visit files::  ファイルを開くのに時間がかかる
* Editing files with $ in the name::  $ を含むファイル名
* Shell mode loses the current directory::  シェルモードのカレントディレクトリ
* Security risks with Emacs::   セキュリティ
* Dired claims that no file is on this line::  Dired でファイルを開けない



File: efaq-ja, Node: Problems with very large files, Next: ^M in the shell buffer, Prev: Bugs and problems, Up: Bugs and problems

Emacs で 8 メガバイト以上のファイルを扱えますか?
================================================

   (19.29 よりも)古いバージョンの Emacs は 8 メガバイト以上のファイルを
標準では扱えませんでした。Emacs 19.29 ではバッファの最大のサイズは最低
2^27-1 すなわち 134,217,727 バイト(132 メガバイト)です。Emacs 20 を 64
ビットシステムでコンパイルすれば理論上は576,460,752,303,423,487 バイト
(549,755,813 ギガバイト) まで扱えます。

   古い Emacs を使っていて、バージョンアップできないなにがしかの理由が
あるなら、コンパイルし直すことで問題を回避できます。Leonard N. Zubkoff
<lnz@lucid.com> は `src/config.h' に次のように書き加えることで 26 ビッ
トの整数/ポインタが使えるようになると言っています。(33,554,431 バイトの
ファイルまで扱えるようになります)

     #define VALBITS 26
     #define GCTYPEBITS 5

この方法はシステムによっては `ILLEGAL DATATYPE' などのエラーになります。

   David Gillespie <daveg@csvax.cs.caltech.edu> はこの問題が起こった背
景を次の様に説明しています。この説明は 19.29 以前の話ですが、現在も同じ
話が通用します。

     Emacs はそのほとんどがリスプ方言のひとつで記述されている。リスプは、
     変数にどんな型の値も代入できたり、関数の戻り値も任意の型でよいとい
     う意味で型が自由な言語だ。しかし、このためすべての値にはその値がど
     んな型なのかを記す "タグ" が必要なんだ。タグには整数、リストへのポ
     インタ、編集バッファへのポインタなどの型が記される。Emacs は標準的
     な整数の幅である 32 ビットをデータオブジェクトを指すために使ってい
     る。そのうち先頭の 8 ビットをこのタグのために使い、残りの 24 ビッ
     トを値のために使っているんだ。だから整数(そしてポインタ)は C 言語
     の整数やポインタに比べて制限を受けているんだ。



File: efaq-ja, Node: ^M in the shell buffer, Next: Shell process exits abnormally, Prev: Problems with very large files, Up: Bugs and problems

シェルモードのバッファから `^M' を消す方法は?
=============================================

   `shell-mode' のバッファで `M-x shell-strip-ctrl-m <RET>' と入力して
ください。`^M' が削除されます。

   それで駄目なときは次のような方法があります。

   `tcsh' を使っている時は `.cshrc' (または `.tcshrc') に次の様に書き加
えてください。

     if ($?EMACS) then
         if ("$EMACS" == t) then
             if ($?tcsh) unset edit
             stty nl
         endif
     endif

   または `.emacs_tcsh' に次の様に書き加えてください。

     unset edit
     stty nl

   もう一つの方法は `shell-mode' で `tcsh' の代わりに`csh' を起動するよ
うにすることです。たとえば次の様にします。

     (setq explicit-shell-file-name "/bin/csh")

あるいは `.cshrc' (または `.tcshrc')に次の様に書き加えてください。

     setenv ESHELL /bin/csh

(環境変数を設定し直したら起動しなおすのを忘れないで下さい。)

   環境変数は Emacs の中でも設定することができます。たとえば次の様に鳴
ります。

     (setenv "ESHELL" "/bin/csh")

   この方法はシェルのほうが `^M' を出力しないようにするための設定です。
この方法では解決できない場合(たとえば Windows のシェルの場合)、次の様に
`.emacs' に書き加えることでEmacs に `^M' を取り除かせることができます。

     (add-hook 'comint-output-filter-functions 'shell-strip-ctrl-m)

   関連: `shell-mode' で入力が 2 度表示される場合はシェルの設定ファイル
に次の様に書き加えてください。

     stty -icrnl -onlcr -echo susp ^Z



File: efaq-ja, Node: Shell process exits abnormally, Next: Problems with Shell Mode on MS-Windows, Prev: ^M in the shell buffer, Up: Bugs and problems

"Process shell exited abnormally with code 1" はなぜ出るのですか?
=================================================================

   もっともあり得るのは、`env' プログラムが正しくインストールされていな
い場合です。このプログラムは実行許可を与えて Emacs のプログラムディレク
トリ(このディレクトリは変数 `exec-directory' に設定されているので、
`C-h v exec-directory <RET>' で確かめることができます) にインストールさ
れていなくてはなりません。

   また、パスの通っている `env' というプログラムがないか調べてください。
(例えば SunOS には `/usr/bin/env' というプログラムがあります) この場合、
なぜ失敗するのか、どうしたらこの問題を解決できるのかはわかっていません。

   `make clean' で `env' などのプログラムを削除してしまうので気をつけて
ください。

   Emacs を `xterm' (tty コントロールを持つもの) から X クライアントと
して起動し、その `xterm' を終了した場合にもこの現象がときどき起こること
が報告されています。

   その他の場合については `etc/PROBLEMS' を参考にして下さい。



File: efaq-ja, Node: Problems with Shell Mode on MS-Windows, Next: Termcap/Terminfo entries for Emacs, Prev: Shell process exits abnormally, Up: Bugs and problems

`M-x shell' でエラーが出るのはなぜ?
===================================

   MS-Windows では Emacs がシェルの実行ファイルの名前を間違えるために起
こります。標準の値 `/bin/sh' は Unix 以外のシステムでは大抵無効になりま
す。実行ファイルのファイル名がわかっているのなら変数
`explicit-shell-file-name' の値をフルパスに設定して下さい。たとえば
`.emacs' に次の様に書き加えます。

     (setq explicit-shell-file-name "d:/shells/bash.exe")

   ファイル名がわからないのなら `M-!' で適当なコマンドを実行してみてく
ださい。それでうまくいくのなら `.emacs' に次の様に書き加えてください。

     (setq explicit-shell-file-name shell-file-name)

   場合によってはアンチウィルスソフトが干渉してうまく行かないのかも知れ
ません。その場合はアンチウィルスソフトの常駐を解除してみてください。



File: efaq-ja, Node: Termcap/Terminfo entries for Emacs, Next: Spontaneous entry into isearch-mode, Prev: Problems with Shell Mode on MS-Windows, Up: Bugs and problems

"emacs" の termcap/terminfo エントリはどこにありますか?
=======================================================

`emacs' の termcap エントリは通常、
シェルの環境変数 `TERMCAP' にあります。
システムの termcap ファイルに `emacs' のエントリを加えると便利かも
知れません。(例えば `shell-mode' で `rlogin' するとき)
`emacs' の正しい termcap エントリは次のようなものです。

     emacs:tc=unknown:

   `emacs' の terminfo エントリを作るときは、`tic' か `captoinfo' を使っ
てください。`/usr/lib/terminfo/e/emacs' を生成する必要があります。
`/usr/lib/terminfo/d/dumb' を `/usr/lib/terminfo/e/emacs' にコピーする
だけで良いでしょう。

   termcap/terminfo エントリを作っても `shell-mode' でフルスクリーンを
使うプログラムは利用できません。その場合は、代わりに `M-x
terminal-emulator' としてください。

termcap/terminfo エントリがないときはシェルの設定ファイルで
ターミナルタイプを `emacs' から `dumb' か `unknown' に
変えてください。
`csh' を使っている場合は `.chrc' に次の行を加えてください。

     if ("$term" == emacs) set term=dumb



File: efaq-ja, Node: Spontaneous entry into isearch-mode, Next: Problems talking to certain hosts, Prev: Termcap/Terminfo entries for Emacs, Up: Bugs and problems

Emacs が勝手に "I-search: " と表示してビープするのですがなぜですか?
===================================================================

   端末が(または端末とホストコンピュータの間で) `C-s' と `C-q' をフロー
制御文字として使っていると、Emacs がこれらの文字をコマンドとして解釈し
てしまいます。(`C-s' は通常 `isearch-forward' コマンドを起動します) 解
決法については *Note Handling C-s and C-q with flow control:: 参照。



File: efaq-ja, Node: Problems talking to certain hosts, Next: Errors with init files, Prev: Spontaneous entry into isearch-mode, Up: Bugs and problems

特定のホスト(名)と交信できないのですが、なぜですか?
===================================================

   Emacs がリンクした `gethostbyname' がダメなバージョンの場合にそのよ
うな問題が発生します。"X server not responding. Check your DISPLAY
environment variable."  の様なメッセージが出るときや、
`open-network-stream' で "Unknown host" と言われるときは、これが原因で
しょう。

   こうなる原因は、Sun ではスタティックライブラリをリンクする必要がある
ため起こったものでしょう。スタティックライブラリの `gethostbyname' は
`/etc/hosts' と NIS(YP) しか見ないのに対し、ダイナミックライブラリの
`gethostbyname' は DNS も見るから(あるいは NIS の代わりに DNS を見るか
ら)です。System V R3.6 の動いている Motorola Delta では標準ライブラリの
`gethostbyname' は良いのですが、NIS を見る版(-linet でコンパイルしたと
き)ではうまくいきません。他の OS でも同じような問題があります。

   以下の様なことを試してみてください。


   * `/etc/hosts' に直接ホスト名を書き加える。

   * `src/config.h' に次のように書き加えて Emacs をリンクし直す。

          #define LIBS_SYSTEM -lresolv

   * `libc.a' の `gethostbyname' やそれに関連した関数を `libresolv.a'
     などのもっと良いものに置き換えてから Emacs をリンクし直す。

   * NIS を使っているのなら、`ypbind' が正しく DNS を見に行く様に設定す
     る。




File: efaq-ja, Node: Errors with init files, Next: Emacs ignores X resources, Prev: Problems talking to certain hosts, Up: Bugs and problems

Emacs に "Error in init file" と言われてしまうのはなぜですか?
=============================================================

   `.emacs' かシステムの `lisp/default.el' をロードしたときにエラーが発
生しています。Emacs 21.1 以降では `*Messages*' バッファを表示してユーザ
にエラーの内容を知らせます。

`.emacs' のデバッグの方法については
*Note Debugging a customization file:: を参照してください。

パッケージを読み込む順序に意味があるかも知れませんし、
式を直接評価せずに hook を使う必要があるかも知れません。
一般的な場合については、
*Note Terminal setup code works after Emacs has begun:: に解説があります。



File: efaq-ja, Node: Emacs ignores X resources, Next: Emacs ignores frame parameters, Prev: Errors with init files, Up: Bugs and problems

`.Xdefaults' に書いた X リソースが無視されてしまうのは何故ですか? _(2004/07/28)_
================================================================================

   Emacs 19 では次の環境変数に指定される X リソースのファイルを検索しま
す。


   * `XFILESEARCHPATH'
   * `XUSERFILESEARCHPATH'
   * `XAPPLRESDIR'


   これは Xt ツールキットで書かれたプログラムによって提供される機能をエ
ミュレートします。

`XFILESEARCHPATH' と `XUSERFILESEARCHPATH' には
コロンで区切られたファイル名のリストを指定します。
`XAPPLRESDIR' はコロンで区切られたディレクトリ名のリストです。

   Emacs は X リソースを次の順に検索します。


  1. `-xrm RESOURCESTRING' で指定されるコマンドラインオプション

  2. 環境変数 `XENVIRONMENT' の値


        - `XENVIRONMENT' が設定されていないが、`~/.Xdefaults-HOSTNAME'
          が存在すれば`~/.Xdefaults-HOSTNAME' の値(HOSTNAME は Emacs が
          走っているマシンのホスト名です)


  3. サーバが提供するスクリーンのリソース


        - リソースが設定されていなくて `~/.Xdefaults' が存在すれば
          `~/.Xdefaults' に指定される値


  4. `XUSERFILESEARCHPATH' に指定されるファイルの値


        - 環境変数 `LANG' が設定してあれば`XAPPLRESDIR' のディレクトリ
          の`LANG/Emacs' というファイルの値(LANG は環境変数 `LANG' の値
          です)
        - `XAPPLRESDIR' のディレクトリの
          `Emacs' というファイルの値
        - 環境変数 `LANG' が設定してあれば
          `~/LANG/Emacs' ファイルの値
        - `~/Emacs' のファイルの値


  5. `XFILESEARCHPATH' に指定されるファイルの値




File: efaq-ja, Node: Emacs ignores frame parameters, Next: Emacs takes a long time to visit files, Prev: Emacs ignores X resources, Up: Bugs and problems

frame のパラメタ指定が無視されるのはなぜですか?
===============================================

   変数 `initial-frame-alist' の設定は Emacs 起動時に最初に作られる
frame に対してのみ適用されます。すべての frame に適用されるパラメタを指
定する時は変数 `default-frame-alist' を設定してください。

   この様に二つの変数が存在する理由は最初に作られる frame だけ特別な設
定をしたいユーザが多いためです。たとえば frame の大きさや位置は最初の
frame だけは指定したいかもしれませんが、それ以外は毎回作られるたびにマ
ウスで選びたい場合があります。



File: efaq-ja, Node: Emacs takes a long time to visit files, Next: Editing files with $ in the name, Prev: Emacs ignores frame parameters, Up: Bugs and problems

ファイルを開くのに 20 秒もかかるのはなぜですか?
===============================================

   古いバージョン(バージョン 20 以前)の Emacs で良くあるのはマスターの
ロックファイル `!!!SuperLock!!!' がロックディレクトリに残ってしまってい
るということです。消してください。

Mark Meuer <meuer@geom.umn.edu> は NeXT の NFS には
排他的なファイルの作成が成功してもエラーを返すバグがあると言っています。
この場合も同じ現象が起こります。
とにかく NSF では Emacs のロック機構は働かないので、
`CLASH_DETECTION' を未定義にしてコンパイルしてください。



File: efaq-ja, Node: Editing files with $ in the name, Next: Shell mode loses the current directory, Prev: Emacs takes a long time to visit files, Up: Bugs and problems

`$' をファイル名に持つファイルを編集する方法は?
===============================================

   ファイル名をミニバッファに入力するとき、Emacs は `$' 以降の単語を環
境変数として展開しようとします。この働きを抑制するには、 `$$' を代わり
に使ってください。



File: efaq-ja, Node: Shell mode loses the current directory, Next: Security risks with Emacs, Prev: Editing files with $ in the name, Up: Bugs and problems

シェルモードでシェルのカレントディレクトリの追跡に失敗するのはなぜ? _(2004/07/28)_
==================================================================================

   Emacs にはシェルがディレクトリを変更したことを知る手段がありません。
これは Unix の根本的な制限に起因するものです。Emacs は `cd' コマンドか
らディレクトリを推測しています。`cd' コマンドでディレクトリを指定すると
きに、変数を使ったり(`cd $HOME/bin') シェルのメタキャラクタを使ったり
(`cd ../lib*') すると、Emacs はシェルのカレントディレクトリの推測に失敗
します。`shell-mode' に対する非常に多くの修正や拡張がなされています
(*Note Finding a package with particular functionality:: 参照)．

   `shell-mode' バッファで `M-x dirs' と入力することで Emacs にシェルの
カレントディレクトリを知らせることができます。



File: efaq-ja, Node: Security risks with Emacs, Next: Dired claims that no file is on this line, Prev: Shell mode loses the current directory, Up: Bugs and problems

Emacs にセキュリティホールはありますか?
=======================================


   * `movemail' 事件(既に危険ではありません)

     Cliff Stoll は著書 `かっこうの卵' の第四章でこの事件に触れています。
     LBL のとあるサイトで `etc/movemail' プログラムが root の setuid ビッ
     トを有効にしてインストールされていたそうです。(Emacs 19 では
     `movemail' はアーキテクチャ依存ディレクトリにあります。`C-h v
     exec-directory <RET>' で調べてみてください) `movemail' はこのよう
     に使われることを想定していなかったので、セキュリティホールとなりど
     のユーザでも root 権限を取得できるようになっていました。

     この事件以来 `movemail' は setuid root でインストールされてもセキュ
     リティホールにならないように変更されています。しかし、現在では
     `movemail' を setuid root でインストールする必要はないので、より安
     全と言えます。

     1988 年にあった、かの Internet worm もこの設定の問題点をつくように
     なっていたという報告もあります。

   * `file-local-variable' 機能(危険ですが、容易に対処できます)

     Emacs にはファイルの終わりに特別な形式の文章を追加しておくことでそ
     のファイルを開いたときに局所変数の値を設定できる機能があります。こ
     の機能を使えばファイルが開かれたときに任意の Emacs Lisp のコードを
     評価するようにできます。明らかにこの機能を悪用すればトロイの木馬を
     仕掛けることができます。

     Emacs 18 ではこの機能を標準で許可していました。変数
     `inhibit-local-variables' に non-`nil' 値を設定しておけば、この機
     能を無効にできます。

     Emacs 19 ではセキュリティホールになるような変数のリストを Emacs が
     持っていて、それらの変数に値を設定しようとするとユーザに値を設定し
     て良いか尋ねます。変数 `enable-local-variable' の値を設定すること
     でファイルの最後にある Emacs Lisp コードを評価しても良いか決められ
     ます。

     詳細は *Note (emacs)File Variables:: 参照。

   * synthetic X イベント(危険です。`MIT-MAGIC-COOKIE-1' か何かを使って
     ください)

     Emacs は `SendEvent' 要求によって通常のイベントとして送られた
     synthetic X イベントを受理します。結果として、もし普通のホストベー
     スの認証を使っていればあなたが X を使っているワークステーションに
     X connection を持てるユーザーはあなたの Emacs プロセスに何でもさせ
     ることができます。例えば他のプロセスをあなたの権限で走らせることが
     できます。

     これを回避する唯一の方法は他のユーザーが X connection を持てないよ
     うにすることです。このための標準的な方法は `MIT-MAGIC-COOKIE-1' の
     様な正しい認証方法を使うことです。もし `xauth' プログラムで効力を
     得られるなら、あなたは `MIT-MAGIC-COOKIE-1' を使っているはずです。
     あなたのサイトはより高度な認証方法を取っているかも知れません。シス
     テム管理者に尋ねてください。

     正しい認証が無理なら、 X のプログラムを起動する短い時間だけホスト
     にアクセス可能にし、すぐアクセス不可能にしてください。これで悪意を
     持ったユーザーのアクセスできる時間を減らすことができ、リスクを軽減
     できます。しかし_リスクを完全に排除できるわけではありません_。

     Unix 上の X が動いているほとんどのマシンでは `xhost' プログラムで
     アクセス制御が可能です。あらゆるホストからアクセスできるようにする
     にはシェルから次のように入力します。

          xhost +

     このとき、出力は次のようになります(少なくとも HP のマシンでは)。

          access control disabled, clients can connect from any host

     どのホストからも(特別に許可されたホストを除き) X サーバにアクセス
     できない様にするには次のようにします。

          xhost -

     このとき、HP のマシンでは出力は次のようになります。

          access control enabled, only authorized clients can connect




File: efaq-ja, Node: Dired claims that no file is on this line, Prev: Security risks with Emacs, Up: Bugs and problems

Dired で "no file on this line" と言われてしまいます。
======================================================

   Unix がローカライズされていて、Dired で表示される日付の形式がアメリ
カのものと違うのでしょう。Dired のバッファを直接見るか、シェルから
`ls -l' を実行することで確認できます。

   Dired はファイル名を正規表現を使って見つけ出します。それは Unix の
`ls -l' の出力の形式をもとに日付に続いてファイル名があることを仮定して
います。しかしアメリカ以外のシステムでは日付の形式が違うことがあります。

   解決方法は二つ有って、一つは `ls -l' の出力をアメリカに合わせること
です。これは locale を設定すればできます。詳しくは OS のマニュアルを読
んでください。

   もう一つの方法は `dired-move-to-filename-regexp' を変更する方法です。



File: efaq-ja, Node: Compiling and installing Emacs, Next: Finding Emacs and related packages, Prev: Bugs and problems, Up: Top

Compiling and installing Emacs
******************************

* Menu:

* Installing Emacs::            Emacs のインストール
* Updating Emacs::              最新版 Emacs への更新
* Problems building Emacs::     コンパイル時の問題点
* Linking with -lX11 fails::    -lX11 でリンクに失敗する



File: efaq-ja, Node: Installing Emacs, Next: Updating Emacs, Prev: Compiling and installing Emacs, Up: Compiling and installing Emacs

Emacs をインストールする方法は?
===============================

   この解答は Unix で Emacs をインストールする場合に限っています。他の
OS を使っている場合は*Note Emacs for MS-DOS:: 以降の質問を参照してくだ
さい。Unix 以外のシステムでのソース・バイナリの入手方法やインストール方
法が書かれています。

   Unix では一からコンパイルするのが簡単でしょう。それには以下のものが
必要です。


   * Emacs のソースファイルftp サイトについては *Note Current GNU
     distributions:: 参照。GNU の配布サイトである `ftp://ftp.gnu.org'
     ではソースファイルは次のところにあります。

          `ftp://ftp.gnu.org/pub/gnu/emacs/emacs-21.3.tar.gz'

     新しいバージョンが出ればバージョン番号の変わったファイルになります。
     たとえば Emacs 21.42 がリリースされたらファイルは次の様になるでしょ
     う。

     `ftp://ftp.gnu.org/pub/gnu/emacs/emacs-21.42.tar.gz'

     `ftp://ftp.gnu.org' の負荷を上げない様になるべくミラーサイト
     (*Note Current GNU distributions:: 参照。URL は適宜変更してくださ
     い。) を利用してください。

   * `gzip' -- GNU の圧縮ユーティリティ`gzip' は `ftp://ftp.gnu.org' の
     ミラーサイトから入手できます。ほとんどのシステムで問題なくコンパイ
     ル・インストールできるでしょう。次のようにしてソースの圧縮を解除で
     きます。

          gunzip --verbose emacs-21.3.tar.gz

     Emacs のバージョン番号の部分(21.3)は適当に変えてください。
     `gunzip' が終わると `emacs-21.3.tar' というファイルができます。

   * `tar' -- テープアーカイバアーカイバとは複数のファイルを一つにまと
     めたり、その逆を行うプログラムです。Emacs のソースファイルはすべて
     一つの `tar' ファイルにまとめられているので、`tar' で展開します。
     次のようにしてファイルを展開できます。

          tar -xvvf emacs-21.3.tar

     `x' でファイルを展開(extract)することを意味します。
     二つの `v' は長い出力を出させます。
     `f' でどの `tar' ファイルを展開するか指定します。

     GNU の `tar' (`ftp://ftp.gnu.org' のミラーサイトから入手可能) を使っ
     ているのならこの `gzip' と `tar' の二つの段階を一つにまとめること
     ができます。次のようにします。

          tar -zxvvf emacs-21.3.tar.gz

     `z' で `tar' ファイルが `gzip' で圧縮されていることを指示し、展開
     の前に圧縮を解除させます。


   この時点で Emacs のソース(70 メガバイト強)は `emacs-21.3' と言うディ
レクトリの下に展開されます。ほとんどの Unix システムでは次のようにして
Emacs を(X サポート付きで)コンパイルできます。

     cd emacs-21.3       # カレントディレクトリを emacs-21.3 にする
     ./configure         # Emacs のコンパイルオプションを設定する
     make                # Emacs をコンパイルする

`make' が正常に終了したらコンパイルはうまくいったと考えて良いでしょう。
(うまくいかないときについては
*Note Problems building Emacs:: 参照)

   標準では Emacs は次のディレクトリにファイルをインストールします。

`/usr/local/bin'
     実行ファイル

`/usr/local/share/emacs/21.3'
     Lisp コードなどのデータファイル

`/usr/local/info'
     Info 文書ファイル

   これらのディレクトリにファイルをインストールできるのは適切な権限を持っ
たユーザだけです。権限を持っているなら次の様にしてください。

     make install

   この時、すでにあった `/usr/local/bin/emacs' と `/usr/local/info' の
Info ファイルを上書きしてしまうので注意してください。

   `INSTALL' ファイル(Emacs の配布ディレクトリのトップにあります) によ
り詳しい情報が有ります。



File: efaq-ja, Node: Updating Emacs, Next: Problems building Emacs, Prev: Installing Emacs, Up: Compiling and installing Emacs

Emacs を最新版に更新する方法は?
===============================

*Note Installing Emacs:: の手順を実行してください。

   Emacs はほとんどのファイルをバージョンに依存したディレクトリ(たとえ
ば `/usr/local/share/emacs/21.3')にインストールします。

   Emacs のインストールでバージョンによらずに上書きするファイルは
`/usr/local/bin/emacs' と `/usr/local/info' の Info ファイルだけです。
これらのファイルのバックアップを取ってからインストールしてください。そ
うすればトラブルはほとんどないでしょう。



File: efaq-ja, Node: Problems building Emacs, Next: Linking with -lX11 fails, Prev: Updating Emacs, Up: Compiling and installing Emacs

Emacs のコンパイル中にトラブルに突き当たったらどうしたらよいのですか?
=====================================================================

   まず第一に `etc/PROBLEMS' を読んでください。解決法が書かれているかも
しれません。次にこの FAQ のインストール・コンパイルに関する部分を読んで
ください。

   誰かに手助けをして欲しいときは *Note Help installing Emacs:: 参照。

それでも解決できなかったら、問題を電子メールで
<bug-gnu-emacs@gnu.org> へ送ってください。

`news:gnu.emacs.help' には投稿しないでください。
また <help-gnu-emacs@gnu.org> にはメールを送らないで下さい。
詳しくは *Note Guidelines for newsgroup postings:: と
*Note Reporting bugs:: 参照。



File: efaq-ja, Node: Linking with -lX11 fails, Prev: Problems building Emacs, Up: Compiling and installing Emacs

`-lX11' 付きで Emacs をリンクできないのはなぜですか?
====================================================

   Emacs は X11 のスタティックライブラリ `libX11.a' をリンクする必要が
有ります。このファイルがないのでしょう。

   OpenWindows では `add_services' を使って CD-ROM から"OpenWindows
Programmers" のソフトウェアを追加する必要があります。

   HP-UX 8.2 では `update' を実行して X11-PRG "ファイルセット" をロード
する必要があります。これは最初に "all filesets" を指定してもロードされ
ません。`libcurses.a' がない場合は"Berkeley Development Option" をロー
ドしてください。

   David Zuhn <zoo@armadillo.com> は MIT の X がシェアードライブラリを
サポートするシステムではデフォルトでシェアードライブラリのみを作ると言っ
ています。これらのライブラリは `temacs' (Emacs を作成する最後の段階でコ
ンパイルしたファイル)を undump することができません。スタティックライブ
ラリも作るには `site.cf' に次のように書き加えてください。

     #define ForceNormalLib YES

   その他のシステムでも同じような問題が有ります。`CANNOT_DUMP' を定義し
てシェアードライブラリをリンクする様にすることも可能です。

   Xmenu が動くようにするには MIT の `liboldX.a' を入手してください。



File: efaq-ja, Node: Finding Emacs and related packages, Next: Major packages and programs, Prev: Compiling and installing Emacs, Up: Top

Finding Emacs and related packages _(2004/07/29)_
*************************************************

* Menu:

* Finding Emacs on the Internet::  インターネットから入手
* Finding a package with particular functionality::  パッケージの検索
* Packages that do not come with Emacs::  非標準パッケージ
* Current GNU distributions::   GNU ソフトウェア
* Difference between Emacs and XEmacs::  Emacs と XEmacs の違い
* Emacs for MS-DOS::            MS-DOS 版 Emacs
* Emacs for Windows::           Windows 版 Emacs
* Emacs for OS/2::              OS/2 版 Emacs
* Emacs for Atari ST::          Atari ST 版 Emacs
* Emacs for the Amiga ::        Amiga 版 Emacs
* Emacs for NeXTSTEP::          NeXTSTEP 版 Emacs
* Emacs for Apple computers::   Macintosh 版 Emacs
* Emacs for VMS and DECwindows::  VMS 版 Emacs
* Modes for various languages::  プログラム言語編集用のモード
* Translating names to IP addresses::  IP アドレス



File: efaq-ja, Node: Finding Emacs on the Internet, Next: Finding a package with particular functionality, Prev: Finding Emacs and related packages, Up: Finding Emacs and related packages

Emacs をインターネットから入手する方法は?
=========================================

   `etc/DISTRIB' と `etc/FTP' ファイルから近くのアーカイブサイトを捜し
てください。メールの場合は `etc/ORDERS' を見てください。まだ GNU Emacs
を入手していないときは、*Note Informational files for Emacs:: を読んで、
まずこの二つのファイルを入手してください。

   Emacs の最新版を入手・コンパイルする方法については*Note Installing
Emacs:: 参照。GNU ソフトウェアの入手先については *Note Current GNU
distributions:: 参照。



File: efaq-ja, Node: Finding a package with particular functionality, Next: Packages that do not come with Emacs, Prev: Finding Emacs on the Internet, Up: Finding Emacs and related packages

XXX なことをするための Emacs Lips パッケージを入手する方法は? _(2004/07/29)_
============================================================================

パッケージが既に利用可能になっているかもしれないので、
まず第一にそうでないかを調べてください。
たとえば `M-x apropos <RET> wordstar <RET>' と入力することで
`wordstar' という文字列を名前に含む変数や関数の一覧を見ることができます。

   パッケージはインストールされているが、ロードされていないのかもしれま
せん。どんなパッケージがロードできるかについては lisp ファイルのあるディ
レクトリ(*Note File-name conventions:: 参照)の中を見てください。lisp の
ソースファイルにはパッケージのロード方法や起動方法、設定方法などが書か
れているかもしれません。

`C-h p' (`finder-by-keyword') で Emacs の標準パッケージを検索できます．

   Emacs に標準でない外部パッケージを探すには，*Note Packages that do
not come with Emacs:: を参照ください．



File: efaq-ja, Node: Packages that do not come with Emacs, Next: Current GNU distributions, Prev: Finding a package with particular functionality, Up: Finding Emacs and related packages

Emacs の配布パッケージに含まれない Emacs Lisp パッケージの入手方法は? _(2004/07/29)_
====================================================================================

   Stephen Eglen <stephen@anc.ed.ac.uk> による The Emacs Lisp List
(ELL) (http://www.anc.ed.ac.uk/~stephen/emacs/ell.html) インターネット
上で入手できるEmacs Lisp ファイルへのリンクがまとめられています．ELL は
Web ブラウザだけでなく，the `ell' package
(http://www.anc.ed.ac.uk/~stephen/emacs/ell.el) により Emacs からでも見
ることができます．

多くの作者は Emacs sources newsgroup (news:gnu.emacs.sources) にEmacs Lisp を投稿しています．このアーカイブは例えば
Google (http://groups.google.com) で検索できます．

   the Lisp area of the Emacs Wiki (http://emacswiki.org/elisp/) にも多
くのパッケージが保存されています．

   For a long time, the Emacs Lisp Archive provided a central
repository for Emacs packages.  Sadly, it has not been active for some
time, although you can still access the old files at 長い間，Emacs
Lisp Archive は Emacs のパッケージを精力的に提供してきました．残念なが
ら現在は更新されていませんが，下記のサイトで古いファイルを見ることはで
きます．

`ftp://ftp.cis.ohio-state.edu/pub/emacs-lisp/WWW/index.html'



File: efaq-ja, Node: Current GNU distributions, Next: Difference between Emacs and XEmacs, Prev: Packages that do not come with Emacs, Up: Finding Emacs and related packages

最新の GNU のソフトウェアを入手する方法は?
==========================================

   GNU ソフトウェアの公式な最新版は次のところから入手できます。

`ftp://ftp.gnu.org/pub/gnu'

   詳しくは `etc/DISTRIB' と `etc/FTP' を読んでください。

`ftp://ftp.gnu.org' のミラーサイトの一覧は次のところで見られます。

`http://www.gnu.org/order/ftp.html'



File: efaq-ja, Node: Difference between Emacs and XEmacs, Next: Emacs for MS-DOS, Prev: Current GNU distributions, Up: Finding Emacs and related packages

Emacs と XEmacs (元 "Lucid Emacs")の違いは? _(2004/07/29)_
==========================================================

   まず第一に、どちらも GNU Emacs であることには変わりありません。
XEmacs は FSF の配布する Emacs と同程度に最新のバージョンです。この
FAQ では FSF の配布しているものだけを "Emacs" と呼びます。その理由は一
つには XEmacs の保守をしている人たちは彼らのプログラムを "XEmacs" と呼
んで区別しているからで、一つには Emacs と XEmacs の違いを難解な用語や歴
史に惑わされることなくうまく正確に説明することはできないからです。

   XEmacs は Lucid Emacs として開発が始まりました。それは Emacs 19 の古
いバージョンと Epoch をベースにしていました。Epoch は Emacs 18 に X に
対応した機能を組み込んだものです。

   Emacs (つまり FSF の配布するバージョン)は様々なシステムにインストー
ルできるようになっていて、現在では MULE (多言語対応)を含んでいます。一
方 XEmacs は X と MS-Windows に対応する特別なコードを含んでいてバッファ
に画像を表示したりできます。類似のコードは Emacs 21 以降にも導入されて
います。Emacs と XEmacs の Lisp パッケージにはそれぞれに独自のものがあ
ります。RMS は FSF Emacs に XEmacs のすべてのパッケージを含めるようにし
たい言っていますが、XEmacs のパッケージは誰が書いたものなのか良くわから
なくなってしまっているものもあるので、FSF で法的な手続きをできずにいる
ものも有ります。(このような手続きがなければ FSF はパッケージを Emacs に
付属して配布することはしません) この二つのバージョンの Emacs は Lisp プ
ログラミングレベルでも重要な違いが幾つかあります。

   XEmacs で実装された機能の多くは最新の Emacs に取り込まれ、あるいはこ
れから取り込まれるでしょうが、それでも Emacs と XEmacs の間には大きな違
いがあります。

   この FAQ の執筆時点での XEmacs の最新版は XEmacs 21.4 です。これは次
のところから入手できます。

`ftp://ftp.xemacs.org/pub/xemacs/xemacs-21.4/xemacs-21.4.12.tar.gz'

   XEmacs についての詳しい情報は FAQ も含めて次のところから入手できます。

`http://www.xemacs.org/'



File: efaq-ja, Node: Emacs for MS-DOS, Next: Emacs for Windows, Prev: Difference between Emacs and XEmacs, Up: Finding Emacs and related packages

MS-DOS で動く Emacs は有りますか? _(2004/07/29)_
================================================

   MS-DOS と Windows(3.X, 9X, ME, NT, 2000) で動く Emacs のバイナリが
Simtel アーカイブにあります。Windows 9X, ME, 2000 ではロングファイル名
にも対応しています。詳しくは次のところを参照してください。

`http://www.simtel.net/pub/djgpp/v2gnu/emacs.README'

   バイナリは次のディレクトリにある `em*.zip' です。

`http://www.simtel.net/pub/djgpp/v2gnu/'

   自分でコンパイルするには 386 系のプロセッサと MS-DOS 3.0 以上が必要
です。Eli Zaretskii <eliz@is.elta.co.il> とDarrel Hankerson
<hankedr@dms.auburn.edu> は次のものが必要であると言っています。


_コンパイラ_
     DJGPP version 1.12 maint 1 以降。Djgpp 2.0 以降推奨。djgpp 1.x は
     廃れつつあります。djgpp 2 は Windows9X/ME/2K のロングファイル名に
     対応しています。

     djgpp の最新版は次のところから入手できます。

     `http://www.simtel.net/pub/gnu/djgpp/v2*'

_展開プログラム_
     DJGPP v2.x 付属の `djtar' を使うと良いでしょう。`gzip' で圧縮され
     た `tar' ファイル(ファイル名が `.tar.gz' で終わるファイル) の展開
     にも対応しています。`djtar' は上の URL のディレクトリの
     `djdevNNN.zip' (NNN は DJGPP のバージョン番号)に含まれています。

     *警告* WinZip を展開には使用*しない*で下さい。WinZip はファイル中
     の LF を DOS の改行コード CR-LF に変換してしまい、正しく展開できま
     せん。また、Emacs の配布ファイルのディレクトリ構造を保って展開しな
     いかもしれません。他にも問題はあるようです。このために Emacs のコ
     ンパイルに失敗することがあります。

_その他のユーティリティ: make, mv, sed, rm_
     これらのプログラムは次のところから入手できます。

     `http://www.simtel.net/pub/gnu/djgpp/v2gnu'

     16 ビット版は GNUish にあります。

     `http://www.simtel.net/pub/gnuish/'

     (`mv' と `rm' は Fileutils パッケージに含まれています。
     `sed' と `make' はそれぞれ単独のパッケージになっています。)


   `INSTALL' (の終わりの方) と `etc/PROBLEMS' にMS-DOS で動く Emacs に
関する情報が書かれています。

   他にも MS-DOS に移植された Emacs があり、その一覧 "Emacs
implementations and literature" が次のところから入手できます。

`ftp://rtfm.mit.edu/pub/usenet/comp.emacs/'

   ここに書かれているプログラムは一見 Emacs と同じように見えますが、一
部の機能を持たないことがあります。たとえば Emacs Lisp による設定ができ
なかったりします。



File: efaq-ja, Node: Emacs for Windows, Next: Emacs for OS/2, Prev: Emacs for MS-DOS, Up: Finding Emacs and related packages

MS-Windows で動く Emacs は有りますか?
=====================================

   Windows 95/NT についてはGeoff Voelker <voelker@cs.washington.edu> の
作った FAQ を参照してください。次のところから入手可能です。

`http://www.gnu.org/software/emacs/windows/ntemacs.html'

   Windows 3.1 については *Note Emacs for MS-DOS:: 参照。

   NTEmacs をベースにした Emacs 20.7 の Windows CE への移植がなされてい
て次のところから入手できます。

`http://www.rainer-keuchel.de/software.html'

この移植は Rainer Keuchel <coyxc@rainer-keuchel.de> が行いました。非同
期プロセスとメニューを除くすべての機能が利用できます。コンパイルするに
は MSVC 6.0 と Windows CE SDK が必要です。



File: efaq-ja, Node: Emacs for OS/2, Next: Emacs for Atari ST, Prev: Emacs for Windows, Up: Finding Emacs and related packages

OS/2 で動く Emacs は有りますか?
===============================

   Emacs 20.6 が OS/2 2.0 か 2.1 の emx に移植されています。次のところ
にあります。

`ftp://hobbes.nmsu.edu/pub/os2/apps/editors/emacs/e206*.zip'

`http://archiv.leo.org/pub/comp/os/os2/leo/gnu/emacs%2d20/'

   OS/2 上でのインストール方法や基本的な設定方法などに関する説明が次の
ところにあります。

`http://userpage.fu-berlin.de/~oheiabbd/emacs/emacs206-os2.html'



File: efaq-ja, Node: Emacs for Atari ST, Next: Emacs for the Amiga, Prev: Emacs for OS/2, Up: Finding Emacs and related packages

Atari ST で動く Emacs は有りますか?
===================================

   Roland Sch"auble は plain TOS と MiNT で動く Emacs 18.59 が次のとこ
ろから入手できると言っています。

`ftp://atari.archive.umich.edu/Editors/Emacs-18-58/1858b-d3.zoo'.



File: efaq-ja, Node: Emacs for the Amiga, Next: Emacs for NeXTSTEP, Prev: Emacs for Atari ST, Up: Finding Emacs and related packages

Amiga で動く Emacs は有りますか?
================================

   次のところから必要なファイルを入手してください。

`ftp://ftp.wustl.edu/pub/aminet/util/gnu/'

   David Gilbert <dgilbert@gamiga.guelphnet.dweomer.org> は Amiga 版
Emacs 19.25 のβ版を公開しています。バイナリは次のところから入手できま
す。

`ftp://ftp.wustl.edu/pub/aminet/util/gnu/a2.0bEmacs-bin.lha'



File: efaq-ja, Node: Emacs for NeXTSTEP, Next: Emacs for Apple computers, Prev: Emacs for the Amiga, Up: Finding Emacs and related packages

NeXTSTEP で動く Emacs は有りますか?
===================================

   色、メニュー、frame をサポートした Emacs 19.34 の NeXTSTEP 版である
Emacs.app が次のところから入手できます。

`ftp://next-ftp.peak.org/pub/next/apps/emacs/Emacs_for_NeXTstep.4.20a1.NIHS.b.tar.gz'



File: efaq-ja, Node: Emacs for Apple computers, Next: Emacs for VMS and DECwindows, Prev: Emacs for NeXTSTEP, Up: Finding Emacs and related packages

Apple コンピュータで動く Emacs は有りますか?
============================================

   Emacs 18.59 の非公式な Macintosh 版が幾つかの ftp サイトから入手でき
ます。オリジナルは次のところです。

`ftp://ftp.cs.cornell.edu/pub/parmet/Emacs-1.17.sit.bin'.

   Emacs 20.4 の Macintosh 版は次のところにあります。

`http://www.cs.hku.hk/~choi/emacs/index.html'.

Emacs 21.1 以降では Macintosh は公式にサポートされています。
`mac/README' と `mac/INSTALL' を読んでください。

Apple の次期 OS "OS X" は NeXTSTEP と OpenStep をベースにしています。
*Note Emacs for NeXTSTEP:: を参照してください。



File: efaq-ja, Node: Emacs for VMS and DECwindows, Next: Modes for various languages, Prev: Emacs for Apple computers, Up: Finding Emacs and related packages

VMS と DECwindows で動く Emacs は有りますか?
============================================

   Emacs を含めて VMS 版の GNU のソフトウェアの最新版に関する情報は次の
ところから入手できます。

`http://vms.gnu.org/'.



File: efaq-ja, Node: Modes for various languages, Next: Translating names to IP addresses, Prev: Emacs for VMS and DECwindows, Up: Finding Emacs and related packages

色々なメジャーモードはどこで入手できますか? _(2004/07/29)_
==========================================================

   Lex, Yacc/Bison, Bourne shell, csh, C++, Objective-C, Pascal, Java,
Awk これらのモードのほとんどは Emacs の配布パッケージに含まれます。他に
もメジャーモードが欲しかったら*Note Finding a package with particular
functionality::を参照してください．

   Barry Warsaw の `cc-mode' はC, C++, Objective-C, Java で使えます。
Emacs に付属していますが，ホームページ
(http://cc-mode.sourceforge.net/)でも入手できます．



File: efaq-ja, Node: Translating names to IP addresses, Prev: Modes for various languages, Up: Finding Emacs and related packages

XXX.YYY.ZZZ とか言う IP アドレスって何ですか?
=============================================

   Unix を使っているなら `nslookup' プログラムを試してください。
`nslookup' は Berkeley の BIND パッケージに含まれています。たとえば
`ftp.gnu.org' の IP アドレスを調べるには次のようにします。

     nslookup ftp.gnu.org

   IP アドレスが表示されるでしょう。

   もし不完全なネームサーバしかないサイトならファイルを ftp するときに
IP アドレスを知っておく必要があります。この情報は電子メールで次のように
して得られます。

     To: dns@[134.214.84.25]    (to grasp.insa-lyon.fr)
     Body: ip XXX.YYY.ZZZ        (使い方を知りたい時は help と書く)

または

     To: resolve@[147.31.254.130]         (to laverne.cs.widener.edu)
     Body: site XXX.YYY.ZZZ



File: efaq-ja, Node: Major packages and programs, Next: Key bindings, Prev: Finding Emacs and related packages, Up: Top

Major packages and programs _(2004/07/29)_
******************************************

* Menu:

* VM::                          VM
* Supercite::                   Supercite
* Calc::                        Calc
* VIPER::                       VIPER
* AUCTeX:::                     AUC-TeX
* BBDB::                        BBDB
* Ispell::                      Ispell
* w3-mode::                     w3-mode
* EDB::                         EDB
* Mailcrypt::                   Mailcrypt
* JDE::                         JDE
* Patch::                       Patch



File: efaq-ja, Node: VM, Next: Supercite, Prev: Major packages and programs, Up: Major packages and programs

VM (View Mail) -- もう一つの Emacs のメーラ。 MIME サポート付き _(2004/07/29)_
==============================================================================


作者
     Kyle Jones <kyle_jones@wonderworks.com>

最新版
     7.15

配布場所
     `ftp://ftp.wonderworks.com/pub/vm/vm.tar.gz'

ニュースグループ
     `news:gnu.emacs.vm.info'

バグレポート先
     `news:gnu.emacs.vm.bug' あるいは <bug-vm@wonderworks.com> に送付く
     ださい．

   Emacs 21 では VM 7 は動作します．古い Emacs で使うのに適した古い バー
ジョンの VM はFTP サイト (ftp://ftp.wonderworks.com/pub/vm/) で入手でき
ます．



File: efaq-ja, Node: Supercite, Next: Calc, Prev: VM, Up: Major packages and programs

Supercite -- メール・ニュースで記事を引用するためのパッケージ _(2004/07/29)_
============================================================================


作者
     Barry Warsaw <barry@python.org>

最新版
     3.54 (Emacs 20 以降に付属しています)

配布場所
     `http://www.python.org/emacs/supercite.tar.gz'

メーリングリスト
     メーリングリスト登録依頼の宛先 <supercite-request@python.org>
     メーリングリスト <supercite@python.org>


   Superyank は Supercite の古いバージョンです。



File: efaq-ja, Node: Calc, Next: VIPER, Prev: Supercite, Up: Major packages and programs

Calc -- 簡単な Mathematica
==========================


作者
     Dave Gillespie <daveg@csvax.cs.caltech.edu>

最新版
     2.02f

配布場所
     `ftp://ftp.gnu.org/pub/gnu/calc/calc-2.02f.tar.gz'


   Calc 2.02f を Emacs 21 以降で動かすにはパッチを当てる必要があります。

   Emacs 21.1 以降には `calculator.el' というパッケージが付属しています。
行列計算や統計処理ができないなど、Calc に比べれば機能が落ちますが、
`xcalc' などの簡単な処理しかしないプログラムに対してはより良い代替品と
なります。



File: efaq-ja, Node: VIPER, Next: AUCTeX, Prev: Calc, Up: Major packages and programs

VIPER -- `vi' エミュレーション _(2004/07/29)_
=============================================

   Emacs 19.29 以降では `vi' エミュレーションパッケージとして VIPER
(`M-x viper-mode <RET>')が付属しています。VIPER は VIP (VIP 4.3 を含む)を
拡張して置き換えたものです。VIPER は色々なレベルで `vi' エミュレーショ
ンをすることができます。

   Emacs 19.28 以前では Emacs 付属の VIP よりも次のところから入手して使
うほうが良いでしょう。

作者
     Aamod Sane <sane@cs.uiuc.edu>

最新版
     4.3

配布場所
     `ftp://archive.cis.ohio-state.edu/pub/emacs-lisp/old-archive/modes/vip-mode.tar.Z'




File: efaq-ja, Node: AUCTeX, Next: BBDB, Prev: VIPER, Up: Major packages and programs

AUC TeX -- デバッグもできる LaTeX モード拡張版 _(2004/07/29)_
=============================================================


作者
     Kresten Krab Thorup <krab@iesd.auc.dk>
     Per Abrahamsen <abraham@dina.kvl.dk>

Maintainer
     David Kastrup <dak@gnu.org>

最新版
     11.13

配布場所
     `http://savannah.gnu.org/download/auctex/stable.pkg/11.13/auctex-11.13.tar.gz'

WWW
     `http://www.gnu.org/software/auctex/'

メーリングリスト:
     メーリングリスト登録依頼の宛先 <auc-tex-subscribe@sunsite.dk>
     ユーザ用メーリングリスト <auc-tex@sunsite.dk>
     開発者用メーリングリスト <auc-tex_mgr@sunsite.dk>




File: efaq-ja, Node: BBDB, Next: Ispell, Prev: AUCTeX, Up: Major packages and programs

BBDB -- メール・ニュースを統合した個人情報ファイル _(2004/07/29)_
=================================================================


保守管理者
     Ronan Waide <waider@waider.ie>

最新版
     2.34

配布場所
     `http://bbdb.sourceforge.net/'

メーリングリスト
     メーリングリスト登録依頼の宛先 <bbdb-info-request@lists.sourceforge.net>
     メーリングリスト <bbdb-info@lists.sourceforge.net>
     リリース告知用メーリングリスト: <bbdb-announce-request@lists.sourceforge.net>




File: efaq-ja, Node: Ispell, Next: w3-mode, Prev: BBDB, Up: Major packages and programs

Ispell -- Emacs インターフェース付きの C プログラム
===================================================


作者
     Geoff Kuenning <geoff@itcorp.com>

最新版
     3.1.20

配布場所
     `ftp://ftp.cs.ucla.edu/pub/ispell/ispell-3.1.20.tar.gz'

WWW
     `http://fmg-www.cs.ucla.edu/geoff/ispell.html'



   * Geoff Kuenning に Ispell の最新版を送れなどとメールを出さないよう
     に。彼は無料で電子メールを読むことができません。

   * この Ispell は GNU Ispell 4.0 とは別のものです。GNU Ispell 4.0 は
     現在サポートされていません。




