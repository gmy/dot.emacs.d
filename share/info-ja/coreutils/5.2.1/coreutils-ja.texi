\input texinfo
@c %**start of header
@setfilename coreutils-ja.info
@settitle @sc{gnu} Coreutils

@c %**end of header

@c @documentlanguage ja

@include coreutils-v.texi
@include constants.texi

@c Define new indices.
@defcodeindex op
@defcodeindex fl

@c Put everything in one index (arbitrarily chosen to be the concept index).
@syncodeindex fl cp
@syncodeindex fn cp
@syncodeindex ky cp
@syncodeindex op cp
@syncodeindex pg cp
@syncodeindex vr cp

@dircategory Basics
@direntry
* Coreutils(ja): (coreutils-ja).       Core GNU (file, text, shell) utilities.
* Common options(ja): (coreutils-ja)Common options.      Common options.
* File permissions(ja): (coreutils-ja)File permissions.  Access modes.
* Date input formats(ja): (coreutils-ja)Date input formats.
@end direntry

@dircategory Individual utilities
@direntry
* basename(ja): (coreutils-ja)basename invocation.   Strip directory and suffix.
* cat(ja): (coreutils-ja)cat invocation.             Concatenate and write files.
* chgrp(ja): (coreutils-ja)chgrp invocation.         Change file groups.
* chmod(ja): (coreutils-ja)chmod invocation.         Change file permissions.
* chown(ja): (coreutils-ja)chown invocation.         Change file owners/groups.
* chroot(ja): (coreutils-ja)chroot invocation.       Specify the root directory.
* cksum(ja): (coreutils-ja)cksum invocation.         Print POSIX CRC checksum.
* comm(ja): (coreutils-ja)comm invocation.           Compare sorted files by line.
* cp(ja): (coreutils-ja)cp invocation.               Copy files.
* csplit(ja): (coreutils-ja)csplit invocation.       Split by context.
* cut(ja): (coreutils-ja)cut invocation.             Print selected parts of lines.
* date(ja): (coreutils-ja)date invocation.           Print/set system date and time.
* dd(ja): (coreutils-ja)dd invocation.               Copy and convert a file.
* df(ja): (coreutils-ja)df invocation.               Report filesystem disk usage.
* dir(ja): (coreutils-ja)dir invocation.             List directories briefly.
* dircolors(ja): (coreutils-ja)dircolors invocation. Color setup for ls.
* dirname(ja): (coreutils-ja)dirname invocation.       Strip non-directory suffix.
* du(ja): (coreutils-ja)du invocation.               Report on disk usage.
* echo(ja): (coreutils-ja)echo invocation.           Print a line of text.
* env(ja): (coreutils-ja)env invocation.             Modify the environment.
* expand(ja): (coreutils-ja)expand invocation.       Convert tabs to spaces.
* expr(ja): (coreutils-ja)expr invocation.           Evaluate expressions.
* factor(ja): (coreutils-ja)factor invocation.       Print prime factors
* false(ja): (coreutils-ja)false invocation.         Do nothing, unsuccessfully.
* fmt(ja): (coreutils-ja)fmt invocation.             Reformat paragraph text.
* fold(ja): (coreutils-ja)fold invocation.           Wrap long input lines.
* groups(ja): (coreutils-ja)groups invocation.       Print group names a user is in.
* head(ja): (coreutils-ja)head invocation.           Output the first part of files.
* hostid(ja): (coreutils-ja)hostid invocation.       Print numeric host identifier.
* hostname(ja): (coreutils-ja)hostname invocation.   Print or set system name.
* id(ja): (coreutils-ja)id invocation.               Print real/effective uid/gid.
* install(ja): (coreutils-ja)install invocation.     Copy and change attributes.
* join(ja): (coreutils-ja)join invocation.           Join lines on a common field.
* kill(ja): (coreutils-ja)kill invocation.           Send a signal to processes.
* link(ja): (coreutils-ja)link invocation.           Make hard links between files.
* ln(ja): (coreutils-ja)ln invocation.               Make links between files.
* logname(ja): (coreutils-ja)logname invocation.     Print current login name.
* ls(ja): (coreutils-ja)ls invocation.               List directory contents.
* md5sum(ja): (coreutils-ja)md5sum invocation.       Print or check message-digests.
* mkdir(ja): (coreutils-ja)mkdir invocation.         Create directories.
* mkfifo(ja): (coreutils-ja)mkfifo invocation.       Create FIFOs (named pipes).
* mknod(ja): (coreutils-ja)mknod invocation.         Create special files.
* mv(ja): (coreutils-ja)mv invocation.               Rename files.
* nice(ja): (coreutils-ja)nice invocation.           Modify scheduling priority.
* nl(ja): (coreutils-ja)nl invocation.               Number lines and write files.
* nohup(ja): (coreutils-ja)nohup invocation.         Immunize to hangups.
* od(ja): (coreutils-ja)od invocation.               Dump files in octal, etc.
* paste(ja): (coreutils-ja)paste invocation.         Merge lines of files.
* pathchk(ja): (coreutils-ja)pathchk invocation.     Check file name portability.
* pr(ja): (coreutils-ja)pr invocation.               Paginate or columnate files.
* printenv(ja): (coreutils-ja)printenv invocation.   Print environment variables.
* printf(ja): (coreutils-ja)printf invocation.       Format and print data.
* ptx(ja): (coreutils-ja)ptx invocation.             Produce permuted indexes.
* pwd(ja): (coreutils-ja)pwd invocation.             Print working directory.
* readlink(ja): (coreutils-ja)readlink invocation.   Print referent of a symlink.
* rm(ja): (coreutils-ja)rm invocation.               Remove files.
* rmdir(ja): (coreutils-ja)rmdir invocation.         Remove empty directories.
* seq(ja): (coreutils-ja)seq invocation.             Print numeric sequences
* shred(ja): (coreutils-ja)shred invocation.         Remove files more securely.
* sleep(ja): (coreutils-ja)sleep invocation.         Delay for a specified time.
* sort(ja): (coreutils-ja)sort invocation.           Sort text files.
* split(ja): (coreutils-ja)split invocation.         Split into fixed-size pieces.
* stat(ja): (coreutils-ja)stat invocation.           Report file(system) status.
* stty(ja): (coreutils-ja)stty invocation.           Print/change terminal settings.
* su(ja): (coreutils-ja)su invocation.               Modify user and group id.
* sum(ja): (coreutils-ja)sum invocation.             Print traditional checksum.
* sync(ja): (coreutils-ja)sync invocation.           Synchronize memory and disk.
* tac(ja): (coreutils-ja)tac invocation.             Reverse files.
* tail(ja): (coreutils-ja)tail invocation.           Output the last part of files.
* tee(ja): (coreutils-ja)tee invocation.             Redirect to multiple files.
* test(ja): (coreutils-ja)test invocation.           File/string tests.
* touch(ja): (coreutils-ja)touch invocation.         Change file timestamps.
* tr(ja): (coreutils-ja)tr invocation.               Translate characters.
* true(ja): (coreutils-ja)true invocation.           Do nothing, successfully.
* tsort(ja): (coreutils-ja)tsort invocation.         Topological sort.
* tty(ja): (coreutils-ja)tty invocation.             Print terminal name.
* uname(ja): (coreutils-ja)uname invocation.         Print system information.
* unexpand(ja): (coreutils-ja)unexpand invocation.   Convert spaces to tabs.
* uniq(ja): (coreutils-ja)uniq invocation.           Uniquify files.
* unlink(ja): (coreutils-ja)unlink invocation.       Removal via unlink(2).
* users(ja): (coreutils-ja)users invocation.         Print current user names.
* vdir(ja): (coreutils-ja)vdir invocation.           List directories verbosely.
* wc(ja): (coreutils-ja)wc invocation.               Line, word, and byte counts.
* who(ja): (coreutils-ja)who invocation.             Print who is logged in.
* whoami(ja): (coreutils-ja)whoami invocation.       Print effective user id.
* yes(ja): (coreutils-ja)yes invocation.             Print a string indefinitely.
@end direntry

@copying
This manual documents version @value{VERSION} of the @sc{gnu} core
utilities, including the standard programs for text and file manipulation.

Copyright @copyright{} 1994, 1995, 1996, 2000, 2001, 2002, 2003, 2004
Free Software Foundation, Inc.

@quotation
Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.1 or
any later version published by the Free Software Foundation; with no
Invariant Sections, with no Front-Cover Texts, and with no Back-Cover
Texts.  A copy of the license is included in the section entitled ``GNU
Free Documentation License''.
@end quotation
@end copying

@titlepage
@title @sc{gnu} @code{Coreutils}
@subtitle Core GNU utilities
@subtitle for version @value{VERSION}, @value{UPDATED}
@author David MacKenzie et al.
@c ËÝÌõ¡§À¾Èø ÂÀ
@page
@vskip 0pt plus 1filll
@insertcopying
@end titlepage


@ifnottex
@node Top
@top GNU Coreutils

@insertcopying
@end ifnottex

@cindex core utilities
@cindex text utilities
@cindex shell utilities
@cindex file utilities

@menu
* Introduction::                       Caveats, overview, and authors.
* Common options::                     Common options.
* Output of entire files::             cat tac nl od
* Formatting file contents::           fmt pr fold
* Output of parts of files::           head tail split csplit
* Summarizing files::                  wc sum cksum md5sum
* Operating on sorted files::          sort uniq comm ptx tsort
* Operating on fields within a line::  cut paste join
* Operating on characters::            tr expand unexpand
* Directory listing::                  ls dir vdir d v dircolors
* Basic operations::                   cp dd install mv rm shred
* Special file types::                 ln mkdir rmdir mkfifo mknod
* Changing file attributes::           chgrp chmod chown touch
* Disk usage::                         df du stat sync
* Printing text::                      echo printf yes
* Conditions::                         false true test expr
* Redirection::                        tee
* File name manipulation::             dirname basename pathchk
* Working context::                    pwd stty printenv tty
* User information::                   id logname whoami groups users who
* System context::                     date uname hostname
* Modified command invocation::        chroot env nice nohup su
* Process control::                    kill
* Delaying::                           sleep
* Numeric operations::                 factor seq
* File permissions::                   Access modes.
* Date input formats::                 Specifying date strings.
* Opening the software toolbox::       The software tools philosophy.
* GNU Free Documentation License::     The license for this documentation.
* Index::                              General index.

@detailmenu
@c  --- The Detailed Node Listing ---
@c 
 --- ¾ÜºÙ¤Ê¥Î¡¼¥É¥ê¥¹¥È ---

@c Common Options
@c 
¶¦ÄÌ¤Î¥ª¥×¥·¥ç¥ó

* Exit status::                 Indicating program success or failure.
* Backup options::              Backup options
* Block size::                  Block size
* Target directory::            Target directory
* Trailing slashes::            Trailing slashes
* Traversing symlinks::         Traversing symlinks to directories
* Treating / specially::        Treating / specially
* Standards conformance::       Standards conformance

@c Output of entire files
@c 
¥Õ¥¡¥¤¥ëÁ´ÂÎ¤ò½ÐÎÏ

* cat invocation::              Concatenate and write files.
* tac invocation::              Concatenate and write files in reverse.
* nl invocation::               Number lines and write files.
* od invocation::               Write files in octal or other formats.

@c Formatting file contents
@c 
¥Õ¥¡¥¤¥ë¤ÎÆâÍÆ¤Î½ñ¼°²½

* fmt invocation::              Reformat paragraph text.
* pr invocation::               Paginate or columnate files for printing.
* fold invocation::             Wrap input lines to fit in specified width.

@c Output of parts of files
@c 
¥Õ¥¡¥¤¥ë¤Î°ìÉô¤ò½ÐÎÏ

* head invocation::             Output the first part of files.
* tail invocation::             Output the last part of files.
* split invocation::            Split a file into fixed-size pieces.
* csplit invocation::           Split a file into context-determined pieces.

@c Summarizing files
@c 
¥Õ¥¡¥¤¥ë¤ÎÍ×Ìó

* wc invocation::               Print newline, word, and byte counts.
* sum invocation::              Print checksum and block counts.
* cksum invocation::            Print CRC checksum and byte counts.
* md5sum invocation::           Print or check message-digests.

@c Operating on sorted files
@c 
¥½¡¼¥È¤µ¤ì¤¿¥Õ¥¡¥¤¥ë¤ÎÁàºî

* sort invocation::             Sort text files.
* uniq invocation::             Uniquify files.
* comm invocation::             Compare two sorted files line by line.
* ptx invocation::              Produce a permuted index of file contents.
* tsort invocation::            Topological sort.

@c @command{ptx}: Produce permuted indexes
@c 
@command{ptx}: ÊÂ¤ÙÂØ¤¨¤¿º÷°ú¤ÎÀ¸À®

* General options in ptx::      Options which affect general program behavior.
* Charset selection in ptx::    Underlying character set considerations.
* Input processing in ptx::     Input fields, contexts, and keyword selection.
* Output formatting in ptx::    Types of output format, and sizing the fields.
* Compatibility in ptx::        The GNU extensions to @command{ptx}

@c Operating on fields within a line
@c 
¹Ô¤Î¥Õ¥£¡¼¥ë¥É¤ÎÁàºî

* cut invocation::              Print selected parts of lines.
* paste invocation::            Merge lines of files.
* join invocation::             Join lines on a common field.

@c Operating on characters
@c 
Ê¸»ú¤ÎÁàºî

* tr invocation::               Translate, squeeze, and/or delete characters.
* expand invocation::           Convert tabs to spaces.
* unexpand invocation::         Convert spaces to tabs.

@c @command{tr}: Translate, squeeze, and/or delete characters
@c 
@command{tr}: Ê¸»ú¤òÃÖ´¹¤¹¤ë¡¤¤Þ¤È¤á¤ë¡¤¤½¤·¤Æ/¤Þ¤¿¤Ïºï½ü¤¹¤ë

* Character sets::              Specifying sets of characters.
* Translating::                 Changing one set of characters to another.
* Squeezing::                   Squeezing repeats and deleting.
* Warnings in tr::              Warning messages.

@c Directory listing
@c 
¥Ç¥£¥ì¥¯¥È¥ê¤Î¥ê¥¹¥È¥¢¥Ã¥×

* ls invocation::               List directory contents
* dir invocation::              Briefly list directory contents
* vdir invocation::             Verbosely list directory contents
* dircolors invocation::        Color setup for @command{ls}

@c @command{ls}:  List directory contents
@c 
@command{ls}: ¥Ç¥£¥ì¥¯¥È¥ê¤ÎÆâÍÆ¤ò¥ê¥¹¥È¥¢¥Ã¥×¤¹¤ë

* Which files are listed::      Which files are listed
* What information is listed::  What information is listed
* Sorting the output::          Sorting the output
* More details about version sort::  More details about version sort
* General output formatting::   General output formatting
* Formatting the file names::   Formatting the file names

@c Basic operations
@c 
´ðËÜÁàºî

* cp invocation::               Copy files and directories
* dd invocation::               Convert and copy a file
* install invocation::          Copy files and set attributes
* mv invocation::               Move (rename) files
* rm invocation::               Remove files or directories
* shred invocation::            Remove files more securely

@c Special file types
@c 
ÆÃ¼ì¤Ê¥Õ¥¡¥¤¥ë·Á¼°

* link invocation::             Make a hard link via the link syscall
* ln invocation::               Make links between files
* mkdir invocation::            Make directories
* mkfifo invocation::           Make FIFOs (named pipes)
* mknod invocation::            Make block or character special files
* readlink invocation::         Print the referent of a symbolic link
* rmdir invocation::            Remove empty directories
* unlink invocation::           Remove files via unlink syscall

@c Changing file attributes
@c 
¥Õ¥¡¥¤¥ë¤ÎÂ°À­¤òÊÑ¹¹¤¹¤ë

* chown invocation::            Change file owner and group
* chgrp invocation::            Change group ownership
* chmod invocation::            Change access permissions
* touch invocation::            Change file timestamps

@c Disk usage
@c 
¥Ç¥£¥¹¥¯¤ÎÍøÍÑ¾õ¶·

* df invocation::               Report filesystem disk space usage
* du invocation::               Estimate file space usage
* stat invocation::             Report file or filesystem status
* sync invocation::             Synchronize data on disk with memory

@c Printing text
@c 
¥Æ¥­¥¹¥È¤Î½ÐÎÏ

* echo invocation::             Print a line of text
* printf invocation::           Format and print data
* yes invocation::              Print a string until interrupted

@c Conditions
@c 
¾ò·ïÊ¸

* false invocation::              Do nothing, unsuccessfully
* true invocation::               Do nothing, successfully
* test invocation::               Check file types and compare values
* expr invocation::               Evaluate expressions

@c @command{test}: Check file types and compare values
@c 
@command{test}: ¥Õ¥¡¥¤¥ë·Á¼°¤ÎÄ´ºº¤ÈÃÍ¤ÎÈæ³Ó

* File type tests::               File type tests
* Access permission tests::       Access permission tests
* File characteristic tests::     File characteristic tests
* String tests::                  String tests
* Numeric tests::                 Numeric tests

@c @command{expr}: Evaluate expression
@c 
@command{expr}: ¼°¤ÎÉ¾²Á

* String expressions::         + : match substr index length
* Numeric expressions::        + - * / %
* Relations for expr::         | & < <= = == != >= >
* Examples of expr::           Examples of using @command{expr}

@c Redirection
@c 
¥ê¥À¥¤¥ì¥¯¥È

* tee invocation::               Redirect output to multiple files

@c File name manipulation
@c 
¥Õ¥¡¥¤¥ëÌ¾¤ÎÁàºî

* basename invocation::          Strip directory and suffix from a file name
* dirname invocation::           Strip non-directory suffix from a file name
* pathchk invocation::           Check file name portability

@c Working context
@c 
ºî¶ÈÃæ¤Î¾õ¶·

* pwd invocation::               Print working directory
* stty invocation::              Print or change terminal characteristics
* printenv invocation::          Print all or some environment variables
* tty invocation::               Print file name of terminal on standard input

@c @command{stty}: Print or change terminal characteristics
@c 
@command{stty}: Ã¼Ëö¤ÎÆÃÄ§¤Î½ÐÎÏ¤äÊÑ¹¹

* Control::                     Control settings
* Input::                       Input settings
* Output::                      Output settings
* Local::                       Local settings
* Combination::                 Combination settings
* Characters::                  Special characters
* Special::                     Special settings

@c User information
@c 
¥æ¡¼¥¶¤Î¾ðÊó

* id invocation::                Print real and effective uid and gid
* logname invocation::           Print current login name
* whoami invocation::            Print effective user id
* groups invocation::            Print group names a user is in
* users invocation::             Print login names of users currently logged in
* who invocation::               Print who is currently logged in

@c System context
@c 
¥·¥¹¥Æ¥à¤Î¾õ¶·

* date invocation::              Print or set system date and time
* uname invocation::             Print system information
* hostname invocation::          Print or set system name
* hostid invocation::            Print numeric host identifier.

@c @command{date}: Print or set system date and time
@c 
@command{date}: ¥·¥¹¥Æ¥à¤ÎÆü»þ¤Î½ÐÎÏ¤ÈÀßÄê

* Time directives::              Time directives
* Date directives::              Date directives
* Literal directives::           Literal directives
* Padding::                      Padding
* Setting the time::             Setting the time
* Options for date::             Options for @command{date}
* Examples of date::             Examples of @command{date}

@c Modified command invocation
@c 
¥³¥Þ¥ó¥É¤Î¸Æ¤Ó½Ð¤·¤ò½¤Àµ

* chroot invocation::            Run a command with a different root directory
* env invocation::               Run a command in a modified environment
* nice invocation::              Run a command with modified scheduling priority
* nohup invocation::             Run a command immune to hangups
* su invocation::                Run a command with substitute user and group id

@c Process control
@c 
¥×¥í¥»¥¹À©¸æ

* kill invocation::              Sending a signal to processes.

@c Delaying
@c 
ÃÙ±ä

* sleep invocation::             Delay for a specified time

@c Numeric operations
@c 
¿ô³ØÅªÁàºî

* factor invocation::            Print prime factors
* seq invocation::               Print numeric sequences

@c File permissions
@c 
¥Õ¥¡¥¤¥ë¤Îµö²Ä

* Mode Structure::               Structure of File Permissions
* Symbolic Modes::               Mnemonic permissions representation
* Numeric Modes::                Permissions as octal numbers

@c Date input formats
@c 
ÆüÉÕ¤ÎÆþÎÏ½ñ¼°

* General date syntax:           General date syntax
* Calendar date items:           Calendar date items
* Time of day items:             Time of day items
* Time zone items:               Time zone items
* Day of week items:             Day of week items
* Relative items in date strings:  Relative items in date strings
* Pure numbers in date strings:  Pure numbers in date strings
* Authors of getdate:            Authors of getdate

@c Opening the software toolbox
@c 
¥½¥Õ¥È¥¦¥§¥¢¥Ä¡¼¥ë¥Ü¥Ã¥¯¥¹¤ò³«¤¯

* Toolbox introduction::         Toolbox introduction
* I/O redirection::              I/O redirection
* The who command::              The @command{who} command
* The cut command::              The @command{cut} command
* The sort command::             The @command{sort} command
* The uniq command::             The @command{uniq} command
* Putting the tools together::   Putting the tools together

GNU Free Documentation License

* How to use this License for your documents::

@end detailmenu
@end menu


@node Introduction
@c @chapter Introduction
@chapter ¤Ï¤¸¤á¤Ë

@c This manual is a work in progress: many sections make no attempt to explain
@c basic concepts in a way suitable for novices.  Thus, if you are interested,
@c please get involved in improving this manual.  The entire @sc{gnu} community
@c will benefit.
@c 
¤³¤Î¥Þ¥Ë¥å¥¢¥ë¤Ïºî¶ÈÃæ¤Ç¤¹¡¥½é¿´¼Ô¤ËÅ¬¤·¤¿ÊýË¡¤Ç¡¤´ðËÜÅª¤Ê³µÇ°¤òÀâÌÀ¤·
¤è¤¦¤È¤·¤Æ¤¤¤Ê¤¤¥»¥¯¥·¥ç¥ó¤â¤¿¤¯¤µ¤ó¤¢¤ê¤Þ¤¹¡¥¤½¤Î¤¿¤á¡¤¶½Ì£¤¬¤¢¤ì¤Ð¤³
¤Î¥Þ¥Ë¥å¥¢¥ë¤Î²þÁ±¤Ë»²²Ã¤·¤Æ¤¯¤À¤µ¤¤¡¥@sc{gnu}¥³¥ß¥å¥Ë¥Æ¥£Á´ÂÎ¤¬Íø±×¤ò
ÆÀ¤ë¤Ç¤·¤ç¤¦¡¥

@cindex @acronym{POSIX}
@c The @sc{gnu} utilities documented here are mostly compatible with the
@c @acronym{POSIX} standard.
@c 
¥Ð¥°¤ò@email{bug-coreutils@@gnu.org}¤ËÊó¹ð¤·¤Æ¤¯¤À¤µ¤¤¡¥
@cindex bugs, reporting
@c Please report bugs to @email{bug-coreutils@@gnu.org}.  Remember
@c to include the version number, machine architecture, input files, and
@c any other information needed to reproduce the bug: your input, what you
@c expected, what you got, and why it is wrong.  Diffs are welcome, but
@c please include a description of the problem as well, since this is
@c sometimes difficult to infer. @xref{Bugs, , , gcc, Using and Porting GNU CC}.
@c 
¥Ð¡¼¥¸¥ç¥ó¥Ê¥ó¥Ð¡¼¡¤¥Þ¥·¥ó¥¢¡¼¥­¥Æ¥¯¥Á¥ã¡¤ÆþÎÏ¥Õ¥¡¥¤¥ë¡¤¤½¤·¤Æ¥Ð¥°¤ÎºÆ
¸½¤ËÉ¬Í×¤Ê¤½¤ÎÂ¾¤Î¤¢¤é¤æ¤ë¾ðÊó´Þ¤á¤ë¤³¤È¤òËº¤ì¤Ê¤¤¤Ç¤¯¤À¤µ¤¤¡¥ÆþÎÏ¡¤´ü
ÂÔ¤·¤¿¤â¤Î¡¤ÆÀ¤¿¤â¤Î¡¤¤½¤·¤Æ´Ö°ã¤Ã¤Æ¤¤¤ëÍýÍ³¤Ç¤¹¡¥º¹Ê¬¤Ï´¿·Þ¤·¤Þ¤¹¤¬¡¤
¿äÂ¬¤¬Æñ¤·¤¤¤È¤­¤â¤¢¤ë¤Î¤Ç¡¤ÌäÂê¤Îµ­½Ò¤â´Þ¤á¤Æ¤¯¤À¤µ¤¤¡¥@xref{Bugs, ,
, gcc, Using and Porting GNU CC}.

@cindex Berry, K.
@cindex Paterson, R.
@cindex Stallman, R.
@cindex Pinard, F.
@cindex MacKenzie, D.
@cindex Meyering, J.
@cindex Youmans, B.
@c This manual was originally derived from the Unix man pages in the
@c distributions, which were written by David MacKenzie and updated by Jim
@c Meyering.  What you are reading now is the authoritative documentation
@c for these utilities; the man pages are no longer being maintained.  The
@c original @command{fmt} man page was written by Ross Paterson.  Fran@,{c}ois
@c Pinard did the initial conversion to Texinfo format.  Karl Berry did the
@c indexing, some reorganization, and editing of the results.  Brian
@c Youmans of the Free Software Foundation office staff combined the
@c manuals for textutils, fileutils, and sh-utils to produce the present
@c omnibus manual.  Richard Stallman contributed his usual invaluable
@c insights to the overall process.
@c 
¤³¤Î¥Þ¥Ë¥å¥¢¥ë¤ÏÇÛÉÛÊª¤ÎUNIX man page¤ò¸µ¤Ë¤·¤Æ¤¤¤Æ¡¤¤½¤ì¤Ï¡¤¸µ¡¹David
MacKenzie¤Ë¤è¤Ã¤Æ½ñ¤«¤ì¡¤Jim Meyering¤Ë¤è¤Ã¤Æ¹¹¿·¤µ¤ì¤Þ¤·¤¿¡¥¸½ºßÆÉ¤ó
¤Ç¤¤¤ë¤â¤Î¤Ï¡¤¤³¤ì¤é¤Î¥æ¡¼¥Æ¥£¥ê¥Æ¥£¤Î¸¢°Ò¤Î¤¢¤ë¥É¥­¥å¥á¥ó¥È¤Ç¤¹¡¥man
page¤Ï¡¤´û¤Ë´ÉÍý¤µ¤ì¤Æ¤¤¤Þ¤»¤ó¡¥¸µ¤È¤Ê¤ë@command{fmt}¤Îman page¤Ï¡¤
Ross Paterson¤Ë¤è¤Ã¤Æ½ñ¤«¤ì¤Þ¤·¤¿¡¥Fran@,{c}ois Pinard¤Ï¡¤Texinfo½ñ¼°
¤Ø¤ÎºÇ½é¤ÎÊÑ´¹¤ò¹Ô¤¤¤Þ¤·¤¿¡¥Karl Berry¤Ïº÷°ú¤ÎÄÉ²Ã¡¤¤¤¤¯¤Ä¤«¤ÎºÆÊÔÀ®¡¤
¤½¤·¤Æ·ë²Ì¤ÎÊÔ½¸¤ò¹Ô¤¤¤Þ¤·¤¿¡¥Free Software Foundation¤Î»öÌ³½ê¤Î¥¹¥¿¥Ã
¥ÕBrian Youmans¤Ï¡¤¸½ºß¤Î¥ª¥à¥Ë¥Ð¥¹¤Î¥Þ¥Ë¥å¥¢¥ë¤òÀ¸À®¤¹¤ë¤¿¤á¡¤
textutils¡¤fileutils¡¤¤½¤·¤Æsh-utils¤Î¥Þ¥Ë¥å¥¢¥ë¤òÅý¹ç¤·¤Þ¤·¤¿¡¥
Richard Stallman¤Ï¡¤Á´ÂÎÅª¤Ê¥×¥í¥»¥¹¤Ë¡¤Èà¤Î¤¤¤Ä¤â¤Îµ®½Å¤ÊÆ¶»¡¤ò´ó¹Æ¤·
¤Þ¤·¤¿¡¥

@node Common options
@c @chapter Common options
@chapter ¶¦ÄÌ¤Î¥ª¥×¥·¥ç¥ó

@macro optBackup
@item -b
@itemx @w{@kbd{--backup}[=@var{method}]}
@opindex -b
@opindex --backup
@vindex VERSION_CONTROL
@cindex backups, making
@xref{Backup options}.
@c Make a backup of each file that would otherwise be overwritten or removed.
@c 
¾å½ñ¤­¤µ¤ì¤¿¤êºï½ü¤µ¤ì¤¿¤ê¤¹¤ë¤½¤ì¤¾¤ì¤Î¥Õ¥¡¥¤¥ë¤Î¥Ð¥Ã¥¯¥¢¥Ã¥×¤òºîÀ®¤·
¤Þ¤¹¡¥
@end macro

@macro optBackupSuffix
@item -S @var{suffix}
@itemx --suffix=@var{suffix}
@opindex -S
@opindex --suffix
@c Append @var{suffix} to each backup file made with @option{-b}.
@c @xref{Backup options}.
@c 
@option{-b}¤ÇºîÀ®¤µ¤ì¤ë¤½¤ì¤¾¤ì¤Î¥Ð¥Ã¥¯¥¢¥Ã¥×¥Õ¥¡¥¤¥ëÌ¾¤Ë¡¤
@var{suffix}¤òÄÉ²Ã¤·¤Þ¤¹¡¥@xref{Backup options}.
@end macro

@macro optTargetDirectory
@itemx @w{@kbd{--target-directory}=@var{directory}}
@opindex --target-directory
@cindex target directory
@cindex destination directory
@c Specify the destination @var{directory}.
@c @xref{Target directory}.
@c 
°ÜÆ°(¥³¥Ô¡¼)Àè¤Î@var{directory}¤ò»ØÄê¤·¤Þ¤¹¡¥@xref{Target directory}.
@end macro

@macro optSi
@itemx --si
@opindex --si
@cindex SI output
@c Append an SI-style abbreviation to each size, such as @samp{MB} for
@c megabytes.  Powers of 1000 are used, not 1024; @samp{MB} stands for
@c 1,000,000 bytes.  This option is equivalent to
@c @option{--block-size=si}.  Use the @option{-h} or
@c @option{--human-readable} option if
@c you prefer powers of 1024.
@c 
¥á¥¬¥Ð¥¤¥È¤ËÂÐ¤¹¤ë@samp{MB}¤Î¤è¤¦¤Ê¡¤SI·Á¼°¤Î¥µ¥¤¥º¤ÎÎ¬¸ì¤òÄÉ²Ã¤·¤Þ¤¹¡¥
1024ÇÜ¤Ç¤Ï¤Ê¤¯1000ÇÜ¤¬»ÈÍÑ¤µ¤ì¤Þ¤¹¡¥@samp{MB}¤Ï1,000,000¥Ð¥¤¥È¤ò°ÕÌ£¤·
¤Þ¤¹¡¥¤³¤Î¥ª¥×¥·¥ç¥ó¤Ï¡¤@option{--block-size=si}¤ÈÅù²Á¤Ç¤¹¡¥1024ÇÜ¤òË¾
¤à¾ì¹ç¡¤@option{-h}¤Þ¤¿¤Ï@option{--human-readable}¥ª¥×¥·¥ç¥ó¤ò»ÈÍÑ¤·¤Æ
¤¯¤À¤µ¤¤¡¥
@end macro

@macro optHumanReadable
@item -h
@itemx --human-readable
@opindex -h
@opindex --human-readable
@cindex human-readable output
@c Append a size letter to each size, such as @samp{M} for mebibytes.
@c Powers of 1024 are used, not 1000; @samp{M} stands for 1,048,576 bytes.
@c Use the @option{--si} option if you prefer powers of 1000.
@c 
¥á¥Ó¥Ð¥¤¥È¤ËÂÐ¤¹¤ë@samp{M}¤Î¤è¤¦¤Ê¡¤¥µ¥¤¥ºÊ¸»ú¤òÄÉ²Ã¤·¤Þ¤¹¡¥1000ÇÜ¤Ç¤Ï
¤Ê¤¯1024ÇÜ¤¬»ÈÍÑ¤µ¤ì¤Þ¤¹¡¥@samp{M}¤Ï1,048,576¥Ð¥¤¥È¤ò°ÕÌ£¤·¤Þ¤¹¡¥1000 
ÇÜ¤òË¾¤à¾ì¹ç¡¤@option{--si}¥ª¥×¥·¥ç¥ó¤ò»ÈÍÑ¤·¤Æ¤¯¤À¤µ¤¤¡¥
@end macro

@macro optStripTrailingSlashes
@itemx @w{@kbd{--strip-trailing-slashes}}
@opindex --strip-trailing-slashes
@cindex stripping trailing slashes
@c Remove any trailing slashes from each @var{source} argument.
@c @xref{Trailing slashes}.
@c 
¤½¤ì¤¾¤ì¤Î@var{source}°ú¿ô¤«¤é¡¤¸åÃÖ¤µ¤ì¤ë¥¹¥é¥Ã¥·¥å¤òºï½ü¤·¤Þ¤¹¡¥
@xref{Trailing slashes}.
@end macro

@macro optVersionControl
@item -V @var{method}
@itemx --version-control=@var{method}
@opindex -V
@opindex --version-control
@c Change the type of backups made with @option{-b}.  The @var{method}
@c argument can be @samp{none} (or @samp{off}), @samp{numbered} (or
@c @samp{t}), @samp{existing} (or @samp{nil}), or @samp{never} (or
@c @samp{simple}).  @xref{Backup options}.
@c 
@option{-b}¤ÇºîÀ®¤¹¤ë¥Ð¥Ã¥¯¥¢¥Ã¥×¤Î·Á¼°¤òÊÑ¹¹¤·¤Þ¤¹¡¥@var{method}°ú¿ô
¤Ï¡¤@samp{none} (¤Þ¤¿¤Ï@samp{off})¡¤@samp{numbered} (¤Þ¤¿¤Ï@samp{t})¡¤
@samp{existing} (¤Þ¤¿¤Ï@samp{nil})¡¤¤Þ¤¿¤Ï@samp{never} (¤Þ¤¿¤Ï
@samp{simple})¤¬ÍøÍÑ²ÄÇ½¤Ç¤¹¡¥@xref{Backup options}.
@end macro

@cindex common options

@c Certain options are available in all of these programs.  Rather than
@c writing identical descriptions for each of the programs, they are
@c described here.  (In fact, every @sc{gnu} program accepts (or should accept)
@c these options.)
@c 
ÆÃÄê¤Î¥ª¥×¥·¥ç¥ó¤Ï¡¤°Ê²¼¤Î¤¹¤Ù¤Æ¤Î¥×¥í¥°¥é¥à¤ÇÍøÍÑ²ÄÇ½¤Ç¤¹¡¥¤½¤ì¤¾¤ì¤Î
¥×¥í¥°¥é¥à¤ÇÆ±°ì¤Îµ­½Ò¤ò½ñ¤¯Âå¤ï¤ê¤Ë°Ê²¼¤Çµ­½Ò¤·¤Þ¤¹¡¥(¼ÂºÝ¡¤¤¹¤Ù¤Æ¤Î
@sc{gnu}¥×¥í¥°¥é¥à¤¬¡¤¤³¤ì¤é¤Î¥ª¥×¥·¥ç¥ó¤ò¼õ¤±Æþ¤ì¤ë(¤¢¤ë¤¤¤Ï¼õ¤±Æþ¤ì
¤ë¤Ù¤­)¤Ç¤¹¡¥)

@vindex POSIXLY_CORRECT
@c Normally options and operands can appear in any order, and programs act
@c as if all the options appear before any operands.  For example,
@c @samp{sort -r passwd -t :} acts like @samp{sort -r -t : passwd}, since
@c @samp{:} is an option-argument of @option{-t}.  However, if the
@c @env{POSIXLY_CORRECT} environment variable is set, options must appear
@c before operands, unless otherwise specified for a particular command.
@c 
ÄÌ¾ï¡¤¥ª¥×¥·¥ç¥ó¤È¥ª¥Ú¥é¥ó¥É¤ÏÇ¤°Õ¤Î½ç½ø¤Ç½ñ¤¯¤³¤È¤¬²ÄÇ½¤Ç¡¤¥×¥í¥°¥é¥à¤Ï
¤¹¤Ù¤Æ¤Î¥ª¥×¥·¥ç¥ó¤¬¤¢¤é¤æ¤ë¥ª¥Ú¥é¥ó¥É¤ÎÁ°¤Ë½ñ¤«¤ì¤Æ¤¤¤ë¤«¤Î¤è¤¦¤ËÆ°ºî¤·
¤Þ¤¹¡¥Îã¤¨¤Ð¡¤@samp{sort -r passwd -t :}¤Ï@samp{sort -r -t : passwd}¤Î¤è
¤¦¤ËÆ°ºî¤·¡¤¤½¤ì¤Ï@samp{:}¤¬@option{-t}¤Î¥ª¥×¥·¥ç¥ó°ú¿ô¤Ç¤¢¤ë¤¿¤á¤Ç¤¹¡¥
¤·¤«¤·¡¤@env{POSIXLY_CORRECT}´Ä¶­ÊÑ¿ô¤¬ÀßÄê¤µ¤ì¤Æ¤¤¤ë¾ì¹ç¡¤ÆÃÄê¤Î¥³¥Þ¥ó
¥É¤Ç»ØÄê¤Ê¤¤¾ì¹ç¡¤¥ª¥×¥·¥ç¥ó¤ò¥ª¥Ú¥é¥ó¥É¤ÎÁ°¤Ë½ñ¤¯É¬Í×¤¬¤¢¤ê¤Þ¤¹¡¥

@c Some of these programs recognize the @option{--help} and @option{--version}
@c options only when one of them is the sole command line argument.
@c 
¤³¤ì¤é¤Î¥×¥í¥°¥é¥à¤Ë¤Ï¡¤@option{--help}¤È@option{--version}¤¬Ã±°ì¤Î¥³
¥Þ¥ó¥É¥é¥¤¥ó°ú¿ô¤Î¤È¤­¤À¤±¡¤¤½¤ì¤òÇ§¼±¤¹¤ë¤â¤Î¤â¤¢¤ê¤Þ¤¹¡¥

@table @samp

@item --help
@opindex --help
@cindex help, online
@c Print a usage message listing all available options, then exit successfully.
@c 
¤¹¤Ù¤Æ¤ÎÍøÍÑ²ÄÇ½¤Ê¥ª¥×¥·¥ç¥ó¤ò¥ê¥¹¥È¥¢¥Ã¥×¤·¤¿»ÈÍÑÊýË¡¤Î¥á¥Ã¥»¡¼¥¸¤ò½Ð
ÎÏ¤·¡¤Àµ¤·¤¯½ªÎ»¤·¤Þ¤¹¡¥

@item --version
@opindex --version
@cindex version number, finding
@c Print the version number, then exit successfully.
@c 
¥Ð¡¼¥¸¥ç¥ó¥Ê¥ó¥Ð¡¼¤ò½ÐÎÏ¤·¤Æ¡¤Àµ¤·¤¯½ªÎ»¤·¤Þ¤¹¡¥

@item --
@opindex --
@cindex option delimiter
@c Delimit the option list.  Later arguments, if any, are treated as
@c operands even if they begin with @samp{-}.  For example, @samp{sort --
@c -r} reads from the file named @file{-r}.
@c 
¥ª¥×¥·¥ç¥ó¥ê¥¹¥È¤ò¶èÀÚ¤ê¤Þ¤¹¡¥¤½¤ì°Ê¹ß¤Î°ú¿ô¤Ï²¿¤Ç¤¢¤í¤¦¤È¡¤¤¿¤È¤¨
@samp{-}¤Ç»Ï¤Þ¤ë¾ì¹ç¤Ç¤â¥ª¥Ú¥é¥ó¥É¤È¤·¤Æ°·¤ï¤ì¤Þ¤¹¡¥Îã¤¨¤Ð¡¤@samp{sort
-- -r}¤Ï@file{-r}¤È¤¤¤¦Ì¾Á°¤Î¥Õ¥¡¥¤¥ë¤«¤éÆÉ¤ß¹þ¤ß¤Þ¤¹¡¥

@end table

@cindex standard input
@cindex standard output
@c A single @samp{-} is not really an option, though it looks like one.  It
@c stands for standard input, or for standard output if that is clear from
@c the context, and it can be used either as an operand or as an
@c option-argument.  For example, @samp{sort -o - -} outputs to standard
@c output and reads from standard input, and is equivalent to plain
@c @samp{sort}.  Unless otherwise specified, @samp{-} can appear in any
@c context that requires a file name.
@c 
Ã±°ì¤Î@samp{-}¤Ï¡¤¥ª¥×¥·¥ç¥ó¤Î¤è¤¦¤Ë¸«¤¨¤Æ¤âËÜÅö¤Î¥ª¥×¥·¥ç¥ó¤Ç¤Ï¤¢¤ê¤Þ
¤»¤ó¡¥¾õ¶·¤«¤éÌÀ¤é¤«¤Ê¾ì¹ç¤Ï¡¤¤½¤ì¤ÏÉ¸½àÆþÎÏ¤äÉ¸½à½ÐÎÏ¤ò°ÕÌ£¤·¡¤¥ª¥Ú¥é
¥ó¥É¤ä¥ª¥×¥·¥ç¥ó°ú¿ô¤È¤·¤Æ»ÈÍÑ²ÄÇ½¤Ç¤¹¡¥Îã¤¨¤Ð¡¤@samp{sort -o - -}¤ÏÉ¸
½à½ÐÎÏ¤Ë½ñ¤­½Ð¤·¡¤É¸½àÆþÎÏ¤«¤éÆÉ¤ß¹þ¤ß¡¤¤½¤·¤Æ¤½¤ì¤ÏÃ±¤Ê¤ë
@command{sort}¤ÈÅù²Á¤Ç¤¹¡¥Â¾¤Ç»ØÄê¤µ¤ì¤Ê¤¤¸Â¤ê¡¤¥Õ¥¡¥¤¥ëÌ¾¤¬Í×µá¤µ¤ì¤ë
¤¢¤é¤æ¤ë¾õ¶·¤Ç@samp{-}¤ò½ñ¤¯¤³¤È¤¬²ÄÇ½¤Ç¤¹¡¥

@menu
* Exit status::                 Indicating program success or failure.
* Backup options::              -b -S -V, in some programs.
* Block size::                  BLOCK_SIZE and --block-size, in some programs.
* Target directory::            --target-directory, in some programs.
* Trailing slashes::            --strip-trailing-slashes, in some programs.
* Traversing symlinks::         -H, -L, or -P, in some programs.
* Treating / specially::        --preserve-root and --no-preserve-root.
* Standards conformance::       Conformance to the @acronym{POSIX} standard.
@end menu


@node Exit status
@c @section Exit status
@section ½ªÎ»¥¹¥Æ¡¼¥¿¥¹

@macro exitstatus
@c An exit status of zero indicates success,
@c and a nonzero value indicates failure.
@c 
½ªÎ»¥¹¥Æ¡¼¥¿¥¹¤Î¥¼¥í¤ÏÀ®¸ù¤ò¼¨¤·¡¤¥¼¥í°Ê³°¤ÎÃÍ¤Ï¼ºÇÔ¤ò¼¨¤·¤Þ¤¹¡¥
@end macro

@c Nearly every command invocation yields an integral @dfn{exit status}
@c that can be used to change how other commands work.
@c For the vast majority of commands, an exit status of zero indicates
@c success.  Failure is indicated by a nonzero value---typically
@c @samp{1}, though it may differ on unusual platforms as @acronym{POSIX}
@c requires only that it be nonzero.
@c 
¤Û¤È¤ó¤É¤¹¤Ù¤Æ¤Î¥³¥Þ¥ó¥É¤Î¸Æ¤Ó½Ð¤·¤Ï¡¤Â¾¤Î¥³¥Þ¥ó¥É¤ÎÆ°ºî¤òÊÑ¹¹¤¹¤ë¤¿¤á
¤Ë¤·¤è¤¦²ÄÇ½¤Ê¡¤Àµµ¬¤Î@dfn{½ªÎ»¥¹¥Æ¡¼¥¿¥¹(exit status)}¤òÀ¸À®¤·¤Þ¤¹¡¥
¥³¥Þ¥ó¥É¤ÎÂçÈ¾¤Ï¡¤¥¼¥í¤Î½ªÎ»¥¹¥Æ¡¼¥¿¥¹¤ÏÀ®¸ù¤ò¼¨¤·¤Þ¤¹¡¥¼ºÇÔ¤Ï¥¼¥í°Ê³°
¤ÎÃÍ¤Ç¼¨¤µ¤ì¤Þ¤¹---ÄÌ¾ï¤Ï@samp{1}¤Ç¤¹¤¬¡¤@acronym{POSIX}¤Ç¤Ï¥¼¥í°Ê³°¤Ç
¤¢¤ë¤³¤È¤òÍ×µá¤·¤Æ¤¤¤ë¤À¤±¤Ê¤Î¤Ç¡¤ÆÈÆÃ¤Î¥×¥é¥Ã¥È¥Õ¥©¡¼¥à¤Ç¤Ï°ã¤¦²ÄÇ½À­
¤¬¤¢¤ê¤Þ¤¹¡¥

@c However, some of the programs documented here do produce
@c other exit status values and a few associate different
@c meanings with the values @samp{0} and @samp{1}.
@c Here are some of the exceptions:
@c @command{chroot}, @command{env}, @command{expr},
@c @command{nice}, @command{nohup}, @command{printenv},
@c @command{sort}, @command{su}, @command{test}, @command{tty}.
@c 
¤·¤«¤·¡¤°Ê²¼¤ÇÀâÌÀ¤µ¤ì¤Æ¤¤¤ë¥×¥í¥°¥é¥à¤Ë¤Ï¡¤¤½¤ì°Ê³°¤Î½ªÎ»¥¹¥Æ¡¼¥¿¥¹¤Î
ÃÍ¤òÀ¸À®¤¹¤ë¤â¤Î¤ä¡¤@samp{0}¤È@samp{1}¤ÎÃÍ¤ËÊÌ¤Î°ÕÌ£¤ò³ä¤êÅö¤Æ¤Æ¤¤¤ë¤â
¤Î¤â¤¢¤ê¤Þ¤¹¡¥Îã³°¤Ï°Ê²¼¤ÎÄÌ¤ê¤Ç¤¹¡¥@command{chroot}, @command{env},
@command{expr}, @command{nice}, @command{nohup}, @command{printenv},
@command{sort}, @command{su}, @command{test}, @command{tty}.


@node Backup options
@c @section Backup options
@section ¥Ð¥Ã¥¯¥¢¥Ã¥×¥ª¥×¥·¥ç¥ó

@cindex backup options

@c Some @sc{gnu} programs (at least @command{cp}, @command{install},
@c @command{ln}, and @command{mv}) optionally make backups of files
@c before writing new versions.
@c These options control the details of these backups.  The options are also
@c briefly mentioned in the descriptions of the particular programs.
@c 
@sc{gnu}¥×¥í¥°¥é¥à¤Ë¤Ï(¾¯¤Ê¤¯¤È¤â¡¤@command{cp}¡¤@command{install}¡¤
@command{ln}¡¤¤½¤·¤Æ@command{mv}¤Ë¤Ï)¥ª¥×¥·¥ç¥ó¤Ç¡¤¿·¤·¤¤¥Ð¡¼¥¸¥ç¥ó¤Î
¥Õ¥¡¥¤¥ë¤ò½ñ¤­½Ð¤¹Á°¤Ë¡¤¥Õ¥¡¥¤¥ë¤Î¥Ð¥Ã¥¯¥¢¥Ã¥×¤òºîÀ®¤¹¤ë¤â¤Î¤â¤¢¤ê¤Þ¤¹¡¥
°Ê²¼¤Î¥ª¥×¥·¥ç¥ó¤Ï¡¤¤³¤ì¤é¤Î¥Ð¥Ã¥¯¥¢¥Ã¥×¤òºÙ¤«¤¯À©¸æ¤·¤Þ¤¹¡¥¥ª¥×¥·¥ç¥ó
¤Ï¡¤ÆÃÄê¤Î¥×¥í¥°¥é¥à¤ÎÀâÌÀ¤Ç¤â´ÊÃ±¤Ëµ­½Ò¤·¤Þ¤¹¡¥

@table @samp

@item -b
@itemx @w{@kbd{--backup}[=@var{method}]}
@opindex -b
@opindex --backup
@vindex VERSION_CONTROL
@cindex backups, making
@c Make a backup of each file that would otherwise be overwritten or removed.
@c Without this option, the original versions are destroyed.
@c Use @var{method} to determine the type of backups to make.
@c When this option is used but @var{method} is not specified,
@c then the value of the @env{VERSION_CONTROL}
@c environment variable is used.  And if @env{VERSION_CONTROL} is not set,
@c the default backup type is @samp{existing}.
@c 
¥Ð¥Ã¥¯¥¢¥Ã¥×¤òºîÀ®¤·¤Ê¤¤¤È¾å½ñ¤­¤µ¤ì¤¿¤êºï½ü¤µ¤ì¤¿¤ê¤¹¤ë¤½¤ì¤¾¤ì¤Î¥Õ¥¡
¥¤¥ë¤Î¥Ð¥Ã¥¯¥¢¥Ã¥×¤òºîÀ®¤·¤Þ¤¹¡¥¤³¤Î¥ª¥×¥·¥ç¥ó¤òÍÑ¤¤¤Ê¤¤¤È¡¤¥ª¥ê¥¸¥Ê¥ë
¤Î¥Ð¡¼¥¸¥ç¥ó¤ÏÇË´þ¤µ¤ì¤Þ¤¹¡¥ºîÀ®¤¹¤ë¥Ð¥Ã¥¯¥¢¥Ã¥×¤Î·Á¼°¤ò·èÄê¤¹¤ë¤¿¤á¤Ë¡¤
@var{method}¤ò»ÈÍÑ¤·¤Æ¤¯¤À¤µ¤¤¡¥¤³¤Î¥ª¥×¥·¥ç¥ó¤¬»ÈÍÑ¤µ¤ì¤Æ¤¤¤Æ¡¤
@var{method}¤¬»ØÄê¤µ¤ì¤Æ¤¤¤Ê¤¤¤È¤­¡¤@env{VERSION_CONTROL}´Ä¶­ÊÑ¿ô¤ÎÃÍ
¤¬»ÈÍÑ¤µ¤ì¤Þ¤¹¡¥¤½¤·¤Æ@env{VERSION_CONTROL}¤¬ÀßÄê¤µ¤ì¤Æ¤¤¤Ê¤¤¾ì¹ç¤Ï¡¤
¥Ç¥Õ¥©¥ë¥È¤Î¥Ð¥Ã¥¯¥¢¥Ã¥×·Á¼°¤Ï@samp{existing}¤Ë¤Ê¤ê¤Þ¤¹¡¥

@c Note that the short form of this option, @option{-b} does not accept any
@c argument.  Using @option{-b} is equivalent to using @option{--backup=existing}.
@c 
¤³¤Î¥ª¥×¥·¥ç¥ó¤ÎÃ»¤¤·Á¼°@option{-b}¤Ï¡¤°ú¿ô¤òÁ´¤¯¼õ¤±Æþ¤ì¤Ê¤¤¤³¤È¤ËÃí
°Õ¤·¤Æ¤¯¤À¤µ¤¤¡¥@option{-b}¤Î»ÈÍÑ¤Ï¡¤@option{--backup=existing}¤Î»ÈÍÑ
¤ÈÅù²Á¤Ç¤¹¡¥

@vindex version-control @r{Emacs variable}
@c This option corresponds to the Emacs variable @samp{version-control};
@c the values for @var{method} are the same as those used in Emacs.
@c This option also accepts more descriptive names.
@c The valid @var{method}s are (unique abbreviations are accepted):
@c 
¤³¤Î¥ª¥×¥·¥ç¥ó¤Ï¡¤EmacsÊÑ¿ô¤Î@samp{version-control}¤ËÂÐ±þ¤·¤Þ¤¹¡¥
@var{method}¤ËÂÐ¤¹¤ëÃÍ¤Ï¡¤Emacs¤Ç»ÈÍÑ¤µ¤ì¤ë¤â¤Î¤ÈÆ±¤¸¤Ç¤¹¡¥¤³¤Î¥ª¥×¥·¥ç
¥ó¤â¡¤¤è¤êµ­½ÒÅª¤ÊÌ¾Á°¤ò¼õ¤±Æþ¤ì¤Þ¤¹¡¥Í­¸ú¤Ê@var{method}¤Ï°Ê²¼¤ÎÄÌ¤ê¤Ç
¤¹(¥æ¥Ë¡¼¥¯¤Ë¼±ÊÌ¤Ç¤­¤ë¾ÊÎ¬¤â¼õ¤±Æþ¤ì¤Þ¤¹)¡¥

@table @samp
@item none
@itemx off
@opindex none @r{backup method}
@c Never make backups.
@c 
¥Ð¥Ã¥¯¥¢¥Ã¥×¤òºîÀ®¤·¤Þ¤»¤ó¡¥

@item numbered
@itemx t
@opindex numbered @r{backup method}
@c Always make numbered backups.
@c 
¾ï¤ËÈÖ¹æÉÕ¤Î¥Ð¥Ã¥¯¥¢¥Ã¥×¤òºîÀ®¤·¤Þ¤¹¡¥

@item existing
@itemx nil
@opindex existing @r{backup method}
@c Make numbered backups of files that already have them, simple backups
@c of the others.
@c 
´û¤ËÈÖ¹æÉÕ¤Î¥Ð¥Ã¥¯¥¢¥Ã¥×¥Õ¥¡¥¤¥ë¤¬¤¢¤ë¾ì¹ç¡¤ÈÖ¹æÉÕ¤Î¥Ð¥Ã¥¯¥¢¥Ã¥×¤òºîÀ®
¤·¡¤¤½¤ì°Ê³°¤Ç¤ÏÃ±½ã¤Ë¥Ð¥Ã¥¯¥¢¥Ã¥×¤·¤Þ¤¹¡¥

@item simple
@itemx never
@opindex simple @r{backup method}
@c Always make simple backups.  Please note @samp{never} is not to be
@c confused with @samp{none}.
@c 
¾ï¤ËÃ±½ã¤Ê¥Ð¥Ã¥¯¥¢¥Ã¥×¤òºîÀ®¤·¤Þ¤¹¡¥@samp{never}¤È@samp{none}¤òº®Æ±¤·
¤Ê¤¤¤è¤¦¤ËÃí°Õ¤·¤Æ¤¯¤À¤µ¤¤¡¥

@end table

@item -S @var{suffix}
@itemx --suffix=@var{suffix}
@opindex -S
@opindex --suffix
@cindex backup suffix
@vindex SIMPLE_BACKUP_SUFFIX
@c Append @var{suffix} to each backup file made with @option{-b}.  If this
@c option is not specified, the value of the @env{SIMPLE_BACKUP_SUFFIX}
@c environment variable is used.  And if @env{SIMPLE_BACKUP_SUFFIX} is not
@c set, the default is @samp{~}, just as in Emacs.
@c 
@option{-b}¤ÇºîÀ®¤µ¤ì¤ë¤½¤ì¤¾¤ì¤Î¥Ð¥Ã¥¯¥¢¥Ã¥×¥Õ¥¡¥¤¥ë¤Ë@var{suffix}¤ò
ÄÉ²Ã¤·¤Þ¤¹¡¥¤³¤Î¥ª¥×¥·¥ç¥ó¤¬»ØÄê¤µ¤ì¤Æ¤¤¤Ê¤¤¾ì¹ç¡¤
@env{SIMPLE_BACKUP_SUFFIX}´Ä¶­ÊÑ¿ô¤ÎÃÍ¤¬»ÈÍÑ¤µ¤ì¤Þ¤¹¡¥¤½¤·¤Æ
@env{SIMPLE_BACKUP_SUFFIX}¤¬ÀßÄê¤µ¤ì¤Æ¤¤¤Ê¤¤¾ì¹ç¡¤¥Ç¥Õ¥©¥ë¥È¤Ç@samp{~}
¤È¤Ê¤ê¡¤¤½¤ì¤Ï¤Á¤ç¤¦¤ÉEmacs¤ÈÆ±¤¸¤Ç¤¹¡¥

@itemx --version-control=@var{method}
@opindex --version-control
@c FIXME: remove this block one or two releases after the actual
@c removal from the code.
@c 
@c This option is obsolete and will be removed in a future release.
@c It has been replaced with @w{@kbd{--backup}}.
@c 
¤³¤Î¥ª¥×¥·¥ç¥ó¤Ï»þÂåÃÙ¤ì¤Ç¡¤¾­Íè¤Î¥ê¥ê¡¼¥¹¤Çºï½ü¤µ¤ì¤ë¤Ç¤·¤ç¤¦¡¥¤½¤ì¤Ï¡¤
@w{@kbd{--backup}}¤ÇÃÖ¤­´¹¤¨¤é¤ì¤Þ¤·¤¿¡¥

@end table

@node Block size
@c @section Block size
@section ¥Ö¥í¥Ã¥¯¥µ¥¤¥º

@cindex block size

@c Some @sc{gnu} programs (at least @command{df}, @command{du}, and
@c @command{ls}) display sizes in ``blocks''.  You can adjust the block size
@c and method of display to make sizes easier to read.  The block size
@c used for display is independent of any filesystem block size.
@c Fractional block counts are rounded up to the nearest integer.
@c 
@sc{gnu}¥×¥í¥°¥é¥à(¾¯¤Ê¤¯¤È¤â¡¤@command{df}¡¤@command{du}¡¤¤½¤·¤Æ
@command{ls})¤Ë¤Ï¡¤¥Õ¥¡¥¤¥ë¥µ¥¤¥º¤ò``¥Ö¥í¥Ã¥¯''¤ÇÉ½¼¨¤¹¤ë¤â¤Î¤â¤¢¤ê¤Þ
¤¹¡¥¥Õ¥¡¥¤¥ë¥µ¥¤¥º¤ò¤è¤êÆÉ¤ß¤ä¤¹¤¯¤¹¤ë¤¿¤á¡¤¥Ö¥í¥Ã¥¯¥µ¥¤¥º¤òÄ´À°¤¹¤ë¤³
¤È¤¬²ÄÇ½¤Ç¤¹¡¥É½¼¨¤Ç»ÈÍÑ¤¹¤ë¥Ö¥í¥Ã¥¯¥µ¥¤¥º¤Ï¡¤¤¢¤é¤æ¤ë¥Õ¥¡¥¤¥ë¥·¥¹¥Æ¥à
¤Î¥Ö¥í¥Ã¥¯¥µ¥¤¥º¤«¤éÆÈÎ©¤·¤Æ¤¤¤Þ¤¹¡¥Ê¬¿ô¤Î¥Ö¥í¥Ã¥¯¿ô¤ÏºÇ¤â¶á¤¤À°¿ô¤ËÀÚ
¤ê¾å¤²¤é¤ì¤Þ¤¹¡¥

@opindex --block-size=@var{size}
@vindex BLOCK_SIZE
@vindex DF_BLOCK_SIZE
@vindex DU_BLOCK_SIZE
@vindex LS_BLOCK_SIZE
@vindex POSIXLY_CORRECT@r{, and block size}

@c The default block size is chosen by examining the following environment
@c variables in turn; the first one that is set determines the block size.
@c 
¥Ç¥Õ¥©¥ë¥È¤Î¥Ö¥í¥Ã¥¯¥µ¥¤¥º¤Ï¡¤°Ê²¼¤Î´Ä¶­ÊÑ¿ô¤ò½çÈÖ¤ËÄ´¤Ù¤ë¤³¤È¤ÇÁªÂò¤µ
¤ì¤Þ¤¹¡¥ºÇ½é¤ËÀßÄê¤µ¤ì¤Æ¤¤¤¿¤â¤Î¤Ç¥Ö¥í¥Ã¥¯¥µ¥¤¥º¤ò·èÄê¤·¤Þ¤¹¡¥

@table @code

@item DF_BLOCK_SIZE
@c This specifies the default block size for the @command{df} command.
@c Similarly, @env{DU_BLOCK_SIZE} specifies the default for @command{du} and
@c @env{LS_BLOCK_SIZE} for @command{ls}.
@c 
¤³¤ì¤Ï¡¤@command{df}¥³¥Þ¥ó¥É¤ËÂÐ¤¹¤ë¥Ç¥Õ¥©¥ë¥È¤Î¥Ö¥í¥Ã¥¯¥µ¥¤¥º¤ò»ØÄê¤·
¤Þ¤¹¡¥Æ±ÍÍ¤Ë¡¤@env{DU_BLOCK_SIZE}¤Ï@command{du}¤ËÂÐ¤¹¤ë¥Ç¥Õ¥©¥ë¥È¡¤¤½
¤·¤Æ@env{LS_BLOCK_SIZE}¤Ï@command{ls}¤ËÂÐ¤¹¤ë¥Ç¥Õ¥©¥ë¥È¤ò»ØÄê¤·¤Þ¤¹¡¥

@item BLOCK_SIZE
@c This specifies the default block size for all three commands, if the
@c above command-specific environment variables are not set.
@c 
¾åµ­¤Î¥³¥Þ¥ó¥É»ØÄê¤Î´Ä¶­ÊÑ¿ô¤¬ÀßÄê¤µ¤ì¤Æ¤¤¤Ê¤¤¾ì¹ç¡¤¤³¤ì¤Ï¡¤»°¤Ä¤Î¥³¥Þ
¥ó¥ÉÁ´¤Æ¤ËÂÐ¤¹¤ë¥Ç¥Õ¥©¥ë¥È¤Î¥Ö¥í¥Ã¥¯¥µ¥¤¥º¤ò»ØÄê¤·¤Þ¤¹¡¥

@item POSIXLY_CORRECT
@c If neither the @env{@var{command}_BLOCK_SIZE} nor the @env{BLOCK_SIZE}
@c variables are set, but this variable is set, the block size defaults to 512.
@c 
@env{@var{command}_BLOCK_SIZE}¤â@env{BLOCK_SIZE}ÊÑ¿ô¤âÀßÄê¤µ¤ì¤Æ¤ª¤é¤º¡¤
¤³¤ÎÊÑ¿ô¤¬ÀßÄê¤µ¤ì¤Æ¤¤¤ë¾ì¹ç¡¤¥Ö¥í¥Ã¥¯¥µ¥¤¥º¤Î¥Ç¥Õ¥©¥ë¥È¤Ï512¤Ë¤Ê¤ê¤Þ
¤¹¡¥

@end table

@c If none of the above environment variables are set, the block size
@c currently defaults to 1024 bytes in most contexts, but this number may
@c change in the future.  For @command{ls} file sizes, the block size
@c defaults to 1 byte.
@c 
¾åµ­¤Î´Ä¶­ÊÑ¿ô¤¬¤É¤ì¤âÀßÄê¤µ¤ì¤Æ¤¤¤Ê¤¤¾ì¹ç¡¤¤Û¤È¤ó¤É¤Î¾õ¶·¤Ç¥Ö¥í¥Ã¥¯¥µ
¥¤¥º¤Ï¸½ºß¤Î¥Ç¥Õ¥©¥ë¥È¤Î1024¥Ð¥¤¥È¤Ç¤¹¤¬¡¤¤³¤Î¿ô¤Ï¾­ÍèÊÑ¹¹¤µ¤ì¤ë¤«¤â¤·
¤ì¤Þ¤»¤ó¡¥@command{ls}¤Î¥Õ¥¡¥¤¥ë¥µ¥¤¥º¤ËÂÐ¤·¤Æ¡¤¥Ö¥í¥Ã¥¯¥µ¥¤¥º¤Î¥Ç¥Õ¥©
¥ë¥È¤Ï1¥Ð¥¤¥È¤Ç¤¹¡¥

@cindex human-readable output
@cindex SI output

@c A block size specification can be a positive integer specifying the number
@c of bytes per block, or it can be @code{human-readable} or @code{si} to
@c select a human-readable format.  Integers may be followed by suffixes
@c that are upward compatible with the
@c @uref{http://www.bipm.fr/enus/3_SI/si-prefixes.html, SI prefixes}
@c for decimal multiples and with the
@c @uref{http://physics.nist.gov/cuu/Units/binary.html, IEC 60027-2
@c prefixes for binary multiples}.
@c 
¥Ö¥í¥Ã¥¯¥µ¥¤¥º¤Î»ØÄê¤Ï¡¤¥Ö¥í¥Ã¥¯¤´¤È¤Î¥Ð¥¤¥È¿ô¤Î»ØÄê¤ÇÀµ¤ÎÀ°¿ô¤Ë¤·¤¿¤ê¡¤
¿Í´Ö¤¬²ÄÆÉ¤Ê½ñ¼°¤òÁªÂò¤·¤Æ@code{human-readable}¤ä@code{si}¤Ë¤·¤¿¤ê¤¹¤ë
¤³¤È¤¬²ÄÇ½¤Ç¤¹¡¥À°¿ô¤Ë¤Ï¡¤½½¿Ê¿ô¤ÎÇÜ¿ô¤È¤Ê¤ë
@uref{http://www.bipm.fr/enus/3_SI/si-prefixes.html, SI prefixes}¤Î¾å
°Ì¸ß´¹¤ÎÀÜÈø»Ò¤òÂ³¤±¤¿¤ê¡¤
@uref{http://physics.nist.gov/cuu/Units/binary.html, IEC 60027-2
prefixes for binary multiples}¤¬Â³¤±¤Æ¤â¤«¤Þ¤¤¤Þ¤»¤ó¡¥

@c With human-readable formats, output sizes are followed by a size letter
@c such as @samp{M} for megabytes.  @code{BLOCK_SIZE=human-readable} uses
@c powers of 1024; @samp{M} stands for 1,048,576 bytes.
@c @code{BLOCK_SIZE=si} is similar, but uses powers of 1000 and appends
@c @samp{B}; @samp{MB} stands for 1,000,000 bytes.
@c 
¿Í´Ö¤¬²ÄÆÉ¤Ê½ñ¼°¤òÍÑ¤¤¤ë¤È¡¤½ÐÎÏ¥µ¥¤¥º¤Ë¤Ï¥á¥¬¥Ð¥¤¥È¤ËÂÐ¤¹¤ë@samp{M}¤Î
¤è¤¦¤ÊÂç¤­¤µ¤ò¼¨¤¹Ê¸»ú¤¬Â³¤­¤Þ¤¹¡¥@code{BLOCK_SIZE=human-readable}¤Ï
1024¾è¤ò»ÈÍÑ¤·¤Þ¤¹¡¥@samp{M}¤Ï1,048,576¥Ð¥¤¥È¤ò°ÕÌ£¤·¤Þ¤¹¡¥
@code{BLOCK_SIZE=si}¤Ï»÷¤Æ¤¤¤Þ¤¹¤¬¡¤¤½¤ì¤Ï1000¾è¤ò»ÈÍÑ¤·@samp{B}¤¬¸åÃÖ
¤µ¤ì¤Þ¤¹¡¥@samp{MB}¤Ï1,000,000¤ò°ÕÌ£¤·¤Þ¤¹¡¥

@vindex LC_NUMERIC
@c A block size specification preceded by @samp{'} causes output sizes to
@c be displayed with thousands separators.  The @env{LC_NUMERIC} locale
@c specifies the thousands separator and grouping.  For example, in an
@c American English locale, @samp{--block-size="'1kB"} would cause a size
@c of 1234000 bytes to be displayed as @samp{1,234}.  In the default C
@c locale, there is no thousands separator so a leading @samp{'} has no
@c effect.
@c 
@samp{'}¤¬Á°ÃÖ¤µ¤ì¤Æ¤¤¤ë¥Ö¥í¥Ã¥¯¥µ¥¤¥º¤Î»ØÄê¤Ç¡¤ÀéÃ±°Ì¤Ç¶èÀÚ¤é¤ì¤¿Âç¤­
¤µ¤òÉ½¼¨¤¹¤ë¤è¤¦¤Ë¤Ê¤ê¤Þ¤¹¡¥@env{LC_NUMERIC}¥í¥«¡¼¥ë¤Ï¡¤Àé¤ÎÊ¬Î¥»Ò¤È¥°
¥ë¡¼¥×Ê¬¤±¤ò»ØÄê¤·¤Þ¤¹¡¥Îã¤¨¤Ð¡¤¥¢¥á¥ê¥«±Ñ¸ì¤Î¥í¥«¡¼¥ë¤Ç¤Ï¡¤
@samp{--block-size="'1kB"}¤Ç1234000¥Ð¥¤¥È¤ÎÂç¤­¤µ¤ò@samp{1,234}¤ÈÉ½¼¨
¤¹¤ë¤è¤¦¤Ë¤Ê¤ë¤Ç¤·¤ç¤¦¡¥¥Ç¥Õ¥©¥ë¥È¤ÎC¥í¥«¡¼¥ë¤Ç¤Ï¡¤ÀéÃ±°Ì¤Î¶èÀÚ¤ê¤¬Ìµ
¤¤¤Î¤Ç¡¤@samp{'}¤Ë¤Ï¸ú²Ì¤¬¤¢¤ê¤Þ¤»¤ó¡¥

@c An integer block size can be followed by a suffix to specify a
@c multiple of that size.  A bare size letter,
@c or one followed by @samp{iB}, specifies
@c a multiple using powers of 1024.  A size letter followed by @samp{B}
@c specifies powers of 1000 instead.  For example, @samp{1M} and
@c @samp{1MiB} are equivalent to @samp{1048576}, whereas @samp{1MB} is
@c equivalent to @samp{1000000}.
@c 
À°¿ô¤Î¥Ö¥í¥Ã¥¯¥µ¥¤¥º¤Ï¡¤¤½¤Î¥µ¥¤¥º¤ÎÇÜ¿ô¤ò»ØÄê¤¹¤ëÀÜÈø»Ò¤òÂ³¤±¤ë¤³¤È¤¬
²ÄÇ½¤Ç¤¹¡¥¤½¤Î¤Þ¤Þ¤ÎÂç¤­¤µ¤ò¼¨¤¹Ê¸»ú¤ä@samp{iB}¤¬Â³¤¯¤â¤Î¤Ï¡¤1024ÇÜ¤ò
»ØÄê¤·¤Þ¤¹¡¥@samp{B}¤¬Â³¤¯Âç¤­¤µ¤ò¼¨¤¹Ê¸»ú¤Ï¡¤Âå¤ï¤ê¤Ë1000ÇÜ¤ò»ØÄê¤·¤Þ
¤¹¡¥Îã¤¨¤Ð¡¤@samp{1M}¤È@samp{1MiB}¤Ï@samp{1048576}¤ÈÅù²Á¤Ç¡¤@samp{1MB}
¤Ï@samp{1000000}¤ÈÅù²Á¤Ç¤¹¡¥

@c A plain suffix without a preceding integer acts as if @samp{1} were
@c prepended, except that it causes a size indication to be appended to
@c the output.  For example, @samp{--block-size="kB"} displays 3000 as
@c @samp{3kB}.
@c 
Á°ÃÖ¤¹¤ëÀ°¿ô¤¬Ìµ¤¤ÉáÄÌ¤Î¥µ¥Õ¥£¥Ã¥¯¥¹¤Ç¤Ï¡¤@samp{1}¤¬Á°ÃÖ¤µ¤ì¤Æ¤¤¤ë¤«¤Î
¤è¤¦¤ËÆ°ºî¤·¤Þ¤¹¤¬¡¤Âç¤­¤µ¤ò¼¨¤¹Ê¸»ú¤¬½ÐÎÏ¤Ë¸åÃÖ¤µ¤ì¤Þ¤¹¡¥Îã¤¨¤Ð¡¤
@samp{--block-size="kB"}¤Ï3000¤ò@samp{3kB}¤ÈÉ½¼¨¤·¤Þ¤¹¡¥

@c The following suffixes are defined.  Large sizes like @code{1Y}
@c may be rejected by your computer due to limitations of its arithmetic.
@c 
°Ê²¼¤ÎÂç¤­¤µ¤ò¼¨¤¹Ê¸»ú¤¬ÄêµÁ¤µ¤ì¤Æ¤¤¤Þ¤¹¡¥@code{1Y}¤Î¤è¤¦¤ÊÂç¤­¤Ê¥µ¥¤
¥º¤Ï¡¤¤½¤Î·×»»¤Î¸Â³¦¤Î¤¿¤á¥³¥ó¥Ô¥å¡¼¥¿¤ËµñÀä¤µ¤ì¤ë¤«¤â¤·¤ì¤Þ¤»¤ó¡¥

@table @samp
@item kB
@cindex kilobyte, definition of
@c kilobyte: @math{10^3 = 1000}.
@c 
¥­¥í¥Ð¥¤¥È¡§@math{10^3 = 1000}¡¥
@item k
@itemx K
@itemx KiB
@cindex kibibyte, definition of
@c kibibyte: @math{2^10 = 1024}.  @samp{K} is special: the SI prefix is
@c @samp{k} and the IEC 60027-2 prefix is @samp{Ki}, but tradition and
@c @acronym{POSIX} use @samp{k} to mean @samp{KiB}.
@c 
¥­¥Ó¥Ð¥¤¥È¡§@math{2^10 = 1024}¡¥@samp{K}¤ÏÆÃ¼ì¤Ç¤¹¡¥SI¤ÎÀÜÆ¬¼­¤Ï
@samp{k} ¤Ç¡¤IEC 60027-2¤ÎÀÜÆ¬¼­¤Ï@samp{Ki}¤Ç¤¹¤¬¡¤ÅÁÅýÅª¤Ê¤â¤Î¤È
@acronym{POSIX}¤Ç¤Ï¡¤@samp{k}¤ò@samp{KiB}¤Î°ÕÌ£¤Ç»ÈÍÑ¤·¤Þ¤¹¡¥
@item MB
@cindex megabyte, definition of
@c megabyte: @math{10^6 = 1,000,000}.
@c 
¥á¥¬¥Ð¥¤¥È¡§@math{10^6 = 1,000,000}¡¥
@item M
@itemx MiB
@cindex mebibyte, definition of
@c mebibyte: @math{2^20 = 1,048,576}.
@c 
¥á¥Ó¥Ð¥¤¥È¡§@math{2^20 = 1,048,576}¡¥
@item GB
@cindex gigabyte, definition of
@c gigabyte: @math{10^9 = 1,000,000,000}.
@c 
¥®¥¬¥Ð¥¤¥È¡§@math{10^9 = 1,000,000,000}¡¥
@item G
@itemx GiB
@cindex gibibyte, definition of
@c gibibyte: @math{2^30 = 1,073,741,824}.
@c 
¥®¥Ó¥Ð¥¤¥È¡§@math{2^30 = 1,073,741,824}¡¥
@item TB
@cindex terabyte, definition of
@c terabyte:  @math{10^12 = 1,000,000,000,000}.
@c 
¥Æ¥é¥Ð¥¤¥È¡§@math{10^12 = 1,000,000,000,000}¡¥
@item T
@itemx TiB
@cindex tebibyte, definition of
@c tebibyte: @math{2^40 = 1,099,511,627,776}.
@c 
¥Æ¥Ó¥Ð¥¤¥È¡§@math{2^40 = 1,099,511,627,776}¡¥
@item PB
@cindex petabyte, definition of
@c petabyte: @math{10^15 = 1,000,000,000,000,000}.
@c 
¥Ú¥¿¥Ð¥¤¥È¡§@math{10^15 = 1,000,000,000,000,000}¡¥
@item P
@itemx PiB
@cindex pebibyte, definition of
@c pebibyte: @math{2^50 = 1,125,899,906,842,624}.
@c 
¥Ú¥Ó¥Ð¥¤¥È¡§@math{2^50 = 1,125,899,906,842,624}¡¥
@item EB
@cindex exabyte, definition of
@c exabyte: @math{10^18 = 1,000,000,000,000,000,000}.
@c 
¥¨¥¯¥µ¥Ð¥¤¥È¡§@math{10^18 = 1,000,000,000,000,000,000}¡¥
@item E
@itemx EiB
@cindex exbibyte, definition of
@c exbibyte: @math{2^60 = 1,152,921,504,606,846,976}.
@c 
¥¨¥¯¥·¥Ó¥Ð¥¤¥È¡§@math{2^60 = 1,152,921,504,606,846,976}¡¥
@item ZB
@cindex zettabyte, definition of
@c zettabyte: @math{10^21 = 1,000,000,000,000,000,000,000}
@c 
¥¼¡¼¥¿¥Ð¥¤¥È¡§@math{10^21 = 1,000,000,000,000,000,000,000}¡¥
@item Z
@itemx ZiB
@c @math{2^70 = 1,180,591,620,717,411,303,424}.
@c (@samp{Zi} is a GNU extension to IEC 60027-2.)
@c 
@math{2^70 = 1,180,591,620,717,411,303,424}¡¥(@samp{Zi}¤ÏIEC 60027-2¤Ø
¤ÎGNU¤Î³ÈÄ¥¤Ç¤¹¡¥)
@item YB
@cindex yottabyte, definition of
@c yottabyte: @math{10^24 = 1,000,000,000,000,000,000,000,000}.
@c 
¥è¥Ã¥¿¥Ð¥¤¥È¡§@math{10^24 = 1,000,000,000,000,000,000,000,000}¡¥
@item Y
@itemx YiB
@c @math{2^80 = 1,208,925,819,614,629,174,706,176}.
@c (@samp{Yi} is a GNU extension to IEC 60027-2.)
@c 
@math{2^80 = 1,208,925,819,614,629,174,706,176}¡¥(@samp{Yi}¤ÏIEC
60027-2¤Ø¤ÎGNU¤Î³ÈÄ¥¤Ç¤¹¡¥)
@end table

@opindex -k
@opindex -h
@opindex --block-size
@opindex --human-readable
@opindex --si

@c Block size defaults can be overridden by an explicit
@c @option{--block-size=@var{size}} option.  The @option{-k}
@c option is equivalent to @option{--block-size=1K}, which
@c is the default unless the @env{POSIXLY_CORRECT} environment variable is
@c set.  The @option{-h} or @option{--human-readable} option is equivalent to
@c @option{--block-size=human-readable}.  The @option{--si} option is
@c equivalent to @option{--block-size=si}.
@c 
¥Ö¥í¥Ã¥¯¥µ¥¤¥º¤Î¥Ç¥Õ¥©¥ë¥È¤Ï¡¤@option{--block-size=@var{size}}¥ª¥×¥·¥ç
¥ó¤òÌÀ¼¨¤¹¤ë¤³¤È¤ÇÍ¥Àè¤¹¤ë¤³¤È¤¬²ÄÇ½¤Ç¤¹¡¥@option{-k}¥ª¥×¥·¥ç¥ó¤Ï¡¤
@option{--block-size=1k}¤ÈÅù²Á¤Ç¡¤¤½¤ì¤Ï@env{POSIXLY_CORRECT}´Ä¶­ÊÑ¿ô
¤¬»ØÄê¤µ¤ì¤Æ¤¤¤Ê¤¤¾ì¹ç¤Î¥Ç¥Õ¥©¥ë¥È¤Ç¤¹¡¥@option{-h}¤ä
@option{--human-readable}¥ª¥×¥·¥ç¥ó¤Ï¡¤
@option{--block-size=human-readable}¤ÈÅù²Á¤Ç¤¹¡¥@option{--si}¥ª¥×¥·¥ç
¥ó¤Ï¡¤@option{--block-size=si}¤ÈÅù²Á¤Ç¤¹¡¥

@node Target directory
@c @section Target directory
@section ¥¿¡¼¥²¥Ã¥È¥Ç¥£¥ì¥¯¥È¥ê

@cindex target directory

@c Some @sc{gnu} programs (at least @command{cp}, @command{install},
@c @command{ln}, and @command{mv}) allow you to specify the target directory
@c via this option:
@c 
@sc{gnu}¥×¥í¥°¥é¥à(¾¯¤Ê¤¯¤È¤â@command{cp}¡¤@command{install}¡¤
@command{ln}¡¤¤½¤·¤Æ@command{mv})¤Ë¤Ï¡¤¤³¤Î¥ª¥×¥·¥ç¥ó¤Ç¥¿¡¼¥²¥Ã¥È¥Ç¥£
¥ì¥¯¥È¥ê¤Î»ØÄê¤ò²ÄÇ½¤Ë¤¹¤ë¤â¤Î¤â¤¢¤ê¤Þ¤¹¡¥

@table @samp

@itemx @w{@kbd{--target-directory}=@var{directory}}
@opindex --target-directory
@cindex target directory
@cindex destination directory
@c Specify the destination @var{directory}.
@c 
ÂÐ¾Ý¤È¤Ê¤ë@var{directory}¤ò»ØÄê¤·¤Þ¤¹¡¥

@c The interface for most programs is that after processing options and a
@c finite (possibly zero) number of fixed-position arguments, the remaining
@c argument list is either expected to be empty, or is a list of items
@c (usually files) that will all be handled identically.  The @command{xargs}
@c program is designed to work well with this convention.
@c 
¤Û¤È¤ó¤É¤Î¥×¥í¥°¥é¥à¤Î¥¤¥ó¥¿¡¼¥Õ¥§¡¼¥¹¤Ï¡¤¥ª¥×¥·¥ç¥ó¤ÈÍ­¸Â¿ô¤Î(¤ª¤½¤é
¤¯¥¼¥í¤Î)¸ÇÄê¤·¤¿°ÌÃÖ¤Î°ú¿ô¤ò½èÍý¤·¤¿¸å¡¤»Ä¤ê¤Î°ú¿ô¥ê¥¹¥È¤Ï¶õ¤Ç¤¢¤ë¡¤
¤Þ¤¿¤ÏÆ±¤¸¤è¤¦¤Ë½èÍý¤µ¤ì¤ë(ÄÌ¾ï¥Õ¥¡¥¤¥ë¤È¤Ê¤ë)¹àÌÜ¤Î¥ê¥¹¥È¤Ë¤Ê¤Ã¤Æ¤¤¤ë
¤³¤È¤¬´üÂÔ¤µ¤ì¤Æ¤¤¤Þ¤¹¡¥@command{xargs}¥×¥í¥°¥é¥à¤Ï¡¤¤³¤Î´·½¬¤òÍÑ¤¤¤Æ
¤è¤êÎÉ¤¯Æ°ºî¤¹¤ë¤è¤¦¤ËÀß·×¤µ¤ì¤Æ¤¤¤Þ¤¹¡¥

@c The commands in the @command{mv}-family are unusual in that they take
@c a variable number of arguments with a special case at the @emph{end}
@c (namely, the target directory).  This makes it nontrivial to perform some
@c operations, e.g., ``move all files from here to ../d/'', because
@c @code{mv * ../d/} might exhaust the argument space, and @code{ls | xargs ...}
@c doesn't have a clean way to specify an extra final argument for each
@c invocation of the subject command.  (It can be done by going through a
@c shell command, but that requires more human labor and brain power than
@c it should.)
@c 
ÍÍ¡¹¤Ê¿ô¤Î°ú¿ô¤Î@emph{ºÇ¸å}¤ËÆÃÎã(¤¹¤Ê¤ï¤Á¡¤¥¿¡¼¥²¥Ã¥È¥Ç¥£¥ì¥¯¥È¥ê)¤¬
¤¢¤ë¤¿¤á¡¤@command{mv}¤ÎÎà¤Î¥³¥Þ¥ó¥É¤ÏÉáÄÌ¤Î¤â¤Î¤È¤Ï¸À¤¨¤Þ¤»¤ó¡¥Îã¤¨¤Ð
``Á´¤Æ¤Î¥Õ¥¡¥¤¥ë¤ò¤³¤³¤«¤é@file{../d/}¤Ë°ÜÆ°¤¹¤ë''¤è¤¦¤Ê½èÍý¤ò¼Â¹Ô¤¹¤ë
¤¿¤á¤Ë¡¤@code{mv * ../d/}¤Ç¤Ï°ú¿ô¤Î¶õ´Ö¤ò»È¤¤²Ì¤¹¤«¤â¤·¤ì¤Þ¤»¤ó¤·¡¤
@code{ls | xargs ...}¤Ç¤Ï¡¤¤½¤ì¤¾¤ì¤Î½¾Â°¥³¥Þ¥ó¥É¤Î¸Æ¤Ó½Ð¤·¤Ø¤ÎÆÃÊÌ¤Ê
ºÇ¸å¤Î°ú¿ô¤ò»ØÄê¤¹¤ëÊýË¡¤¬¤Ê¤¤¤¿¤á¡¤ÌÀ³Î¤Ç¤Ï¤Ê¤¯¤Ê¤ê¤Þ¤¹¡¥(¤½¤ì¤Ï¡¤¥·¥§
¥ë¥³¥Þ¥ó¥É¤ÇÆ°ºî¤µ¤»¤ë¤³¤È¤¬²ÄÇ½¤Ç¤¹¤¬¡¤¿Í´Ö¤ÎÏ«Æ¯¤ÈÇ½ÎÏ¤¬Í¾Ê¬¤ËÉ¬Í×¤È
¤Ê¤ê¤Þ¤¹¡¥)

@c The @w{@kbd{--target-directory}} option allows the @command{cp},
@c @command{install}, @command{ln}, and @command{mv} programs to be used
@c conveniently with @command{xargs}.  For example, you can move the files
@c from the current directory to a sibling directory, @code{d} like this:
@c (However, this doesn't move files whose names begin with @samp{.}.)
@c 
@w{@kbd{--target-directory}}¥ª¥×¥·¥ç¥ó¤Ë¤è¤Ã¤Æ¡¤@command{cp}¡¤
@command{install}¡¤@command{ln}¡¤¤½¤·¤Æ@command{mv}¥×¥í¥°¥é¥à¤Ç¡¤
@command{xargs}¤òÍÑ¤¤¤ÆÊØÍø¤Ë»ÈÍÑ¤¹¤ë¤³¤È¤¬²ÄÇ½¤Ë¤Ê¤ê¤Þ¤¹¡¥Îã¤¨¤Ð¡¤¸½
ºß¤Î¥Ç¥£¥ì¥¯¥È¥ê¤«¤éÆ±¤¸³¬ÁØ¤Î¥Ç¥£¥ì¥¯¥È¥ê¡¤¤³¤³¤Ç¤Ï@code{d}¤Ë¡¤¥Õ¥¡¥¤
¥ë¤ò°ÜÆ°¤¹¤ë¤³¤È¤¬²ÄÇ½¤Ç¤¹¡¥(¤·¤«¤·¡¤¤³¤ì¤Ï@samp{.}¤Ç»Ï¤Þ¤ëÌ¾Á°¤Î¥Õ¥¡
¥¤¥ë¤ò°ÜÆ°¤·¤Þ¤»¤ó¡¥)

@smallexample
ls |xargs mv --target-directory=../d
@end smallexample

@c If you use the @sc{gnu} @command{find} program, you can move @emph{all}
@c files with this command:
@c 
@sc{gnu} @command{find}¥×¥í¥°¥é¥à¤ò»ÈÍÑ¤·¤Æ¤¤¤ë¾ì¹ç¡¤°Ê²¼¤Î¥³¥Þ¥ó¥É¤Ç
@emph{Á´¤Æ¤Î}¥Õ¥¡¥¤¥ë¤ò°ÜÆ°¤¹¤ë¤³¤È¤¬²ÄÇ½¤Ç¤¹¡¥
@example
find . -mindepth 1 -maxdepth 1 \
  | xargs mv --target-directory=../d
@end example

@c But that will fail if there are no files in the current directory
@c or if any file has a name containing a newline character.
@c The following example removes those limitations and requires both
@c @sc{gnu} @command{find} and @sc{gnu} @command{xargs}:
@c 
¤·¤«¤·¡¤¸½ºß¤Î¥Ç¥£¥ì¥¯¥È¥ê¤Ë¥Õ¥¡¥¤¥ë¤¬¤Ê¤¤¾ì¹ç¤ä¡¤²þ¹ÔÊ¸»ú¤ò´Þ¤àÌ¾Á°¤Î
¥Õ¥¡¥¤¥ë¤¬¤¢¤ë¾ì¹ç¡¤¤½¤ì¤Ï¼ºÇÔ¤¹¤ë¤Ç¤·¤ç¤¦¡¥°Ê²¼¤ÎÎã¤Ï¡¤¤³¤ì¤é¤ÎÀ©¸Â¤ò
¼è¤ê½ü¤­¤Þ¤¹¤¬¡¤@sc{gnu} @command{find}¤È@sc{gnu} @command{xargs}¤ÎÎ¾
Êý¤òÉ¬Í×¤È¤·¤Þ¤¹¡¥
@example
find . -mindepth 1 -maxdepth 1 -print0 \
  | xargs --null --no-run-if-empty \
      mv --target-directory=../d
@end example

@end table

@node Trailing slashes
@c @section Trailing slashes
@section ËöÈø¤Î¥¹¥é¥Ã¥·¥å

@cindex trailing slashes

@c Some @sc{gnu} programs (at least @command{cp} and @command{mv}) allow you to
@c remove any trailing slashes from each @var{source} argument before
@c operating on it.  The @w{@kbd{--strip-trailing-slashes}} option enables
@c this behavior.
@c 
@sc{gnu}¥×¥í¥°¥é¥à(¾¯¤Ê¤¯¤È¤â@command{cp}¤È@command{mv})¤Ë¤Ï¡¤¤½¤ì¤¾¤ì
¤Î@var{source}°ú¿ô¤ò½èÍý¤¹¤ëÁ°¤ËËöÈø¤Î¥¹¥é¥Ã¥·¥å¤ò¼è¤ê½ü¤¯¤³¤È¤¬²ÄÇ½¤Ê
¤â¤Î¤â¤¢¤ê¤Þ¤¹¡¥@w{@kbd{--strip-trailing-slashes}}¥ª¥×¥·¥ç¥ó¤Ï¤³¤ÎÆ°ºî
¤ò²ÄÇ½¤Ë¤·¤Þ¤¹¡¥

@c This is useful when a @var{source} argument may have a trailing slash and
@c 
@c FIXME: mv's behavior in this case is system-dependent
@c 
@c specify a symbolic link to a directory.  This scenario is in fact rather
@c common because some shells can automatically append a trailing slash when
@c performing file name completion on such symbolic links.  Without this
@c option, @command{mv}, for example, (via the system's rename function) must
@c interpret a trailing slash as a request to dereference the symbolic link
@c and so must rename the indirectly referenced @emph{directory} and not
@c the symbolic link.  Although it may seem surprising that such behavior
@c be the default, it is required by @acronym{POSIX} and is consistent with
@c other parts of that standard.
@c 
@var{source}°ú¿ô¤ÎËöÈø¤Ë¥¹¥é¥Ã¥·¥å¤¬¤¢¤ê¡¤¥Ç¥£¥ì¥¯¥È¥ê¤Ø¤Î¥·¥ó¥Ü¥ê¥Ã¥¯
¥ê¥ó¥¯¤ò»ØÄê¤·¤Æ¤¤¤ë¤È¤­¡¤¤³¤ì¤ÏÌò¤ËÎ©¤Á¤Þ¤¹¡¥¥·¥§¥ë¤Ë¤Ï¥·¥ó¥Ü¥ê¥Ã¥¯¥ê
¥ó¥¯¤Î¤è¤¦¤Ê¤â¤Î¤ËÂÐ¤·¤Æ¥Õ¥¡¥¤¥ëÌ¾¤ÎÊä´°¤ò¼Â¹Ô¤·¤Æ¤¤¤ë¤È¤­¡¤ËöÈø¤Î¥¹¥é¥Ã
¥·¥å¤ò¼«Æ°Åª¤ËÄÉ²Ã¤¹¤ë¤³¤È¤¬²ÄÇ½¤Ê¤â¤Î¤â¤¢¤ë¤Î¤Ç¡¤¤³¤Î¥·¥Ê¥ê¥ª¤Ï¸½¼Â¤È
¤Ê¤ê¤Þ¤¹¡¥¤³¤Î¥ª¥×¥·¥ç¥ó¤¬¤Ê¤¤¾ì¹ç¡¤Îã¤¨¤Ð(¥·¥¹¥Æ¥à¤ÎÌ¾Á°ÊÑ¹¹µ¡Ç½¤Î¤¿
¤á)@command{mv}¤Ï¡¤ËöÈø¤Î¥¹¥é¥Ã¥·¥å¤ò¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯Àè¤ò»²¾È¤·¤Ê¤¤
¤è¤¦¤ËÍ×µá¤¹¤ë¤è¤¦²ò¼á¤¹¤ëÉ¬Í×¤¬¤¢¤ê¡¤¤½¤·¤Æ¡¤¤½¤Î¤¿¤á¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó
¥¯¤Ç¤Ï¤Ê¤¯¡¤´ÖÀÜÅª¤Ë»²¾È¤µ¤ì¤ë@emph{¥Ç¥£¥ì¥¯¥È¥ê}¤ÎÌ¾Á°¤òÊÑ¹¹¤¹¤ë¤Ï¤º
¤Ç¤¹¡¥¤½¤Î¤è¤¦¤ÊÆ°ºî¤¬¥Ç¥Õ¥©¥ë¥È¤È¤¤¤¦¤³¤È¤Ë¤Ó¤Ã¤¯¤ê¤¹¤ë¤«¤â¤·¤ì¤Þ¤»¤ó
¤¬¡¤¤½¤ì¤Ï@acronym{POSIX}¤ÇÍ×µá¤µ¤ì¤Æ¤¤¤Æ¡¤¤½¤ÎÉ¸½à¤Î¤½¤ì°Ê³°¤ÎÉôÊ¬¤È
°ì´Ó¤·¤Æ¤¤¤Þ¤¹¡¥

@node Traversing symlinks
@c @section Traversing symlinks
@section ¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯¤ò¤¿¤É¤ë

@cindex symbolic link to directory, controlling traversal of

@c The following options modify how @command{chown} and @command{chgrp}
@c traverse a hierarchy when the @option{--recursive} (@option{-R})
@c option is also specified.
@c 
°Ê²¼¤Î¥ª¥×¥·¥ç¥ó¤Ï¡¤@option{--recursive} (@option{-R})¥ª¥×¥·¥ç¥ó¤â»ÈÍÑ
¤µ¤ì¤Æ¤¤¤ë¤È¤­¤Ë¡¤@command{chown}¤È@command{chgrp}¤¬(¥Ç¥£¥ì¥¯¥È¥ê)³¬ÁØ
¤ò¤¿¤É¤ëÊýË¡¤òÊÑ¹¹¤·¤Þ¤¹¡¥
@c FIXME: note that `du' has these options, too, but they have slightly
@c different meaning.
@c 
@c If more than one of the following options is specified, only the final
@c one takes effect.
@c These options specify whether processing a symbolic link to a directory
@c entails operating on just the symbolic link or on all files in the
@c hierarchy rooted at that directory.
@c 
°Ê²¼¤Î¥ª¥×¥·¥ç¥ó¤Î°ì¤Ä°Ê¾å¤¬»ØÄê¤µ¤ì¤Æ¤¤¤ë¾ì¹ç¡¤ºÇ¸å¤Î¤â¤Î¤À¤±¸ú²Ì¤¬¤¢
¤ê¤Þ¤¹¡¥¤³¤ì¤é¤Î¥ª¥×¥·¥ç¥ó¤Ï¡¤¥Ç¥£¥ì¥¯¥È¥ê¹½Â¤¤Î½èÍý¤ò¡¤¥·¥ó¥Ü¥ê¥Ã¥¯¥ê
¥ó¥¯¤È¤·¤Æ½èÍý¤¹¤ë¤«¡¤¤½¤Î¥Ç¥£¥ì¥¯¥È¥ê¤¬¥ë¡¼¥È¤Ë¤Ê¤Ã¤Æ¤¤¤ë³¬ÁØ¹½Â¤¤Î¤¹
¤Ù¤Æ¤Î¥Õ¥¡¥¤¥ë¤ò½èÍý¤¹¤ë¤«¤ò»ØÄê¤·¤Þ¤¹¡¥

@c These options are independent of @option{--dereference} and
@c @option{--no-dereference} (@option{-h}), which control whether to modify
@c a symlink or its referent.
@c 
°Ê²¼¤Î¥ª¥×¥·¥ç¥ó¤Ï¡¤¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯¤«¤½¤Î»²¾ÈÀè¤Î¤¤¤º¤ì¤ò½èÍý¤¹¤ë¤«
¤òÀ©¸æ¤¹¤ë@option{--dereference}¤È@option{--no-dereference}
(@option{-h})¤È¤ÏÆÈÎ©¤·¤Æ¤¤¤Þ¤¹¡¥

@table @samp

@macro choptH
@item -H
@opindex -H
@cindex symbolic link to directory, traverse each that is specified on the command line
@c If @option{--recursive} (@option{-R}) is specified and
@c a command line argument is a symbolic link to a directory, traverse it.
@c 
@option{--recursive} (@option{-R})¤¬»ØÄê¤µ¤ì¤Æ¤¤¤Æ¡¤¥³¥Þ¥ó¥É¥é¥¤¥ó°ú¿ô
¤¬¥Ç¥£¥ì¥¯¥È¥ê¤Ø¤Î¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯¤Î¾ì¹ç¡¤¤½¤ì¤ò¤¿¤É¤Ã¤Æ¤¤¤­¤Þ¤¹¡¥
@end macro
@choptH

@macro choptL
@item -L
@opindex -L
@cindex symbolic link to directory, traverse each that is encountered
@c In a recursive traversal, traverse every symbolic link to a directory
@c that is encountered.
@c 
ºÆµ¢Åª¤Ë¤¿¤É¤ë¾õ¶·¤Ç¡¤¥Ç¥£¥ì¥¯¥È¥ê¤Ø¤Î¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯¤ò¡¤¸«¤Ä¤«¤Ã¤¿
¤â¤Î¤Ï¤¹¤Ù¤Æ¤¿¤É¤ê¤Þ¤¹¡¥
@end macro
@choptL

@macro choptP
@item -P
@opindex -P
@cindex symbolic link to directory, never traverse
@c Do not traverse any symbolic links.
@c This is the default if none of @option{-H}, @option{-L},
@c or @option{-P} is specified.
@c 
¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯¤ò¤¿¤É¤ê¤Þ¤»¤ó¡¥¤³¤ì¤Ï@option{-H}¡¤@option{-L}¡¤¤Þ¤¿
¤Ï@option{-P}¤Î¤¤¤º¤ì¤â»ØÄê¤µ¤ì¤Æ¤¤¤Ê¤¤¾ì¹ç¤Î¥Ç¥Õ¥©¥ë¥È¤Ç¤¹¡¥
@end macro
@choptP

@end table


@node Treating / specially
@c @section Treating / specially
@section / ¤ÎÆÃÊÌ¤Ê°·¤¤Êý

@c Certain commands can operate destructively on entire hierarchies.
@c For example, if a user with appropriate privileges mistakenly runs
@c @samp{rm -rf / tmp/junk} or @samp{cd /bin; rm -rf ../}, that may remove
@c all files on the entire system.  Since there are so few
@c @footnote{If you know of one, please write to @email{bug-coreutils@@gnu.org}.}
@c legitimate uses for such a command,
@c @sc{gnu} @command{rm} provides the @option{--preserve-root} option
@c to make it so @command{rm} declines to operate on any directory
@c that resolves to @file{/}.  The default is still to allow
@c @samp{rm -rf /} to operate unimpeded.
@c Another new option, @option{--no-preserve-root}, cancels the
@c effect of any preceding @option{--preserve-root} option.
@c Note that the @option{--preserve-root} behavior may become the default
@c for @command{rm}.
@c 
¥³¥Þ¥ó¥É¤Ë¤Ï¡¤³¬ÁØ¹½Â¤Á´ÂÎ¤òÇË²õ¤¹¤ë¤è¤¦¤Ê½èÍý¤¬²ÄÇ½¤Ê¤â¤Î¤â¤¢¤ê¤Þ¤¹¡¥
Îã¤¨¤Ð¡¤Å¬ÀÚ¤ÊÆÃ¸¢¤ò»ý¤Ä¥æ¡¼¥¶¤¬´Ö°ã¤Ã¤Æ@samp{rm -rf / tmp/junk}¤ä
@samp{cd /bin; rm -rf ../}¤ò¼Â¹Ô¤·¤¿¾ì¹ç¡¤¥·¥¹¥Æ¥àÁ´ÂÎ¤Î¤¹¤Ù¤Æ¤Î¥Õ¥¡¥¤
¥ë¤¬ºï½ü¤µ¤ì¤ë²ÄÇ½À­¤¬¤¢¤ê¤Þ¤¹¡¥¤½¤Î¤è¤¦¤Ê¥³¥Þ¥ó¥É¤¬ÀµÅö¤Ç¤¢¤ë¤È¤¤¤¦¤³
¤È¤ÏÌÇÂ¿¤ËÌµ¤¤¤Î¤Ç@footnote{ÃÎ¤Ã¤Æ¤¤¤ë¤â¤Î¤¬¤¢¤ì¤Ð
@email{bug-coreutils@@gnu.org}¤Ë¥á¡¼¥ë¤ò½ñ¤¤¤Æ²¼¤µ¤¤¡¥}¡¤@sc{gnu}
@command{rm}¤Ï@option{--preserve-root}¥ª¥×¥·¥ç¥ó¤òÄó¶¡¤·¡¤ºÇ½ªÅª¤Ë
@file{/}¤È¤µ¤ì¤ë¤è¤¦¤Ê¥Ç¥£¥ì¥¯¥È¥ê¤Î½èÍý¤ò@command{rm}¤Ë¤µ¤»¤Ê¤¤¤è¤¦¤Ë
¤·¤Þ¤¹¡¥¤â¤¦°ì¤Ä¤Î¿·¤¿¤Ê¥ª¥×¥·¥ç¥ó¤Ç¤¢¤ë@option{--no-preserve-root}¤Ï¡¤
Á°½Ð¤Î@option{--preserve-root}¥ª¥×¥·¥ç¥ó¤Î¸ú²Ì¤ò¤Ê¤¯¤·¤Þ¤¹¡¥
@option{--preserve-root}¤ÎÆ°ºî¤¬@command{rm}¤Î¥Ç¥Õ¥©¥ë¥È¤Ë¤Ê¤ë²ÄÇ½À­¤¬
¤¢¤ë¤³¤È¤ËÃí°Õ¤·¤Æ²¼¤µ¤¤¡¥

@c The commands @command{chgrp}, @command{chmod} and @command{chown}
@c can also operate destructively on entire hierarchies, so they too
@c support these options.  Although, unlike @command{rm}, they don't
@c actually unlink files, these commands are arguably more dangerous
@c when operating recursively on @file{/}, since they often work much
@c more quickly, and hence damage more files before an alert user can
@c interrupt them.
@c 
¥³¥Þ¥ó¥É@command{chgrp}¡¤@command{chmod}¡¤¤½¤·¤Æ@command{chown}¤â¡¤³¬
ÁØ¹½Â¤Á´ÂÎ¤òÇË²õ¤¹¤ë½èÍý¤¬²ÄÇ½¤Ê¤Î¤Ç¡¤¤³¤ì¤é¤Î¥ª¥×¥·¥ç¥ó¤ò¥µ¥Ý¡¼¥È¤·¤Æ
¤¤¤Þ¤¹¡¥¤·¤«¤·¡¤@command{rm}¤È¤Ï°Û¤Ê¤ê¡¤¥Õ¥¡¥¤¥ë¤ò¼ÂºÝ¤Ë¥¢¥ó¥ê¥ó¥¯¤¹¤ë
¤ï¤±¤Ç¤Ï¤Ê¤¤¤Î¤Ç¡¤@file{/}¤ÇºÆµ¢Åª¤Ê½èÍý¤ò¤¹¤ë¤È¤­¤Ï¡¤¤ª¤½¤é¤¯¤³¤ì¤é¤Î
¥³¥Þ¥ó¥É¤Ï¤µ¤é¤Ë´í¸±¤Ç¡¤¤½¤ÎÍýÍ³¤Ï½èÍý»þ´Ö¤¬Ã»¤¤¤¿¤á¡¤¥æ¡¼¥¶¤¬Ää»ß¤µ¤»
¤ëÁ°¤ËÂ¿¤¯¤Î¥Õ¥¡¥¤¥ë¤Ë¾ã³²¤¬È¯À¸¤¹¤ë¤¿¤á¤Ç¤¹¡¥


@node Standards conformance
@c @section Standards conformance
@section É¸½à¤Ø¤Î½àµò

@vindex POSIXLY_CORRECT
@c In a few cases, the @sc{gnu} utilities' default behavior is
@c incompatible with the @acronym{POSIX} standard.  To suppress these
@c incompatibilities, define the @env{POSIXLY_CORRECT} environment
@c variable.  Unless you are checking for @acronym{POSIX} conformance, you
@c probably do not need to define @env{POSIXLY_CORRECT}.
@c 
¾õ¶·¤Ë¤è¤Ã¤Æ¤Ï¡¤@sc{gnu}¤Î¥æ¡¼¥Æ¥£¥ê¥Æ¥£¤Î¥Ç¥Õ¥©¥ë¥È¤ÎÆ°ºî¤Ï
@acronym{POSIX}¤ÎÉ¸½à¤È¸ß´¹À­¤¬¤¢¤ê¤Þ¤»¤ó¡¥¤³¤ì¤é¤ÎÈó¸ß´¹À­¤òÍÞÀ©¤¹¤ë
¤¿¤á¡¤@env{POSIXLY_CORRECT}´Ä¶­ÊÑ¿ô¤òÄêµÁ¤·¤Æ¤¯¤À¤µ¤¤¡¥@acronym{POSIX}
½àµò¤òÄ´ºº¤·¤Æ¤¤¤Ê¤¤¸Â¤ê¡¤@env{POSIXLY_CORRECT}¤òÄêµÁ¤¹¤ëÉ¬Í×¤Ï¤¢¤ê¤Þ
¤»¤ó¡¥

@c Newer versions of @acronym{POSIX} are occasionally incompatible with older
@c versions.  For example, older versions of @acronym{POSIX} required the
@c command @samp{sort +1} to sort based on the second and succeeding
@c fields in each input line, but starting with @acronym{POSIX} 1003.1-2001
@c the same command is required to sort the file named @file{+1}, and you
@c must instead use the command @samp{sort -k 2} to get the field-based
@c sort.
@c 
¿·¤·¤¤¥Ð¡¼¥¸¥ç¥ó¤Î@acronym{POSIX}¤Ë¤Ï¡¤¸Å¤¤¥Ð¡¼¥¸¥ç¥ó¤Î¤â¤Î¤È¸ß´¹À­¤¬
Ìµ¤¤¤â¤Î¤â¤¢¤ê¤Þ¤¹¡¥Îã¤¨¤Ð¡¤¸Å¤¤¥Ð¡¼¥¸¥ç¥ó¤Î@acronym{POSIX}¤Ç¤Ï¡¤¤½¤ì
¤¾¤ì¤ÎÆþÎÏ¥Õ¥¡¥¤¥ë¤ÎÆóÈÖÌÜ¤È¤½¤ì°Ê¹ß¤Î¥Õ¥£¡¼¥ë¥É¤ò¤â¤È¤Ë¥½¡¼¥È¤¹¤ë¥³¥Þ
¥ó¥É@samp{sort +1}¤òÍ×µá¤·¤Æ¤¤¤Þ¤¹¤¬¡¤@acronym{POSIX} 1003.1-2001¤«¤é
¤ÏÆ±¤¸¥³¥Þ¥ó¥É¤Ç@file{+1}¤È¤¤¤¦Ì¾Á°¤Î¥Õ¥¡¥¤¥ë¤ò¥½¡¼¥È¤¹¤ë¤³¤È¤òÍ×µá¤·
¤Æ¤¤¤Æ¡¤¥Õ¥£¡¼¥ë¥É¤ò¤â¤È¤Ë¤·¤¿¥½¡¼¥È¤ò¹Ô¤Ê¤¦¤¿¤á¡¤¥³¥Þ¥ó¥É@samp{sort
-k 2}¤òÂå¤ï¤ê¤Ë»ÈÍÑ¤¹¤ëÉ¬Í×¤¬¤¢¤ê¤Þ¤¹¡¥

@vindex _POSIX2_VERSION
@c The @sc{gnu} utilities normally conform to the version of @acronym{POSIX}
@c that is standard for your system.  To cause them to conform to a
@c different version of @acronym{POSIX}, define the @env{_POSIX2_VERSION}
@c environment variable to a value of the form @var{yyyymm} specifying
@c the year and month the standard was adopted.  Two values are currently
@c supported for @env{_POSIX2_VERSION}: @samp{199209} stands for
@c @acronym{POSIX} 1003.2-1992, and @samp{200112} stands for @acronym{POSIX}
@c 1003.1-2001.  For example, if you are running older software that
@c assumes an older version of @acronym{POSIX} and uses @samp{sort +1},
@c @samp{head -1}, or @samp{tail +1}, you
@c can work around the compatibility problems by setting
@c @samp{_POSIX2_VERSION=199209} in your environment.
@c 
@sc{gnu}¤Î¥æ¡¼¥Æ¥£¥ê¥Æ¥£¤ÏÄÌ¾ï¡¤¥·¥¹¥Æ¥àÉ¸½à¤Î@acronym{POSIX}¤Î¥Ð¡¼¥¸¥ç
¥ó¤Ë½àµò¤·¤Æ¤¤¤Þ¤¹¡¥°Û¤Ê¤ë@acronym{POSIX}¤Î¥Ð¡¼¥¸¥ç¥ó¤Ë½àµò¤µ¤»¤ë¤¿¤á¡¤
Å¬ÍÑ¤µ¤»¤ëÉ¸½à¤ÎÇ¯·î¤ò»ØÄê¤¹¤ë@var{yyyymm}¤Î·Á¼°¤ÎÃÍ¤Ë
@env{_POSIX2_VERSION}´Ä¶­ÊÑ¿ô¤òÀßÄê¤·¤Æ¤¯¤À¤µ¤¤¡¥¸½ºß¡¤
@env{_POSIX2_VERSION}¤ËÂÐ¤·¤ÆÆó¤Ä¤ÎÃÍ¤¬¥µ¥Ý¡¼¥È¤µ¤ì¤Æ¤¤¤Þ¤¹¡¥
@samp{199209}¤Ï@acronym{POSIX} 1003.2-1992¤ò°ÕÌ£¤·¡¤@samp{200112}¤Ï
@acronym{POSIX} 1003.1-2001¤ò°ÕÌ£¤·¤Þ¤¹¡¥Îã¤¨¤Ð¡¤¸Å¤¤¥Ð¡¼¥¸¥ç¥ó¤Î
@acronym{POSIX}¤ò²¾Äê¤¹¤ë¸Å¤¤¥½¥Õ¥È¥¦¥§¥¢¤ò¼Â¹Ô¤·¡¤@samp{sort +1}¡¤
@samp{head -1}¡¤¤Þ¤¿¤Ï@samp{tail +1}¤ò»ÈÍÑ¤·¤Æ¤¤¤ë¾ì¹ç¡¤´Ä¶­ÊÑ¿ô¤Ç
@samp{_POSIX2_VERSION=199209}¤òÀßÄê¤¹¤ë¤³¤È¤Ç¡¤¸ß´¹À­¤ÎÌäÂê¤ò²óÈò¤¹¤ë
¤³¤È¤¬²ÄÇ½¤Ç¤¹¡¥

@node Output of entire files
@c @chapter Output of entire files
@chapter ¥Õ¥¡¥¤¥ëÁ´ÂÎ¤Î½ÐÎÏ

@cindex output of entire files
@cindex entire files, output of

@c These commands read and write entire files, possibly transforming them
@c in some way.
@c 
°Ê²¼¤Î¥³¥Þ¥ó¥É¤Ï¡¤¤¤¤¯¤Ä¤«¤ÎÊýË¡¤Ç¡¤¤ª¤½¤é¤¯¥Õ¥¡¥¤¥ë¤òÊÑ´¹¤·¤Ê¤¬¤é¡¤¥Õ¥¡
¥¤¥ëÁ´ÂÎ¤òÆÉ¤ß¹þ¤ß¡¤¤½¤·¤Æ½ñ¤­½Ð¤·¤Þ¤¹¡¥

@menu
* cat invocation::              Concatenate and write files.
* tac invocation::              Concatenate and write files in reverse.
* nl invocation::               Number lines and write files.
* od invocation::               Write files in octal or other formats.
@end menu

@node cat invocation
@c @section @command{cat}: Concatenate and write files
@section @command{cat}: ¥Õ¥¡¥¤¥ë¤òÏ¢·ë¤·½ñ¤­¹þ¤à

@pindex cat
@cindex concatenate and write files
@cindex copying files

@c @command{cat} copies each @var{file} (@samp{-} means standard input), or
@c standard input if none are given, to standard output.  Synopsis:
@c 
@command{cat}¤Ï¡¤¤½¤ì¤¾¤ì¤Î@var{file}(@samp{-}¤ÏÉ¸½àÆþÎÏ¤ò°ÕÌ£¤·¤Þ¤¹)
¤ä¡¤Í¿¤¨¤é¤ì¤Ê¤¤¾ì¹ç¤ÏÉ¸½àÆþÎÏ¤òÉ¸½à½ÐÎÏ¤Ø¥³¥Ô¡¼¤·¤Þ¤¹¡¥³µÍ×¤Ç¤¹¡¥

@example
cat [@var{option}] [@var{file}]@dots{}
@end example

@c The program accepts the following options.  Also see @ref{Common options}.
@c 
¥×¥í¥°¥é¥à¤Ï°Ê²¼¤Î¥ª¥×¥·¥ç¥ó¤ò¼õ¤±Æþ¤ì¤Þ¤¹¡¥@ref{Common options}¤â»²¾È
¤·¤Æ¤¯¤À¤µ¤¤¡¥

@table @samp

@item -A
@itemx --show-all
@opindex -A
@opindex --show-all
@c Equivalent to @option{-vET}.
@c 
@option{-vET}¤ÈÅù²Á¤Ç¤¹¡¥

@item -B
@itemx --binary
@opindex -B
@opindex --binary
@cindex binary and text I/O in cat
@c On MS-DOS and MS-Windows only, read and write the files in binary mode.
@c By default, @command{cat} on MS-DOS/MS-Windows uses binary mode only when
@c standard output is redirected to a file or a pipe; this option overrides
@c that.  Binary file I/O is used so that the files retain their format
@c (Unix text as opposed to DOS text and binary), because @command{cat} is
@c frequently used as a file-copying program.  Some options (see below)
@c cause @command{cat} to read and write files in text mode because in those
@c cases the original file contents aren't important (e.g., when lines are
@c numbered by @command{cat}, or when line endings should be marked).  This is
@c so these options work as DOS/Windows users would expect; for example,
@c DOS-style text files have their lines end with the CR-LF pair of
@c characters, which won't be processed as an empty line by @option{-b} unless
@c the file is read in text mode.
@c 
MS-DOS¤ÈMS-Windows¤Î¤ß¤Ç¡¤¥Õ¥¡¥¤¥ë¤ò¥Ð¥¤¥Ê¥ê¥â¡¼¥É¤ÇÆÉ¤ß½ñ¤­¤·¤Þ¤¹¡¥¥Ç
¥Õ¥©¥ë¥È¤Ç¡¤MS-DOS/MS-Windows¤Ç¤Î@command{cat}¤Ï¡¤É¸½à½ÐÎÏ¤¬¥Õ¥¡¥¤¥ë¤ä
¥Ñ¥¤¥×¤Ë¥ê¥À¥¤¥ì¥¯¥È¤µ¤ì¤Æ¤¤¤ë¤È¤­¤À¤±¡¤¥Ð¥¤¥Ê¥ê¥â¡¼¥É¤ò»ÈÍÑ¤·¤Þ¤¹¡¥¤³
¤Î¥ª¥×¥·¥ç¥ó¤Ï¤½¤ì¤ËÍ¥Àè¤·¤Þ¤¹¡¥¥Ð¥¤¥Ê¥ê¥Õ¥¡¥¤¥ë¤ÎI/O¤Ç¤Ï¡¤
@command{cat}¤Ï¥Õ¥¡¥¤¥ë¤Î¥³¥Ô¡¼¥×¥í¥°¥é¥à¤È¤·¤Æ»ÈÍÑ¤µ¤ì¤ë¤³¤È¤¬Â¿¤¤¤Î
¤Ç¡¤¤½¤ì¤é¤Î½ñ¼°(DOS¥Æ¥­¥¹¥È¤È¥Ð¥¤¥Ê¥ê¤ËÂÐ¤¹¤ëUnix¥Æ¥­¥¹¥È)¤òÊÝ¤Ä¤¿¤á
¤Ë»È¤ï¤ì¤Þ¤¹¡¥(°Ê²¼¤Î)¥ª¥×¥·¥ç¥ó¤Ë¤Ï¡¤¸µ¥Õ¥¡¥¤¥ë¤ÎÆâÍÆ¤¬½ÅÍ×¤Ç¤Ê¤¤¤È¤­
¤Ë¤Ï¡¤@command{cat}¤Ë¥Æ¥­¥¹¥È¥â¡¼¥É¤Ç¥Õ¥¡¥¤¥ë¤òÆÉ¤ß½ñ¤­¤µ¤»¤ë¤â¤Î¤â¤¢
¤ê¤Þ¤¹(Îã¤¨¤Ð¡¤¹Ô¤¬@command{cat}¤ÇÈÖ¹æÉÕ¤±¤µ¤ì¤ë¤È¤­¤ä¹Ô¤Î½ª¤ê¤Ë°õ¤òÉÕ
¤±¤ë¤È¤­)¡¥¤³¤ì¤Ï¡¤¤³¤ì¤é¤Î¥ª¥×¥·¥ç¥ó¤òDOS/Windows¥æ¡¼¥¶¤¬´üÂÔ¤·¤¿¤è¤¦
¤ËÆ°ºî¤µ¤»¤ë¤¿¤á¤Î¤â¤Î¤Ç¤¹¡¥Îã¤¨¤Ð¡¤DOS·Á¼°¤Î¥Æ¥­¥¹¥È¥Õ¥¡¥¤¥ë¤Ï¡¤¥Æ¥­
¥¹¥È¥â¡¼¥É¤ÇÆÉ¤Þ¤ì¤Ê¤¤¾ì¹ç¡¤@option{-b}¤Ç¶õ¤Î¹Ô¤È¤·¤Æ°·¤ï¤ì¤Ê¤¤¡¤CR-LF 
¤È¤¤¤¦¥Ú¥¢¤ÎÊ¸»ú¤¬¹ÔËö¤Ë¤¢¤ê¤Þ¤¹¡¥

@item -b
@itemx --number-nonblank
@opindex -b
@opindex --number-nonblank
@c Number all nonblank output lines, starting with 1.  On MS-DOS and
@c MS-Windows, this option causes @command{cat} to read and write files in
@c text mode.
@c 
¶õÇò¤Ç¤Ê¤¤Á´¤Æ¤Î½ÐÎÏ¹Ô¤Ë¡¤1¤Ç»Ï¤Þ¤ëÈÖ¹æ¤òÉÕ¤±¤Þ¤¹¡¥MS-DOS¤ÈMS-Windows
¤Ç¤Ï¡¤¤³¤Î¥ª¥×¥·¥ç¥ó¤Ç¡¤@command{cat}¤Ï¥Æ¥­¥¹¥È¥â¡¼¥É¤Ç¥Õ¥¡¥¤¥ë¤òÆÉ¤ß
½ñ¤­¤·¤Þ¤¹¡¥

@item -e
@opindex -e
@c Equivalent to @option{-vE}.
@c 
@option{-vE}¤ÈÅù²Á¤Ç¤¹¡¥

@item -E
@itemx --show-ends
@opindex -E
@opindex --show-ends
@c Display a @samp{$} after the end of each line.  On MS-DOS and
@c MS-Windows, this option causes @command{cat} to read and write files in
@c text mode.
@c 
¤½¤ì¤¾¤ì¤Î¹ÔËö¤Î¸å¤Ë@samp{$}¤òÉ½¼¨¤·¤Þ¤¹¡¥MS-DOS¤ÈMS-Windows¤Ç¤Ï¡¤
@command{cat}¤Ï¤³¤Î¥ª¥×¥·¥ç¥ó¤Ç¥Æ¥­¥¹¥È¥â¡¼¥É¤Ç¥Õ¥¡¥¤¥ë¤òÆÉ¤ß½ñ¤­¤·¤Þ
¤¹¡¥

@item -n
@itemx --number
@opindex -n
@opindex --number
@c Number all output lines, starting with 1.  On MS-DOS and MS-Windows,
@c this option causes @command{cat} to read and write files in text mode.
@c 
Á´¤Æ¤Î½ÐÎÏ¹Ô¤Ë¡¤1¤Ç»Ï¤Þ¤ëÈÖ¹æ¤òÉÕ¤±¤Þ¤¹¡¥MS-DOS¤ÈMS-Windows¤Ç¤Ï¡¤
@command{cat}¤Ï¤³¤Î¥ª¥×¥·¥ç¥ó¤Ç¥Æ¥­¥¹¥È¥â¡¼¥É¤Ç¥Õ¥¡¥¤¥ë¤òÆÉ¤ß½ñ¤­¤·¤Þ
¤¹¡¥

@item -s
@itemx --squeeze-blank
@opindex -s
@opindex --squeeze-blank
@cindex squeezing blank lines
@c Replace multiple adjacent blank lines with a single blank line.  On
@c MS-DOS and MS-Windows, this option causes @command{cat} to read and write
@c files in text mode.
@c 
Ê£¿ô¤ÎÎÙÀÜ¤·¤¿¶õÇò¹Ô¤ò¡¤°ì¹Ô¤Î¥Ö¥é¥ó¥¯¹Ô¤ËÃÖ´¹¤·¤Þ¤¹¡¥MS-DOS¤È
MS-Windows¤Ç¤Ï¡¤@command{cat}¤Ï¤³¤Î¥ª¥×¥·¥ç¥ó¤Ç¥Æ¥­¥¹¥È¥â¡¼¥É¤Ç¥Õ¥¡¥¤
¥ë¤òÆÉ¤ß½ñ¤­¤·¤Þ¤¹¡¥

@item -t
@opindex -t
@c Equivalent to @option{-vT}.
@c 
@option{-vT}¤ÈÅù²Á¤Ç¤¹¡¥

@item -T
@itemx --show-tabs
@opindex -T
@opindex --show-tabs
@c Display TAB characters as @samp{^I}.
@c 
TABÊ¸»ú¤ò @samp{^I}¤È¤·¤ÆÉ½¼¨¤·¤Þ¤¹¡¥

@item -u
@opindex -u
@c Ignored; for Unix compatibility.
@c 
Ìµ»ë¤µ¤ì¤Þ¤¹¡¥Unix¸ß´¹À­¤Î¤¿¤á¤Ç¤¹¡¥

@item -v
@itemx --show-nonprinting
@opindex -v
@opindex --show-nonprinting
@c Display control characters except for LFD and TAB using
@c @samp{^} notation and precede characters that have the high bit set with
@c @samp{M-}.  On MS-DOS and MS-Windows, this option causes @command{cat} to
@c read files and standard input in DOS binary mode, so the CR
@c characters at the end of each line are also visible.
@c 
LFD¤ÈTAB°Ê³°¤Î¥³¥ó¥È¥í¡¼¥ëÊ¸»ú¤ò¡¤@samp{^}É½µ­Ë¡¤ò»ÈÍÑ¤·¤ÆÉ½¼¨¤·¡¤
@samp{M-}¤ò»ÈÍÑ¤·¤¿¥Ï¥¤¥Ó¥Ã¥È¥»¥Ã¥È¤¬¤¢¤ëÊ¸»ú¤ËÁ°ÃÖ¤·¤Þ¤¹¡¥MS-DOS¤È
MS-Windows¤Ç¤Ï¡¤@command{cat}¤Ï¤³¤Î¥ª¥×¥·¥ç¥ó¤ÇDOS¥Ð¥¤¥Ê¥ê¥â¡¼¥É¤Ç¥Õ¥¡
¥¤¥ë¤ÈÉ¸½àÆþÎÏ¤òÆÉ¤ß¹þ¤à¤Î¤Ç¡¤¤½¤ì¤¾¤ì¤Î¹ÔËö¤ÎCRÊ¸»ú¤¬É½¼¨¤µ¤ì¤Þ¤¹¡¥

@end table

@exitstatus


@node tac invocation
@c @section @command{tac}: Concatenate and write files in reverse
@section @command{tac}: µÕ½ç¤Ë¥Õ¥¡¥¤¥ë¤òÏ¢·ë¤·½ñ¤­¹þ¤à

@pindex tac
@cindex reversing files

@c @command{tac} copies each @var{file} (@samp{-} means standard input), or
@c standard input if none are given, to standard output, reversing the
@c records (lines by default) in each separately.  Synopsis:
@c 
@command{tac}¤Ï¡¤¤½¤ì¤¾¤ì¤Î@var{file}(@samp{-}¤Ï¡¤É¸½àÆþÎÏ¤ò°ÕÌ£¤·¤Þ¤¹) 
¤ä¡¤Í¿¤¨¤é¤ì¤Ê¤¤¾ì¹ç¤ÏÉ¸½àÆþÎÏ¤ò¡¤¸Ä¡¹¤ËÊ¬³ä¤µ¤ì¤¿¥ì¥³¡¼¥É(¥Ç¥Õ¥©¥ë¥È
¤Ï¹Ô)¤òµÕ½ç¤Ë¤·¤Ê¤¬¤é¡¤É¸½à½ÐÎÏ¤Ø¥³¥Ô¡¼¤·¤Þ¤¹¡¥³µÍ×¤Ç¤¹¡¥

@example
tac [@var{option}]@dots{} [@var{file}]@dots{}
@end example

@c @dfn{Records} are separated by instances of a string (newline by
@c default).  By default, this separator string is attached to the end of
@c the record that it follows in the file.
@c 
@dfn{¥ì¥³¡¼¥É(record)}¤Ï¡¤Ê¸»úÎó¤Î¥¤¥ó¥¹¥¿¥ó¥¹(¥Ç¥Õ¥©¥ë¥È¤Ï²þ¹Ô)¤ÇÊ¬¤±
¤é¤ì¤Æ¤¤¤Þ¤¹¡¥¥Ç¥Õ¥©¥ë¥È¤Ç¡¤¤³¤Î¥»¥Ñ¥ì¡¼¥¿Ê¸»úÎó¤Ï¥Õ¥¡¥¤¥ë¤Î¥ì¥³¡¼¥É¤Î
½ª¤ê¤ËÂ³¤±¤ÆÉÕ²Ã¤µ¤ì¤Þ¤¹¡¥

@c The program accepts the following options.  Also see @ref{Common options}.
@c 
¥×¥í¥°¥é¥à¤Ï°Ê²¼¤Î¥ª¥×¥·¥ç¥ó¤ò¼õ¤±Æþ¤ì¤Þ¤¹¡¥@ref{Common options}¤â»²¾È
¤·¤Æ¤¯¤À¤µ¤¤¡¥

@table @samp

@item -b
@itemx --before
@opindex -b
@opindex --before
@c The separator is attached to the beginning of the record that it
@c precedes in the file.
@c 
¥»¥Ñ¥ì¡¼¥¿¤ò¡¤¥Õ¥¡¥¤¥ë¤Î¥ì¥³¡¼¥É¤ÎºÇ½é¤ËÁ°ÃÖ¤·¤ÆÉÕ²Ã¤·¤Þ¤¹¡¥

@item -r
@itemx --regex
@opindex -r
@opindex --regex
@c Treat the separator string as a regular expression.  Users of @command{tac}
@c on MS-DOS/MS-Windows should note that, since @command{tac} reads files in
@c binary mode, each line of a text file might end with a CR/LF pair
@c instead of the Unix-style LF.
@c 
¥»¥Ñ¥ì¡¼¥¿Ê¸»úÎó¤òÀµµ¬É½¸½¤È¤·¤Æ°·¤¤¤Þ¤¹¡¥MS-DOS/MS-Windows¤Ç¤Î
@command{tac}¥æ¡¼¥¶¤Ï¡¤@command{tac}¤¬¥Õ¥¡¥¤¥ë¤ò¥Ð¥¤¥Ê¥ê¥â¡¼¥É¤ÇÆÉ¤à¤¿
¤á¡¤¥Æ¥­¥¹¥È¥Õ¥¡¥¤¥ë¤Î¤½¤ì¤¾¤ì¤Î¹Ô¤ÏUnix¥¹¥¿¥¤¥ë¤ÎLF¤ÎÂå¤ï¤ê¤ËCR/LF¤Î
¥Ú¥¢¤Ç½ª¤ë¤³¤È¤ËÃí°Õ¤¹¤Ù¤­¤Ç¤¹¡¥

@item -s @var{separator}
@itemx --separator=@var{separator}
@opindex -s
@opindex --separator
@c Use @var{separator} as the record separator, instead of newline.
@c 
@var{separator}¤ò¡¤²þ¹Ô¤ÎÂå¤ï¤ê¤Ë¥»¥Ñ¥ì¡¼¥¿Ê¸»úÎó¤È¤·¤ÆÍÑ¤¤¤Þ¤¹¡¥

@end table

@exitstatus


@node nl invocation
@c @section @command{nl}: Number lines and write files
@section @command{nl}: ¹Ô¤ËÈÖ¹æ¤òÉÕ¤±¥Õ¥¡¥¤¥ë¤Ë½ñ¤­¹þ¤à

@pindex nl
@cindex numbering lines
@cindex line numbering

@c @command{nl} writes each @var{file} (@samp{-} means standard input), or
@c standard input if none are given, to standard output, with line numbers
@c added to some or all of the lines.  Synopsis:
@c 
@command{nl}¤Ï¡¤¤½¤ì¤¾¤ì¤Î@var{file}(@samp{-}¤ÏÉ¸½àÆþÎÏ¤ò°ÕÌ£¤·¤Þ¤¹)¤ä¡¤
Í¿¤¨¤é¤ì¤Ê¤¤¾ì¹ç¤ÏÉ¸½àÆþÎÏ¤ò¡¤¤¤¤¯¤Ä¤«¤Î¹Ô¤Þ¤¿¤ÏÁ´¤Æ¤Î¹Ô¤Ë¹ÔÈÖ¹æ¤ò²Ã¤¨
¤ÆÉ¸½à½ÐÎÏ¤Ø½ñ¤­½Ð¤·¤Þ¤¹¡¥³µÍ×¤Ç¤¹¡¥

@example
nl [@var{option}]@dots{} [@var{file}]@dots{}
@end example

@cindex logical pages, numbering on
@c @command{nl} decomposes its input into (logical) pages; by default, the
@c line number is reset to 1 at the top of each logical page.  @command{nl}
@c treats all of the input files as a single document; it does not reset
@c line numbers or logical pages between files.
@c 
@command{nl}¤Ï¡¤ÆþÎÏ¤ò(ÏÀÍý)¥Ú¡¼¥¸¤ËÊ¬²ò¤·¤Þ¤¹¡¥¥Ç¥Õ¥©¥ë¥È¤Ç¡¤¤½¤ì¤¾¤ì
¤ÎÏÀÍý¥Ú¡¼¥¸¤Î¥È¥Ã¥×¤Ç¡¤¹ÔÈÖ¹æ¤¬1¤Ë¥ê¥»¥Ã¥È¤µ¤ì¤Þ¤¹¡¥@command{nl}¤ÏÁ´
¤Æ¤ÎÆþÎÏ¥Õ¥¡¥¤¥ë¤òÃ±°ì¤Î¥É¥­¥å¥á¥ó¥È¤È¤·¤Æ°·¤¤¤Þ¤¹¡¥¹ÔÈÖ¹æ¤äÏÀÍý¥Ú¡¼¥¸
¤ò¥Õ¥¡¥¤¥ë´Ö¤Ç¥ê¥»¥Ã¥È¤·¤Þ¤»¤ó¡¥

@cindex headers, numbering
@cindex body, numbering
@cindex footers, numbering
@c A logical page consists of three sections: header, body, and footer.
@c Any of the sections can be empty.  Each can be numbered in a different
@c style from the others.
@c 
ÏÀÍý¥Ú¡¼¥¸¤Ï»°¤Ä¤Î¥»¥¯¥·¥ç¥ó¤«¤éÀ®Î©¤Á¤Þ¤¹¡¥¥Ø¥Ã¥À¡¤¥Ü¥Ç¥£¡¤¤½¤·¤Æ¥Õ¥Ã
¥¿¤Ç¤¹¡¥Ç¤°Õ¤Î¥»¥¯¥·¥ç¥ó¤ò¶õ¤Ë¤¹¤ë¤³¤È¤â²ÄÇ½¤Ç¤¹¡¥¤½¤ì¤¾¤ì°Û¤Ê¤ë¥¹¥¿¥¤
¥ë¤ÇÈÖ¹æ¤òÉÕ¤±¤ë¤³¤È¤¬²ÄÇ½¤Ç¤¹¡¥

@c The beginnings of the sections of logical pages are indicated in the
@c input file by a line containing exactly one of these delimiter strings:
@c 
ÏÀÍý¥Ú¡¼¥¸¤Î¥»¥¯¥·¥ç¥ó¤ÎºÇ½é¤Ï¡¤°Ê²¼¤Î¥Ç¥ê¥ß¥¿Ê¸»úÎó¤Î°ì¤Ä¤òÆþÎÏ¥Õ¥¡¥¤
¥ë¤ËÃ±°ì¹Ô¤Ç´Þ¤á¤ë¤³¤È¤Ç¼¨¤µ¤ì¤Þ¤¹¡¥

@table @samp
@item \:\:\:
@c start of header;
@c 
¥Ø¥Ã¥À¤Î»Ï¤Þ¤ê¡¥
@item \:\:
@c start of body;
@c 
¥Ü¥Ç¥£¤Î»Ï¤Þ¤ê¡¥
@item \:
@c start of footer.
@c 
¥Õ¥Ã¥¿¤Î»Ï¤Þ¤ê¡¥
@end table

@c The two characters from which these strings are made can be changed from
@c @samp{\} and @samp{:} via options (see below), but the pattern and
@c length of each string cannot be changed.
@c 
¤³¤ì¤é¤ÎÊ¸»úÎó¤ò¹½À®¤¹¤ëÆó¤Ä¤ÎÊ¸»ú¤ò¡¤@samp{\}¤È@samp{:}¤«¤éÊÑ¹¹¤¹¤ë¤³
¤È¤Ï¥ª¥×¥·¥ç¥ó(°Ê²¼¤ò»²¾È)¤Ç²ÄÇ½¤Ç¤¹¤¬¡¤¥Ñ¥¿¡¼¥ó¤ÈÊ¸»úÎó¤ÎÄ¹¤µ¤ÎÊÑ¹¹¤Ï
ÉÔ²ÄÇ½¤Ç¤¹¡¥

@c A section delimiter is replaced by an empty line on output.  Any text
@c that comes before the first section delimiter string in the input file
@c is considered to be part of a body section, so @command{nl} treats a
@c file that contains no section delimiters as a single body section.
@c 
¥»¥¯¥·¥ç¥ó¥Ç¥ê¥ß¥¿¤Ï¡¤½ÐÎÏ¤Ç¤Ï¶õ¹Ô¤ËÃÖ´¹¤µ¤ì¤Þ¤¹¡¥ÆþÎÏ¥Õ¥¡¥¤¥ë¤Î¡¤ºÇ½é
¤Î¥»¥¯¥·¥ç¥ó¤Î¥Ç¥ê¥ß¥¿Ê¸»úÎó¤è¤êÁ°¤Î¤¢¤é¤æ¤ë¥Æ¥­¥¹¥È¤Ï¡¤¥Ü¥Ç¥£¥»¥¯¥·¥ç
¥ó¤Î°ìÉô¤È¹Í¤¨¤é¤ì¤ë¤Î¤Ç¡¤@command{nl}¤Ï¡¤¥»¥¯¥·¥ç¥ó¥Ç¥ê¥ß¥¿¤¬Ìµ¤¤¥Õ¥¡
¥¤¥ë¤ò¡¤°ì¤Ä¤Î¥Ü¥Ç¥£¥»¥¯¥·¥ç¥ó¤È¤·¤Æ°·¤¤¤Þ¤¹¡¥

@c The program accepts the following options.  Also see @ref{Common options}.
@c 
¥×¥í¥°¥é¥à¤Ï°Ê²¼¤Î¥ª¥×¥·¥ç¥ó¤ò¼õ¤±Æþ¤ì¤Þ¤¹¡¥@ref{Common options}¤â»²¾È
¤·¤Æ¤¯¤À¤µ¤¤¡¥

@table @samp

@item -b @var{style}
@itemx --body-numbering=@var{style}
@opindex -b
@opindex --body-numbering
@c Select the numbering style for lines in the body section of each
@c logical page.  When a line is not numbered, the current line number
@c is not incremented, but the line number separator character is still
@c prepended to the line.  The styles are:
@c 
¤½¤ì¤¾¤ì¤ÎÏÀÍý¥Ú¡¼¥¸¤Î¥Ü¥Ç¥£¥»¥¯¥·¥ç¥ó¤Î¹Ô¤ËÂÐ¤¹¤ëÈÖ¹æÉÕ¤±¤Î¥¹¥¿¥¤¥ë¤ò
ÁªÂò¤·¤Þ¤¹¡¥¹Ô¤¬ÈÖ¹æÉÕ¤±¤µ¤ì¤Ê¤¤¤È¤­¡¤¸½ºß¤Î¹ÔÈÖ¹æ¤ÏÁý²Ã¤·¤Þ¤»¤ó¤¬¡¤¹Ô
ÈÖ¹æ¤ÈÊ¬Î¥¤¹¤ëÊ¸»úÎó¤¬¹Ô¤ËÁ°ÃÖ¤µ¤ì¤Þ¤¹¡¥¥¹¥¿¥¤¥ë¤Ï°Ê²¼¤Î¤È¤ª¤ê¤Ç¤¹¡¥

@table @samp
@item a
@c number all lines,
@c 
Á´¤Æ¤Î¹Ô¤ËÈÖ¹æ¤òÉÕ¤±¤Þ¤¹¡¥
@item t
@c number only nonempty lines (default for body),
@c 
(¥Ç¥Õ¥©¥ë¥È¤Ç¥Ü¥Ç¥£¤ËÂÐ¤·)¶õ¤Ç¤Ê¤¤¹Ô¤À¤±¡¤ÈÖ¹æ¤òÉÕ¤±¤Þ¤¹¡¥
@item n
@c do not number lines (default for header and footer),
@c 
(¥Ç¥Õ¥©¥ë¥È¤Ç¥Ø¥Ã¥À¤ä¥Õ¥Ã¥¿¤ËÂÐ¤·)ÈÖ¹æ¤òÉÕ¤±¤Þ¤»¤ó¡¥
@item p@var{bre}
@c number only lines that contain a match for the basic regular
@c expression @var{bre}.
@c @xref{Regular Expressions, , Regular Expressions, grep, The GNU Grep Manual}.
@c 
´ðËÜÀµµ¬É½¸½@var{bre}¤Ë¥Þ¥Ã¥Á¤·¤¿¤â¤Î¤ò´Þ¤à¹Ô¤À¤±ÈÖ¹æ¤òÉÕ¤±¤Þ¤¹¡¥
@xref{Regular Expressions, , Regular Expressions, grep, The GNU Grep
Manual}.
@end table

@item -d @var{cd}
@itemx --section-delimiter=@var{cd}
@opindex -d
@opindex --section-delimiter
@cindex section delimiters of pages
@c Set the section delimiter characters to @var{cd}; default is
@c @samp{\:}. If only @var{c} is given, the second remains @samp{:}.
@c (Remember to protect @samp{\} or other metacharacters from shell
@c expansion with quotes or extra backslashes.)
@c 
¥»¥¯¥·¥ç¥ó¤òÊ¬Î¥¤¹¤ëÊ¸»ú¤ò@var{cd}¤ËÀßÄê¤·¤Þ¤¹¡¥¥Ç¥Õ¥©¥ë¥È¤Ï@samp{\:} 
¤Ç¤¹¡¥@var{c}¤Î¤ßÍ¿¤¨¤é¤ì¤¿¾ì¹ç¡¤ÆóÈÖÌÜ¤Î@samp{:}¤Ï¤½¤Î¤Þ¤Þ¤Ç¤¹¡¥(¥·¥§
¥ë¤¬Å¸³«¤¹¤ë@samp{\}¤ä¤½¤ÎÂ¾¤Î¥á¥¿Ê¸»ú¤ò¡¤°úÍÑÉä¤ä¥Ð¥Ã¥¯¥¹¥é¥Ã¥·¥å¤ÎÄÉ
²Ã¤ÇÊÝ¸î¤¹¤ë¤³¤È¤òËº¤ì¤Ê¤¤¤Ç¤¯¤À¤µ¤¤¡¥)

@item -f @var{style}
@itemx --footer-numbering=@var{style}
@opindex -f
@opindex --footer-numbering
@c Analogous to @option{--body-numbering}.
@c 
@option{--body-numbering}¤ÎÆ±Îà¤Ç¤¹¡¥

@item -h @var{style}
@itemx --header-numbering=@var{style}
@opindex -h
@opindex --header-numbering
@c Analogous to @option{--body-numbering}.
@c 
@option{--body-numbering}¤ÎÆ±Îà¤Ç¤¹¡¥

@item -i @var{number}
@itemx --page-increment=@var{number}
@opindex -i
@opindex --page-increment
@c Increment line numbers by @var{number} (default 1).
@c 
¹ÔÈÖ¹æ¤ò@var{number}¤º¤Ä(¥Ç¥Õ¥©¥ë¥È¤Ï1)Áý²Ã¤·¤Þ¤¹¡¥

@item -l @var{number}
@itemx --join-blank-lines=@var{number}
@opindex -l
@opindex --join-blank-lines
@cindex empty lines, numbering
@cindex blank lines, numbering
@c Consider @var{number} (default 1) consecutive empty lines to be one
@c logical line for numbering, and only number the last one.  Where fewer
@c than @var{number} consecutive empty lines occur, do not number them.
@c An empty line is one that contains no characters, not even spaces
@c or tabs.
@c 
@var{number}(¥Ç¥Õ¥©¥ë¥È¤Ï1)Ï¢Â³¤·¤¿¶õ¹Ô¤ò¡¤ÈÖ¹æÉÕ¤È¤·¤Æ¤Ï°ì¤Ä¤ÎÏÀÍý¹Ô
¤À¤È¹Í¤¨¡¤ºÇ¸å¤Î¤â¤Î¤À¤±¤ËÈÖ¹æÉÕ¤±¤·¤Þ¤¹¡¥@var{number}¤è¤ê¾¯¤Ê¤¤¹Ô¤ÎÏ¢
Â³¤·¤¿¶õ¹Ô¤¬¤¢¤ë¤È¤³¤í¤Ç¤ÏÈÖ¹æÉÕ¤±¤ò¤·¤Þ¤»¤ó¡¥¶õ¹Ô¤È¤Ï¡¤Ê¸»ú¤ò´Þ¤Þ¤º¥¹
¥Ú¡¼¥¹¤ä¥¿¥°¤â´Þ¤Þ¤Ê¤¤¤â¤Î¤Ç¤¹¡¥

@item -n @var{format}
@itemx --number-format=@var{format}
@opindex -n
@opindex --number-format
@c Select the line numbering format (default is @code{rn}):
@c 
¹Ô¤ÎÈÖ¹æÉÕ¤±¤Î½ñ¼°¤òÁªÂò¤·¤Þ¤¹(¥Ç¥Õ¥©¥ë¥È¤Ï@code{rn}¤Ç¤¹)¡¥

@table @samp
@item ln
@opindex ln @r{format for @command{nl}}
@c left justified, no leading zeros;
@c 
º¸´ó¤»¤Ç¡¤ÀèÆ¬¤Ë¥¼¥í¤ò½ñ¤­¤Þ¤»¤ó¡¥
@item rn
@opindex rn @r{format for @command{nl}}
@c right justified, no leading zeros;
@c 
±¦´ó¤»¤Ç¡¤ÀèÆ¬¤Ë¥¼¥í¤ò½ñ¤­¤Þ¤»¤ó¡¥
@item rz
@opindex rz @r{format for @command{nl}}
@c right justified, leading zeros.
@c 
±¦´ó¤»¤Ç¡¤ÀèÆ¬¤Ë¥¼¥í¤ò½ñ¤­¤Þ¤¹¡¥
@end table

@item -p
@itemx --no-renumber
@opindex -p
@opindex --no-renumber
@c Do not reset the line number at the start of a logical page.
@c 
ÏÀÍý¥Ú¡¼¥¸¤ÎºÇ½é¤Ç¡¤¹ÔÈÖ¹æ¤ò¥ê¥»¥Ã¥È¤·¤Þ¤»¤ó¡¥

@item -s @var{string}
@itemx --number-separator=@var{string}
@opindex -s
@opindex --number-separator
@c Separate the line number from the text line in the output with
@c @var{string} (default is the TAB character).
@c 
½ÐÎÏ¤Ç¡¤@var{string}¤ò»È¤Ã¤Æ(¥Ç¥Õ¥©¥ë¥È¤ÏTABÊ¸»ú)¥Æ¥­¥¹¥È¹Ô¤È¹ÔÈÖ¹æ¤ò
Ê¬Î¥¤·¤Þ¤¹¡¥

@item -v @var{number}
@itemx --starting-line-number=@var{number}
@opindex -v
@opindex --starting-line-number
@c Set the initial line number on each logical page to @var{number} (default 1).
@c 
¤½¤ì¤¾¤ì¤ÎÏÀÍý¥Ú¡¼¥¸¤Î¹ÔÈÖ¹æ¤Î½é´üÃÍ¤ò¡¤@var{number}(¥Ç¥Õ¥©¥ë¥È¤Ï1)¤Ë
ÀßÄê¤·¤Þ¤¹¡¥

@item -w @var{number}
@itemx --number-width=@var{number}
@opindex -w
@opindex --number-width
@c Use @var{number} characters for line numbers (default 6).
@c 
¹ÔÈÖ¹æ¤Ë¡¤@var{number}Ê¸»ú»È¤¤¤Þ¤¹(¥Ç¥Õ¥©¥ë¥È¤Ï6)¡¥

@end table

@exitstatus


@node od invocation
@c @section @command{od}: Write files in octal or other formats
@section @command{od}: È¬¿Ê¿ô¤ä¤½¤ÎÂ¾¤Î½ñ¼°¤Ç¥Õ¥¡¥¤¥ë¤ò½ñ¤­½Ð¤¹

@pindex od
@cindex octal dump of files
@cindex hex dump of files
@cindex ASCII dump of files
@cindex file contents, dumping unambiguously

@c @command{od} writes an unambiguous representation of each @var{file}
@c (@samp{-} means standard input), or standard input if none are given.
@c Synopses:
@c 
@command{od}¤Ï¡¤¤½¤ì¤¾¤ì¤Î@var{file}(@samp{-}¤ÏÉ¸½àÆþÎÏ¤ò°ÕÌ£¤·¤Þ¤¹)¤ä¡¤
Í¿¤¨¤é¤ì¤Ê¤¤¾ì¹ç¤ÏÉ¸½àÆþÎÏ¤òÌÀÎÆ¤ÊÉ½¸½¤Ç½ñ¤­½Ð¤·¤Þ¤¹¡¥³µÍ×¤Ç¤¹¡¥

@example
od [@var{option}]@dots{} [@var{file}]@dots{}
od --traditional [@var{file}] [[+]@var{offset} [[+]@var{label}]]
@end example

@c Each line of output consists of the offset in the input, followed by
@c groups of data from the file. By default, @command{od} prints the offset in
@c octal, and each group of file data is two bytes of input printed as a
@c single octal number.
@c 
¤½¤ì¤¾¤ì¤Î½ÐÎÏ¹Ô¤Ï¡¤ÆþÎÏ¥ª¥Õ¥»¥Ã¥È¤È¤½¤ì¤ËÂ³¤¯¥Õ¥¡¥¤¥ë¥Ç¡¼¥¿¤Î¥°¥ë¡¼¥×
¤«¤éÀ®¤êÎ©¤Á¤Þ¤¹¡¥¥Ç¥Õ¥©¥ë¥È¤Ç¡¤@command{od}¤ÏÈ¬¿Ê¿ô¤Ç¥ª¥Õ¥»¥Ã¥È¤ò½ÐÎÏ
¤·¡¤¤½¤ì¤¾¤ì¤Î¥Õ¥¡¥¤¥ë¤Î¥Ç¡¼¥¿¥°¥ë¡¼¥×¤Ï¡¤°ì¤Ä¤ÎÈ¬¿Ê¿ô¤È¤·¤Æ½ÐÎÏ¤µ¤ì¤ë
ÆþÎÏ¤«¤é¤ÎÆó¥Ð¥¤¥È¤Ç¤¹¡¥

@c The program accepts the following options.  Also see @ref{Common options}.
@c 
¥×¥í¥°¥é¥à¤Ï°Ê²¼¤Î¥ª¥×¥·¥ç¥ó¤ò¼õ¤±Æþ¤ì¤Þ¤¹¡¥@ref{Common options}¤â»²¾È
¤·¤Æ¤¯¤À¤µ¤¤¡¥

@table @samp

@item -A @var{radix}
@itemx --address-radix=@var{radix}
@opindex -A
@opindex --address-radix
@cindex radix for file offsets
@cindex file offset radix
@c Select the base in which file offsets are printed.  @var{radix} can
@c be one of the following:
@c 
½ÐÎÏ¤¹¤ë¥Õ¥¡¥¤¥ë¥ª¥Õ¥»¥Ã¥È¤Î´ð¿ô¤òÁªÂò¤·¤Þ¤¹¡¥@var{radix}¤Ï¡¤°Ê²¼¤Î°ì
¤Ä¤¬»ÈÍÑ²ÄÇ½¤Ç¤¹¡¥

@table @samp
@item d
@c decimal;
@c 
½½¿Ê¿ô¡¥
@item o
@c octal;
@c 
È¬¿Ê¿ô¡¥
@item x
@c hexadecimal;
@c 
16¿Ê¿ô¡¥
@item n
@c none (do not print offsets).
@c 
¤Ê¤·(½ÐÎÏ¥ª¥Õ¥»¥Ã¥È¤ò½ÐÎÏ¤·¤Þ¤»¤ó)¡¥
@end table

@c The default is octal.
@c 
¥Ç¥Õ¥©¥ë¥È¤ÏÈ¬¿Ê¿ô¤Ç¤¹¡¥

@item -j @var{bytes}
@itemx --skip-bytes=@var{bytes}
@opindex -j
@opindex --skip-bytes
@c Skip @var{bytes} input bytes before formatting and writing.  If
@c @var{bytes} begins with @samp{0x} or @samp{0X}, it is interpreted in
@c hexadecimal; otherwise, if it begins with @samp{0}, in octal; otherwise,
@c in decimal.  Appending @samp{b} multiplies @var{bytes} by 512, @samp{k}
@c by 1024, and @samp{m} by 1048576.
@c 
½ñ¼°²½¤È½ñ¤­½Ð¤·¤ÎÁ°¤Ë¡¤ÆþÎÏ¥Ð¥¤¥È¤Î@var{bytes}¥¹¥­¥Ã¥×¤·¤Þ¤¹¡¥
@var{bytes}¤¬@samp{0x}¤ä@samp{0X}¤Ç»Ï¤Þ¤ë¾ì¹ç¡¤16¿Ê¿ô¤È²ò¼á¤µ¤ì¤Þ¤¹¡¥
¤½¤ì°Ê³°¤Ç@samp{0}¤Ç»Ï¤Þ¤ë¾ì¹ç¤ÏÈ¬¿Ê¿ô¡¥¤½¤ì°Ê³°¤Ç¤Ï½½¿Ê¿ô¤Ç¤¹¡¥
@samp{b}¤ÎÄÉ²Ã¤Ç@var{bytes}¤ò512ÇÜ¤·¡¤@samp{k}¤Ï1024ÇÜ¡¤¤½¤·¤Æ@samp{m} 
¤Ï1048576ÇÜ¤·¤Þ¤¹¡¥

@item -N @var{bytes}
@itemx --read-bytes=@var{bytes}
@opindex -N
@opindex --read-bytes
@c Output at most @var{bytes} bytes of the input.  Prefixes and suffixes on
@c @code{bytes} are interpreted as for the @option{-j} option.
@c 
ÆþÎÏ¤ÎºÇÂç@var{bytes}¥Ð¥¤¥È¤ò½ÐÎÏ¤·¤Þ¤¹¡¥@code{bytes}¤ËÂÐ¤¹¤ëÀÜÆ¬¼­¤È
ÀÜÈø»Ò¤Ï¡¤@option{-j}¤Î¤â¤Î¤ÈÆ±¤¸¤è¤¦¤Ë²ò¼á¤µ¤ì¤Þ¤¹¡¥

@item -s @var{n}
@itemx --strings[=@var{n}]
@opindex -s
@opindex --strings
@cindex string constants, outputting
@c Instead of the normal output, output only @dfn{string constants}: at
@c least @var{n} consecutive @acronym{ASCII} graphic characters,
@c followed by a null (zero) byte.
@c 
ÄÌ¾ï¤Î½ÐÎÏ¤ÎÂå¤ï¤ê¤Ë¡¤@dfn{Ê¸»úÎóÄê¿ô(string constants)}¤À¤±¤ò½ÐÎÏ¤·¤Þ
¤¹¡¥¤½¤ì¤Ï¡¤¾¯¤Ê¤¯¤È¤â@var{n}¸Ä¤ÎÏ¢Â³¤·¤¿@acronym{ASCII}¤Î°õ»ú²ÄÇ½¤ÊÊ¸
»ú¤Ç¡¤¤½¤ì¤Ë¤Ïnull(¥¼¥í)¥Ð¥¤¥È¤¬Â³¤­¤Þ¤¹¡¥

@c If @var{n} is omitted with @option{--strings}, the default is 3.  On
@c older systems, @sc{gnu} @command{od} instead supports an obsolete
@c option @option{-s[@var{n}]}, where @var{n} also defaults to 3.
@c @acronym{POSIX} 1003.1-2001 (@pxref{Standards conformance}) does not allow
@c @option{-s} without an argument; use @option{--strings} instead.
@c 
@option{--strings}¤Ç@var{n}¤¬¾ÊÎ¬¤µ¤ì¤Æ¤¤¤ë¾ì¹ç¡¤¥Ç¥Õ¥©¥ë¥È¤Ï3¤Ç¤¹¡¥¸Å
¤¤¥·¥¹¥Æ¥à¤Ç¤Ï¡¤@sc{gnu} @command{od}¤Ï»þÂåÃÙ¤ì¤Î¥ª¥×¥·¥ç¥ó
@option{-s[@var{n}]}¤ò¥µ¥Ý¡¼¥È¤·¤Æ¤¤¤Æ¡¤¤½¤³¤Ç¤Î@var{n}¤Î¥Ç¥Õ¥©¥ë¥È¤â3 
¤Ç¤¹¡¥@acronym{POSIX} 1003.1-2001 (@pxref{Standards conformance})¤Ç¤Ï¡¤
°ú¿ô¤òÍÑ¤¤¤Ê¤¤@option{-s}¤Ïµö²Ä¤µ¤ì¤Þ¤»¤ó¡¥Âå¤ï¤ê¤Ë@option{--strings} 
¤ò»ÈÍÑ¤·¤Æ¤¯¤À¤µ¤¤¡¥

@item -t @var{type}
@itemx --format=@var{type}
@opindex -t
@opindex --format
@c Select the format in which to output the file data.  @var{type} is a
@c string of one or more of the below type indicator characters.  If you
@c include more than one type indicator character in a single @var{type}
@c string, or use this option more than once, @command{od} writes one copy
@c of each output line using each of the data types that you specified,
@c in the order that you specified.
@c 
¥Õ¥¡¥¤¥ë¥Ç¡¼¥¿¤Î½ÐÎÏ½ñ¼°¤òÁªÂò¤·¤Þ¤¹¡¥@var{type}¤Ï¡¤°Ê²¼¤Î·Á¼°¤ò¼¨¤¹Ê¸
»ú¤Î°ì¤Ä°Ê¾å¤ÎÊ¸»úÎó¤Ç¤¹¡¥Ã±°ì¤Î@var{type}Ê¸»úÎó¤Ë¡¤°ì¤Ä°Ê¾å¤Î·Á¼°¤ò¼¨
¤¹Ê¸»ú¤ò´Þ¤á¤¿¤ê¡¤°ì²ó°Ê¾å¤³¤Î¥ª¥×¥·¥ç¥ó¤ò»ÈÍÑ¤·¤¿¾ì¹ç¡¤@command{od}¤Ï¡¤
¤½¤ì¤¾¤ì¤Î»ØÄê¤·¤¿¥Ç¡¼¥¿·Á¼°¤òÍÑ¤¤¤Æ¡¤¤½¤ì¤¾¤ì¤Î½ÐÎÏ¹Ô¤Î¥³¥Ô¡¼¤ò¡¤»ØÄê
¤·¤¿½çÈÖ¤Ç½ñ¤­½Ð¤·¤Þ¤¹¡¥

@c Adding a trailing ``z'' to any type specification appends a display
@c of the @acronym{ASCII} character representation of the printable characters
@c to the output line generated by the type specification.
@c 
¤¢¤é¤æ¤ë·Á¼°»ØÄê¤Î½ª¤ê¤Ë``z''¤ò²Ã¤¨¤ë¤³¤È¤Ç¡¤·Á¼°»ØÄê¤ÇÀ¸À®¤µ¤ì¤¿½ÐÎÏ
¹Ô¤Ë¡¤°õºþ²ÄÇ½¤ÊÊ¸»ú¤ËÂ¸ºß¤¹¤ë@acronym{ASCII}Ê¸»ú¤ÎÉ½¼¨¤ò²Ã¤¨¤Þ¤¹¡¥

@table @samp
@item a
@c named character
@c 
»ØÌ¾¤µ¤ì¤¿Ê¸»ú¡¥
@item c
@c @acronym{ASCII} character or backslash escape,
@c 
@acronym{ASCII}Ê¸»ú¡¤¤Þ¤¿¤Ï¥Ð¥Ã¥¯¥¹¥é¥Ã¥·¥å¥¨¥¹¥±¡¼¥×¡¥
@item d
@c signed decimal
@c 
Éä¹æÉÕ¤­½½¿Ê¿ô¡¥
@item f
@c floating point
@c 
ÉâÆ°¾®¿ôÅÀ¡¥
@item o
@c octal
@c 
È¬¿Ê¿ô¡¥
@item u
@c unsigned decimal
@c 
Éä¹æÌµ¤·½½¿Ê¿ô¡¥
@item x
@c hexadecimal
@c 
16¿Ê¿ô¡¥
@end table

@c The type @code{a} outputs things like @samp{sp} for space, @samp{nl} for
@c newline, and @samp{nul} for a null (zero) byte.  Type @code{c} outputs
@c @samp{ }, @samp{\n}, and @code{\0}, respectively.
@c 
·Á¼°@code{a}¤Ï¡¤¥¹¥Ú¡¼¥¹¤ËÂÐ¤·@samp{sp}¡¤²þ¹Ô¤ËÂÐ¤·@samp{nl}¡¤¤½¤·¤Æ
null(¥¼¥í)¥Ð¥¤¥È¤ËÂÐ¤·@samp{nul}¤Î¤è¤¦¤Ê¤â¤Î¤ò½ÐÎÏ¤·¤Þ¤¹¡¥·Á¼°@code{c} 
¤Ï¡¤¤½¤ì¤¾¤ì@samp{ }¡¤@samp{\n}¡¤¤½¤·¤Æ@code{\0}¤ò½ÐÎÏ¤·¤Þ¤¹¡¥

@cindex type size
@c Except for types @samp{a} and @samp{c}, you can specify the number
@c of bytes to use in interpreting each number in the given data type
@c by following the type indicator character with a decimal integer.
@c Alternately, you can specify the size of one of the C compiler's
@c built-in data types by following the type indicator character with
@c one of the following characters.  For integers (@samp{d}, @samp{o},
@c @samp{u}, @samp{x}):
@c 
@samp{a}¤È@samp{c}°Ê³°¤Î·Á¼°¤ËÂÐ¤·¡¤¤½¤ì¤¾¤ì¤Î¿ô»ú¤Î²ò¼á¤Ë»ÈÍÑ¤¹¤ë¥Ð¥¤
¥È¿ô¤ò¡¤°Ê²¼¤Î½½¿Ê¤ÎÀ°¿ô¤òÍÑ¤¤¤¿·Á¼°¤ò¼¨¤¹Ê¸»ú¤ÇÍ¿¤¨¤é¤ì¤Æ¤¤¤ë¥Ç¡¼¥¿·Á
¼°¤Ç»ØÄê¤¹¤ë¤³¤È¤¬¤Ç¤­¤Þ¤¹¡¥Âå¤ï¤ê¤Ë¡¤°Ê²¼¤ÎÊ¸»ú¤Î°ì¤Ä¤òÍÑ¤¤¤¿·Á¼°¤ò¼¨
¤¹Ê¸»ú¤Ç¡¤C¥³¥ó¥Ñ¥¤¥éÁÈ¹þ¤ß¤Î¥Ç¡¼¥¿·Á¼°¤ò»ØÄê¤¹¤ë¤³¤È¤â²ÄÇ½¤Ç¤¹¡¥À°¿ô
(@samp{d}¡¤@samp{o}¡¤@samp{u}¡¤@samp{x})¤ËÂÐ¤·¤Æ¤Ï°Ê²¼¤Î¤è¤¦¤Ë¤Ê¤ê¤Þ¤¹¡¥

@table @samp
@item C
char
@item S
short
@item I
int
@item L
long
@end table

@c For floating point (@code{f}):
@c 
ÉâÆ°¾®¿ôÅÀ(@code{f})¤ËÂÐ¤·¤Æ¤Ï°Ê²¼¤Î¤è¤¦¤Ë¤Ê¤ê¤Þ¤¹¡¥
@table @asis
@item F
float
@item D
double
@item L
long double
@end table

@item -v
@itemx --output-duplicates
@opindex -v
@opindex --output-duplicates
@c Output consecutive lines that are identical.  By default, when two or
@c more consecutive output lines would be identical, @command{od} outputs only
@c the first line, and puts just an asterisk on the following line to
@c indicate the elision.
@c 
Æ±°ì¤ÎÏ¢Â³¤·¤¿¹Ô¤ò½ÐÎÏ¤·¤Þ¤¹¡¥¥Ç¥Õ¥©¥ë¥È¤Ç¡¤Æó¹Ô°Ê¾åÏ¢Â³¤·¤¿½ÐÎÏ¹Ô¤¬Æ±
°ì¤Î¤È¤­¡¤@command{od}¤ÏºÇ½é¤Î¹Ô¤Î¤ß½ÐÎÏ¤·¡¤¤½¤ì°Ê²¼¤Î¹Ô¤Ë¤Ï¾ÊÎ¬¤ò¼¨¤¹
¤¿¤á¥¢¥¹¥¿¥ê¥¹¥¯¤À¤±¤ò½ñ¤­¤Þ¤¹¡¥

@item -w @var{n}
@itemx --width[=@var{n}]
@opindex -w
@opindex --width
@c Dump @code{n} input bytes per output line.  This must be a multiple of
@c the least common multiple of the sizes associated with the specified
@c output types.
@c 
½ÐÎÏ¹Ô¤´¤È¤Ë¡¤@code{n}ÆþÎÏ¥Ð¥¤¥È¤ò¥À¥ó¥×¤·¤Þ¤¹¡¥¤³¤ì¤Ï¡¤½ÐÎÏ·Á¼°¤Ç»ØÄê
¤·¤¿¤â¤Î¤Ë´ØÏ¢¤¹¤ë¥µ¥¤¥º¤ÎºÇ¾®¸øÇÜ¿ô¤ÎÇÜ¿ô¤Ë¤¹¤ëÉ¬Í×¤¬¤¢¤ê¤Þ¤¹¡¥

@c If this option is not given at all, the default is 16.  If @var{n} is
@c omitted with @option{--width}, the default is 32.  On older systems,
@c @sc{gnu} @command{od} instead supports an obsolete option
@c @option{-w[@var{n}]}, where @var{n} also defaults to 32.  @acronym{POSIX}
@c 1003.1-2001 (@pxref{Standards conformance}) does not allow @option{-w}
@c without an argument; use @option{--width} instead.
@c 
¤³¤Î¥ª¥×¥·¥ç¥ó¤¬Á´¤¯»ØÄê¤µ¤ì¤Æ¤¤¤Ê¤¤¾ì¹ç¡¤¥Ç¥Õ¥©¥ë¥È¤Ï16¤Ç¤¹¡¥
@option{--width}¤Ç@var{n}¤¬¾ÊÎ¬¤µ¤ì¤Æ¤¤¤ë¾ì¹ç¡¤¥Ç¥Õ¥©¥ë¥È¤Ï32¤Ç¤¹¡¥¸Å
¤¤¥·¥¹¥Æ¥à¤Ç¤Ï¡¤@sc{gnu} @command{od}¤Ï»þÂåÃÙ¤ì¤Î¥ª¥×¥·¥ç¥ó
@option{-w[@var{n}]}¤òÂå¤ï¤ê¤Ë¥µ¥Ý¡¼¥È¤·¤Æ¤¤¤Æ¡¤¤½¤³¤Ç¤Î@var{n}¤Î¥Ç¥Õ¥©
¥ë¥È¤â32¤Ç¤¹¡¥@acronym{POSIX} 1003.1-2001 (@pxref{Standards
conformance})¤Ç¤Ï¡¤°ú¿ô¤òÍÑ¤¤¤Ê¤¤@option{-w}¤òµö²Ä¤·¤Æ¤¤¤Þ¤»¤ó¡¥Âå¤ï¤ê
¤Ë@option{--width}¤ò»ÈÍÑ¤·¤Æ¤¯¤À¤µ¤¤¡¥

@end table

@c The next several options are shorthands for format specifications.
@c @sc{gnu} @command{od} accepts any combination of shorthands and format
@c specification options.  These options accumulate.
@c 
¼¡¤Î¤¤¤¯¤Ä¤«¤Î¥ª¥×¥·¥ç¥ó¤Ï¡¤½ñ¼°»ØÄê¤ÎÃ»¤¤¤â¤Î¤Ç¤¹¡¥@sc{gnu}
@command{od}¤Ï¡¤Ã»¤¤¤â¤Î¤È½ñ¼°»ØÄê¤Î¥ª¥×¥·¥ç¥ó¤Î¤¢¤é¤æ¤ëÁÈ¤ß¹ç¤ï¤»¤ò¼õ
¤±Æþ¤ì¤Þ¤¹¡¥¤³¤ì¤é¤Î¥ª¥×¥·¥ç¥ó¤ÏÎßÀÑ¤µ¤ì¤Þ¤¹¡¥

@table @samp

@item -a
@opindex -a
@c Output as named characters.  Equivalent to @option{-ta}.
@c 
»ØÌ¾¤µ¤ì¤¿Ê¸»ú¤È¤·¤Æ½ÐÎÏ¤·¤Þ¤¹¡¥@option{-ta}¤ÈÅù²Á¤Ç¤¹¡¥

@item -b
@opindex -b
@c Output as octal bytes.  Equivalent to @option{-toC}.
@c 
È¬¿Ê¿ô¤Î¥Ð¥¤¥È¤È¤·¤Æ½ÐÎÏ¤·¤Þ¤¹¡¥@option{-toC}¤ÈÅù²Á¤Ç¤¹¡¥

@item -c
@opindex -c
@c Output as @acronym{ASCII} characters or backslash escapes.  Equivalent to
@c @option{-tc}.
@c 
@acronym{ASCII}Ê¸»ú¤ä¥Ð¥Ã¥¯¥¹¥é¥Ã¥·¥å¥¨¥¹¥±¡¼¥×¤È¤·¤Æ½ÐÎÏ¤·¤Þ¤¹¡¥
@option{-tc}¤ÈÅù²Á¤Ç¤¹¡¥

@item -d
@opindex -d
@c Output as unsigned decimal shorts.  Equivalent to @option{-tu2}.
@c 
Éä¹æÌµ¤·¤Î½½¿Ê¿ô¤Îshort¤È¤·¤Æ½ÐÎÏ¤·¤Þ¤¹¡¥@option{-tu2}¤ÈÅù²Á¤Ç¤¹¡¥

@item -f
@opindex -f
@c Output as floats.  Equivalent to @option{-tfF}.
@c 
ÉâÆ°¾®¿ôÅÀ¤È¤·¤Æ½ÐÎÏ¤·¤Þ¤¹¡¥@option{-tfF}¤ÈÅù²Á¤Ç¤¹¡¥

@item -h
@opindex -h
@c Output as hexadecimal shorts.  Equivalent to @option{-tx2}.
@c 
16¿Ê¿ô¤Îshort¤È¤·¤Æ½ÐÎÏ¤·¤Þ¤¹¡¥@option{-tx2}¤ÈÅù²Á¤Ç¤¹¡¥

@item -i
@opindex -i
@c Output as decimal shorts.  Equivalent to @option{-td2}.
@c 
½½¿Ê¿ô¤Îshort¤È¤·¤Æ½ÐÎÏ¤·¤Þ¤¹¡¥@option{-td2}¤ÈÅù²Á¤Ç¤¹¡¥

@item -l
@opindex -l
@c Output as decimal longs.  Equivalent to @option{-td4}.
@c 
½½¿Ê¿ô¤Îlong¤È¤·¤Æ½ÐÎÏ¤·¤Þ¤¹¡¥@option{-td4}¤ÈÅù²Á¤Ç¤¹¡¥

@item -o
@opindex -o
@c Output as octal shorts.  Equivalent to @option{-to2}.
@c 
È¬¿Ê¿ô¤Îshort¤È¤·¤Æ½ÐÎÏ¤·¤Þ¤¹¡¥@option{-to2}¤ÈÅù²Á¤Ç¤¹¡¥

@item -x
@opindex -x
@c Output as hexadecimal shorts.  Equivalent to @option{-tx2}.
@c 
16¿Ê¿ô¤Îshort¤È¤·¤Æ½ÐÎÏ¤·¤Þ¤¹¡¥@option{-tx2}¤ÈÅù²Á¤Ç¤¹¡¥

@item --traditional
@opindex --traditional
@c Recognize the non-option arguments that traditional @command{od}
@c accepted.  The following syntax:
@c 
ÅÁÅýÅª¤Ê@command{od}¤¬¼õ¤±Æþ¤ì¤ë¡¤¥ª¥×¥·¥ç¥ó°ú¿ô¤¬Ìµ¤¤¤â¤Î¤È¤·¤ÆÇ§¼±¤·
¤Þ¤¹¡¥°Ê²¼¤Î¹½Ê¸¤Ç¤¹¡¥

@smallexample
od --traditional [@var{file}] [[+]@var{offset}[.][b] [[+]@var{label}[.][b]]]
@end smallexample

@noindent
@c can be used to specify at most one file and optional arguments
@c specifying an offset and a pseudo-start address, @var{label}.  By
@c default, @var{offset} is interpreted as an octal number specifying how
@c many input bytes to skip before formatting and writing.  The optional
@c trailing decimal point forces the interpretation of @var{offset} as a
@c decimal number.  If no decimal is specified and the offset begins with
@c @samp{0x} or @samp{0X} it is interpreted as a hexadecimal number.  If
@c there is a trailing @samp{b}, the number of bytes skipped will be
@c @var{offset} multiplied by 512.  The @var{label} argument is interpreted
@c just like @var{offset}, but it specifies an initial pseudo-address.  The
@c pseudo-addresses are displayed in parentheses following any normal
@c address.
@c 
¤³¤ì¤Ï¡¤ºÇÂç°ì¤Ä¤Î¥Õ¥¡¥¤¥ë¤È¡¤¥ª¥×¥·¥ç¥ó°ú¿ô¤Ç»ØÄê¤·¤Æ¤¤¤ë¥ª¥Õ¥»¥Ã¥È¤È
µ¿»÷¥¹¥¿¡¼¥È¥¢¥É¥ì¥¹¡¤@var{label}¤ò»ØÄê¤¹¤ë¤¿¤á¤Ë»ÈÍÑ¤¹¤ë¤³¤È¤¬²ÄÇ½¤Ç
¤¹¡¥¥Ç¥Õ¥©¥ë¥È¤Ç¡¤@var{offset}¤Ï¡¤½ñ¼°²½¤È½ñ¤­½Ð¤·¤ÎÁ°¤Ë¥¹¥­¥Ã¥×¤¹¤ëÆþ
ÎÏ¥Ð¥¤¥È¤ÎÎÌ¤¬È¬¿Ê¿ô¤Ç»ØÄê¤µ¤ì¤Æ¤¤¤ë¤È²ò¼á¤µ¤ì¤Þ¤¹¡¥¥ª¥×¥·¥ç¥ó¤Ç½½¿Ê¿ô
¤Î°ÌÃÖ¤ò¸åÃÖ¤¹¤ë¤È¡¤@var{offset}¤Î²ò¼á¤Ï¶¯À©Åª¤Ë½½¿Ê¿ô¤È¤·¤Þ¤¹¡¥½½¿Ê¿ô
¤¬»ØÄê¤µ¤ì¤Æ¤ª¤é¤º¡¤¥ª¥Õ¥»¥Ã¥È¤¬@samp{0x}¤ä@samp{0X}¤Ç»Ï¤Þ¤ë¾ì¹ç¡¤¤½¤ì
¤Ï16¿Ê¿ô¤È¤·¤Æ²ò¼á¤µ¤ì¤Þ¤¹¡¥@samp{b}¤Î¸åÃÖ¤¬¤¢¤ë¾ì¹ç¡¤¥¹¥­¥Ã¥×¤µ¤ì¤ë¥Ð
¥¤¥È¿ô¤Ï@var{offset} ¤Î512ÇÜ¤Ë¤Ê¤ê¤Þ¤¹¡¥@var{label}°ú¿ô¤Ï¡¤
@var{offset}¤Î¤è¤¦¤Ë²ò¼á¤µ¤ì¤Þ¤¹¤¬¡¤¤½¤ì¤Ï½é´ü¤Îµ¿»÷¥¢¥É¥ì¥¹¤ò»ØÄê¤·¤Þ
¤¹¡¥µ¿»÷¥¢¥É¥ì¥¹¤Ï¡¤ÄÌ¾ï¤Î¥¢¥É¥ì¥¹¤ËÂ³¤¯¥«¥Ã¥³Æâ¤ËÉ½¼¨¤µ¤ì¤Þ¤¹¡¥

@end table

@exitstatus


@node Formatting file contents
@c @chapter Formatting file contents
@chapter ¥Õ¥¡¥¤¥ë¤ÎÆâÍÆ¤Î½ñ¼°²½

@cindex formatting file contents

@c These commands reformat the contents of files.
@c 
°Ê²¼¤Î¥³¥Þ¥ó¥É¤Ï¡¤¥Õ¥¡¥¤¥ë¤ÎÆâÍÆ¤òºÆ½ñ¼°²½¤·¤Þ¤¹¡¥

@menu
* fmt invocation::              Reformat paragraph text.
* pr invocation::               Paginate or columnate files for printing.
* fold invocation::             Wrap input lines to fit in specified width.
@end menu


@node fmt invocation
@c @section @command{fmt}: Reformat paragraph text
@section @command{fmt}: ÃÊÍî¤Î¥Æ¥­¥¹¥È¤òºÆ½ñ¼°²½¤¹¤ë¡¥

@pindex fmt
@cindex reformatting paragraph text
@cindex paragraphs, reformatting
@cindex text, reformatting

@c @command{fmt} fills and joins lines to produce output lines of (at most)
@c a given number of characters (75 by default).  Synopsis:
@c 
@command{fmt}¤Ï¡¤Í¿¤¨¤é¤ì¤¿(ºÇÂç)Ê¸»ú¿ô(¥Ç¥Õ¥©¥ë¥È¤Ï75)¤Î½ÐÎÏ¹Ô¤òÀ¸À®
¤¹¤ë¤¿¤á¤Ë¹Ô¤òÊä½¼¤··Ò¤²¤Þ¤¹¡¥³µÍ×¤Ç¤¹¡¥

@example
fmt [@var{option}]@dots{} [@var{file}]@dots{}
@end example

@c @command{fmt} reads from the specified @var{file} arguments (or standard
@c input if none are given), and writes to standard output.
@c 
@command{fmt}¤Ï¡¤»ØÄê¤µ¤ì¤¿@var{file}°ú¿ô(¤Þ¤¿¤Ï¡¤Í¿¤¨¤é¤ì¤Ê¤¤¾ì¹ç¤ÏÉ¸
½àÆþÎÏ)¤«¤é¥Õ¥¡¥¤¥ë¤òÆÉ¤ß¹þ¤ß¡¤É¸½à½ÐÎÏ¤Ë½ñ¤­½Ð¤·¤Þ¤¹¡¥

@c By default, blank lines, spaces between words, and indentation are
@c preserved in the output; successive input lines with different
@c indentation are not joined; tabs are expanded on input and introduced on
@c output.
@c 
¥Ç¥Õ¥©¥ë¥È¤Ç¡¤¶õÇò¹Ô¡¤Ã±¸ì´Ö¤Î¥¹¥Ú¡¼¥¹¡¤¤½¤·¤Æ»ú²¼¤²¤Ï½ÐÎÏ¤Ç°Ý»ý¤µ¤ì¤Þ
¤¹¡¥Ï¢Â³¤·¤¿ÆþÎÏ¹Ô¤Ç»ú²¼¤²¤¬°Û¤Ê¤ë¤â¤Î¤ÏÏ¢·ë¤µ¤ì¤Þ¤»¤ó¡¥ÆþÎÏ¤Î¥¿¥Ö¤ÏÅ¸
³«¤µ¤ì¡¤½ÐÎÏ¤Ë½ñ¤­¹þ¤Þ¤ì¤Þ¤¹¡¥

@cindex line-breaking
@cindex sentences and line-breaking
@cindex Knuth, Donald E.
@cindex Plass, Michael F.
@c @command{fmt} prefers breaking lines at the end of a sentence, and tries to
@c avoid line breaks after the first word of a sentence or before the last
@c word of a sentence.  A @dfn{sentence break} is defined as either the end
@c of a paragraph or a word ending in any of @samp{.?!}, followed by two
@c spaces or end of line, ignoring any intervening parentheses or quotes.
@c Like @TeX{}, @command{fmt} reads entire ``paragraphs'' before choosing line
@c breaks; the algorithm is a variant of that in ``Breaking Paragraphs Into
@c Lines'' (Donald E. Knuth and Michael F. Plass, @cite{Software---Practice
@c and Experience}, 11 (1981), 1119--1184).
@c 
@command{fmt}¤Ï¡¤Ê¸¤Î½ª¤ê¤Ç²þ¹Ô¤·¤è¤¦¤È¤·¡¤Ê¸¤ÎºÇ½é¤ÎÃ±¸ì¤Î¸å¤äÊ¸¤ÎºÇ
¸å¤ÎÃ±¸ì¤ÎÁ°¤Ç¤Î²þ¹Ô¤òÈò¤±¤è¤¦¤È¤·¤Þ¤¹¡¥@dfn{Ê¸¤ÎÀÚ¤ìÌÜ(sentence
break)}¤ÏÃÊÍî¤Î½ª¤ê¡¤¤Þ¤¿¤Ï¡¤@samp{.?!}¤Ç½ª¤ë¤¹¤Ù¤ÆÃ±¸ì¤Ë¡¤Æó¤Ä¤Î¥¹¥Ú¡¼
¥¹¤Þ¤¿¤Ï¹ÔËö¤¬Â³¤¯¤â¤Î¤ÈÄêµÁ¤µ¤ì¤Æ¤¤¤Æ¡¤¥«¥Ã¥³¤ä°úÍÑÉä¤ÎÆâÉô¤ÏÌµ»ë¤µ¤ì
¤Þ¤¹¡¥@TeX{}¤Î¤è¤¦¤Ë¡¤@command{fmt}¤Ï¹Ô¤ÎÊ¬³ä¤òÁªÂò¤¹¤ëÁ°¤Ë``ÃÊÍî''Á´
ÂÎ¤òÆÉ¤ß¹þ¤ß¤Þ¤¹¡¥¥¢¥ë¥´¥ê¥º¥à¤Ï``Breaking Paragraphs Into Lines(ÃÊÍî
¤ò¹Ô¤Ë¶èÀÚ¤ë)''¤ÎÊÑ¼ï¤Ç¤¹(Donald E. Knuth and Michael F. Plass,
@cite{Software---Practice and Experience}, 11 (1981), 1119--1184)¡¥

@c The program accepts the following options.  Also see @ref{Common options}.
@c 
¥×¥í¥°¥é¥à¤Ï°Ê²¼¤Î¥ª¥×¥·¥ç¥ó¤ò¼õ¤±Æþ¤ì¤Þ¤¹¡¥@ref{Common options}¤â»²¾È
¤·¤Æ¤¯¤À¤µ¤¤¡¥

@table @samp

@item -c
@itemx --crown-margin
@opindex -c
@opindex --crown-margin
@cindex crown margin
@c @dfn{Crown margin} mode: preserve the indentation of the first two
@c lines within a paragraph, and align the left margin of each subsequent
@c line with that of the second line.
@c 
@dfn{Crown margin}¥â¡¼¥É: ÃÊÍî¤ÎºÇ½é¤ÎÆó¹Ô¤Î»ú²¼¤²¤òÊÝÂ¸¤·¡¤¤½¤ì¤ËÂ³¤¯
¤½¤ì¤¾¤ì¤Î¹Ô¤Îº¸¤ÎÍ¾Çò¤ò¡¤Æó¹ÔÌÜ¤ÎÍ¾Çò¤ËÂ·¤¨¤Þ¤¹¡¥

@item -t
@itemx --tagged-paragraph
@opindex -t
@opindex --tagged-paragraph
@cindex tagged paragraphs
@c @dfn{Tagged paragraph} mode: like crown margin mode, except that if
@c indentation of the first line of a paragraph is the same as the
@c indentation of the second, the first line is treated as a one-line
@c paragraph.
@c 
@dfn{Tagged paragraph}¥â¡¼¥É: crown margin¥â¡¼¥É¤Ë»÷¤Æ¤¤¤Þ¤¹¤¬¡¤ÃÊÍî¤Î
ºÇ½é¤Î¹Ô¤Î»ú²¼¤¬Æó¹ÔÌÜ¤Î»ú²¼¤²¤ÈÆ±¤¸¾ì¹ç¡¤ºÇ½é¤Î¹Ô¤Ï°ì¹Ô¤ÎÃÊÍî¤È¤·¤Æ°·
¤ï¤ì¤Þ¤¹¡¥

@item -s
@itemx --split-only
@opindex -s
@opindex --split-only
@c Split lines only.  Do not join short lines to form longer ones.  This
@c prevents sample lines of code, and other such ``formatted'' text from
@c being unduly combined.
@c 
¹Ô¤ÎÊ¬³ä¤Î¤ß¤Ç¤¹¡¥Ã»¤¤¹Ô¤òÄ¹¤¤·Á¼°¤ËÏ¢·ë¤·¤Þ¤»¤ó¡¥¤³¤ì¤Ï¥³¡¼¥É¤Î¥µ¥ó¥×
¥ë¹Ô¤È¡¤¤½¤ÎÂ¾¤Î``½ñ¼°²½¤µ¤ì¤¿''¥Æ¥­¥¹¥È¤¬½¹¤¯Ï¢·ë¤µ¤ì¤ë¤³¤È¤òË¸¤²¤Þ¤¹¡¥

@item -u
@itemx --uniform-spacing
@opindex -u
@opindex --uniform-spacing
@c Uniform spacing.  Reduce spacing between words to one space, and spacing
@c between sentences to two spaces.
@c 
¥¹¥Ú¡¼¥¹¤ÎÉÕ¤±Êý¤òÅý°ì¤·¤Þ¤¹¡¥Ã±¸ì¤Î´Ö¤Î¥¹¥Ú¡¼¥¹¤ò°ì¤Ä¤Î¥¹¥Ú¡¼¥¹¤Ë¡¤¤½
¤·¤ÆÊ¸¤Î´Ö¤Î¥¹¥Ú¡¼¥¹¤òÆó¤Ä¤Î¥¹¥Ú¡¼¥¹¤Ë¸º¤é¤·¤Þ¤¹¡¥

@item -@var{width}
@itemx -w @var{width}
@itemx --width=@var{width}
@opindex -@var{width}
@opindex -w
@opindex --width
@c Fill output lines up to @var{width} characters (default 75).  @command{fmt}
@c initially tries to make lines about 7% shorter than this, to give it
@c room to balance line lengths.
@c 
½ÐÎÏ¥Õ¥¡¥¤¥ë¤ò@var{width}Ê¸»ú(¥Ç¥Õ¥©¥ë¥È¤Ï75)¤Þ¤ÇÊä½¼¤·¤Þ¤¹¡¥
@command{fmt}¤ÏºÇ½é¤Ë¡¤¤³¤ì¤è¤ê7%Ã»¤¤¹Ô¤Ë¤·¡¤¹Ô¤ÎÄ¹¤µ¤Î¥Ð¥é¥ó¥¹¤Î¤¿¤á
¤Î¶õ´Ö¤òÍ¿¤¨¤è¤¦¤È¤·¤Þ¤¹¡¥

@item -p @var{prefix}
@itemx --prefix=@var{prefix}
@c Only lines beginning with @var{prefix} (possibly preceded by whitespace)
@c are subject to formatting. The prefix and any preceding whitespace are
@c stripped for the formatting and then re-attached to each formatted output
@c line.  One use is to format certain kinds of program comments, while
@c leaving the code unchanged.
@c 
@var{prefix}(¶õÇò¤Ç»Ï¤á¤ë¤³¤È¤â²ÄÇ½¤Ç¤¹)¤Ç»Ï¤Þ¤ë¹Ô¤Î¤ß¡¤½ñ¼°²½¤òÅ¬ÍÑ¤·
¤Þ¤¹¡¥prefix¤ÈÁ°ÃÖ¤µ¤ì¤¿¤¢¤é¤æ¤ë¶õÇò¤Ï¡¤½ñ¼°²½¤Î¤¿¤á¼è¤ê½ü¤«¤ì¡¤¤½¤ì¤¾
¤ì¤Î½ÐÎÏ¹Ô¤ËºÆ¤Ó¼è¤êÉÕ¤±¤é¤ì¤Þ¤¹¡¥°ì¤Ä¤Î»ÈÍÑÊýË¡¤È¤·¤Æ¤Ï¡¤¤¢¤ë¼ï¤Î¥×¥í
¥°¥é¥à¤Î¥³¥á¥ó¥È¤Î½ñ¼°²½¤¬¤¢¤²¤é¤ì¡¤¤½¤³¤Ç¤Ï¥³¡¼¥É¤ÏÊÑ²½¤·¤Þ¤»¤ó¡¥

@end table

@exitstatus


@node pr invocation
@c @section @command{pr}: Paginate or columnate files for printing
@section @command{pr}: °õºþ¤Î¤¿¤á¤Î¥Õ¥¡¥¤¥ë¤Î¥Ú¡¼¥¸²½¤È¥³¥é¥à²½

@pindex pr
@cindex printing, preparing files for
@cindex multicolumn output, generating
@cindex merging files in parallel

@c @command{pr} writes each @var{file} (@samp{-} means standard input), or
@c standard input if none are given, to standard output, paginating and
@c optionally outputting in multicolumn format; optionally merges all
@c @var{file}s, printing all in parallel, one per column.  Synopsis:
@c 
@command{pr}¤Ï¡¤¤½¤ì¤¾¤ì¤Î@var{file}(@samp{-}¤ÏÉ¸½àÆþÎÏ¤ò°ÕÌ£¤·¤Þ¤¹)¤ä¡¤
Í¿¤¨¤é¤ì¤Ê¤¤¾ì¹ç¤ÏÉ¸½àÆþÎÏ¤ò¥Ú¡¼¥¸²½¤·¡¤¥ª¥×¥·¥ç¥ó¤ÇÊ£¿ôÎó¤Î½ñ¼°¤Ç¤Î½Ð
ÎÏ¤òÉ¸½à½ÐÎÏ¤Ë½ñ¤­½Ð¤·¤Þ¤¹¡¥¥ª¥×¥·¥ç¥ó¤Ç¡¤Á´¤Æ¤Î@var{file}¤ò·ë¹ç¤·°ìÎó
¤´¤È¤ËÊÂÎó¤ËÁ´¤Æ¤ò½ÐÎÏ¤·¤Þ¤¹¡¥³µÍ×¤Ç¤¹¡¥

@example
pr [@var{option}]@dots{} [@var{file}]@dots{}
@end example

@vindex LC_MESSAGES
@c By default, a 5-line header is printed at each page: two blank lines;
@c a line with the date, the filename, and the page count; and two more
@c blank lines.  A footer of five blank lines is also printed.
@c With the @option{-F}
@c option, a 3-line header is printed: the leading two blank lines are
@c omitted; no footer is used.  The default @var{page_length} in both cases is 66
@c lines.  The default number of text lines changes from 56 (without @option{-F})
@c to 63 (with @option{-F}).  The text line of the header takes the form
@c @samp{@var{date} @var{string} @var{page}}, with spaces inserted around
@c @var{string} so that the line takes up the full @var{page_width}.  Here,
@c @var{date} is the date (see the @option{-D} or @option{--date-format}
@c option for details), @var{string} is the centered header string, and
@c @var{page} identifies the page number.  The @env{LC_MESSAGES} locale
@c category affects the spelling of @var{page}; in the default C locale, it
@c is @samp{Page @var{number}} where @var{number} is the decimal page
@c number.
@c 
¥Ç¥Õ¥©¥ë¥È¤Ç¡¤¸Þ¹Ô¤Î¥Ø¥Ã¥À¤¬¤½¤ì¤¾¤ì¤Î¥Ú¡¼¥¸¤Ë½ÐÎÏ¤µ¤ì¤Þ¤¹¡¥Æó¹Ô¤Î¶õÇò
¹Ô¡¥ÆüÉÕ¡¤¥Õ¥¡¥¤¥ëÌ¾¡¤¤½¤·¤Æ¥Ú¡¼¥¸ÈÖ¹æ¤¬¤¢¤ë¹Ô¡¥¤µ¤é¤ËÆó¹Ô¤Ï¶õÇò¹Ô¤Ç¤¹¡¥
¤Þ¤¿¡¤¸Þ¹Ô¤Î¶õÇò¹Ô¤ò»ý¤Ä¥Õ¥Ã¥¿¤â½ÐÎÏ¤·¤Þ¤¹¡¥@option{-F}¥ª¥×¥·¥ç¥ó¤Ç¡¤
»°¹Ô¤Î¥Ø¥Ã¥À¤ò½ÐÎÏ¤·¤Þ¤¹¡¥ºÇ½é¤ÎÆó¹Ô¤Î¶õÇò¹Ô¤Ïºï½ü¤µ¤ì¤Þ¤¹¡¥¥Õ¥Ã¥¿¤Ï»È
ÍÑ¤µ¤ì¤Þ¤»¤ó¡¥¤É¤Á¤é¤Î¾ì¹ç¤Ç¤â¥Ç¥Õ¥©¥ë¥È¤Î@var{page_length}¤Ï66¹Ô¤Ç¤¹¡¥
¥Æ¥­¥¹¥È¹Ô¤Î¥Ç¥Õ¥©¥ë¥È¿ô¤Ï56(@option{-F}¤¬Ìµ¤¤¾ì¹ç)¤«¤é63(@option{-F} 
¤¬¤¢¤ë¾ì¹ç)¤Þ¤ÇÊÑ²½¤·¤Þ¤¹¡¥¥Ø¥Ã¥À¤Î¥Æ¥­¥¹¥È¹Ô¤Ï¡¤@samp{@var{date}
@var{string} @var{page}}¤Î·Á¼°¤Ç¡¤¹Ô¤¬@var{page_width}¤¤¤Ã¤Ñ¤¤¤Ë¤Ê¤ë¤è
¤¦¤Ë@var{string}¤Î¼þ¤ê¤Ë¥¹¥Ú¡¼¥¹¤¬ÁÞÆþ¤µ¤ì¤Þ¤¹¡¥¤³¤³¤Ç¡¤@var{date}¤ÏÆü
ÉÕ(¾ÜºÙ¤Ï¡¤@option{-D}¤ä@option{--date-format}¥ª¥×¥·¥ç¥ó¤ò»²¾È¤·¤Æ¤¯¤À
¤µ¤¤)¡¤@var{string}¤Ï¥»¥ó¥¿¥ê¥ó¥°¤µ¤ì¤¿¥Ø¥Ã¥ÀÊ¸»úÎó¡¤¤½¤·¤Æ@var{page} 
¤Ï¥Ú¡¼¥¸ÈÖ¹æ¤ò¼¨¤·¤Þ¤¹¡¥@env{LC_MESSAGES}¥í¥«¡¼¥ë¥«¥Æ¥´¥ê¤Ï@var{page} 
¤ÎÄÖ¤ê¤Ë±Æ¶Á¤·¤Þ¤¹¡¥¥Ç¥Õ¥©¥ë¥È¤ÎC¥í¥«¡¼¥ë¤Ç¤Ï@samp{Page @var{number}} 
¤Ë¤Ê¤ê¡¤@var{number}¤Ï½½¿Ê¿ô¤Î¥Ú¡¼¥¸ÈÖ¹æ¤Ç¤¹¡¥

@c Form feeds in the input cause page breaks in the output.  Multiple form
@c feeds produce empty pages.
@c 
ÆþÎÏ¤Î¥Õ¥©¡¼¥à¥Õ¥£¡¼¥É¤Ï¡¤½ÐÎÏ¤Ç²þ¥Ú¡¼¥¸¤È¤Ê¤ê¤Þ¤¹¡¥Ê£¿ô¤Î¥Õ¥©¡¼¥à¥Õ¥£¡¼
¥É¤Ï¶õ¤Î¥Ú¡¼¥¸¤òÀ¸À®¤·¤Þ¤¹¡¥

@c Columns are of equal width, separated by an optional string (default
@c is @samp{space}).  For multicolumn output, lines will always be truncated to
@c @var{page_width} (default 72), unless you use the @option{-J} option.
@c For single
@c column output no line truncation occurs by default.  Use @option{-W} option to
@c truncate lines in that case.
@c 
Îó¤ÏÆ±¤¸Éý¤Ç¡¤¥ª¥×¥·¥ç¥ó¤ÎÊ¸»úÎó(¥Ç¥Õ¥©¥ë¥È¤Ï@samp{space})¤ÇÊ¬¤±¤é¤ì¤Æ
¤¤¤Þ¤¹¡¥Ê£¿ôÎó¤Î½ÐÎÏ¤Ç¤Ï¡¤@option{-J}¥ª¥×¥·¥ç¥ó¤ò»ÈÍÑ¤·¤Æ¤¤¤Ê¤¤¾ì¹ç¡¤
¹Ô¤Ï¾ï¤Ë@var{page_width}(¥Ç¥Õ¥©¥ë¥È¤Ç72)¤ÇÀÚ¤êµÍ¤á¤é¤ì¤Þ¤¹¡¥Ã±°ìÎó¤Ç¤Î
½ÐÎÏ¤Ï¡¤¥Ç¥Õ¥©¥ë¥È¤Ç¤ÏÀÚ¤êµÍ¤á¤é¤ì¤Þ¤»¤ó¡¥¤½¤Î¾ì¹ç¡¤¹Ô¤òÀÚ¤êµÍ¤á¤ë¤¿¤á
@option{-W}¥ª¥×¥·¥ç¥ó¤ò»ÈÍÑ¤·¤Æ¤¯¤À¤µ¤¤¡¥

@c The following changes were made in version 1.22i and apply to later
@c versions of @command{pr}:
@c 
°Ê²¼¤ÎÊÑ¹¹¤Ï¡¤version 1.22i¤Ç¤Ê¤µ¤ì¡¤¤½¤ì°Ê¹ß¤Î@command{pr}¤Î¥Ð¡¼¥¸¥ç
¥ó¤ËÅ¬ÍÑ¤µ¤ì¤Æ¤¤¤Þ¤¹¡¥
@c FIXME: this whole section here sounds very awkward to me. I
@c made a few small changes, but really it all needs to be redone. - Brian
@c OK, I fixed another sentence or two, but some of it I just don't understand.
@ - Brian
@itemize @bullet

@item
@c Some small @var{letter options} (@option{-s}, @option{-w}) have been
@c redefined for better @acronym{POSIX} compliance.  The output of some further
@c cases has been adapted to other Unix systems.  These changes are not
@c compatible with earlier versions of the program.
@c 
¾®Ê¸»ú¤Î@var{letter options}(@option{-s}¡¤@option{-w})¤Ë¤Ï¡¤¤è¤êÎÉ¤¤
@acronym{POSIX}½àµò¤Î¤â¤Î¤ÇºÆÄêµÁ¤µ¤ì¤Æ¤¤¤ë¤â¤Î¤â¤¢¤ê¤Þ¤¹¡¥¤½¤ì°Ê³°¤Î
¾ì¹ç¤Ç¤Î½ÐÎÏ¤Ï¡¤Â¾¤ÎUnix¤ËÅ¬¹ç¤µ¤ì¤¿¤â¤Î¤â¤¢¤ê¤Þ¤¹¡¥¤³¤ì¤é¤ÎÊÑ¹¹¤Ï¡¤¥×
¥í¥°¥é¥à¤Î°ÊÁ°¤Î¥Ð¡¼¥¸¥ç¥ó¤È¸ß´¹À­¤¬¤¢¤ê¤Þ¤»¤ó¡¥

@item
@c Some @var{new capital letter} options (@option{-J}, @option{-S}, @option{-W})
@c have been introduced to turn off unexpected interferences of small letter
@c options.  The @option{-N} option and the second argument @var{last_page}
@c of @samp{+FIRST_PAGE} offer more flexibility.  The detailed handling of
@c form feeds set in the input files requires the @option{-T} option.
@c 
@var{new capital letter}¥ª¥×¥·¥ç¥ó(@option{-J}¡¤@option{-S}¡¤
@option{-W})¤Ë¤Ï¡¤¾®Ê¸»ú¤Î¥ª¥×¥·¥ç¥ó¤Ç¤ÎÍ½´ü¤»¤Ì¥¤¥ó¥¿¡¼¥Õ¥§¡¼¥¹¤ò¼è¤ê
¾Ã¤¹¤¿¤á¤ËÆ³Æþ¤µ¤ì¤¿¤â¤Î¤â¤¢¤ê¤Þ¤¹¡¥@option{-N}¥ª¥×¥·¥ç¥ó¤ÈÆóÈÖÌÜ¤Î°ú
¿ô@samp{+FIRST_PAGE}¤Î@var{last_page}¤Ç¡¤¤è¤ê½ÀÆðÀ­¤¬¹â¤¯¤Ê¤ê¤Þ¤¹¡¥Æþ
ÎÏ¥Õ¥¡¥¤¥ë¤Î¥Õ¥©¡¼¥à¥Õ¥£¡¼¥ÉÀßÄê¤ò¾ÜºÙ¤Ë°·¤¦¤¿¤á¡¤@option{-T}¥ª¥×¥·¥ç
¥ó¤¬É¬Í×¤Ë¤Ê¤ê¤Þ¤¹¡¥

@item
@c Capital letter options override small letter ones.
@c 
ÂçÊ¸»ú¤Î¥ª¥×¥·¥ç¥ó¤Ï¡¤¾®Ê¸»ú¤Î¤â¤Î¤ËÍ¥Àè¤·¤Þ¤¹¡¥

@item
@c Some of the option-arguments (compare @option{-s}, @option{-e},
@c @option{-i}, @option{-n}) cannot be specified as separate arguments from the
@c preceding option letter (already stated in the @acronym{POSIX} specification).
@c 
¥ª¥×¥·¥ç¥ó°ú¿ô¤Ë¤Ï(@option{-s}¡¤@option{-S}¡¤@option{-e}¡¤@option{-i}¡¤
@option{-n}¤ÈÈæ³Ó¤·¤Æ)¡¤(@acronym{POSIX}»ÅÍÍ¤Ç´û¤Ë½Ò¤Ù¤é¤ì¤¿)Á°ÃÖ¤µ¤ì
¤Æ¤¤¤ë¥ª¥×¥·¥ç¥óÊ¸»ú¤ÈÊ¬Î¥¤µ¤ì¤Æ¤¤¤ë°ú¿ô¤ò»ØÄê¤¹¤ë¤³¤È¤¬ÉÔ²ÄÇ½¤Ê¤â¤Î¤â
¤¢¤ê¤Þ¤¹¡¥
@end itemize

@c The program accepts the following options.  Also see @ref{Common options}.
@c 
¥×¥í¥°¥é¥à¤Ï°Ê²¼¤Î¥ª¥×¥·¥ç¥ó¤ò¼õ¤±Æþ¤ì¤Þ¤¹¡¥@ref{Common options}¤â»²¾È
¤·¤Æ¤¯¤À¤µ¤¤¡¥

@table @samp

@item +@var{first_page}[:@var{last_page}]
@itemx --pages=@var{first_page}[:@var{last_page}]
@c The two following @opindex lines evoke warnings because they contain `:'
@c The `info' spec does not permit that.  If we use those lines, we end
@c up with truncated index entries that don't work.
@c @opindex +@var{first_page}[:@var{last_page}]
@c @opindex --pages=@var{first_page}[:@var{last_page}]
@opindex +@var{page_range}
@opindex --pages=@var{page_range}
@c Begin printing with page @var{first_page} and stop with @var{last_page}.
@c Missing @samp{:@var{last_page}} implies end of file.  While estimating
@c the number of skipped pages each form feed in the input file results
@c in a new page.  Page counting with and without @samp{+@var{first_page}}
@c is identical.  By default, counting starts with the first page of input
@c file (not first page printed).  Line numbering may be altered by @option{-N}
@c option.
@c 
¥Ú¡¼¥¸@var{first_page}¤«¤é½ÐÎÏ¤ò³«»Ï¤·¡¤@var{last_page}¤ÇÄä»ß¤·¤Þ¤¹¡¥
@samp{:@var{last_page}}¤¬Ìµ¤¤¾ì¹ç¤Ï¡¤¥Õ¥¡¥¤¥ë¤Î½ª¤ê¤ò°ÅÌÛ¤Ë»ØÄê¤·¤Þ¤¹¡¥
Èô¤Ð¤µ¤ì¤¿¥Ú¡¼¥¸¿ô¤ò·×»»¤·¤Æ¤¤¤ë´Ö¡¤ÆþÎÏ¥Õ¥¡¥¤¥ë¤Î¤½¤ì¤¾¤ì¤Î¥Õ¥©¡¼¥à
¥Õ¥£¡¼¥É¤Ï¡¤·ë²Ì¤È¤·¤Æ¿·¤·¤¤¥Ú¡¼¥¸¤Ë¤Ê¤ê¤Þ¤¹¡¥@samp{+@var{first_page}} 
¤¬¤¢¤ë¾ì¹ç¤ÈÌµ¤¤¾ì¹ç¤Î¥Ú¡¼¥¸¤Î¿ô¤¨Êý¤ÏÆ±¤¸¤Ç¤¹¡¥¥Ç¥Õ¥©¥ë¥È¤Ç¡¤ÆþÎÏ¥Õ¥¡
¥¤¥ë¤ÎºÇ½é¤Î¥Ú¡¼¥¸¤Ç¥«¥¦¥ó¥È¤ò³«»Ï¤·¤Þ¤¹(ºÇ½é¤Î¥Ú¡¼¥¸¤Ï½ÐÎÏ¤µ¤ì¤Þ¤»¤ó)¡¥
¹Ô¤ÎÈÖ¹æÉÕ¤±¤Ï¡¤@option{-N}¥ª¥×¥·¥ç¥ó¤ÇÊÑ¹¹¤·¤Æ¤â¤«¤Þ¤¤¤Þ¤»¤ó¡¥

@item -@var{column}
@itemx --columns=@var{column}
@opindex -@var{column}
@opindex --columns
@cindex down columns
@c With each single @var{file}, produce @var{column} columns of output
@c (default is 1) and print columns down, unless @option{-a} is used.  The
@c column width is automatically decreased as @var{column} increases; unless
@c you use the @option{-W/-w} option to increase @var{page_width} as well.
@c This option might well cause some lines to be truncated.  The number of
@c lines in the columns on each page are balanced.  The options @option{-e}
@c and @option{-i} are on for multiple text-column output.  Together with
@c @option{-J} option column alignment and line truncation is turned off.
@c Lines of full length are joined in a free field format and @option{-S}
@c option may set field separators.  @option{-@var{column}} may not be used
@c with @option{-m} option.
@c 
¤½¤ì¤¾¤ìÃ±°ì@var{file}¤òÍÑ¤¤¤Æ¡¤@option{-a}¤¬»ÈÍÑ¤µ¤ì¤Ê¤¤¾ì¹ç¤Ï
@var{column}Îó(¥Ç¥Õ¥©¥ë¥È¤Ç1)¤Î½ÐÎÏ¤òÀ¸À®¤·Îó¤ò²¼¤Ø¸þ¤«¤Ã¤Æ½ÐÎÏ¤·¤Þ¤¹¡¥
Îó¤ÎÉý¤Ï¡¤@var{column}¤¬Áý²Ã¤¹¤ë¤Ë½¾¤¤¡¤¼«Æ°Åª¤Ë¸º¾¯¤·¤Þ¤¹¡¥
@var{page_width}¤òÁý²Ã¤µ¤»¤ë¤¿¤á¡¤@option{-W/-w}¤ò»ÈÍÑ¤·¤Æ¤¤¤Ê¤¤¾ì¹ç¤â
Æ±ÍÍ¤Ç¤¹¡¥¤³¤Î¥ª¥×¥·¥ç¥ó¤Ï¡¤¤¤¤¯¤Ä¤«¤Î¹Ô¤òÀÚ¤êµÍ¤á¤ë²ÄÇ½À­¤¬¤¢¤ê¤Þ¤¹¡¥
¤½¤ì¤¾¤ì¤Î¥Ú¡¼¥¸¤ÎÎó¤Î¹Ô¿ô¤ÏÊ¿¶Ñ²½¤µ¤ì¤Þ¤¹¡¥¥ª¥×¥·¥ç¥ó@option{-e}¤È
@option{-i}¤Ï¡¤Ê£¿ô¤Î¥Æ¥­¥¹¥ÈÎó¤Î½ÐÎÏ¤Î¤¿¤á¤Ë¤¢¤ê¤Þ¤¹¡¥@option{-J}¤ò¤È
¤â¤ËÍÑ¤¤¤ë¤È¡¤Îó¤ÎÀ°Îó¤È¹Ô¤ÎÀÚ¤êµÍ¤á¤ÏÄä»ß¤·¤Þ¤¹¡¥½½Ê¬¤ÊÄ¹¤µ¤Î¹Ô¤Ï¡¤¥Õ
¥ê¡¼¥Õ¥£¡¼¥ë¥É½ñ¼°¤ËÁÈ¤ß¹þ¤Þ¤ì¡¤@option{-S}¥ª¥×¥·¥ç¥ó¤Ï¥Õ¥£¡¼¥ë¥É¤òÊ¬
¤±¤ë²ÄÇ½À­¤¬¤¢¤ê¤Þ¤¹¡¥@option{-@var{column}}¤Ï@option{-m}¥ª¥×¥·¥ç¥ó¤È
¤È¤â¤Ë»ÈÍÑ¤·¤Æ¤Ï¤¤¤±¤Þ¤»¤ó¡¥

@item -a
@itemx --across
@opindex -a
@opindex --across
@cindex across columns
@c With each single @var{file}, print columns across rather than down.  The
@c @option{-@var{column}} option must be given with @var{column} greater than one.
@c If a line is too long to fit in a column, it is truncated.
@c 
¤½¤ì¤¾¤ìÃ±°ì@var{file}¤òÍÑ¤¤¡¤Îó¤ò²¼¤Ç¤Ï¤Ê¤¯²£¤Ë½ÐÎÏ¤·¤Þ¤¹¡¥
@option{-@var{column}}¥ª¥×¥·¥ç¥ó¤Ï¡¤°ìÎó°Ê¾å¤Î@var{column}¤ÇÍ¿¤¨¤ëÉ¬Í×
¤¬¤¢¤ê¤Þ¤¹¡¥Îó¤ËÅ¬¤µ¤Ê¤¤¤Û¤ÉÍ¾¤ê¤ËÄ¹¤¤¾ì¹ç¡¤¤½¤ì¤ÏÀÚ¤êµÍ¤á¤é¤ì¤Þ¤¹¡¥

@item -c
@itemx --show-control-chars
@opindex -c
@opindex --show-control-chars
@c Print control characters using hat notation (e.g., @samp{^G}); print
@c other nonprinting characters in octal backslash notation.  By default,
@c nonprinting characters are not changed.
@c 
¥Ï¥Ã¥ÈÉ½µ­¤Ç(Îã¤¨¤Ð¡¤@samp{^G})¤ò»ÈÍÑ¤·¤ÆÀ©¸æÊ¸»ú¤ò½ÐÎÏ¤·¤Þ¤¹¡¥È¬¿Ê¿ô
¤Î¥Ð¥Ã¥¯¥¹¥é¥Ã¥·¥åÉ½µ­¤Ç¡¤¤½¤ÎÂ¾¤Î°õºþÉÔ²ÄÇ½¤ÊÊ¸»ú¤òÉ½¼¨¤·¤Þ¤¹¡¥¥Ç¥Õ¥©
¥ë¥È¤Ç¡¤°õºþÉÔ²ÄÇ½¤ÊÊ¸»ú¤ÏÊÑ¹¹¤µ¤ì¤Þ¤»¤ó¡¥

@item -d
@itemx --double-space
@opindex -d
@opindex --double-space
@cindex double spacing
@c Double space the output.
@c 
¥À¥Ö¥ë¥¹¥Ú¡¼¥¹¤Î½ÐÎÏ¤Ç¤¹¡¥

@item -D @var{format}
@itemx --date-format=@var{format}
@cindex time formats
@cindex formatting times
@c Format header dates using @var{format}, using the same conventions as
@c for the the command @samp{date +@var{format}}; @xref{date invocation}.
@c Except for directives, which start with
@c @samp{%}, characters in @var{format} are printed unchanged.  You can use
@c this option to specify an arbitrary string in place of the header date,
@c e.g., @option{--date-format="Monday morning"}.
@c 
@var{format}¤ò»ÈÍÑ¤·¤Æ¥Ø¥Ã¥À¤ÎÆüÉÕ¤ò½ñ¼°²½¤·¡¤¤½¤ì¤Ï¥³¥Þ¥ó¥É@samp{date
+@var{format}}¤ÈÆ±¤¸´·½¬¤ò»ÈÍÑ¤·¤Þ¤¹¡¥@xref{date invocation}.
@samp{%}¤Ç»Ï¤Þ¤ë»Ø¼¨¸ì°Ê³°¡¤@var{format}Æâ¤ÎÊ¸»ú¤ÏÊÑ¹¹¤µ¤ì¤º¤Ë½ÐÎÏ¤µ¤ì
¤Þ¤¹¡¥¥Ø¥Ã¥À¤ÎÆüÉÕ¤Î¾ì½ê¤Ë¡¤Îã¤¨¤Ð@option{--date-format="Monday
morning"}¤Î¤è¤¦¤Ê¡¤Ç¤°Õ¤ÎÊ¸»úÎó¤ò»ØÄê¤¹¤ë¤¿¤á¤Ë¡¤¤³¤Î¥ª¥×¥·¥ç¥ó¤ò»ÈÍÑ
¤¹¤ë¤³¤È¤¬²ÄÇ½¤Ç¤¹¡¥

@vindex POSIXLY_CORRECT
@vindex LC_TIME
@c If the @env{POSIXLY_CORRECT} environment variable is not set, the date
@c format defaults to @samp{%Y-%m-%d %H:%M} (for example, @samp{2001-12-04
@c 23:59}); otherwise, the format depends on the @env{LC_TIME} locale
@c category, with the default being @samp{%b %e %H:%M %Y} (for example,
@c @samp{Dec@ @ 4 23:59 2001}.
@c 
@env{POSIXLY_CORRECT}´Ä¶­ÊÑ¿ô¤¬ÀßÄê¤µ¤ì¤Æ¤¤¤Ê¤¤¾ì¹ç¡¤ÆüÉÕ¤Î½ñ¼°¤Ï¥Ç¥Õ¥©
¥ë¥È¤Ç@samp{%Y-%m-%d %H:%M}¤Ç¤¹(Îã¤¨¤Ð¡¤@samp{2001-12-04 23:59})¡¥¤½¤ì
°Ê³°¤Î¾ì¹ç¡¤½ñ¼°¤Ï@env{LC_TIME}¥í¥«¡¼¥ë¥«¥Æ¥´¥ê¤Ë°ÍÂ¸¤·¡¤¥Ç¥Õ¥©¥ë¥È¤Ï
@samp{%b %e %H:%M %Y}(Îã¤¨¤Ð¡¤@samp{Dec@ @ 4 23:59 2001})¤Ë¤Ê¤ê¤Þ¤¹¡¥

@item -e[@var{in-tabchar}[@var{in-tabwidth}]]
@itemx --expand-tabs[=@var{in-tabchar}[@var{in-tabwidth}]]
@opindex -e
@opindex --expand-tabs
@cindex input tabs
@c Expand @var{tab}s to spaces on input.  Optional argument @var{in-tabchar} is
@c the input tab character (default is the TAB character).  Second optional
@c argument @var{in-tabwidth} is the input tab character's width (default
@c is 8).
@c 
ÆþÎÏ¤Î@var{tab}¤ò¥¹¥Ú¡¼¥¹¤ËÅ¸³«¤·¤Þ¤¹¡¥¥ª¥×¥·¥ç¥ó¤Î°ú¿ô
@var{in-tabchar}¤Ï¡¤ÆþÎÏ¤Î¥¿¥ÖÊ¸»ú(¥Ç¥Õ¥©¥ë¥È¤ÏTABÊ¸»ú)¤Ç¤¹¡¥ÆóÈÖÌÜ¤Î
¥ª¥×¥·¥ç¥ó°ú¿ô@var{in-tabwidth}¤Ï¡¤ÆþÎÏ¥¿¥ÖÊ¸»ú¤ÎÉý(¥Ç¥Õ¥©¥ë¥È¤Ï8)¤Ç¤¹¡¥

@item -f
@itemx -F
@itemx --form-feed
@opindex -F
@opindex -f
@opindex --form-feed
@c Use a form feed instead of newlines to separate output pages.  The default
@c page length of 66 lines is not altered.  But the number of lines of text
@c per page changes from default 56 to 63 lines.
@c 
½ÐÎÏ¥Ú¡¼¥¸¤òÊ¬¤±¤ë¤¿¤á¡¤²þ¹Ô¤ÎÂå¤ï¤ê¤Ë¥Õ¥©¡¼¥à¥Õ¥£¡¼¥É¤ò»ÈÍÑ¤·¤Þ¤¹¡¥¥Ç
¥Õ¥©¥ë¥È¥Ú¡¼¥¸¤ÎÄ¹¤µ¤Î66¹Ô¤ÏÊÑ¹¹¤µ¤ì¤Þ¤»¤ó¡¥¤·¤«¤·¡¤¥Ú¡¼¥¸¤´¤È¤Î¥Æ¥­¥¹
¥È¤Î¹Ô¿ô¤Ï¥Ç¥Õ¥©¥ë¥È¤Î56¹Ô¤«¤é63¹Ô¤ËÊÑ¹¹¤µ¤ì¤Þ¤¹¡¥

@item -h @var{HEADER}
@itemx --header=@var{HEADER}
@opindex -h
@opindex --header
@c Replace the filename in the header with the centered string @var{header}.
@c When using the shell, @var{header} should be quoted and should be
@c separated from @option{-h} by a space.
@c 
¥Ø¥Ã¥À¤Î¥Õ¥¡¥¤¥ëÌ¾¤òÃæ±ûÂ·¤¨¤µ¤ì¤¿Ê¸»úÎó@var{header}¤ÇÃÖ´¹¤·¤Þ¤¹¡¥¥·¥§
¥ë¤ò»ÈÍÑ¤·¤Æ¤¤¤ë¤È¤­¡¤@var{header}¤ò°úÍÑÉä¤Ç°Ï¤à¤Ù¤­¤Ç¡¤@option{-h}¤È
¤Ï¥¹¥Ú¡¼¥¹¤ÇÊ¬Î¥¤¹¤Ù¤­¤Ç¤¹¡¥

@item -i[@var{out-tabchar}[@var{out-tabwidth}]]
@itemx --output-tabs[=@var{out-tabchar}[@var{out-tabwidth}]]
@opindex -i
@opindex --output-tabs
@cindex output tabs
@c Replace spaces with @var{tab}s on output.  Optional argument @var{out-tabchar}
@c is the output tab character (default is the TAB character).  Second optional
@c argument @var{out-tabwidth} is the output tab character's width (default
@c is 8).
@c 
½ÐÎÏ¾å¤Ç¥¹¥Ú¡¼¥¹¤ò@var{tab}¤ËÃÖ´¹¤·¤Þ¤¹¡¥¥ª¥×¥·¥ç¥ó°ú¿ô
@var{out-tabchar}¤Ï½ÐÎÏ¤µ¤ì¤ë¥¿¥ÖÊ¸»ú¤Ç¤¹(¥Ç¥Õ¥©¥ë¥È¤ÏTABÊ¸»ú¤Ç¤¹)¡¥Æó
ÈÖÌÜ¤Î¥ª¥×¥·¥ç¥ó°ú¿ô@var{out-tabwidth}¤Ï½ÐÎÏ¤µ¤ì¤ë¥¿¥ÖÊ¸»ú¤ÎÉý(¥Ç¥Õ¥©
¥ë¥È¤Ç8)¤Ç¤¹¡¥

@item -J
@itemx --join-lines
@opindex -J
@opindex --join-lines
@c Merge lines of full length.  Used together with the column options
@c @option{-@var{column}}, @option{-a -@var{column}} or @option{-m}.  Turns off
@c @option{-W/-w} line truncation;
@c no column alignment used; may be used with
@c @option{--sep-string[=@var{string}]}.  @option{-J} has been introduced
@c (together with @option{-W} and @option{--sep-string})
@c to disentangle the old (@acronym{POSIX}-compliant) options @option{-w} and
@c @option{-s} along with the three column options.
@c 
½½Ê¬¤ÊÄ¹¤µ¤Î¹Ô¤ËÅý¹ç¤·¤Þ¤¹¡¥Îó¥ª¥×¥·¥ç¥ó@option{-@var{column}}¡¤
@option{-a -@var{column}}¡¤¤Þ¤¿¤Ï@option{-m}¤È¤È¤â¤Ë»ÈÍÑ¤·¤Þ¤¹¡¥
@option{-W/-w}¤Î¹Ô¤ÎÀÚ¤êµÍ¤á¤òÄä»ß¤·¤Þ¤¹¡¥Îó¤ÎÀ°Îó¤Ï»ÈÍÑ¤µ¤ì¤Þ¤»¤ó¡¥
@samp{-S[@var{string}]}¤È¤È¤â¤Ë»ÈÍÑ¤·¤Æ¤â¤«¤Þ¤¤¤Þ¤»¤ó¡¥@option{-J}¤Ï
(@option{-W}¤È@option{-S}¤È¤È¤â¤Ë)¡¤»°Îó¥ª¥×¥·¥ç¥ó¤Î¸Å¤¤
(@acronym{POSIX} ½àµò¤Î)¥ª¥×¥·¥ç¥ó@option{-w}¤È@option{-s}¤ò²ò·è¤¹¤ë¤¿
¤á¤ËÆ³Æþ¤µ¤ì¤Þ¤·¤¿¡¥

@item -l @var{page_length}
@itemx --length=@var{page_length}
@opindex -l
@opindex --length
@c Set the page length to @var{page_length} (default 66) lines, including
@c the lines of the header [and the footer].  If @var{page_length} is less
@c than or equal to 10 (or <= 3 with @option{-F}), the header and footer are
@c omitted, and all form feeds set in input files are eliminated, as if
@c the @option{-T} option had been given.
@c 
¥Ú¡¼¥¸¤ÎÄ¹¤µ¤ò¡¤¥Ø¥Ã¥À[¤È¥Õ¥Ã¥¿]¤Î¹Ô¤ò´Þ¤á¤Æ¡¤@var{page_length}¹Ô(¥Ç¥Õ¥©
¥ë¥È¤Ç66)¤ËÀßÄê¤·¤Þ¤¹¡¥@var{page_length}¤¬10°Ê²¼(¤Þ¤¿¤Ï@option{-F}¤¬3
°Ê²¼)¤Î¾ì¹ç¡¤¥Ø¥Ã¥À¤È¥Õ¥Ã¥¿¤Ï¼è¤ê½ü¤«¤ì¡¤ÆþÎÏ¥Õ¥¡¥¤¥ë¤ÎÁ´¤Æ¤Î¥Õ¥©¡¼¥à
¥Õ¥£¡¼¥ÉÀßÄê¤Ï¡¤@option{-T}¥ª¥×¥·¥ç¥ó¤¬»ØÄê¤µ¤ì¤¿¤«¤Î¤è¤¦¤ËÌµ»ë¤µ¤ì¤Þ
¤¹¡¥

@item -m
@itemx --merge
@opindex -m
@opindex --merge
@c Merge and print all @var{file}s in parallel, one in each column.  If a
@c line is too long to fit in a column, it is truncated, unless the @option{-J}
@c option is used.  @option{--sep-string[=@var{string}]} may be used.
@c Empty pages in
@c some @var{file}s (form feeds set) produce empty columns, still marked
@c by @var{string}.  The result is a continuous line numbering and column
@c marking throughout the whole merged file.  Completely empty merged pages
@c show no separators or line numbers.  The default header becomes
@c @samp{@var{date} @var{page}} with spaces inserted in the middle; this
@c may be used with the @option{-h} or @option{--header} option to fill up
@c the middle blank part.
@c 
Á´¤Æ¤Î@var{file}¤òÊÂÎó¤Ë¡¤¤½¤ì¤¾¤ì¤ÎÎó¤Ë°ì¤Ä¤ËÅý¹ç¤·¤Æ½ÐÎÏ¤·¤Þ¤¹¡¥Îó¤Ë
Å¬¤µ¤Ê¤¤¤Û¤É¹Ô¤¬Ä¹¤¹¤®¤ë¾ì¹ç¡¤¤½¤ì¤Ï@option{-J}¥ª¥×¥·¥ç¥ó¤¬»ÈÍÑ¤µ¤ì¤Æ
¤¤¤Ê¤¤¸Â¤êÀÚ¤êµÍ¤á¤é¤ì¤Þ¤¹¡¥@option{--sep-string[=@var{string}]}¤ò»ÈÍÑ
¤·¤Æ¤â¤«¤Þ¤¤¤Þ¤»¤ó¡¥@var{file}¤Î(¥Õ¥©¡¼¥à¥Õ¥£¡¼¥ÉÀßÄê¤Î)¶õ¤Î¥Ú¡¼¥¸¤Ï¶õ
¤ÎÎó¤òÀ¸À®¤·¤Þ¤¹¤¬¡¤@var{string}¤Ç°õ¤ÏÉÕ¤¤¤¿¤Þ¤Þ¤Ç¤¹¡¥·ë²Ì¤È¤·¤Æ¡¤Ï¢Â³
¤·¤¿¹Ô¤ÎÈÖ¹æÉÕ¤±¤È¡¤Åý¹ç¤µ¤ì¤¿¥Õ¥¡¥¤¥ëÁ´ÂÎ¤òÄÌ¤¸¤Æ°õ¤¬ÉÕ¤¤¤¿Îó¤Ë¤Ê¤ê¤Þ
¤¹¡¥Åý¹ç¤µ¤ì¤Æ¤â´°Á´¤Ë¶õ¤Î¥Ú¡¼¥¸¤Ë¤Ê¤ë¤â¤Î¤Ï¡¤¶èÀÚ¤ê¤â¹ÔÈÖ¹æ¤â¤¢¤ê¤Þ¤»
¤ó¡¥¥Ç¥Õ¥©¥ë¥È¥Ø¥Ã¥À¤Ï@samp{@var{date} @var{page}}¤Ë¤Ê¤ê¡¤¿¿Ãæ¤Ë¥¹¥Ú¡¼
¥¹¤¬ÁÞÆþ¤µ¤ì¤Þ¤¹¡¥¤³¤ì¤ÇÃæ´Ö¤Î¶õÇòÉôÊ¬¤òËþ¤¿¤¹¤¿¤á¡¤@option{-h}¤ä
@option{--header}¥ª¥×¥·¥ç¥ó¤È¤È¤â¤Ë»ÈÍÑ¤·¤Æ¤â¤«¤Þ¤¤¤Þ¤»¤ó¡¥

@item -n[@var{number-separator}[@var{digits}]]
@itemx --number-lines[=@var{number-separator}[@var{digits}]]
@opindex -n
@opindex --number-lines
@c Provide @var{digits} digit line numbering (default for @var{digits} is
@c 5).  With multicolumn output the number occupies the first @var{digits}
@c column positions of each text column or only each line of @option{-m}
@c output.  With single column output the number precedes each line just as
@c @option{-m} does.  Default counting of the line numbers starts with the
@c first line of the input file (not the first line printed, compare the
@c @option{--page} option and @option{-N} option).
@c Optional argument @var{number-separator} is the character appended to
@c the line number to separate it from the text followed.  The default
@c separator is the TAB character.  In a strict sense a TAB is always
@c printed with single column output only.  The @var{TAB}-width varies
@c with the @var{TAB}-position, e.g. with the left @var{margin} specified
@c by @option{-o} option.  With multicolumn output priority is given to
@c @samp{equal width of output columns} (a @acronym{POSIX} specification).
@c The @var{TAB}-width is fixed to the value of the first column and does
@c not change with different values of left @var{margin}.  That means a
@c fixed number of spaces is always printed in the place of the
@c @var{number-separator tab}.  The tabification depends upon the output
@c position.
@c 
@var{digits}·å¤Î¹Ô¤ÎÈÖ¹æÉÕ¤±¤òÄó¶¡¤·¤Þ¤¹(¥Ç¥Õ¥©¥ë¥È¤Î@var{digits}¤Ï5¤Ç
¤¹)¡¥Ê£¿ôÎó¤Î½ÐÎÏ¤Ç¤Ï¡¤ÈÖ¹æ¤Ï¤½¤ì¤¾¤ì¤Î¥Æ¥­¥¹¥ÈÎó¤ÎºÇ½é¤Î@var{digits} 
Îó¤Î°ÌÃÖ¤ä¡¤@option{-m}½ÐÎÏ¤Î¤½¤ì¤¾¤ì¤Î¹Ô¤À¤±¤ËÀ¸À®¤µ¤ì¤Þ¤¹¡¥Ã±°ìÎó¤Î
½ÐÎÏ¤Ç¤Ï¡¤ÈÖ¹æ¤Ï¤½¤ì¤¾¤ì¤Î¹Ô¤Ë@option{-m}¤¬¹Ô¤¦¤è¤¦¤ËÀ¸À®¤·¤Þ¤¹¡¥¥Ç¥Õ¥©
¥ë¥È¤Î¹Ô¥«¥¦¥ó¥È¤Î³«»Ï¤Ï¡¤ÆþÎÏ¥Õ¥¡¥¤¥ë¤ÎºÇ½é¤Î¹Ô¤Ç»Ï¤Þ¤ê¤Þ¤¹
(@option{--page}¥ª¥×¥·¥ç¥ó¤È@option{-N}¥ª¥×¥·¥ç¥ó¤È¤Ï°Û¤Ê¤ê¡¤ºÇ½é¤Ë°õ
ºþ¤µ¤ì¤ë¹Ô¤Ç¤Ï¤¢¤ê¤Þ¤»¤ó)¡¥¥ª¥×¥·¥ç¥ó°ú¿ô@var{number-separator}¤Ï¡¤°Ê
²¼¤ËÂ³¤¯¥Æ¥­¥¹¥È¤ÈÊ¬Î¥¤¹¤ë¤¿¤á¤Ë¹Ô¿ô¤Ë¸åÃÖ¤µ¤ì¤ëÊ¸»ú¤Ç¤¹¡¥¥Ç¥Õ¥©¥ë¥È¤Î
Ê¬Î¥Ê¸»ú¤ÏTABÊ¸»ú¤Ç¤¹¡¥¸·Ì©¤Ê°ÕÌ£¤Ç¡¤TAB¤Ï¾ï¤ËÃ±°ì¤ÎÎó¤Î½ÐÎÏ¤À¤±¤Ë½ÐÎÏ
¤µ¤ì¤Þ¤¹¡¥@var{TAB}Éý¤Ï@var{TAB}°ÌÃÖ¤ÇÊÑ²½¤·¡¤Îã¤¨¤Ð¡¤º¸¤Î@var{margin} 
¤¬@option{-o}¥ª¥×¥·¥ç¥ó¤Ç»ØÄê¤µ¤ì¤¿¾ì¹ç¤ÏÊÑ²½¤·¤Þ¤¹¡¥Ê£¿ôÎó½ÐÎÏ¤Î¥×¥í
¥Ñ¥Æ¥£¤Ï¡¤@samp{equal width of output columns} (@acronym{POSIX}»ØÄê) 
¤ÇÍ¿¤¨¤é¤ì¤Þ¤¹¡¥@var{TAB}Éý¤Ï¡¤ºÇ½é¤ÎÎó¤ÎÃÍ¤Ç¸ÇÄê¤µ¤ì¡¤º¸¤Î
@var{margin}¤ÎÃÍ¤Î°ã¤¤¤Ç¤ÏÊÑ¹¹¤µ¤ì¤Þ¤»¤ó¡¥¤½¤ì¤Ï¡¤¸ÇÄê¿ô¤Î¥¹¥Ú¡¼¥¹¤¬¾ï
¤Ë@var{number-separator tab}¤Î°ÌÃÖ¤Ë½ÐÎÏ¤µ¤ì¤ë¤³¤È¤ò°ÕÌ£¤·¤Þ¤¹¡¥¥¿¥Öµ¡
Ç½¤Ï½ÐÎÏ°ÌÃÖ¤Ë°ÍÂ¸¤·¤Þ¤¹¡¥

@item -N @var{line_number}
@itemx --first-line-number=@var{line_number}
@opindex -N
@opindex --first-line-number
@c Start line counting with the number @var{line_number} at first line of
@c first page printed (in most cases not the first line of the input file).
@c 
ºÇ½é¤Î¥Ú¡¼¥¸¤Ë½ÐÎÏ¤µ¤ì¤ëºÇ½é¤Î¹Ô(¤Û¤È¤ó¤É¤Î¾ì¹ç¡¤ÆþÎÏ¥Õ¥¡¥¤¥ë¤ÎºÇ½é¤Ç
¤Ï¤¢¤ê¤Þ¤»¤ó)¤ò¡¤¿ô»ú¤Î@var{line_number}¤Ç¹Ô¤Î¥«¥¦¥ó¥È¤ò³«»Ï¤·¤Þ¤¹¡¥

@item -o @var{margin}
@itemx --indent=@var{margin}
@opindex -o
@opindex --indent
@cindex indenting lines
@cindex left margin
@c Indent each line with a margin @var{margin} spaces wide (default is zero).
@c The total page width is the size of the margin plus the @var{page_width}
@c set with the @option{-W/-w} option.  A limited overflow may occur with
@c numbered single column output (compare @option{-n} option).
@c 
¤½¤ì¤¾¤ì¤Î¹Ô¤ò@var{margin}¥¹¥Ú¡¼¥¹¤Î¥Þ¡¼¥¸¥óÉý(¥Ç¥Õ¥©¥ë¥È¤Ï¥¼¥í)¤Ç»ú²¼
¤²¤·¤Þ¤¹¡¥¥Ú¡¼¥¸Á´ÂÎ¤ÎÉý¤Ï¥Þ¡¼¥¸¥ó¤Ë@option{-W/-w}¥ª¥×¥·¥ç¥ó¤Î
@var{page_width}ÀßÄê¤ò²Ã¤¨¤¿¤â¤Î¤Ë¤Ê¤ê¤Þ¤¹¡¥¿ô»úÉÕ¤ÎÃ±°ìÎó¤Î½ÐÎÏ¤Ç¤Ï
(@option{-n}¥ª¥×¥·¥ç¥ó¤È¤Ï°Û¤Ê¤ê)À©¸Â¤µ¤ì¤ë¤³¤È¤Ë¤è¤ë¥ª¡¼¥Ð¡¼¥Õ¥í¡¼¤¬
È¯À¸¤¹¤ë¤«¤â¤·¤ì¤Þ¤»¤ó¡¥

@item -r
@itemx --no-file-warnings
@opindex -r
@opindex --no-file-warnings
@c Do not print a warning message when an argument @var{file} cannot be
@c opened.  (The exit status will still be nonzero, however.)
@c 
°ú¿ô@var{file}¤¬³«¤±¤Ê¤«¤Ã¤¿¤È¤­¡¤·Ù¹ð¥á¥Ã¥»¡¼¥¸¤ò½ÐÎÏ¤·¤Þ¤»¤ó¡¥(¤·¤«
¤·¡¤½ªÎ»¥¹¥Æ¡¼¥¿¥¹¤Ï¥¼¥í¤Ç¤Ï¤¢¤ê¤Þ¤»¤ó¡¥)

@item -s[@var{char}]
@itemx --separator[=@var{char}]
@opindex -s
@opindex --separator
@c Separate columns by a single character @var{char}.  The default for
@c @var{char} is the TAB character without @option{-w} and @samp{no
@c character} with @option{-w}.  Without @option{-s} the default separator
@c @samp{space} is set.  @option{-s[char]} turns off line truncation of all
@c three column options (@option{-COLUMN}|@option{-a -COLUMN}|@option{-m}) unless
@c @option{-w} is set.  This is a @acronym{POSIX}-compliant formulation.
@c 
Ã±°ìÊ¸»ú@var{char}¤ÇÎó¤òÊ¬¤±¤Þ¤¹¡¥@var{char}¤Î¥Ç¥Õ¥©¥ë¥È¤Ï¡¤
@option{-w}¤òÍÑ¤¤¤Ê¤¤¤ÈTABÊ¸»ú¤Ç¡¤@option{-w}¤òÍÑ¤¤¤ë¤È@samp{no
character}¤Ë¤Ê¤ê¤Þ¤¹¡¥@option{-s}¤¬Ìµ¤¤¾ì¹ç¤Î¥Ç¥Õ¥©¥ë¥È¤ÎÊ¬Î¥Ê¸»ú¤Ï
@samp{space}¤ËÀßÄê¤µ¤ì¤Þ¤¹¡¥@option{-s[char]}¤Ï¡¤@option{-w}¤¬ÀßÄê¤µ¤ì
¤Æ¤¤¤Ê¤¤¾ì¹ç¡¤Á´¤Æ¤Î»°Îó¥ª¥×¥·¥ç¥ó(@option{-COLUMN}|@samp{-a
-COLUMN}|@option{-m})¤Î¹Ô¤ÎÀÚ¤êµÍ¤á¤òÄä»ß¤·¤Þ¤¹¡¥¤½¤ì¤Ï¡¤
@acronym{POSIX}½àµò¤Î¸ø¼°¤Ê¤â¤Î¤Ç¤¹¡¥

@item -S @var{string}
@itemx --sep-string[=@var{string}]
@opindex -S
@opindex --sep-string
@c Use @var{string} to separate output columns.  The @option{-S} option doesn't
@c affect the @option{-W/-w} option, unlike the @option{-s} option which does.  It
@c does not affect line truncation or column alignment.
@c Without @option{-S}, and with @option{-J}, @command{pr} uses the default output
@c separator, TAB.
@c Without @option{-S} or @option{-J}, @command{pr} uses a @samp{space}
@c (same as @option{-S"@w{ }"}).  With @option{-S@var{string}},
@c @var{string} must be nonempty; @option{--sep-string} with no
@c @var{string} is equivalent to @option{--sep-string=""}.
@c 
½ÐÎÏ¤ÎÎó¤òÊ¬Î¥¤¹¤ë¤¿¤á@var{string}¤ò»ÈÍÑ¤·¤Þ¤¹¡¥@option{-S}¥ª¥×¥·¥ç¥ó
¤Ï@option{-s}¥ª¥×¥·¥ç¥ó¤È°Û¤Ê¤ê¡¤@option{-W/-w}¥ª¥×¥·¥ç¥ó¤ËÂÐ¤·¸ú²Ì¤¬
¤¢¤ê¤Þ¤»¤ó¡¥¤½¤ì¤Ï¹Ô¤ÎÀÚ¤êµÍ¤á¤äÎó¤ÎÀ°Îó¤Ë¸ú²Ì¤¬¤¢¤ê¤Þ¤»¤ó¡¥
@option{-S} ¤òÍÑ¤¤¤º¡¤@option{-J}¤òÍÑ¤¤¤ë¤È¡¤@command{pr}¤Ï¥Ç¥Õ¥©¥ë¥È
¤Î½ÐÎÏ¤ÎÊ¬Î¥Ê¸»ú¤ÎTAB¤ò»ÈÍÑ¤·¤Þ¤¹¡¥@option{-S}¤ä@option{-J}¤òÍÑ¤¤¤Ê¤¤
¤È¡¤@command{pr} ¤Ï@samp{space}¤ò»ÈÍÑ¤·¤Þ¤¹(@samp{-S" "}¤ÈÆ±¤¸¤Ç¤¹)¡¥
@option{-S@var{string}}¤òÍÑ¤ë¤È¤­¡¤@var{string}¤ò¶õ¤Ë¤·¤Æ¤Ï¤¤¤±¤Þ¤»¤ó¡¥
@var{string}¤¬Ìµ¤¤@option{--sep-string}¤Ï@option{--sep-string=""}¤ÈÅù
²Á¤Ç¤¹¡¥

@c On older systems, @command{pr} instead supports an obsolete option
@c @option{-S[@var{string}]}, where @var{string} is optional.  @acronym{POSIX}
@c 1003.1-2001 (@pxref{Standards conformance}) does not allow this older
@c usage.  To specify an empty @var{string} portably, use
@c @option{--sep-string}.
@c 
¸Å¤¤¥·¥¹¥Æ¥à¤Ç¤Ï¡¤@command{pr}¤Ï»þÂåÃÙ¤ì¤Î¥ª¥×¥·¥ç¥ó
@option{-S[@var{string}]}¤òÂå¤ï¤ê¤Ë¥µ¥Ý¡¼¥È¤·¡¤@var{string}¤Ï¥ª¥×¥·¥ç
¥ó¤Ë¤Ê¤ê¤Þ¤¹¡¥@acronym{POSIX} 1003.1-2001 (@pxref{Standards
conformance})¤Ç¤Ï¤³¤Î¸Å¤¤»ÈÍÑÊýË¡¤òµö²Ä¤·¤Æ¤¤¤Þ¤»¤ó¡¥°Ü¿¢À­¤¬¤¢¤ë¶õ¤Î
@var{string}¤ò»ØÄê¤¹¤ë¤¿¤á¡¤@option{--sep-string}¤ò»ÈÍÑ¤·¤Æ¤¯¤À¤µ¤¤¡¥

@item -t
@itemx --omit-header
@opindex -t
@opindex --omit-header
@c Do not print the usual header [and footer] on each page, and do not fill
@c out the bottom of pages (with blank lines or a form feed).  No page
@c structure is produced, but form feeds set in the input files are retained.
@c The predefined pagination is not changed.  @option{-t} or @option{-T} may be
@c useful together with other options; e.g.: @option{-t -e4}, expand TAB characters
@c in the input file to 4 spaces but don't make any other changes.  Use of
@c @option{-t} overrides @option{-h}.
@c 
¤½¤ì¤¾¤ì¤Î¥Ú¡¼¥¸¤Ë¡¤ÄÌ¾ï¤Î¥Ø¥Ã¥À[¤È¥Õ¥Ã¥¿]¤ò½ÐÎÏ¤»¤º¡¤¥Ú¡¼¥¸¤ÎÄì¤Þ¤ÇÊä
½¼¤·¤Þ¤»¤ó(¶õÇò¹Ô¤Þ¤¿¤Ï¥Õ¥©¡¼¥à¥Õ¥£¡¼¥É¤òÍÑ¤¤¤Þ¤¹)¡¥¥Ú¡¼¥¸¹½Â¤¤ÏÀ¸À®¤µ
¤ì¤Þ¤»¤ó¤¬¡¤ÆþÎÏ¥Õ¥¡¥¤¥ë¤ÇÀßÄê¤µ¤ì¤Æ¤¤¤ë¥Õ¥©¡¼¥à¥Õ¥£¡¼¥É¤Ï°Ý»ý¤µ¤ì¤Þ¤¹¡¥
Á°¤â¤Ã¤ÆÄêµÁ¤µ¤ì¤¿¥Ú¡¼¥¸²½¤ÏÊÑ¹¹¤µ¤ì¤Þ¤»¤ó¡¥@option{-t}¤ä@option{-T}¤Ï¡¤
Â¾¤Î¥ª¥×¥·¥ç¥ó¤È¤È¤â¤Ë»ÈÍÑ¤¹¤ë¤ÈÊØÍø¤«¤â¤·¤ì¤Þ¤»¤ó¡¥Îã¤¨¤Ð¡¤@samp{-t
-e4}¤Ï¡¤ÆþÎÏ¥Õ¥¡¥¤¥ë¤ÎTABÊ¸»ú¤ò»Í¤Ä¤Î¥¹¥Ú¡¼¥¹¤ËÅ¸³«¤·¤Þ¤¹¤¬¡¤¤½¤ì°Ê³°
¤ÎÊÑ¹¹¤ò¹Ô¤¤¤Þ¤»¤ó¡¥@option{-t}¤Î»ÈÍÑ¤Ï@option{-h}¤ËÍ¥Àè¤·¤Þ¤¹¡¥

@item -T
@itemx --omit-pagination
@opindex -T
@opindex --omit-pagination
@c Do not print header [and footer].  In addition eliminate all form feeds
@c set in the input files.
@c 
¥Ø¥Ã¥À[¤È¥Õ¥Ã¥¿]¤ò½ÐÎÏ¤·¤Þ¤»¤ó¡¥¹¹¤Ë¡¤ÆþÎÏ¥Õ¥¡¥¤¥ë¤Î¥Õ¥©¡¼¥à¥Õ¥£¡¼¥ÉÀß
Äê¤òÁ´¤Æºï½ü¤·¤Þ¤¹¡¥

@item -v
@itemx --show-nonprinting
@opindex -v
@opindex --show-nonprinting
@c Print nonprinting characters in octal backslash notation.
@c 
½ÐÎÏ¤Ç¤­¤Ê¤¤Ê¸»ú¤ò¡¤È¬¿Ê¿ô¤Î¥Ð¥Ã¥¯¥¹¥é¥Ã¥·¥åÉ½µ­¤Ç½ÐÎÏ¤·¤Þ¤¹¡¥

@item -w @var{page_width}
@itemx --width=@var{page_width}
@opindex -w
@opindex --width
@c Set page width to @var{page_width} characters for multiple text-column
@c output only (default for @var{page_width} is 72).  @option{-s[CHAR]} turns
@c off the default page width and any line truncation and column alignment.
@c Lines of full length are merged, regardless of the column options
@c set.  No @var{page_width} setting is possible with single column output.
@c A @acronym{POSIX}-compliant formulation.
@c 
Ê£¿ô¤Î¥Æ¥­¥¹¥ÈÎó½ÐÎÏ¤ËÂÐ¤·¤Æ¤Î¤ß¡¤¥Ú¡¼¥¸Éý¤ò@var{page_width}Ê¸»ú¿ô¤ËÀß
Äê¤·¤Þ¤¹(@var{page_width}¤Î¥Ç¥Õ¥©¥ë¥È¤Ï72¤Ç¤¹)¡¥@option{-s[CHAR]}¤Ï¡¤
¥Ç¥Õ¥©¥ë¥È¥Ú¡¼¥¸Éý¤òÄä»ß¤·¡¤¤¹¤Ù¤Æ¤Î¹Ô¤òÀÚ¤êµÍ¤á¡¤Îó¤òÀ°Îó¤·¤Þ¤¹¡¥½½Ê¬
¤ÊÄ¹¤µ¤Î¹Ô¤Ï¡¤Îó¥ª¥×¥·¥ç¥ó¤ÎÀßÄê¤Ë¤«¤«¤ï¤é¤º¥Þ¡¼¥¸¤µ¤ì¤Þ¤¹¡¥
@var{page_width}ÀßÄê¤¬Ìµ¤¤¾ì¹ç¡¤¤ª¤½¤é¤¯Ã±°ìÎó¤Î½ÐÎÏ¤Ë¤Ê¤ê¤Þ¤¹¡¥
@acronym{POSIX}½àµò¤Î¸ø¼°¤Ê¤â¤Î¤Ç¤¹¡¥

@item -W @var{page_width}
@itemx --page_width=@var{page_width}
@opindex -W
@opindex --page_width
@c Set the page width to @var{page_width} characters.  That's valid with and
@c without a column option.  Text lines are truncated, unless @option{-J}
@c is used.  Together with one of the three column options
@c (@option{-@var{column}}, @option{-a -@var{column}} or @option{-m}) column
@c alignment is always used.  The separator options @option{-S} or @option{-s}
@c don't affect the @option{-W} option.  Default is 72 characters.  Without
@c @option{-W @var{page_width}} and without any of the column options NO line
@c truncation is used (defined to keep downward compatibility and to meet
@c most frequent tasks).  That's equivalent to @option{-W 72 -J}.  The header
@c line is never truncated.
@c 
¥Ú¡¼¥¸Éý¤ò@var{page_width}Ê¸»ú¤ËÀßÄê¤·¤Þ¤¹¡¥¤½¤ì¤ÏÎó¥ª¥×¥·¥ç¥ó¤Ë¤è¤é¤º
Í­¸ú¤Ç¤¹¡¥@option{-J}¤¬»ÈÍÑ¤µ¤ì¤Ê¤¤¾ì¹ç¡¤¥Æ¥­¥¹¥È¹Ô¤ÏÀÚ¤êµÍ¤á¤é¤ì¤Þ¤¹¡¥
»°Îó¥ª¥×¥·¥ç¥ó(@option{-@var{column}}¡¤@samp{-a -@var{column}}¡¤¤Þ¤¿¤Ï
@option{-m})¤Î°ì¤Ä¤È¤È¤â¤ËÍÑ¤¤¤¿¾ì¹ç¡¤Îó¤ÎÀ°Îó¤Ï¾ï¤Ë»ÈÍÑ¤µ¤ì¤Þ¤¹¡¥¥»¥Ñ
¥ì¡¼¥¿¥ª¥×¥·¥ç¥ó¤Î@option{-S}¤ä@option{-s}¤Ï¡¤@option{-W}¥ª¥×¥·¥ç¥ó¤Ë
¸ú²Ì¤¬¤¢¤ê¤Þ¤»¤ó¡¥¥Ç¥Õ¥©¥ë¥È¤Ï72Ê¸»ú¤Ç¤¹¡¥@samp{-W @var{page_width}}¤¬
Ìµ¤¯¡¤¤¢¤é¤æ¤ëÎó¥ª¥×¥·¥ç¥ó¤¬Ìµ¤¤¾ì¹ç¡¤¹Ô¤ÎÀÚ¤êµÍ¤á¤Ï¹Ô¤ï¤ì¤Þ¤»¤ó(²¼°Ì
¸ß´¹¤òÊÝ¤Ä¤¿¤á¤È¡¤¤è¤¯¤¢¤ë»Å»ö¤Ë¹ç¤ï¤»¤ë¤¿¤á¤ËÄêµÁ¤µ¤ì¤Æ¤¤¤Þ¤¹)¡¥¤½¤ì
¤Ï¡¤@samp{-W 72 -J}¤ÈÅù²Á¤Ç¤¹¡¥¥Ø¥Ã¥À¹Ô¤Ï¾ï¤ËÀÚ¤êµÍ¤á¤é¤ì¤Þ¤»¤ó¡¥

@end table

@exitstatus


@node fold invocation
@c @section @command{fold}: Wrap input lines to fit in specified width
@section @command{fold}: »ØÄê¤µ¤ì¤¿Éý¤Ë¹ç¤ï¤»¤ë¤¿¤á¡¤ÆþÎÏ¹Ô¤òÀÞ¤ê¶Ê¤²¤ë

@pindex fold
@cindex wrapping long input lines
@cindex folding long input lines

@c @command{fold} writes each @var{file} (@option{-} means standard input), or
@c standard input if none are given, to standard output, breaking long
@c lines.  Synopsis:
@c 
@command{fold}¤Ï¡¤¤½¤ì¤¾¤ì¤Î@var{file}(@samp{-}¤ÏÉ¸½àÆþÎÏ¤ò°ÕÌ£¤·¤Þ¤¹)
¤ä¡¤Í¿¤¨¤é¤ì¤Ê¤¤¾ì¹ç¤ÏÉ¸½àÆþÎÏ¤ò¡¤Ä¹¤¤¹Ô¤ò²þ¹Ô¤·¤Ê¤¬¤éÉ¸½à½ÐÎÏ¤Ë½ñ¤­½Ð
¤·¤Þ¤¹¡¥³µÍ×¤Ç¤¹¡¥

@example
fold [@var{option}]@dots{} [@var{file}]@dots{}
@end example

@c By default, @command{fold} breaks lines wider than 80 columns.  The output
@c is split into as many lines as necessary.
@c 
¥Ç¥Õ¥©¥ë¥È¤Ç¡¤@command{fold}¤Ï80Îó°Ê¾å¤ÎÉý¤Î¹Ô¤ò²þ¹Ô¤·¤Þ¤¹¡¥½ÐÎÏ¤ÏÉ¬Í×
¤Ê¹Ô¿ô¤ËÊ¬¤±¤é¤ì¤Þ¤¹¡¥

@cindex screen columns
@c @command{fold} counts screen columns by default; thus, a tab may count more
@c than one column, backspace decreases the column count, and carriage
@c return sets the column to zero.
@c 
@command{fold}¤Ï¥Ç¥Õ¥©¥ë¥È¤Ç²èÌÌ¤ÎÎó¤ò¿ô¤¨¤Þ¤¹¡¥¤³¤Î¤¿¤á¡¤¥¿¥Ö¤Ï°ìÎó°Ê
¾å¤Ë¿ô¤¨¤é¤ì¡¤¥Ð¥Ã¥¯¥¹¥Ú¡¼¥¹¤ÏÎó¤Î¥«¥¦¥ó¥È¿ô¤ò¸º¤é¤·¡¤¤½¤·¤Æ¡¤¥­¥ã¥ê¥Ã
¥¸¥ê¥¿¡¼¥ó¤ÏÎó¤ò¥¼¥í¤ËÀßÄê¤·¤Þ¤¹¡¥

@c The program accepts the following options.  Also see @ref{Common options}.
@c 
¥×¥í¥°¥é¥à¤Ï¡¤°Ê²¼¤Î¥ª¥×¥·¥ç¥ó¤â¼õ¤±Æþ¤ì¤Þ¤¹¡¥@ref{Common options}¤â»²
¾È¤·¤Æ¤¯¤À¤µ¤¤¡¥

@table @samp

@item -b
@itemx --bytes
@opindex -b
@opindex --bytes
@c Count bytes rather than columns, so that tabs, backspaces, and carriage
@c returns are each counted as taking up one column, just like other
@c characters.
@c 
Îó¤Ç¤Ï¤Ê¤¯¥Ð¥¤¥È¤ò¿ô¤¨¡¤¤½¤Î¤¿¤á¡¤¥¿¥Ö¡¤¥Ð¥Ã¥¯¥¹¥Ú¡¼¥¹¤È¡¤¥­¥ã¥ê¥Ã¥¸¥ê
¥¿¡¼¥ó¤Ï¡¤Â¾¤ÎÊ¸»úÆ±ÍÍ¤Ë¤½¤ì¤¾¤ì°ìÎó¥«¥¦¥ó¥È¿ô¤ò¾å¤²¤Þ¤¹¡¥

@item -s
@itemx --spaces
@opindex -s
@opindex --spaces
@c Break at word boundaries: the line is broken after the last blank before
@c the maximum line length.  If the line contains no such blanks, the line
@c is broken at the maximum line length as usual.
@c 
Ã±¸ì¤Î¶­³¦¤Ç²þ¹Ô¤·¤Þ¤¹¡¥Îó¤ÏºÇ¸å¤Î¶õÇò¤Î¸å¤Ç¡¤ºÇÂç¤ÎÎó¤ÎÄ¹¤µ¤ÎÁ°¤Ç²þ¹Ô
¤µ¤ì¤Þ¤¹¡¥¤½¤Î¤è¤¦¤Ê¶õÇò¹Ô¤¬¹Ô¤Ë´Þ¤Þ¤ì¤Æ¤¤¤Ê¤¤¾ì¹ç¡¤¹Ô¤ÏºÇÂç¤Î¹ÔÉý¤ÇÄÌ
¾ïÄÌ¤ê²þ¹Ô¤µ¤ì¤Þ¤¹¡¥

@item -w @var{width}
@itemx --width=@var{width}
@opindex -w
@opindex --width
@c Use a maximum line length of @var{width} columns instead of 80.
@c 
80¤ÎÂå¤ï¤ê¤Ë¡¤@var{width}Îó¤ÎºÇÂç¹ÔÉý¤ò»ÈÍÑ¤·¤Þ¤¹¡¥

@c On older systems, @command{fold} supports an obsolete option
@c @option{-@var{width}}.  @acronym{POSIX} 1003.1-2001 (@pxref{Standards
@c conformance}) does not allow this; use @option{-w @var{width}}
@c instead.
@c 
¸Å¤¤¥·¥¹¥Æ¥à¤Ç¤Ï¡¤@command{fold}¤Ï»þÂåÃÙ¤ì¤Î¥ª¥×¥·¥ç¥ó
@option{-@var{width}}¤ò¥µ¥Ý¡¼¥È¤·¤Æ¤¤¤Þ¤¹¡¥@acronym{POSIX} 1003.1-2001
(@pxref{Standards conformance})¤Ç¤Ï¡¤¤³¤ì¤Ïµö²Ä¤µ¤ì¤Æ¤¤¤Þ¤»¤ó¡¥Âå¤ï¤ê
¤Ë@option{-w @var{width}}¤ò»ÈÍÑ¤·¤Æ¤¯¤À¤µ¤¤¡¥

@end table

@exitstatus


@node Output of parts of files
@c @chapter Output of parts of files
@chapter ¥Õ¥¡¥¤¥ë¤Î°ìÉô¤Î½ÐÎÏ

@cindex output of parts of files
@cindex parts of files, output of

@c These commands output pieces of the input.
@c 
°Ê²¼¤Î¥³¥Þ¥ó¥É¤Ï¡¤ÆþÎÏ¤Î°ìÉô¤ò½ÐÎÏ¤·¤Þ¤¹¡¥

@menu
* head invocation::             Output the first part of files.
* tail invocation::             Output the last part of files.
* split invocation::            Split a file into fixed-size pieces.
* csplit invocation::           Split a file into context-determined pieces.
@end menu

@node head invocation
@c @section @command{head}: Output the first part of files
@section @command{head}: ¥Õ¥¡¥¤¥ë¤ÎºÇ½é¤ÎÉôÊ¬¤ò½ÐÎÏ

@pindex head
@cindex initial part of files, outputting
@cindex first part of files, outputting

@c @command{head} prints the first part (10 lines by default) of each
@c @var{file}; it reads from standard input if no files are given or
@c when given a @var{file} of @option{-}.  Synopsis:
@c 
@command{head}¤Ï¡¤¤½¤ì¤¾¤ì¤Î@var{file}¤ÎºÇ½é¤ÎÉôÊ¬(¥Ç¥Õ¥©¥ë¥È¤Ç½½¹Ô)½Ð
ÎÏ¤·¤Þ¤¹¡¥¥Õ¥¡¥¤¥ë¤¬Í¿¤¨¤é¤ì¤Æ¤¤¤Ê¤¤¾ì¹ç¤ä¡¤@samp{-}¤È¤¤¤¦@var{file}¤¬
Í¿¤¨¤é¤ì¤Æ¤¤¤ë¤È¤­¤ÏÉ¸½àÆþÎÏ¤«¤éÆÉ¤ß¹þ¤ß¤Þ¤¹¡¥³µÍ×¤Ç¤¹¡¥

@example
head [@var{option}]@dots{} [@var{file}]@dots{}
@end example

@c If more than one @var{file} is specified, @command{head} prints a
@c one-line header consisting of
@c 
°ì¤Ä°Ê¾å¤Î@var{file}¤¬»ØÄê¤µ¤ì¤Æ¤¤¤ë¾ì¹ç¡¤@command{head}¤Ï°Ê²¼¤«¤éÀ®¤ê
Î©¤Ä°ì¹Ô¤Î¥Ø¥Ã¥À¤ò½ÐÎÏ¤·¤Þ¤¹¡¥
@example
==> @var{file name} <==
@end example
@noindent
@c before the output for each @var{file}.
@c 
¤½¤ì¤¾¤ì¤Î@var{file}¤ÎÁ°¤Ë½ÐÎÏ¤µ¤ì¤Þ¤¹¡¥

@c The program accepts the following options.  Also see @ref{Common options}.
@c 
¥×¥í¥°¥é¥à¤Ï°Ê²¼¤Î¥ª¥×¥·¥ç¥ó¤ò¼õ¤±Æþ¤ì¤Þ¤¹¡¥@ref{Common options}¤â»²¾È
¤·¤Æ¤¯¤À¤µ¤¤¡¥

@table @samp

@item -c @var{n}
@itemx --bytes=@var{n}
@opindex -c
@opindex --bytes
@c Print the first @var{n} bytes, instead of initial lines.  Appending
@c @samp{b} multiplies @var{n} by 512, @samp{k} by 1024, and @samp{m}
@c by 1048576.
@c However, if @var{n} starts with a @samp{-},
@c print all but the last @var{n} bytes of each file.
@c 
ºÇ½é¤Î¹Ô¤ÎÂå¤ï¤ê¤Ë¡¤ºÇ½é¤Î@var{n}¥Ð¥¤¥È¤ò½ÐÎÏ¤·¤Þ¤¹¡¥¸åÃÖ¤µ¤ì¤ë
@samp{b}¤Ï@var{n}¤Î512ÇÜ¡¤@samp{k}¤Ï1024ÇÜ¡¤¤½¤·¤Æ@samp{m}¤Ï1048576ÇÜ
¤Ë¤Ê¤ê¤Þ¤¹¡¥¤·¤«¤·¡¤@var{n}¤¬@samp{-}¤Ç»Ï¤Þ¤ë¾ì¹ç¡¤¤½¤ì¤¾¤ì¤Î¥Õ¥¡¥¤¥ë
¤ÎºÇ¸å¤Î@var{n}¤ò½ÐÎÏ¤·¤Þ¤¹¡¥

@itemx -n @var{n}
@itemx --lines=@var{n}
@opindex -n
@opindex --lines
@c Output the first @var{n} lines.
@c However, if @var{n} starts with a @samp{-},
@c print all but the last @var{n} lines of each file.
@c 
ºÇ½é¤Î@var{n}¹Ô¤ò½ÐÎÏ¤·¤Þ¤¹¡¥¤·¤«¤·¡¤@var{n}¤¬@samp{-}¤Ç³«»Ï¤µ¤ì¤ë¾ì¹ç¡¤
¤½¤ì¤¾¤ì¤Î¥Õ¥¡¥¤¥ë¤ÎºÇ¸å¤Î@var{n}¤ò½ÐÎÏ¤·¤Þ¤¹¡¥

@item -q
@itemx --quiet
@itemx --silent
@opindex -q
@opindex --quiet
@opindex --silent
@c Never print file name headers.
@c 
¥Õ¥¡¥¤¥ëÌ¾¤Î¥Ø¥Ã¥À¤ò½ÐÎÏ¤·¤Þ¤»¤ó¡¥

@item -v
@itemx --verbose
@opindex -v
@opindex --verbose
@c Always print file name headers.
@c 
¾ï¤Ë¥Õ¥¡¥¤¥ëÌ¾¤Î¥Ø¥Ã¥À¤ò½ÐÎÏ¤·¤Þ¤¹¡¥

@end table

@c On older systems, @command{head} supports an obsolete option
@c @option{-@var{count}@var{options}}, which is recognized only if it is
@c specified first.  @var{count} is a decimal number optionally followed
@c by a size letter (@samp{b}, @samp{k}, @samp{m}) as in @option{-c}, or
@c @samp{l} to mean count by lines, or other option letters (@samp{cqv}).
@c @acronym{POSIX} 1003.1-2001 (@pxref{Standards conformance}) does not allow
@c this; use @option{-c @var{count}} or @option{-n @var{count}} instead.
@c 
¸Å¤¤¥·¥¹¥Æ¥à¤Ç¤Ï¡¤@command{head}¤Ï»þÂåÃÙ¤ì¤Î¥ª¥×¥·¥ç¥ó
@option{-@var{count}@var{options}}¤ò¥µ¥Ý¡¼¥È¤·¡¤¤½¤ì¤ÏºÇ½é¤Ë»ØÄê¤µ¤ì¤Æ
¤¤¤ë¾ì¹ç¤À¤±Ç§¼±¤µ¤ì¤Þ¤¹¡¥@var{count}¤Ï½½¿Ê¿ô¤Î¿ôÃÍ¤Ç¡¤¥ª¥×¥·¥ç¥ó¤Ç
@option{-c}¤Ç¤Î¥µ¥¤¥º»ØÄêÊ¸»ú(@samp{b}, @samp{k}, @samp{m})¤ä¡¤¹Ô¿ô¤ò
°ÕÌ£¤¹¤ë@samp{l}¡¤¤Þ¤¿¤Ï¤½¤ì°Ê³°¤Î¥ª¥×¥·¥ç¥óÊ¸»ú(@samp{cqv})¤¬Â³¤­¤Þ¤¹¡¥
@acronym{POSIX} 1003.1-2001 (@pxref{Standards conformance})¤Ç¤Ï¤³¤ì¤ò
µö²Ä¤·¤Æ¤¤¤Þ¤»¤ó¡¥Âå¤ï¤ê¤Ë@option{-c @var{count}}¤ä@option{-n
@var{count}} ¤ò»ÈÍÑ¤·¤Æ¤¯¤À¤µ¤¤¡¥

@exitstatus


@node tail invocation
@c @section @command{tail}: Output the last part of files
@section @command{tail}: ¥Õ¥¡¥¤¥ë¤ÎºÇ¸å¤ÎÉôÊ¬¤ò½ÐÎÏ

@pindex tail
@cindex last part of files, outputting

@c @command{tail} prints the last part (10 lines by default) of each
@c @var{file}; it reads from standard input if no files are given or
@c when given a @var{file} of @samp{-}.  Synopsis:
@c 
@command{tail}¤Ï¡¤¤½¤ì¤¾¤ì¤Î@var{file}¤ÎºÇ¸å¤ÎÉôÊ¬(¥Ç¥Õ¥©¥ë¥È¤Ç½½¹Ô)½Ð
ÎÏ¤·¤Þ¤¹¡¥¥Õ¥¡¥¤¥ë¤¬Í¿¤¨¤é¤ì¤Æ¤¤¤Ê¤¤¾ì¹ç¤ä¡¤@samp{-}¤È¤¤¤¦@var{file}¤¬
Í¿¤¨¤é¤ì¤Æ¤¤¤ë¤È¤­¤ÏÉ¸½àÆþÎÏ¤«¤éÆÉ¤ß¹þ¤ß¤Þ¤¹¡¥³µÍ×¤Ç¤¹¡¥

@example
tail [@var{option}]@dots{} [@var{file}]@dots{}
@end example

@c If more than one @var{file} is specified, @command{tail} prints a
@c one-line header consisting of
@c 
°ì¤Ä°Ê¾å¤Î@var{file}¤¬»ØÄê¤µ¤ì¤Æ¤¤¤ë¾ì¹ç¡¤@command{tail}¤Ï°Ê²¼¤«¤éÀ®¤ê
Î©¤Ä°ì¹Ô¤Î¥Ø¥Ã¥À¤ò½ÐÎÏ¤·¤Þ¤¹¡¥
@example
==> @var{file name} <==
@end example
@noindent
@c before the output for each @var{file}.
@c 
¤½¤ì¤¾¤ì¤Î@var{file}¤ÎÁ°¤Ë½ÐÎÏ¤µ¤ì¤Þ¤¹¡¥

@cindex BSD @command{tail}
@c @sc{gnu} @command{tail} can output any amount of data (some other versions of
@c @command{tail} cannot).  It also has no @option{-r} option (print in
@c reverse), since reversing a file is really a different job from printing
@c the end of a file; BSD @command{tail} (which is the one with @option{-r}) can
@c only reverse files that are at most as large as its buffer, which is
@c typically 32 KiB.  A more reliable and versatile way to reverse files is
@c the @sc{gnu} @command{tac} command.
@c 
@sc{gnu} @command{tail}¤Ï¡¤Ç¤°Õ¤ÎÎÌ¤Î¥Ç¡¼¥¿¤ò½ÐÎÏ¤¹¤ë¤³¤È¤¬²ÄÇ½¤Ç¤¹
(@command{tail}¤ÎÂ¾¤Î¥Ð¡¼¥¸¥ç¥ó¤Ë¤Ï¤Ç¤­¤Ê¤¤¤â¤Î¤â¤¢¤ê¤Þ¤¹)¡¥¥Õ¥¡¥¤¥ë¤ò
µÕ½ç¤Ë¤¹¤ë¤³¤È¤Ï¥Õ¥¡¥¤¥ë¤Î½ª¤ê¤ò½ÐÎÏ¤¹¤ëºî¶È¤È¤ÏÁ´¤¯°Û¤Ê¤ë¤Î¤Ç¡¤
@option{-r}¥ª¥×¥·¥ç¥ó(µÕ½ç¤Ë½ÐÎÏ)¤â¤¢¤ê¤Þ¤»¤ó¡¥BSD @command{tail}
(@option{-r}¤¬¤¢¤ë¤â¤Î¤Î°ì¤Ä)¤Ï¡¤ºÇÂç¤Ç¤½¤Î¥Ð¥Ã¥Õ¥¡¤ÎÂç¤­¤µ¤Þ¤Ç¡¤ÄÌ¾ï
32KiB¤Î¥Õ¥¡¥¤¥ë¤òµÕ½ç¤Ë¤¹¤ë¤³¤È¤¬²ÄÇ½¤Ê¤À¤±¤Ç¤¹¡¥¥Õ¥¡¥¤¥ë¤òµÕ½ç¤Ë¤¹¤ë
¤è¤ê¿®ÍêÀ­¤Î¤¢¤ëÍÑÅÓ¤¬¹­¤¤ÊýË¡¤Ï¡¤@sc{gnu} @command{tac}¥³¥Þ¥ó¥É¤Ç¤¹¡¥

@c If any option-argument is a number @var{n} starting with a @samp{+},
@c @command{tail} begins printing with the @var{n}th item from the start of
@c each file, instead of from the end.
@c 
¤¢¤é¤æ¤ë¥ª¥×¥·¥ç¥ó°ú¿ô¤¬¡¤@samp{+}¤Ç»Ï¤Þ¤ë¿ô»ú@var{n}¤Î¾ì¹ç¡¤
@command{tail}¤Ï¥Õ¥¡¥¤¥ë¤Î½ª¤ê¤ÎÂå¤ï¤ê¤Ë¡¤¤½¤ì¤¾¤ì¤Î¥Õ¥¡¥¤¥ë¤ÎºÇ½é¤«¤é
@var{n}ÈÖÌÜ¤Î¹àÌÜ¤Ç½ÐÎÏ¤ò³«»Ï¤·¤Þ¤¹¡¥

@c The program accepts the following options.  Also see @ref{Common options}.
@c 
¥×¥í¥°¥é¥à¤Ï°Ê²¼¤Î¥ª¥×¥·¥ç¥ó¤ò¼õ¤±Æþ¤ì¤Þ¤¹¡¥@ref{Common options}¤â»²¾È
¤·¤Æ¤¯¤À¤µ¤¤¡¥

@table @samp

@item -c @var{bytes}
@itemx --bytes=@var{bytes}
@opindex -c
@opindex --bytes
@c Output the last @var{bytes} bytes, instead of final lines.  Appending
@c @samp{b} multiplies @var{bytes} by 512, @samp{k} by 1024, and @samp{m}
@c by 1048576.
@c 
ºÇ¸å¤Î¹Ô¤ÎÂå¤ï¤ê¤Ë¡¤ºÇ¸å¤Î@var{bytes}¥Ð¥¤¥È¤ò½ÐÎÏ¤·¤Þ¤¹¡¥¸åÃÖ¤µ¤ì¤ë
@samp{b}¤Ï@var{bytes}¤Î512ÇÜ¡¤@samp{k}¤Ï1024ÇÜ¡¤¤½¤·¤Æ@samp{m}¤Ï
1048576ÇÜ¤Ë¤Ê¤ê¤Þ¤¹¡¥

@item -f
@itemx --follow[=@var{how}]
@opindex -f
@opindex --follow
@cindex growing files
@vindex name @r{follow option}
@vindex descriptor @r{follow option}
@c Loop forever trying to read more characters at the end of the file,
@c presumably because the file is growing.  This option is ignored when
@c reading from a pipe.
@c If more than one file is given, @command{tail} prints a header whenever it
@c gets output from a different file, to indicate which file that output is
@c from.
@c 
¥Õ¥¡¥¤¥ë¤¬ÁýÂç¤·¤Æ¤¤¤ë²ÄÇ½À­¤¬¤¢¤ë¤¿¤á¡¤¥Õ¥¡¥¤¥ë¤Î½ª¤ê¤«¤é¡¤¤½¤ì°Ê¹ß¤Î
Ê¸»ú¤òÆÉ¤ß¹þ¤à¤³¤È¤ò±Êµ×¤Ë·«¤êÊÖ¤·¤Þ¤¹¡¥¤³¤Î¥ª¥×¥·¥ç¥ó¤Ï¡¤¥Ñ¥¤¥×¤«¤éÆÉ
¤ß¹þ¤Þ¤ì¤Æ¤¤¤ë¤È¤­Ìµ»ë¤µ¤ì¤Þ¤¹¡¥°ì¤Ä°Ê¾å¤Î¥Õ¥¡¥¤¥ë¤¬Í¿¤¨¤é¤ì¤Æ¤¤¤ë¾ì¹ç¡¤
½ÐÎÏ¤µ¤ì¤Æ¤ë¥Õ¥¡¥¤¥ë¤ò¼¨¤¹¤¿¤á¡¤°Û¤Ê¤ë¥Õ¥¡¥¤¥ë¤«¤é½ÐÎÏ¤òÆÀ¤ë¤È¤­¤Ï¤¤¤Ä
¤Ç¤â¡¤@command{tail}¤¬¥Ø¥Ã¥À¤ò½ÐÎÏ¤·¤Þ¤¹¡¥

@c There are two ways to specify how you'd like to track files with this option,
@c but that difference is noticeable only when a followed file is removed or
@c renamed.
@c If you'd like to continue to track the end of a growing file even after
@c it has been unlinked, use @option{--follow=descriptor}.  This is the default
@c behavior, but it is not useful if you're tracking a log file that may be
@c rotated (removed or renamed, then reopened).  In that case, use
@c @option{--follow=name} to track the named file by reopening it periodically
@c to see if it has been removed and recreated by some other program.
@c 
¤³¤Î¥ª¥×¥·¥ç¥ó¤Ç¤Ï¡¤¥Õ¥¡¥¤¥ë¤òÄÉÀ×¤¹¤ëÊýË¡¤ò»ØÄê¤¹¤ëÊýË¡¤¬Æó¤Ä¤¢¤ê¤Þ¤¹
¤¬¡¤¤½¤Î°ã¤¤¤Ï¡¤ÄÉÀ×¤·¤Æ¤¤¤ë¥Õ¥¡¥¤¥ë¤¬ºï½ü¤µ¤ì¤¿¤êÌ¾Á°¤òÊÑ¹¹¤µ¤ì¤¿¤ê¤·
¤¿¤È¤­ÄÌÃÎ²ÄÇ½¤À¤È¤¤¤¦¤³¤È¤À¤±¤Ç¤¹¡¥¥ê¥ó¥¯¤¬Ìµ¤¯¤Ê¤Ã¤¿¸å¤Ç¤â¡¤Áý¤¨Â³¤±
¤ë¥Õ¥¡¥¤¥ë¤Î½ª¤ê¤ÎÄÉÀ×¤òÂ³¤±¤¿¤¤¾ì¹ç¤Ï¡¤@option{--follow=descriptor}¤ò
»ÈÍÑ¤·¤Æ¤¯¤À¤µ¤¤¡¥¤³¤ì¤Ï¥Ç¥Õ¥©¥ë¥È¤ÎÆ°ºî¤Ç¤¹¤¬¡¤²óÅ¾(rotate)¤µ¤ì¤ë(ºï
½ü¤äÌ¾Á°¤ÎÊÑ¹¹¤¬¤Ê¤µ¤ì¡¤ºÆ¤Ó³«¤«¤ì¤ë)¥í¥°¥Õ¥¡¥¤¥ë¤òÄÉÀ×¤·¤Æ¤¤¤ë¤È¤­¤Ï
ÉÔÊØ¤Ç¤¹¡¥¤½¤Î¾ì¹ç¡¤Â¾¤Î¥×¥í¥°¥é¥à¤Ë¤è¤êºï½ü¤µ¤ìºÆºîÀ®¤µ¤ì¤¿¤«¤É¤¦¤«¤ò
¼þ´üÅª¤Ë¸«¤Æ¡¤ºÆ¤Ó³«¤«¤ì¤ë»ØÌ¾¤µ¤ì¤¿¥Õ¥¡¥¤¥ë¤òÄÉÀ×¤¹¤ë¤¿¤á¡¤
@option{--follow=name}¤ò»ÈÍÑ¤·¤Æ¤¯¤À¤µ¤¤¡¥

@c No matter which method you use, if the tracked file is determined to have
@c shrunk, @command{tail} prints a message saying the file has been truncated
@c and resumes tracking the end of the file from the newly-determined endpoint.
@c 
»ÈÍÑ¤·¤Æ¤¤¤ëÊýË¡¤Ë¤«¤«¤ï¤é¤º¡¤ÄÉÀ×¤·¤Æ¤¤¤ë¥Õ¥¡¥¤¥ë¤¬½Ì¤Þ¤Ã¤Æ¤¤¤ë¤È·èÄê
¤µ¤ì¤¿¾ì¹ç¡¤@command{tail}¤Ï¥Õ¥¡¥¤¥ë¤¬ÀÚ¤êµÍ¤á¤é¤ì¤¿¤³¤È¤ò¹ð¤²¤ë¥á¥Ã¥»¡¼
¥¸¤ò½ÐÎÏ¤·¡¤¿·¤¿¤Ë·èÄê¤µ¤ì¤¿½ªÃ¼¤«¤é¥Õ¥¡¥¤¥ë¤Î½ª¤ê¤òºÆÄÉÀ×¤·¤Ï¤¸¤á¤Þ¤¹¡¥

@c When a file is removed, @command{tail}'s behavior depends on whether it is
@c following the name or the descriptor.  When following by name, tail can
@c detect that a file has been removed and gives a message to that effect,
@c and if @option{--retry} has been specified it will continue checking
@c periodically to see if the file reappears.
@c When following a descriptor, tail does not detect that the file has
@c been unlinked or renamed and issues no message;  even though the file
@c may no longer be accessible via its original name, it may still be
@c growing.
@c 
¥Õ¥¡¥¤¥ë¤¬ºï½ü¤µ¤ì¤¿¤È¤­¡¤@command{tail}¤ÎÆ°ºî¤ÏÌ¾Á°¤ÇÂ³¤±¤ë¤«µ­½Ò»Ò¤Ç
Â³¤±¤ë¤«¤Ë°ÍÂ¸¤·¤Þ¤¹¡¥Ì¾Á°¤ÇÂ³¤±¤ë¤È¤­¡¤@command{tail}¤Ï¥Õ¥¡¥¤¥ë¤¬ºï½ü
¤µ¤ì¤¿¤³¤È¤ò¸¡½Ð¤·¡¤¤½¤Î±Æ¶Á¤Î¥á¥Ã¥»¡¼¥¸¤òÍ¿¤¨¤ë¤³¤È¤¬²ÄÇ½¤Ç¡¤
@option{--retry}¤¬»ØÄê¤µ¤ì¤Æ¤¤¤ë¾ì¹ç¡¤¥Õ¥¡¥¤¥ë¤¬ºÆ¤Ó¸½¤ì¤¿¤«¤É¤¦¤«¤ò¸«
¤ë¤¿¤á¼þ´üÅª¤ÊÄ´ºº¤òÂ³¤±¤ë¤Ç¤·¤ç¤¦¡¥µ­½Ò»Ò¤ÇÂ³¤±¤ë¤È¤­¡¤@command{tail} 
¤Ï¥Õ¥¡¥¤¥ë¤Î¥ê¥ó¥¯¤¬ÀÚ¤ì¤¿¤êÌ¾Á°¤¬ÊÑ¹¹¤µ¤ì¤¿¤³¤È¤ò¸¡½Ð¤»¤º¡¤¥á¥Ã¥»¡¼¥¸
¤ò½ÐÎÏ¤·¤Þ¤»¤ó¡¥¥Õ¥¡¥¤¥ë¤Ï´û¤Ë¸µ¤ÎÌ¾Á°¤Ç¥¢¥¯¥»¥¹¤Ç¤­¤Þ¤»¤ó¤¬¡¤¤Þ¤ÀÁý²Ã
¤·¤Æ¤¤¤ë¤«¤â¤·¤ì¤Þ¤»¤ó¡¥

@c The option values @samp{descriptor} and @samp{name} may be specified only
@c with the long form of the option, not with @option{-f}.
@c 
¥ª¥×¥·¥ç¥óÃÍ¤Î@samp{descriptor}¤È@samp{name}¤Ï¥ª¥×¥·¥ç¥ó¤ÎÄ¹¤¤·Á¼°¤Ç¤Î
¤ß»ØÄê¤Ç¤­¡¤@option{-f}¤Ç¤Ï»ØÄê¤Ç¤­¤Þ¤»¤ó¡¥

@item -F
@opindex -F
@c This option is the same as @option{--follow=name --retry}.  That is, tail
@c will attempt to reopen a file when it is removed.  Should this fail, tail
@c will keep trying until it becomes accessible again.
@c 
¤³¤Î¥ª¥×¥·¥ç¥ó¤Ï@option{--follow=name --retry}¤ÈÆ±¤¸¤Ç¤¹¡¥¤¹¤Ê¤ï¤Á¡¤
@command{tail}¤Ïºï½ü¤µ¤ì¤¿¤È¤­¥Õ¥¡¥¤¥ë¤òºÆ¤Ó³«¤³¤¦¤È¤·¤Þ¤¹¡¥¤³¤ì¤¬¼ºÇÔ
¤·¤Æ¤â¡¤@command{tail}¤ÏºÆ¤Ó¥¢¥¯¥»¥¹²ÄÇ½¤Ë¤Ê¤ë¤Þ¤ÇÄ©Àï¤·Â³¤±¤Þ¤¹¡¥

@itemx --retry
@opindex --retry
@c This option is meaningful only when following by name.
@c Without this option, when tail encounters a file that doesn't
@c exist or is otherwise inaccessible, it reports that fact and
@c never checks it again.
@c 
¤³¤Î¥ª¥×¥·¥ç¥ó¤Ï¡¤Ì¾Á°¤ÇÂ³¤±¤ë¤È¤­¤À¤±°ÕÌ£¤¬¤¢¤ê¤Þ¤¹¡¥¤³¤Î¥ª¥×¥·¥ç¥ó¤¬
Ìµ¤¤¾ì¹ç¡¤Â¸ºß¤·¤Æ¤¤¤Ê¤¤¤Þ¤¿¤Ï¥¢¥¯¥»¥¹¤Ç¤­¤Ê¤¤¥Õ¥¡¥¤¥ë¤Ë@command{tail} 
¤¬Áø¶ø¤·¤¿¤È¤­¡¤¤½¤ì¤Ï¤½¤Î»ö¼Â¤òÊó¹ð¤·ºÆ¤ÓÄ´ºº¤·¤Þ¤»¤ó¡¥

@itemx --sleep-interval=@var{number}
@opindex --sleep-interval
@c Change the number of seconds to wait between iterations (the default is 1.0).
@c During one iteration, every specified file is checked to see if it has
@c changed size.
@c Historical implementations of @command{tail} have required that
@c @var{number} be an integer.  However, GNU @command{tail} accepts
@c an arbitrary floating point number (using a period before any
@c fractional digits).
@c 
·«¤êÊÖ¤·¤Î´Ö¤ÎÂÔ¤Á»þ´Ö¤ÎÉÃ¿ô¤òÊÑ¹¹¤·¤Þ¤¹(¥Ç¥Õ¥©¥ë¥È¤Ï1.0ÉÃ)¡¥ÂÔ¤Ã¤Æ¤¤
¤ë´Ö¡¤»ØÄê¤µ¤ì¤¿Á´¤Æ¤Î¥Õ¥¡¥¤¥ë¤ÎÂç¤­¤µ¤¬ÊÑ¤Ã¤¿¤«¤É¤¦¤«Ä´ºº¤·¤Þ¤¹¡¥
@command{tail}¤ÎÎò»ËÅª¤Ê¼ÂÁõ¤Ç¤Ï¡¤@var{number}¤òÀ°¿ô¤Ë¤¹¤ëÉ¬Í×¤¬¤¢¤ê¤Þ
¤·¤¿¡¥¤·¤«¤·¡¤GNU @command{tail}¤Ï(¾®¿ôÉô¤ÎÁ°¤Ë¥Ô¥ê¥ª¥É¤ò»ÈÍÑ¤·¤Æ¤¤¤ë)
Ç¤°Õ¤ÎÉâÆ°¾®¿ôÅÀ¤Î¿ôÃÍ¤ò¼õ¤±Æþ¤ì¤Þ¤¹¡¥

@itemx --pid=@var{pid}
@opindex --pid
@c When following by name or by descriptor, you may specify the process ID,
@c @var{pid}, of the sole writer of all @var{file} arguments.  Then, shortly
@c after that process terminates, tail will also terminate.  This will
@c work properly only if the writer and the tailing process are running on
@c the same machine.  For example, to save the output of a build in a file
@c and to watch the file grow, if you invoke @command{make} and @command{tail}
@c like this then the tail process will stop when your build completes.
@c Without this option, you would have had to kill the @code{tail -f}
@c process yourself.
@c 
Ì¾Á°¤Þ¤¿¤Ïµ­½Ò»Ò¤ÇÂ³¤±¤ë¾ì¹ç¡¤Á´¤Æ¤Î@var{file}°ú¿ô¤ËÍ£°ì½ñ¤­¹þ¤ó¤Ç¤¤¤ë
¥×¥í¥»¥¹ID @var{pid}¤ò»ØÄê¤·¤Æ¤â¤«¤Þ¤¤¤Þ¤»¤ó¡¥¤½¤·¤Æ¡¤¥×¥í¥»¥¹¤¬½ªÎ»¤·
¤¿¾¯¤·¸å¤Ç@command{tail}¤â½ªÎ»¤·¤Þ¤¹¡¥¤³¤ì¤Ï½ñ¤­¹þ¤ó¤Ç¤¤¤ë¤â¤Î¤È
@command{tail}¥×¥í¥»¥¹¤¬Æ±¤¸¥Þ¥·¥ó¤ÇÆ°ºî¤·¤Æ¤¤¤ë¾ì¹ç¤Î¤ßÀµ³Î¤ËÆ°ºî¤·¤Þ
¤¹¡¥Îã¤¨¤Ð¡¤¥Õ¥¡¥¤¥ë¤Ë¥Ó¥ë¥É¤Î½ÐÎÏ¤òÊÝÂ¸¤·¤¿¤ê¥Õ¥¡¥¤¥ë¤¬Âç¤­¤¯¤Ê¤ë¤Î¤ò
¸«¤¿¤ê¤¹¤ë¤¿¤á@command{make}¤È@command{tail}¤ò°Ê²¼¤Î¤è¤¦¤Ë¸Æ¤Ó½Ð¤·¡¤¥Ó
¥ë¥É¤¬´°Î»¤·¤¿¤È¤­@command{tail}¤Î½èÍý¤Ï½ªÎ»¤·¤Þ¤¹¡¥¤³¤Î¥ª¥×¥·¥ç¥ó¤òÍÑ
¤¤¤Ê¤¤¾ì¹ç¡¤@code{tail -f}¥×¥í¥»¥¹¤ò¼«Ê¬¤ÇÄä»ß¤¹¤ëÉ¬Í×¤¬¤¢¤ê¤Þ¤¹¡¥
@example
$ make >& makerr & tail --pid=$! -f makerr
@end example
@c If you specify a @var{pid} that is not in use or that does not correspond
@c to the process that is writing to the tailed files, then @command{tail}
@c may terminate long before any @var{file}s stop growing or it may not
@c terminate until long after the real writer has terminated.
@c Note that @option{--pid} cannot be supported on some systems; @command{tail}
@c will print a warning if this is the case.
@c 
»ÈÍÑÃæ¤Ç¤Ê¤¤¡¤¤Þ¤¿¤Ï¡¤@command{tail}¤µ¤ì¤Æ¤¤¤ë¥Õ¥¡¥¤¥ë¤Ë½ñ¤­¹þ¤ó¤Ç¤¤¤ë
¥×¥í¥»¥¹¤ËÂÐ±þ¤·¤Ê¤¤@var{pid}¤ò»ØÄê¤·¤¿¾ì¹ç¡¤@command{tail}¤Ï¤¢¤é¤æ¤ë
@var{file}¤ÎÁý²Ã¤¬½ªÎ»¤¹¤ë¤è¤ê¤«¤Ê¤êÁ°¤Ë½ªÎ»¤·¤¿¤ê¡¤¼ÂºÝ¤Ë½ñ¤­¹þ¤ó¤Ç¤¤
¤ë¤â¤Î¤¬½ªÎ»¤·¤Æ¤·¤Ð¤é¤¯¤·¤Æ¤â½ªÎ»¤·¤Ê¤¤¤«¤â¤·¤ì¤Þ¤»¤ó¡¥@option{--pid}
¤Ï¥·¥¹¥Æ¥à¤Ë¤è¤Ã¤Æ¤Ï¥µ¥Ý¡¼¥È¤Ç¤­¤Ê¤¤¤³¤È¤ËÃí°Õ¤·¤Æ¤¯¤À¤µ¤¤¡¥¤½¤Î¾õ¶·¤Ç
¤Ï¡¤@command{tail}¤Ï·Ù¹ð¤ò½ÐÎÏ¤·¤Þ¤¹¡¥

@itemx --max-unchanged-stats=@var{n}
@opindex --max-unchanged-stats
@c When tailing a file by name, if there have been @var{n} (default
@c n=@value{DEFAULT_MAX_N_UNCHANGED_STATS_BETWEEN_OPENS}) consecutive
@c iterations for which the size has remained the same, then
@c @code{open}/@code{fstat} the file to determine if that file name is
@c still associated with the same device/inode-number pair as before.
@c When following a log file that is rotated, this is approximately the
@c number of seconds between when tail prints the last pre-rotation lines
@c and when it prints the lines that have accumulated in the new log file.
@c This option is meaningful only when following by name.
@c 
Ì¾Á°¤Ç¥Õ¥¡¥¤¥ë¤ò@command{tail}¤·¤Æ¤¤¤ë¤È¤­¡¤@var{n}(¥Ç¥Õ¥©¥ë¥È¤Ç
n=@value{DEFAULT_MAX_N_UNCHANGED_STATS_BETWEEN_OPENS})²óÏ¢Â³¤·¤ÆÂç¤­¤µ
¤¬Æ±¤¸¾ì¹ç¡¤¥Õ¥¡¥¤¥ëÌ¾¤¬°ÊÁ°¤ÈÆ±¤¸¥Ç¥Ð¥¤¥¹/inodeÈÖ¹æ¤ÎÁÈ¤Ë´ØÏ¢¤·¤Æ¤¤¤ë
¤«¤É¤¦¤«¤ò·èÄê¤¹¤ë¤¿¤á¡¤¥Õ¥¡¥¤¥ë¤ËÂÐ¤·¤Æ@code{open}/@code{fstat}¤ò¼Â¹Ô
¤·¤Þ¤¹¡¥²óÅ¾(rotate)¤µ¤ì¤Æ¤¤¤ë¥í¥°¥Õ¥¡¥¤¥ë¤òÄÉÀ×¤·¤Æ¤¤¤ë¤È¤­¡¤Á°²ó¤Ë²ó
Å¾(rotate)¤·¤¿¹Ô¤ò@command{tail}¤¬½ÐÎÏ¤¹¤ë¤È¤­¤È¡¤¿·¤·¤¤¥í¥°¥Õ¥¡¥¤¥ë¤Ç
ÃßÀÑ¤µ¤ì¤¿¹Ô¤ò½ÐÎÏ¤¹¤ë¤È¤­¤Î´Ö¤Ï¡¤¤ª¤½¤é¤¯¿ôÉÃ¤Ë¤Ê¤ê¤Þ¤¹¡¥¤³¤Î¥ª¥×¥·¥ç
¥ó¤Ï¡¤Ì¾Á°¤ÇÄÉÀ×¤·¤Æ¤¤¤ë¤È¤­¤Î¤ß°ÕÌ£¤¬¤¢¤ê¤Þ¤¹¡¥

@itemx -n @var{n}
@itemx --lines=@var{n}
@opindex -n
@opindex --lines
@c Output the last @var{n} lines.
@c 
ºÇ¸å¤Î@var{n}¹Ô½ÐÎÏ¤·¤Þ¤¹¡¥

@item -q
@itemx --quiet
@itemx --silent
@opindex -q
@opindex --quiet
@opindex --silent
@c Never print file name headers.
@c 
¥Õ¥¡¥¤¥ëÌ¾¤Î¥Ø¥Ã¥À¤ò½ÐÎÏ¤·¤Þ¤»¤ó¡¥

@item -v
@itemx --verbose
@opindex -v
@opindex --verbose
@c Always print file name headers.
@c 
¾ï¤Ë¥Õ¥¡¥¤¥ëÌ¾¤Î¥Ø¥Ã¥À¤ò½ÐÎÏ¤·¤Þ¤¹¡¥

@end table

@c On older systems, @command{tail} supports an obsolete option
@c @option{-@var{count}@var{options}}, which is recognized only if it is
@c specified first.  @var{count} is a decimal number optionally followed
@c by a size letter (@samp{b}, @samp{k}, @samp{m}) as in @option{-c}, or
@c @samp{l} to mean count by lines, or other option letters
@c (@samp{cfqv}).  Some older @command{tail} implementations also support
@c an obsolete option @option{+@var{count}} with the same meaning as
@c @option{-+@var{count}}.  @acronym{POSIX} 1003.1-2001 (@pxref{Standards
@c conformance}) does not allow these options; use @option{-c
@c @var{count}} or @option{-n @var{count}} instead.
@c 
¸Å¤¤¥·¥¹¥Æ¥à¤Ç¤Ï¡¤@command{tail}¤Ï»þÂåÃÙ¤ì¤Î¥ª¥×¥·¥ç¥ó
@option{-@var{count}@var{options}}¤ò¥µ¥Ý¡¼¥È¤·¡¤¤½¤ì¤ÏºÇ½é¤Ë»ØÄê¤µ¤ì¤Æ
¤¤¤ë¾ì¹ç¤À¤±Ç§¼±¤µ¤ì¤Þ¤¹¡¥@var{count}¤Ï½½¿Ê¿ô¤Î¿ôÃÍ¤Ç¡¤¥ª¥×¥·¥ç¥ó¤Ç
@option{-c}¤Ç¤Î¥µ¥¤¥º»ØÄêÊ¸»ú(@samp{b}¡¤@samp{k}¡¤@samp{m})¤ä¡¤¹Ô¿ô¤ò
°ÕÌ£¤¹¤ë@samp{l}¡¤¤Þ¤¿¤Ï¤½¤ì°Ê³°¤Î¥ª¥×¥·¥ç¥óÊ¸»ú(@samp{cfqv})¤¬Â³¤­¤Þ
¤¹¡¥¸Å¤¤¥·¥¹¥Æ¥à¤Ë¤Ï¡¤@option{-+@var{count}}¤ÈÆ±¤¸°ÕÌ£¤¬¤¢¤ë»þÂåÃÙ¤ì¤Î
¥ª¥×¥·¥ç¥ó@option{+@var{count}}¤ò¥µ¥Ý¡¼¥È¤·¤Æ¤¤¤ë¤â¤Î¤â¤¢¤ê¤Þ¤¹¡¥
@acronym{POSIX} 1003.1-2001 (@pxref{Standards conformance})¤Ç¤Ï¤³¤ì¤é
¤òµö²Ä¤·¤Æ¤¤¤Þ¤»¤ó¡¥Âå¤ï¤ê¤Ë@option{-c @var{count}}¤ä@option{-n
@var{count}}¤ò»ÈÍÑ¤·¤Æ¤¯¤À¤µ¤¤¡¥

@exitstatus


@node split invocation
@c @section @command{split}: Split a file into fixed-size pieces
@section @command{split}: ¥Õ¥¡¥¤¥ë¤ò¸ÇÄê¥µ¥¤¥º¤ÎÉôÊ¬¤ËÊ¬³ä

@pindex split
@cindex splitting a file into pieces
@cindex pieces, splitting a file into

@c @command{split} creates output files containing consecutive sections of
@c @var{input} (standard input if none is given or @var{input} is
@c @samp{-}).  Synopsis:
@c 
@command{split}¤Ï¡¤@var{input}(²¿¤âÍ¿¤¨¤é¤ì¤Ê¤«¤Ã¤¿¤ê¡¤@var{input}¤¬
@samp{-}¤Î¾ì¹ç¤ÏÉ¸½àÆþÎÏ)¤ÎÏ¢Â³¤·¤¿¥»¥¯¥·¥ç¥ó¤ò´Þ¤à½ÐÎÏ¥Õ¥¡¥¤¥ë¤òÀ¸À®
¤·¤Þ¤¹¡¥³µÍ×¤Ç¤¹¡¥

@example
split [@var{option}] [@var{input} [@var{prefix}]]
@end example

@c By default, @command{split} puts 1000 lines of @var{input} (or whatever is
@c left over for the last section), into each output file.
@c 
¥Ç¥Õ¥©¥ë¥È¤Ç¡¤@command{split}¤Ï@var{input}¤Î1000¹Ô(¤Þ¤¿¤Ï¡¤ºÇ¸å¤Î¥»¥¯
¥·¥ç¥ó¤Ç¤Ï»Ä¤ê)¤ò¡¤¤½¤ì¤¾¤ì¤Î½ÐÎÏ¥Õ¥¡¥¤¥ë¤Ë½ñ¤­¹þ¤ß¤Þ¤¹¡¥

@cindex output file name prefix
@c The output files' names consist of @var{prefix} (@samp{x} by default)
@c followed by a group of characters (@samp{aa}, @samp{ab}, @dots{} by
@c default), such that concatenating the output files in traditional
@c sorted order by file name produces
@c the original input file.  If the output file names are exhausted,
@c @command{split} reports an error without deleting the output files
@c that it did create.
@c 
½ÐÎÏ¥Õ¥¡¥¤¥ë¤ÎÌ¾Á°¤Ï@var{prefix} (¥Ç¥Õ¥©¥ë¥È¤Ï@samp{x})¤Ë¥°¥ë¡¼¥×Ê¸»ú
(¥Ç¥Õ¥©¥ë¥È¤Ç@samp{aa}¡¤@samp{ab}¡¤@dots{})¤¬Â³¤¯¤â¤Î¤«¤éÀ®¤êÎ©¤Ã¤Æ¤¤
¤Æ¡¤¤½¤ì¤Ç¡¤ÅÁÅýÅª¤Ê¥Õ¥¡¥¤¥ëÌ¾¤Î½çÈÖ¤Ç½ÐÎÏ¥Õ¥¡¥¤¥ë¤ò¥½¡¼¥È¤··ë¹ç¤·¤¿¤â
¤Î¤¬¡¤¸µ¤ÎÆþÎÏ¥Õ¥¡¥¤¥ë¤òÀ¸À®¤¹¤ë¤è¤¦¤Ë¤Ê¤Ã¤Æ¤¤¤Þ¤¹¡¥½ÐÎÏ¥Õ¥¡¥¤¥ëÌ¾¤ò»È
¤¤ÀÚ¤Ã¤¿¾ì¹ç¡¤@command{split}¤ÏºîÀ®¤µ¤ì¤¿½ÐÎÏ¥Õ¥¡¥¤¥ë¤òºï½ü¤»¤º¤Ë¥¨¥é¡¼
¤òÊó¹ð¤·¤Þ¤¹¡¥

@c The program accepts the following options.  Also see @ref{Common options}.
@c 
¤³¤Î¥×¥í¥°¥é¥à¤Ï°Ê²¼¤Î¥ª¥×¥·¥ç¥ó¤â¼õ¤±Æþ¤ì¤Þ¤¹¡¥@ref{Common options}¤â
»²¾È¤·¤Æ¤¯¤À¤µ¤¤¡¥

@table @samp

@item -a @var{length}
@itemx --suffix-length=@var{length}
@opindex -a
@opindex --suffix-length
@c Use suffixes of length @var{length}.  The default @var{length} is 2.
@c 
Ä¹¤µ@var{length}¤ÎÀÜÈø»Ò¤ò»ÈÍÑ¤·¤Þ¤¹¡¥¥Ç¥Õ¥©¥ë¥È¤Î@var{length}¤Ï2¤Ç¤¹¡¥

@item -l @var{lines}
@itemx --lines=@var{lines}
@opindex -l
@opindex --lines
@c Put @var{lines} lines of @var{input} into each output file.
@c 
@var{input}¤Î@var{lines}¹Ô¤ò¤½¤ì¤¾¤ì¤Î½ÐÎÏ¥Õ¥¡¥¤¥ë¤Ë½ñ¤­¹þ¤ß¤Þ¤¹¡¥

@c On older systems, @command{split} supports an obsolete option
@c @option{-@var{lines}}.  @acronym{POSIX} 1003.1-2001 (@pxref{Standards
@c conformance}) does not allow this; use @option{-l @var{lines}}
@c instead.
@c 
¸Å¤¤¥·¥¹¥Æ¥à¤Ç¤Ï¡¤@command{split}¤Ï»þÂåÃÙ¤ì¤Î¥ª¥×¥·¥ç¥ó
@option{-@var{lines}}¤ò¥µ¥Ý¡¼¥È¤·¤Æ¤¤¤Þ¤¹¡¥@acronym{POSIX} 1003.1-2001
(@pxref{Standards conformance})¤Ç¤Ï¤³¤ì¤òµö²Ä¤·¤Æ¤¤¤Þ¤»¤ó¡¥Âå¤ï¤ê¤Ë
@option{-l @var{lines}}¤ò»ÈÍÑ¤·¤Æ¤¯¤À¤µ¤¤¡¥

@item -b @var{bytes}
@itemx --bytes=@var{bytes}
@opindex -b
@opindex --bytes
@c Put the first @var{bytes} bytes of @var{input} into each output file.
@c Appending @samp{b} multiplies @var{bytes} by 512, @samp{k} by 1024, and
@c @samp{m} by 1048576.
@c 
@var{input}¤ÎºÇ½é¤Î@var{bytes}¥Ð¥¤¥È¤ò¡¤¤½¤ì¤¾¤ì¤Î½ÐÎÏ¥Õ¥¡¥¤¥ë¤Ë½ñ¤­¹þ
¤ß¤Þ¤¹¡¥@samp{b}¤Î¸åÃÖ¤Ï@var{bytes}¤Î512ÇÜ¡¤@samp{k}¤Ï1024ÇÜ¡¤¤½¤·¤Æ
@samp{m}¤Ï1048576ÇÜ¤Ç¤¹¡¥

@item -C @var{bytes}
@itemx --line-bytes=@var{bytes}
@opindex -C
@opindex --line-bytes
@c Put into each output file as many complete lines of @var{input} as
@c possible without exceeding @var{bytes} bytes.  For lines longer than
@c @var{bytes} bytes, put @var{bytes} bytes into each output file until
@c less than @var{bytes} bytes of the line are left, then continue
@c normally.  @var{bytes} has the same format as for the @option{--bytes}
@c option.
@c 
@var{bytes}¥Ð¥¤¥È¤ò±Û¤¨¤Ê¤¤@var{input}¤Î´°Á´¤Ê¹Ô¤ò¡¤¤Ç¤­¤ë¤À¤±Â¿¤¯¤½¤ì
¤¾¤ì¤Î½ÐÎÏ¥Õ¥¡¥¤¥ë¤Ë½ñ¤­¹þ¤ß¤Þ¤¹¡¥@var{bytes}¥Ð¥¤¥È¤è¤êÄ¹¤¤¹Ô¤ËÂÐ¤·¤Æ
¤Ï¡¤¹Ô¤Î@var{bytes}¥Ð¥¤¥È¤è¤ê¾¯¤Ê¤¤ÉôÊ¬¤¬»Ä¤ë¤Þ¤Ç¡¤¤½¤ì¤¾¤ì¤Î½ÐÎÏ¥Õ¥¡
¥¤¥ë¤Ë@var{bytes}¥Ð¥¤¥È½ñ¤­¹þ¤ß¡¤¤½¤ì¤«¤éÄÌ¾ïÄÌ¤ê¤ËÂ³¤±¤Þ¤¹¡¥
@var{bytes}¤Ï@option{--bytes}¥ª¥×¥·¥ç¥ó¤ËÂÐ¤¹¤ë¤â¤Î¤ÈÆ±¤¸½ñ¼°¤Ç¤¹¡¥

@item -d
@itemx --numeric-suffixes
@opindex -d
@opindex --numeric-suffixes
@c Use digits in suffixes rather than lower-case letters.
@c 
¾®Ê¸»ú¤Ç¤Ï¤Ê¤¯¡¤¿ô»ú¤ÎÀÜÈø»Ò¤ò»ÈÍÑ¤·¤Þ¤¹¡¥

@itemx --verbose
@opindex --verbose
@c Write a diagnostic to standard error just before each output file is opened.
@c 
¤½¤ì¤¾¤ì¤Î½ÐÎÏ¥Õ¥¡¥¤¥ë¤¬³«¤«¤ì¤ëÄ¾Á°¤Ë¡¤É¸½à¥¨¥é¡¼½ÐÎÏ¤Ë¾õÂÖ¤ò½ñ¤­¹þ¤ß
¤Þ¤¹¡¥

@end table

@exitstatus


@node csplit invocation
@c @section @command{csplit}: Split a file into context-determined pieces
@section @command{csplit}: ¥Õ¥¡¥¤¥ë¤òÊ¸Ì®¤Ç·èÄê¤µ¤ì¤¿ÉôÊ¬¤ËÊ¬³ä

@pindex csplit
@cindex context splitting
@cindex splitting a file into pieces by context

@c @command{csplit} creates zero or more output files containing sections of
@c @var{input} (standard input if @var{input} is @samp{-}).  Synopsis:
@c 
@command{csplit}¤Ï¡¤@var{input}(@var{input}¤¬@samp{-}¤Î¾ì¹ç¤ÏÉ¸½àÆþÎÏ) 
¤Î¥»¥¯¥·¥ç¥ó¤ò´Þ¤à¡¤¥¼¥í°Ê¾å¤Î½ÐÎÏ¥Õ¥¡¥¤¥ë¤òºîÀ®¤·¤Þ¤¹¡¥³µÍ×¤Ç¤¹¡¥

@example
csplit [@var{option}]@dots{} @var{input} @var{pattern}@dots{}
@end example

@c The contents of the output files are determined by the @var{pattern}
@c arguments, as detailed below.  An error occurs if a @var{pattern}
@c argument refers to a nonexistent line of the input file (e.g., if no
@c remaining line matches a given regular expression).  After every
@c @var{pattern} has been matched, any remaining input is copied into one
@c last output file.
@c 
½ÐÎÏ¥Õ¥¡¥¤¥ë¤ÎÆâÍÆ¤Ï¡¤¸å¤Ç¾Ü½Ò¤¹¤ë@var{pattern}°ú¿ô¤Ç·èÄê¤µ¤ì¤Þ¤¹¡¥
@var{pattern}°ú¿ô¤¬ÆþÎÏ¥Õ¥¡¥¤¥ë¤ËÂ¸ºß¤·¤Ê¤¤¹Ô¤ò»²¾È¤¹¤ë¾ì¹ç¡¤¥¨¥é¡¼¤¬
È¯À¸¤·¤Þ¤¹(Îã¤¨¤Ð¡¤»Ä¤Ã¤Æ¤¤¤ë¹Ô¤¬Í¿¤¨¤é¤ì¤¿Àµµ¬É½¸½¤Ë¥Þ¥Ã¥Á¤·¤Ê¤¤¾ì¹ç)¡¥
Á´¤Æ¤Î@var{pattern}¤¬¥Þ¥Ã¥Á¤·¤¿¸å¡¤»Ä¤ê¤ÎÆþÎÏ¤Ï°ì¤Ä¤ÎºÇ¸å¤Î½ÐÎÏ¥Õ¥¡¥¤
¥ë¤Ë¥³¥Ô¡¼¤µ¤ì¤Þ¤¹¡¥

@c By default, @command{csplit} prints the number of bytes written to each
@c output file after it has been created.
@c 
¥Ç¥Õ¥©¥ë¥È¤Ç¡¤@command{csplit}¤Ï¡¤¤½¤ì¤¾¤ì¤Î½ÐÎÏ¥Õ¥¡¥¤¥ë¤¬ºîÀ®¤µ¤ì¤¿¸å¡¤
¥Ð¥¤¥È¿ô¤ò¤½¤Î¥Õ¥¡¥¤¥ë¤Ë½ñ¤­¹þ¤ß¤Þ¤¹¡¥

@c The types of pattern arguments are:
@c 
@var{pattern}°ú¿ô¤Î·Á¼°¤Ï°Ê²¼¤ÎÄÌ¤ê¤Ç¤¹¡¥

@table @samp

@item @var{n}
@c Create an output file containing the input up to but not including line
@c @var{n} (a positive integer).  If followed by a repeat count, also
@c create an output file containing the next @var{n} lines of the input
@c file once for each repeat.
@c 
@var{n}¹Ô¤Þ¤Ç¤ÎÆþÎÏ¤ò´Þ¤à½ÐÎÏ¥Õ¥¡¥¤¥ë¤òºîÀ®¤·¤Þ¤¹¤¬¡¤@var{n}¹Ô¤Ï´Þ¤ß¤Þ
¤»¤ó¡¥·«¤êÊÖ¤·¿ô¤¬Â³¤¯¾ì¹ç¡¤¤½¤ì¤¾¤ì¤Î·«¤êÊÖ¤·¤ËÂÐ¤·¡¤ÆþÎÏ¥Õ¥¡¥¤¥ë¤Î¼¡
¤Î@var{n}¹Ô¤ò´Þ¤à½ÐÎÏ¥Õ¥¡¥¤¥ë¤âºîÀ®¤·¤Þ¤¹¡¥

@item /@var{regexp}/[@var{offset}]
@c Create an output file containing the current line up to (but not
@c including) the next line of the input file that contains a match for
@c @var{regexp}.  The optional @var{offset} is an integer.
@c If it is given, the input up to (but not including) the
@c matching line plus or minus @var{offset} is put into the output file,
@c and the line after that begins the next section of input.
@c 
@var{regexp}¤Ë¥Þ¥Ã¥Á¤¹¤ë¤â¤Î¤ò´Þ¤àÆþÎÏ¥Õ¥¡¥¤¥ë¤Î¼¡¤Î¹Ô¤Þ¤Ç¡¤¸½ºß¤Î¹Ô
(¤¿¤À¤·¡¤¥Þ¥Ã¥Á¤Ï´Þ¤Þ¤ì¤Ê¤¤)¤ò´Þ¤à½ÐÎÏ¥Õ¥¡¥¤¥ë¤òºîÀ®¤·¤Þ¤¹¡¥¥ª¥×¥·¥ç¥ó
¤Î@var{offset}¤ÏÀ°¿ô¤Ç¤¹¡¥Í¿¤¨¤é¤ì¤¿¾ì¹ç¡¤¥Þ¥Ã¥Á¤·¤¿¹Ô¤Þ¤Ç¤ÎÆþÎÏ(¤¿¤À
¤·¡¤¥Þ¥Ã¥Á¤Ï´Þ¤Þ¤ì¤Ê¤¤)¤Ë¡¤@var{offset}²Ã¤¨¤¿¡¤¤Þ¤¿¤Ï°ú¤¤¤¿ÆþÎÏ¤Þ¤Ç½Ð
ÎÏ¥Õ¥¡¥¤¥ë¤Ë½ñ¤­½Ð¤µ¤ì¡¤¤½¤Î¸å¤Î¹Ô¤ÏÆþÎÏ¤Î¼¡¤ÎÉôÊ¬¤Ë¤Ê¤ê¤Þ¤¹¡¥

@item %@var{regexp}%[@var{offset}]
@c Like the previous type, except that it does not create an output
@c file, so that section of the input file is effectively ignored.
@c 
Á°¤Î·Á¼°¤Ë»÷¤Æ¤¤¤Þ¤¹¤¬¡¤½ÐÎÏ¥Õ¥¡¥¤¥ë¤òºîÀ®¤·¤Ê¤¤¤Î¤Ç¡¤ÆþÎÏ¥Õ¥¡¥¤¥ë¤ÎÉô
Ê¬¤Ï¸úÎ¨Åª¤ËÌµ»ë¤µ¤ì¤Þ¤¹¡¥

@item @{@var{repeat-count}@}
@c Repeat the previous pattern @var{repeat-count} additional
@c times. @var{repeat-count} can either be a positive integer or an
@c asterisk, meaning repeat as many times as necessary until the input is
@c exhausted.
@c 
Á°¤Î¥Ñ¥¿¡¼¥ó¤ò@var{repeat-count}²óÍ¾Ê¬¤Ë·«¤êÊÖ¤·¤Þ¤¹¡¥
@var{repeat-count}¤ÏÀµ¤ÎÀ°¿ô¡¤¤Þ¤¿¤Ï¥¢¥¹¥¿¥ê¥¹¥¯¤Ë¤Ê¤ê¡¤¤½¤ì¤ÏÆþÎÏ¤¬»È
¤¤²Ì¤¿¤µ¤ì¤ë¤Î¤ËÉ¬Í×¤Ê¤À¤±·«¤êÊÖ¤¹¤³¤È¤ò°ÕÌ£¤·¤Þ¤¹¡¥

@end table

@c The output files' names consist of a prefix (@samp{xx} by default)
@c followed by a suffix.  By default, the suffix is an ascending sequence
@c of two-digit decimal numbers from @samp{00} to @samp{99}.  In any case,
@c concatenating the output files in sorted order by filename produces the
@c original input file.
@c 
½ÐÎÏ¥Õ¥¡¥¤¥ëÌ¾¤Ï¡¤Á°ÃÖ(¥Ç¥Õ¥©¥ë¥È¤Ç@samp{xx})¤È¤½¤ì¤ËÂ³¤¯ÀÜÈø»Ò¤«¤éÀ®
¤êÎ©¤Á¤Þ¤¹¡¥¥Ç¥Õ¥©¥ë¥È¤ÇÀÜÈø»Ò¤ÏÆó·å¤Î½½¿Ê¿ô¤Ç¡¤@samp{00}¤«¤é@samp{99}
¤Þ¤Ç½çÈÖ¤Ë¾å¾º¤·¤Þ¤¹¡¥¤¢¤é¤æ¤ë¾õ¶·¤Ç¡¤¥Õ¥¡¥¤¥ëÌ¾¤Î½çÈÖ¤Ç¥½¡¼¥È¤µ¤ì¤¿½Ð
ÎÏ¥Õ¥¡¥¤¥ë¤òÏ¢·ë¤¹¤ë¤È¡¤¸µ¤ÎÆþÎÏ¥Õ¥¡¥¤¥ë¤òÀ¸À®¤·¤Þ¤¹¡¥

@c By default, if @command{csplit} encounters an error or receives a hangup,
@c interrupt, quit, or terminate signal, it removes any output files
@c that it has created so far before it exits.
@c 
¥Ç¥Õ¥©¥ë¥È¤Ç¡¤@command{csplit}¤¬¥¨¥é¡¼¤ä¡¤¥Ï¥ó¥°¥¢¥Ã¥×¡¤ÃæÃÇ¡¤½ªÎ»¡¤¤Þ
¤¿¤Ï½ªÃ¼¥·¥°¥Ê¥ë¤ò¸¡½Ð¤·¤¿¾ì¹ç¡¤¤½¤ì¤Þ¤Ç¤ËÂ¸ºß¤¹¤ëºîÀ®¤µ¤ì¤¿¤¢¤é¤æ¤ë½Ð
ÎÏ¥Õ¥¡¥¤¥ë¤òºï½ü¤·¤Þ¤¹¡¥

@c The program accepts the following options.  Also see @ref{Common options}.
@c 
¥×¥í¥°¥é¥à¤Ï°Ê²¼¤Î¥ª¥×¥·¥ç¥ó¤ò¼õ¤±Æþ¤ì¤Þ¤¹¡¥@ref{Common options}¤â»²¾È
¤·¤Æ¤¯¤À¤µ¤¤¡¥

@table @samp

@item -f @var{prefix}
@itemx --prefix=@var{prefix}
@opindex -f
@opindex --prefix
@cindex output file name prefix
@c Use @var{prefix} as the output file name prefix.
@c 
½ÐÎÏ¥Õ¥¡¥¤¥ë¤ÎÀÜÈø»Ò¤È¤·¤Æ¡¤@var{prefix}¤ò»ÈÍÑ¤·¤Þ¤¹¡¥

@item -b @var{suffix}
@itemx --suffix=@var{suffix}
@opindex -b
@opindex --suffix
@cindex output file name suffix
@c Use @var{suffix} as the output file name suffix.  When this option is
@c specified, the suffix string must include exactly one
@c @code{printf(3)}-style conversion specification, possibly including
@c format specification flags, a field width, a precision specifications,
@c or all of these kinds of modifiers.  The format letter must convert a
@c binary integer argument to readable form; thus, only @samp{d}, @samp{i},
@c @samp{u}, @samp{o}, @samp{x}, and @samp{X} conversions are allowed.  The
@c entire @var{suffix} is given (with the current output file number) to
@c @code{sprintf(3)} to form the file name suffixes for each of the
@c individual output files in turn.  If this option is used, the
@c @option{--digits} option is ignored.
@c 
½ÐÎÏ¥Õ¥¡¥¤¥ëÌ¾¤ÎÀÜÈø»Ò¤È¤·¤Æ@var{suffix}¤ò»ÈÍÑ¤·¤Þ¤¹¡¥¤³¤Î¥ª¥×¥·¥ç¥ó¤¬
»ØÄê¤µ¤ì¤Æ¤¤¤ë¾ì¹ç¡¤ÀÜÈø»Ò¤ÎÊ¸»úÎó¤Ï¡¤°ì¤Ä¤À¤±¤Î@code{printf(3)}·Á¼°¤Î
ÊÑ´¹¤Ç¤Î»ØÄê¤ò´Þ¤ó¤Ç¤¤¤ëÉ¬Í×¤¬¤¢¤ê¡¤¤ª¤½¤é¤¯¡¤½ñ¼°»ØÄê¤Î¥Õ¥é¥°¡¤¥Õ¥£¡¼
¥ë¥É¤ÎÉý¡¤ÀºÌ©¤µ¤Î»ØÄê¡¤¤Þ¤¿¤Ï¤³¤ì¤éÁ´¤Æ¤Î½¤¾þ¸ì¤ò´Þ¤ß¤Þ¤¹¡¥¥Õ¥©¡¼¥Þ¥Ã
¥ÈÊ¸»ú¤Ï¡¤Æó¿Ê¿ô¤ÎÀ°¿ô¤Î°ú¿ô¤ò²ÄÆÉ¤Ê¤â¤Î¤ËÊÑ´¹¤¹¤ëÉ¬Í×¤¬¤¢¤ê¤Þ¤¹¡¥¤³¤Î
¤¿¤á¡¤@samp{d}¡¤@samp{i}¡¤@samp{u}¡¤@samp{o}¡¤@samp{x}¡¤¤½¤·¤Æ@samp{X}
¤ÎÊÑ´¹¤Ï²ÄÇ½¤Ç¤¹¡¥´°Á´¤Ê@var{suffix}¤Ï¡¤¤½¤ì¤¾¤ì¤Î¸ÄÊÌ¤Ê½ÐÎÏ¥Õ¥¡¥¤¥ë¤Ë
ÂÐ¤·¡¤¥Õ¥¡¥¤¥ëÌ¾¤ÎÀÜÈø»Ò¤ò½çÈÖ¤Ë·ÁÀ®¤¹¤ë¤¿¤á(¸½ºß¤Î½ÐÎÏ¥Õ¥¡¥¤¥ë¿ô¤È¤È
¤â¤Ë) @code{sprintf(3)}¤ËÍ¿¤¨¤é¤ì¤Þ¤¹¡¥¤³¤Î¥ª¥×¥·¥ç¥ó¤ò»ÈÍÑ¤·¤¿¾ì¹ç¡¤
@option{--digits}¥ª¥×¥·¥ç¥ó¤ÏÌµ»ë¤µ¤ì¤Þ¤¹¡¥

@item -n @var{digits}
@itemx --digits=@var{digits}
@opindex -n
@opindex --digits
@c Use output file names containing numbers that are @var{digits} digits
@c long instead of the default 2.
@c 
¥Ç¥Õ¥©¥ë¥È¤Î2¤ÎÂå¤ï¤ê¤Ë@var{digits}·å¤ÎÄ¹¤µ¤Î¿ô»ú¤ò´Þ¤à½ÐÎÏ¥Õ¥¡¥¤¥ëÌ¾
¤ò»ÈÍÑ¤·¤Þ¤¹¡¥

@item -k
@itemx --keep-files
@opindex -k
@opindex --keep-files
@c Do not remove output files when errors are encountered.
@c 
¥¨¥é¡¼¤¬¸¡½Ð¤µ¤ì¤¿¾ì¹ç¤Ç¤â½ÐÎÏ¥Õ¥¡¥¤¥ë¤òºï½ü¤·¤Þ¤»¤ó¡¥

@item -z
@itemx --elide-empty-files
@opindex -z
@opindex --elide-empty-files
@c Suppress the generation of zero-length output files.  (In cases where
@c the section delimiters of the input file are supposed to mark the first
@c lines of each of the sections, the first output file will generally be a
@c zero-length file unless you use this option.)  The output file sequence
@c numbers always run consecutively starting from 0, even when this option
@c is specified.
@c 
Ä¹¤µ¥¼¥í¤Î½ÐÎÏ¥Õ¥¡¥¤¥ë¤ÎÀ¸À®¤òÍÞÀ©¤·¤Þ¤¹¡¥(ÆþÎÏ¥Õ¥¡¥¤¥ë¤Î¥»¥¯¥·¥ç¥ó¤ò
Ê¬Î¥¤¹¤ë¤â¤Î¤¬¤½¤ì¤¾¤ì¤Î¥»¥¯¥·¥ç¥ó¤ÎºÇ½é¤Î¹Ô¤Ë°õ¤òÉÕ¤±¤ë¾õ¶·¤Ç¤Ï¡¤¤³¤Î
¥ª¥×¥·¥ç¥ó¤ò»ÈÍÑ¤·¤Ê¤¤¸Â¤ê¡¤ºÇ½é¤Î½ÐÎÏ¥Õ¥¡¥¤¥ë¤Ï¡¤ÄÌ¾ïÄ¹¤µ¥¼¥í¤Î¥Õ¥¡¥¤
¥ë¤Ë¤Ê¤ê¤Þ¤¹¡¥)½ÐÎÏ¥Õ¥¡¥¤¥ë¤Î½çÈÖ¤Ï¡¤¤³¤Î¥ª¥×¥·¥ç¥ó¤¬»ØÄê¤µ¤ì¤Æ¤¤¤ë¤È
¤­¤Ç¤µ¤¨¡¤0¤«¤é»Ï¤Þ¤ëÏ¢Â³¤·¤¿¤â¤Î¤Ë¤Ê¤ê¤Þ¤¹¡¥

@item -s
@itemx -q
@itemx --silent
@itemx --quiet
@opindex -s
@opindex -q
@opindex --silent
@opindex --quiet
@c Do not print counts of output file sizes.
@c 
½ÐÎÏ¥Õ¥¡¥¤¥ë¤ÎÂç¤­¤µ¤ò½ÐÎÏ¤·¤Þ¤»¤ó¡¥

@end table

@exitstatus


@node Summarizing files
@c @chapter Summarizing files
@chapter ¥Õ¥¡¥¤¥ë¤ÎÍ×Ìó

@cindex summarizing files

@c These commands generate just a few numbers representing entire
@c contents of files.
@c 
°Ê²¼¤Î¥³¥Þ¥ó¥É¤Ï¡¤¥Õ¥¡¥¤¥ë¤ÎÆâÍÆÁ´ÂÎ¤òÉ½¸½¤¹¤ë¤¤¤¯¤Ä¤«¤Î¿ô»ú¤òÀ¸À®¤·¤Þ
¤¹¡¥

@menu
* wc invocation::               Print newline, word, and byte counts.
* sum invocation::              Print checksum and block counts.
* cksum invocation::            Print CRC checksum and byte counts.
* md5sum invocation::           Print or check message-digests.
@end menu


@node wc invocation
@c @section @command{wc}: Print newline, word, and byte counts
@section @command{wc}: ²þ¹Ô¡¤Ã±¸ì¡¤¤½¤·¤Æ¥Ð¥¤¥È¿ô¤ò½ÐÎÏ

@pindex wc
@cindex byte count
@cindex character count
@cindex word count
@cindex line count

@c @command{wc} counts the number of bytes, characters, whitespace-separated
@c words, and newlines in each given @var{file}, or standard input if none
@c are given or for a @var{file} of @samp{-}.  Synopsis:
@c 
@command{wc}¤Ï¡¤¤½¤ì¤¾¤ì¤ÎÍ¿¤¨¤é¤ì¤¿@var{file}¤ä¡¤Í¿¤¨¤é¤ì¤Ê¤«¤Ã¤¿¾ì¹ç
¤ä@samp{-}¤Î@var{file}¤ËÂÐ¤·¡¤¥Ð¥¤¥È¿ô¡¤Ê¸»ú¡¤¶õÇò¤Ç¶èÀÚ¤é¤ì¤¿Ã±¸ì¡¤¤½
¤·¤Æ²þ¹Ô¤ò¿ô¤¨¤Þ¤¹¡¥³µÍ×¤Ç¤¹¡¥

@example
wc [@var{option}]@dots{} [@var{file}]@dots{}
@end example

@cindex total counts
@c @command{wc} prints one line of counts for each file, and if the file was
@c given as an argument, it prints the file name following the counts.  If
@c more than one @var{file} is given, @command{wc} prints a final line
@c containing the cumulative counts, with the file name @file{total}.  The
@c counts are printed in this order: newlines, words, characters, bytes.
@c Each count is printed right-justified in a field with at least one
@c space between fields so that the numbers and file names normally line
@c up nicely in columns.  The width of the count fields varies depending
@c on the inputs, so you should not depend on a particular field width.
@c However, as a @acronym{GNU} extension, if only one count is printed,
@c it is guaranteed to be printed without leading spaces.
@c 
@command{wc}¤Ï¡¤¤½¤ì¤¾¤ì¤Î¥Õ¥¡¥¤¥ë¤ËÂÐ¤·¡¤¿ô¤¨¤¿¤â¤Î¤ò°ì¹Ô½ÐÎÏ¤·¡¤¥Õ¥¡
¥¤¥ë¤¬°ú¿ô¤È¤·¤ÆÍ¿¤¨¤é¤ì¤¿¾ì¹ç¡¤¿ô¤ËÂ³¤±¤Æ¥Õ¥¡¥¤¥ëÌ¾¤ò½ÐÎÏ¤·¤Þ¤¹¡¥°ì¤Ä
°Ê¾å¤Î@var{file}¤¬Í¿¤¨¤é¤ì¤¿¾ì¹ç¡¤@command{wc}¤Ï¡¤¥Õ¥¡¥¤¥ëÌ¾
@file{total}¤È¶¦¤Ë¡¤ÎßÀÑ¤µ¤ì¤¿¿ô¤òºÇ½ª¹Ô¤Ë½ÐÎÏ¤·¤Þ¤¹¡¥¿ô¤Ï¡¤°Ê²¼¤Î½ç½ø
¤Ç½ÐÎÏ¤µ¤ì¤Þ¤¹¡¥²þ¹Ô¡¤Ã±¸ì¡¤Ê¸»ú¡¤¥Ð¥¤¥È¤Ç¤¹¡¥¤½¤ì¤¾¤ì¤Î·×¿ô·ë²Ì¤Ï¡¤¿ô
»ú¤È¥Õ¥¡¥¤¥ëÌ¾¤Î¹Ô¤¬Îó¤Ë¤¦¤Þ¤¯ÊÂ¤Ö¤è¤¦¤Ë¡¤±¦´ó¤»¤Ç¡¤¤½¤ì¤¾¤ì¤Î¥Õ¥£¡¼¥ë
¥É¤Î´Ö¤Ë¾¯¤Ê¤¯¤È¤â°ì¤Ä¤Î¥¹¥Ú¡¼¥¹¤òÆþ¤ì¤Æ½ÐÎÏ¤·¤Þ¤¹¡¥·×¿ô·ë²Ì¤Î¥Õ¥£¡¼¥ë
¥É¤ÎÉý¤Ï¡¤ÆþÎÏ¤Ë°ÍÂ¸¤·¤ÆÊÑ²½¤¹¤ë¤Î¤Ç¡¤ÆÃÄê¤Î¥Õ¥£¡¼¥ë¥É¤ÎÉý¤Ë°ÍÂ¸¤¹¤Ù¤­
¤Ç¤Ï¤¢¤ê¤Þ¤»¤ó¡¥¤·¤«¤·¡¤@acronym{GNU}¤Î³ÈÄ¥¤È¤·¤Æ¡¤°ì¤Ä¤Î·×¿ô·ë²Ì¤À¤±
¤ò½ÐÎÏ¤¹¤ë¾ì¹ç¡¤Á°ÃÖ¤µ¤ì¤ë¥¹¥Ú¡¼¥¹¤òÍÑ¤¤¤º¤Ë½ÐÎÏ¤µ¤ì¤ë¤³¤È¤¬ÊÝ¾Ú¤µ¤ì¤Þ
¤¹¡¥

@c By default, @command{wc} prints three counts: the newline, words, and byte
@c counts.  Options can specify that only certain counts be printed.
@c Options do not undo others previously given, so
@c 
¥Ç¥Õ¥©¥ë¥È¤Ç¡¤@command{wc}¤Ï»°¤Ä¤Î¿ô¤¹¤Ù¤Æ¤ò½ÐÎÏ¤·¤Þ¤¹¡¥¥ª¥×¥·¥ç¥ó¤Ç¡¤
½ÐÎÏ¤·¤¿¤¤¿ô¤Î¤ß¤ò»ØÄê¤¹¤ë¤³¤È¤¬¤Ç¤­¤Þ¤¹¡¥¥ª¥×¥·¥ç¥ó¤Ï¡¤Á°¤ËÍ¿¤¨¤é¤ì¤¿
¤â¤Î¤ò¸µ¤ËÌá¤¹¤³¤È¤Ï¤Ç¤­¤Þ¤»¤ó¡¥¤½¤Î¤¿¤á¡¤°Ê²¼¤Î¤è¤¦¤Ë¤·¤¿¾ì¹ç¤ò¹Í¤¨¤Þ
¤¹¡¥

@example
wc --bytes --words
@end example

@noindent
@c prints both the byte counts and the word counts.
@c 
¤³¤ì¤Ï¡¤¥Ð¥¤¥È¿ô¤ÈÃ±¸ì¤Î¿ô¤ÎÎ¾Êý¤ò½ÐÎÏ¤·¤Þ¤¹¡¥

@c With the @option{--max-line-length} option, @command{wc} prints the length
@c of the longest line per file, and if there is more than one file it
@c prints the maximum (not the sum) of those lengths.
@c 
@option{--max-line-length}¥ª¥×¥·¥ç¥ó¤òÍÑ¤¤¤¿¾ì¹ç¡¤@command{wc}¤Ï¥Õ¥¡¥¤
¥ë¤´¤È¤ÎºÇÄ¹¤Î¹Ô¤ÎÄ¹¤µ¤ò½ÐÎÏ¤·¡¤°ì¤Ä°Ê¾å¤Î¥Õ¥¡¥¤¥ë¤¬¤¢¤ë¾ì¹ç¡¤¤½¤ì¤é¤Î
Ä¹¤µ¤Î(¹ç·×¤Ç¤Ï¤Ê¤¯)ºÇÂç¤ò½ÐÎÏ¤·¤Þ¤¹¡¥

@c The program accepts the following options.  Also see @ref{Common options}.
@c 
¥×¥í¥°¥é¥à¤Ï°Ê²¼¤Î¥ª¥×¥·¥ç¥ó¤â¼õ¤±Æþ¤ì¤Þ¤¹¡¥@ref{Common options}¤â»²¾È¤·
¤Æ¤¯¤À¤µ¤¤¡¥

@table @samp

@item -c
@itemx --bytes
@opindex -c
@opindex --bytes
@c Print only the byte counts.
@c 
¥Ð¥¤¥È¿ô¤Î¤ß½ÐÎÏ¤·¤Þ¤¹¡¥

@item -m
@itemx --chars
@opindex -m
@opindex --chars
@c Print only the character counts.
@c 
Ê¸»ú¿ô¤Î¤ß½ÐÎÏ¤·¤Þ¤¹¡¥

@item -w
@itemx --words
@opindex -w
@opindex --words
@c Print only the word counts.
@c 
Ã±¸ì¿ô¤Î¤ß½ÐÎÏ¤·¤Þ¤¹¡¥

@item -l
@itemx --lines
@opindex -l
@opindex --lines
@c Print only the newline counts.
@c 
²þ¹Ô¿ô¤Î¤ß½ÐÎÏ¤·¤Þ¤¹¡¥

@item -L
@itemx --max-line-length
@opindex -L
@opindex --max-line-length
@c Print only the maximum line lengths.
@c 
ºÇÄ¹¹Ô¤ÎÄ¹¤µ¤Î¤ß½ÐÎÏ¤·¤Þ¤¹¡¥

@end table

@exitstatus


@node sum invocation
@c @section @command{sum}: Print checksum and block counts
@section @command{sum}: ¥Á¥§¥Ã¥¯¥µ¥à¤È¥Ö¥í¥Ã¥¯¿ô¤ò½ÐÎÏ

@pindex sum
@cindex 16-bit checksum
@cindex checksum, 16-bit

@c @command{sum} computes a 16-bit checksum for each given @var{file}, or
@c standard input if none are given or for a @var{file} of @samp{-}.  Synopsis:
@c 
@command{sum}¤Ï¡¤Í¿¤¨¤é¤ì¤¿¤½¤ì¤¾¤ì¤Î@var{file}¡¤¤Þ¤¿¤Ï¡¤Í¿¤¨¤é¤ì¤Ê¤¤
¾ì¹ç¤ä@samp{-}¤Î¥Õ¥¡¥¤¥ë¤¬Í¿¤¨¤é¤ì¤¿¾ì¹ç¤ÏÉ¸½àÆþÎÏ¤Î16¥Ó¥Ã¥È¤Î¥Á¥§¥Ã¥¯
¥µ¥à¤ò·×»»¤·¤Þ¤¹¡¥³µÍ×¤Ç¤¹¡¥

@example
sum [@var{option}]@dots{} [@var{file}]@dots{}
@end example

@c @command{sum} prints the checksum for each @var{file} followed by the
@c number of blocks in the file (rounded up).  If more than one @var{file}
@c is given, file names are also printed (by default).  (With the
@c @option{--sysv} option, corresponding file names are printed when there is
@c at least one file argument.)
@c 
@command{sum}¤Ï¡¤¤½¤ì¤¾¤ì¤Î@var{file}¤Î¥Á¥§¥Ã¥¯¥µ¥à¤ËÂ³¤±¤Æ¡¤¥Õ¥¡¥¤¥ë
¤Î¥Ö¥í¥Ã¥¯¿ô¤ò(ÀÚ¤ê¾å¤²¤Ç)½ÐÎÏ¤·¤Þ¤¹¡¥°ì¤Ä°Ê¾å¤Î@var{file}¤¬Í¿¤¨¤é¤ì¤¿
¾ì¹ç¡¤¥Õ¥¡¥¤¥ëÌ¾¤â½ÐÎÏ¤·¤Þ¤¹(¥Ç¥Õ¥©¥ë¥È)¡¥(@option{--sysv}¥ª¥×¥·¥ç¥ó¤ò
»ØÄê¤·¤¿¾ì¹ç¡¤¾¯¤Ê¤¯¤È¤â°ì¤Ä¤Î¥Õ¥¡¥¤¥ë°ú¿ô¤¬¤¢¤ë¤È¤­¤Ï¡¤ÂÐ±þ¤¹¤ë¥Õ¥¡¥¤
¥ëÌ¾¤¬½ÐÎÏ¤µ¤ì¤Þ¤¹¡¥)

@c By default, @sc{gnu} @command{sum} computes checksums using an algorithm
@c compatible with BSD @command{sum} and prints file sizes in units of
@c 1024-byte blocks.
@c 
¥Ç¥Õ¥©¥ë¥È¤Ç¡¤@sc{gnu} @command{sum}¤Ï¡¤BSD @command{sum}¤È¸ß´¹À­¤Î¤¢
¤ë¥¢¥ë¥´¥ê¥º¥à¤òÍÑ¤¤¤Æ·×»»¤·¡¤¥Õ¥¡¥¤¥ë¥µ¥¤¥º¤ò1024¥Ð¥¤¥È¥Ö¥í¥Ã¥¯¤ÎÃ±°Ì
¤Ç½ÐÎÏ¤·¤Þ¤¹¡¥

@c The program accepts the following options.  Also see @ref{Common options}.
@c 
¥×¥í¥°¥é¥à¤Ï°Ê²¼¤Î¥ª¥×¥·¥ç¥ó¤â¼õ¤±Æþ¤ì¤Þ¤¹¡¥@ref{Common options}¤â»²¾È
¤·¤Æ¤¯¤À¤µ¤¤¡¥

@table @samp

@item -r
@opindex -r
@cindex BSD @command{sum}
@c Use the default (BSD compatible) algorithm.  This option is included for
@c compatibility with the System V @command{sum}.  Unless @option{-s} was also
@c given, it has no effect.
@c 
¥Ç¥Õ¥©¥ë¥È(BSD¸ß´¹)¤Î¥¢¥ë¥´¥ê¥º¥à¤ò»ÈÍÑ¤·¤Þ¤¹¡¥¤³¤Î¥ª¥×¥·¥ç¥ó¤Ï¡¤
System V @command{sum}¤È¤Î¸ß´¹À­¤â´Þ¤ß¤Þ¤¹¡¥@option{-s}¤òÍ¿¤¨¤Ê¤¤¸Â¤ê¡¤
¸ú²Ì¤Ï¤¢¤ê¤Þ¤»¤ó¡¥

@item -s
@itemx --sysv
@opindex -s
@opindex --sysv
@cindex System V @command{sum}
@c Compute checksums using an algorithm compatible with System V
@c @command{sum}'s default, and print file sizes in units of 512-byte blocks.
@c 
System V @command{sum}¤Î¥Ç¥Õ¥©¥ë¥È¤È¸ß´¹¤Î¥¢¥ë¥´¥ê¥º¥à¤ò»ÈÍÑ¤·¤Æ¡¤¥Á¥§¥Ã
¥¯¥µ¥à¤ò·×»»¤·¡¤512¥Ð¥¤¥È¥Ö¥í¥Ã¥¯¤ÎÃ±°Ì¤Ç¥Õ¥¡¥¤¥ë¥µ¥¤¥º¤ò½ÐÎÏ¤·¤Þ¤¹¡¥

@end table

@c @command{sum} is provided for compatibility; the @command{cksum} program (see
@c next section) is preferable in new applications.
@c 
@command{sum}¤Ï¡¤¸ß´¹À­¤Î¤¿¤á¤ËÄó¶¡¤µ¤ì¤Æ¤¤¤Þ¤¹¡¥¿·¤·¤¤¥¢¥×¥ê¥±¡¼¥·¥ç
¥ó¤Ç¤Ï¡¤@command{cksum}¥×¥í¥°¥é¥à(¼¡¤Î¥»¥¯¥·¥ç¥ó¤ò»²¾È)¤¬Ë¾¤Þ¤·¤¤¤Ç¤·¤ç
¤¦¡¥

@exitstatus


@node cksum invocation
@c @section @command{cksum}: Print CRC checksum and byte counts
@section @command{cksum}: CRC¥Á¥§¥Ã¥¯¥µ¥à¤È¥Ð¥¤¥È¥«¥¦¥ó¥È¤ò½ÐÎÏ

@pindex cksum
@cindex cyclic redundancy check
@cindex CRC checksum

@c @command{cksum} computes a cyclic redundancy check (CRC) checksum for each
@c given @var{file}, or standard input if none are given or for a
@c @var{file} of @samp{-}.  Synopsis:
@c 
@command{cksum}¤Ï¡¤Í¿¤¨¤é¤ì¤¿¤½¤ì¤¾¤ì¤Î@var{file}¡¤¤Þ¤¿¤Ï¡¤Í¿¤¨¤é¤ì¤Ê
¤¤¾ì¹ç¤ä@samp{-}¤Î¥Õ¥¡¥¤¥ë¤¬Í¿¤¨¤é¤ì¤¿¾ì¹ç¤ÏÉ¸½àÆþÎÏ¤Î¼þ´üÅª¤Ê¾éÄ¹À­¤Î
Ä´ºº(CRC)¤Î¥Á¥§¥Ã¥¯¥µ¥à¤ò·×»»¤·¤Þ¤¹¡¥³µÍ×¤Ç¤¹¡¥

@example
cksum [@var{option}]@dots{} [@var{file}]@dots{}
@end example

@c @command{cksum} prints the CRC checksum for each file along with the number
@c of bytes in the file, and the filename unless no arguments were given.
@c 
@command{cksum}¤Ï¡¤¥Õ¥¡¥¤¥ë¤Î¥Ð¥¤¥È¿ô¤È°ì½ï¤Ë¡¤¤½¤ì¤¾¤ì¤Î¥Õ¥¡¥¤¥ë¤ËÂÐ
¤·¡¤CRC¥Á¥§¥Ã¥¯¥µ¥à¤È¡¤°ú¿ô¤¬Í¿¤¨¤é¤ì¤Æ¤¤¤Ê¤¤¾ì¹ç°Ê³°¤Ï¥Õ¥¡¥¤¥ëÌ¾¤ò½Ð
ÎÏ¤·¤Þ¤¹¡¥

@c @command{cksum} is typically used to ensure that files
@c transferred by unreliable means (e.g., netnews) have not been corrupted,
@c by comparing the @command{cksum} output for the received files with the
@c @command{cksum} output for the original files (typically given in the
@c distribution).
@c 
@command{cksum}¤Ï¡¤ÄÌ¾ï¡¤¿®ÍÑ¤Ç¤­¤Ê¤¤¼êÃÊ(Îã¤¨¤Ð¡¤¥Í¥Ã¥È¥Ë¥å¡¼¥¹)¤ÇÅ¾
Á÷¤µ¤ì¤¿¥Õ¥¡¥¤¥ë¤¬ÀÚ¤êµÍ¤á¤é¤ì¤Æ¤¤¤Ê¤¤¤«¡¤¼õ¿®¤·¤¿¥Õ¥¡¥¤¥ë¤Î
@command{cksum}½ÐÎÏ¤È¸µ¥Õ¥¡¥¤¥ë¤Î@command{cksum}½ÐÎÏ(ÄÌ¾ï¤ÏÇÛÉÛÊª¤ÇÍ¿
¤¨¤é¤ì¤Þ¤¹)¤òÈæ³Ó¤¹¤ë¤³¤È¤Ç³ÎÇ§¤¹¤ë¤¿¤á¤Ë»ÈÍÑ¤·¤Þ¤¹¡¥

@c The CRC algorithm is specified by the @acronym{POSIX} standard.  It is not
@c compatible with the BSD or System V @command{sum} algorithms (see the
@c previous section); it is more robust.
@c 
CRC¥¢¥ë¥´¥ê¥º¥à¤Ï¡¤@acronym{POSIX}É¸½à¤Ç»ØÄê¤µ¤ì¤Þ¤·¤¿¡¥ BSD¤äSystem V
@command{sum}¥¢¥ë¥´¥ê¥º¥à¤È¤Ï¸ß´¹À­¤¬¤¢¤ê¤Þ¤»¤ó(Á°¤Î¥»¥¯¥·¥ç¥ó¤ò»²¾È¤·
¤Æ¤¯¤À¤µ¤¤)¡¥¤½¤ì¤Ï¤è¤ê¶¯¸Ç¤Ç¤¹¡¥

@c The only options are @option{--help} and @option{--version}.  @xref{Common
@c options}.
@c 
¥ª¥×¥·¥ç¥ó¤Ï@option{--help}¤È@option{--version}¤À¤±¤Ç¤¹¡¥@xref{Common
options}.

@exitstatus


@node md5sum invocation
@c @section @command{md5sum}: Print or check message-digests
@section @command{md5sum}: ¥á¥Ã¥»¡¼¥¸¥À¥¤¥¸¥§¥¹¥È¤Î½ÐÎÏ¤ÈÄ´ºº

@pindex md5sum
@cindex 128-bit checksum
@cindex checksum, 128-bit
@cindex fingerprint, 128-bit
@cindex message-digest, 128-bit

@c @command{md5sum} computes a 128-bit checksum (or @dfn{fingerprint} or
@c @dfn{message-digest}) for each specified @var{file}.
@c If a @var{file} is specified as @samp{-} or if no files are given
@c @command{md5sum} computes the checksum for the standard input.
@c @command{md5sum} can also determine whether a file and checksum are
@c consistent. Synopses:
@c 
@command{md5sum}¤Ï¡¤¤½¤ì¤¾¤ì»ØÄê¤µ¤ì¤¿@var{file}¤ËÂÐ¤·¡¤128-bit¥Á¥§¥Ã
¥¯¥µ¥à(¤Þ¤¿¤Ï@dfn{fingerprint}¡¤¤Þ¤¿¤Ï@dfn{message-digest})¤ò·×»»¤·¤Þ
¤¹¡¥@var{file}¤¬@samp{-}¤Ç»ØÄê¤µ¤ì¤¿¤ê¡¤¥Õ¥¡¥¤¥ë¤¬Í¿¤¨¤é¤ì¤Æ¤¤¤Ê¤¤¾ì¹ç
¤Ï¡¤@command{md5sum}¤ÏÉ¸½àÆþÎÏ¤Î¥Á¥§¥Ã¥¯¥µ¥à¤ò·×»»¤·¤Þ¤¹¡¥
@command{md5sum}¤Ï¡¤¥Õ¥¡¥¤¥ë¤È¥Á¥§¥Ã¥¯¥µ¥à¤¬°ì´Ó¤·¤Æ¤¤¤ë¤«¤É¤¦¤«·èÄê¤¹
¤ë¤³¤È¤â²ÄÇ½¤Ç¤¹¡¥³µÍ×¤Ç¤¹¡¥

@example
md5sum [@var{option}]@dots{} [@var{file}]@dots{}
md5sum [@var{option}]@dots{} --check [@var{file}]
@end example

@c For each @var{file}, @samp{md5sum} outputs the MD5 checksum, a flag
@c indicating a binary or text input file, and the filename.
@c If @var{file} is omitted or specified as @samp{-}, standard input is read.
@c 
¤½¤ì¤¾¤ì¤Î@var{file}¤ËÂÐ¤·¡¤@samp{md5sum}¤Ï¡¤MD5¥Á¥§¥Ã¥¯¥µ¥à¡¤ÆþÎÏ¥Õ¥¡
¥¤¥ë¤¬¥Ð¥¤¥Ê¥ê¤«¥Æ¥­¥¹¥È¤«¤ò¼¨¤¹¥Õ¥é¥°¡¤¤½¤·¤Æ¥Õ¥¡¥¤¥ëÌ¾¤ò½ÐÎÏ¤·¤Þ¤¹¡¥
@var{file}¤¬Ìµ¤¤¡¤¤Þ¤¿¤Ï@samp{-}¤È¤·¤Æ»ØÄê¤µ¤ì¤Æ¤¤¤ë¾ì¹ç¡¤É¸½àÆþÎÏ¤òÆÉ
¤ß¹þ¤ß¤Þ¤¹¡¥

@c The program accepts the following options.  Also see @ref{Common options}.
@c 
¥×¥í¥°¥é¥à¤Ï°Ê²¼¤Î¥ª¥×¥·¥ç¥ó¤â¼õ¤±Æþ¤ì¤Þ¤¹¡¥@ref{Common options}¤â»²¾È
¤·¤Æ¤¯¤À¤µ¤¤¡¥

@table @samp

@item -b
@itemx --binary
@opindex -b
@opindex --binary
@cindex binary input files
@c Treat all input files as binary.  This option has no effect on Unix
@c systems, since they don't distinguish between binary and text files.
@c This option is useful on systems that have different internal and
@c external character representations.  On MS-DOS and MS-Windows, this is
@c the default.
@c 
Á´¤Æ¤ÎÆþÎÏ¥Õ¥¡¥¤¥ë¤ò¥Ð¥¤¥Ê¥ê¤È¤·¤Æ°·¤¤¤Þ¤¹¡¥¤³¤Î¥ª¥×¥·¥ç¥ó¤Ï¡¤Unix¥·¥¹
¥Æ¥à¤Ç¤Ï¥Ð¥¤¥Ê¥ê¤È¥Æ¥­¥¹¥È¤Ç¥Õ¥¡¥¤¥ë¤Ëº¹¤¬Ìµ¤¤¤Î¤Ç¸ú²Ì¤¬¤¢¤ê¤Þ¤»¤ó¡¥¤³
¤Î¥ª¥×¥·¥ç¥ó¤Ï¡¤ÆâÉô¤È³°Éô¤Ç¤ÎÊ¸»úÉ½¼¨¤¬°Û¤Ê¤ë¥·¥¹¥Æ¥à¤Ç¤ÏÊØÍø¤Ç¤¹¡¥
MS-DOS¤ÈMS-Windows¤Ç¤Ï¡¤¤³¤ì¤Ï¥Ç¥Õ¥©¥ë¥È¤Ç¤¹¡¥

@item -c
@itemx --check
@c Read filenames and checksum information from the single @var{file}
@c (or from stdin if no @var{file} was specified) and report whether
@c each named file and the corresponding checksum data are consistent.
@c The input to this mode of @command{md5sum} is usually the output of
@c a prior, checksum-generating run of @samp{md5sum}.
@c Each valid line of input consists of an MD5 checksum, a binary/text
@c flag, and then a filename.
@c Binary files are marked with @samp{*}, text with @samp{ }.
@c For each such line, @command{md5sum} reads the named file and computes its
@c MD5 checksum.  Then, if the computed message digest does not match the
@c one on the line with the filename, the file is noted as having
@c failed the test.  Otherwise, the file passes the test.
@c By default, for each valid line, one line is written to standard
@c output indicating whether the named file passed the test.
@c After all checks have been performed, if there were any failures,
@c a warning is issued to standard error.
@c Use the @option{--status} option to inhibit that output.
@c If any listed file cannot be opened or read, if any valid line has
@c an MD5 checksum inconsistent with the associated file, or if no valid
@c line is found, @command{md5sum} exits with nonzero status.  Otherwise,
@c it exits successfully.
@c 
¥Õ¥¡¥¤¥ëÌ¾¤È¥Á¥§¥Ã¥¯¥µ¥à¾ðÊó¤ò¡¤Ã±°ì¤Î@var{file}(¤Þ¤¿¤Ï¡¤@var{file}¤¬
»ØÄê¤µ¤ì¤Ê¤¤¾ì¹ç¤ÏÉ¸½àÆþÎÏ)¤«¤éÆÉ¤ß¹þ¤ß¡¤¤½¤ì¤¾¤ì¤Î»ØÄê¤µ¤ì¤¿Ì¾Á°¤Î¥Õ¥¡
¥¤¥ë¤ÈÂÐ±þ¤¹¤ë¥Á¥§¥Ã¥¯¥µ¥à¥Ç¡¼¥¿¤¬ÂÐ±þ¤·¤Æ¤¤¤ë¤«¤É¤¦¤«Êó¹ð¤·¤Þ¤¹¡¥
@command{md5sum}¤Î¤³¤Î¥â¡¼¥É¤Ç¤ÎÆþÎÏ¤Ï¡¤ÄÌ¾ï¡¤@samp{md5sum}¤ò¼Â¹Ô¤·¤Æ
À¸À®¤µ¤ì¤¿¥Á¥§¥Ã¥¯¥µ¥à¤Ç¡¤¤½¤ì¤Ï°ÊÁ°¤Î½ÐÎÏ¤Ç¤¹¡¥¤½¤ì¤¾¤ì¤ÎÆþÎÏ¤ÎÍ­¸ú¤Ê
¹Ô¤Ï¡¤MD5¥Á¥§¥Ã¥¯¥µ¥à¤«¤éÀ®¤êÎ©¤Á¡¤¥Ð¥¤¥Ê¥ê/¥Æ¥­¥¹¥È¥Õ¥é¥°¤È¡¤¥Õ¥¡¥¤¥ë
Ì¾¤Ç¤¹¡¥¥Ð¥¤¥Ê¥ê¥Õ¥¡¥¤¥ë¤Ï@samp{*}¤Ç¡¤¥Æ¥­¥¹¥È¤Ï@samp{ }¤Ç°õ¤¬ÉÕ¤­¤Þ¤¹¡¥
¤½¤ì¤¾¤ì¤Î¤½¤Î¤è¤¦¤Ê¹Ô¤ËÂÐ¤·¡¤@command{md5sum}¤Ï¡¤»ØÌ¾¤µ¤ì¤¿¥Õ¥¡¥¤¥ë¤ò
ÆÉ¤ß¹þ¤ß¡¤¤½¤ÎMD5¥Á¥§¥Ã¥¯¥µ¥à¤ò·×»»¤·¤Þ¤¹¡¥¤½¤·¤Æ¡¤·×»»¤µ¤ì¤¿¥á¥Ã¥»¡¼
¥¸¥À¥¤¥¸¥§¥¹¥È¤¬¡¤¥Õ¥¡¥¤¥ëÌ¾¤ò»ý¤Ä¹Ô¤Î°ì¤Ä¤È¥Þ¥Ã¥Á¤·¤Ê¤¤¾ì¹ç¡¤¥Õ¥¡¥¤¥ë
¤Ë¤Ï¥Æ¥¹¥È¤Ë¼ºÇÔ¤·¤¿¤È¤¤¤¦¥á¥â¤¬ÉÕ¤­¤Þ¤¹¡¥¤½¤ì°Ê³°¤Î¾ì¹ç¡¤¥Õ¥¡¥¤¥ë¤ÏÄ´
ºº¤ò¥Ñ¥¹¤·¤Þ¤¹¡¥¥Ç¥Õ¥©¥ë¥È¤Ç¡¤¤½¤ì¤¾¤ì¤ÎÍ­¸ú¤Ê¹Ô¤ËÂÐ¤·¡¤»ØÌ¾¤µ¤ì¤¿¥Õ¥¡
¥¤¥ë¤¬Ä´ºº¤òÄÌ²á¤·¤¿¤«¤É¤¦¤«¤ò¼¨¤¹°ì¹Ô¤ò¡¤É¸½à½ÐÎÏ¤Ë½ñ¤­½Ð¤·¤Þ¤¹¡¥Á´¤Æ
¤ÎÄ´ºº¤Î¼Â¹Ô¸å¡¤¼ºÇÔ¤¬¤¢¤Ã¤¿¾ì¹ç¡¤·Ù¹ð¤òÉ¸½à¥¨¥é¡¼¤Ë½ÐÎÏ¤·¤Þ¤¹¡¥½ÐÎÏ¤ò
ÍÞÀ©¤¹¤ë¤¿¤á¤Ë¡¤@option{--status}¥ª¥×¥·¥ç¥ó¤ò»ÈÍÑ¤·¤Æ¤¯¤À¤µ¤¤¡¥¥ê¥¹¥È
¥¢¥Ã¥×¤µ¤ì¤¿¥Õ¥¡¥¤¥ë¤Ë¡¤³«¤¤¤¿¤êÆÉ¤ß¹þ¤ó¤À¤ê¤¹¤ë¤³¤È¤¬ÉÔ²ÄÇ½¤Ê¤â¤Î¤¬¤¢
¤ë¾ì¹ç¡¤Í­¸ú¤Ê¹Ô¤¬´ØÏ¢¤¹¤ë¥Õ¥¡¥¤¥ë¤ÈMD5¥Á¥§¥Ã¥¯¥µ¥à¤ËÂÐ±þ¤·¤Ê¤¤¾ì¹ç¡¤
¤Þ¤¿¤Ï¡¤Í­¸ú¤Ê¹Ô¤¬¸«¤Ä¤«¤é¤Ê¤¤¾ì¹ç¡¤@command{md5sum}¤Ï¥¼¥í°Ê³°¤Î¥¹¥Æ¡¼
¥¿¥¹¤Ç½ªÎ»¤·¤Þ¤¹¡¥¤½¤ì°Ê³°¤Î¾ì¹ç¤Ï¡¤Àµ¤·¤¯½ªÎ»¤·¤Þ¤¹¡¥

@itemx --status
@opindex --status
@cindex verifying MD5 checksums
@c This option is useful only when verifying checksums.
@c When verifying checksums, don't generate the default one-line-per-file
@c diagnostic and don't output the warning summarizing any failures.
@c Failures to open or read a file still evoke individual diagnostics to
@c standard error.
@c If all listed files are readable and are consistent with the associated
@c MD5 checksums, exit successfully.  Otherwise exit with a status code
@c indicating there was a failure.
@c 
¤³¤Î¥ª¥×¥·¥ç¥ó¤Ï¡¤¥Á¥§¥Ã¥¯¥µ¥à¤Î¾È¹ç»þ¤Î¤ßÊØÍø¤Ç¤¹¡¥¥Á¥§¥Ã¥¯¥µ¥à¤ò¾È¹ç
¤¹¤ë¤È¤­¡¤¥Ç¥Õ¥©¥ë¥È¤Î¥Õ¥¡¥¤¥ë¤ËÂÐ¤·°ì¹Ô¤Î¿ÇÃÇ¤òÀ¸À®¤»¤º¡¤¤¢¤é¤æ¤ë¼ºÇÔ
¤òÍ×Ìó¤¹¤ë·Ù¹ð¤ò½ÐÎÏ¤·¤Þ¤»¤ó¡¥¥Õ¥¡¥¤¥ë¤ò³«¤¯¤¢¤ë¤¤¤ÏÆÉ¤ß¹þ¤àºÝ¤Î¼ºÇÔ¤Ï¡¤
É¸½à¥¨¥é¡¼¤Ë¸ÄÊÌ¤Î¿ÇÃÇ·ë²Ì¤ò½ÐÎÏ¤·¤Þ¤¹¡¥¥ê¥¹¥È¥¢¥Ã¥×¤µ¤ì¤¿¥Õ¥¡¥¤¥ë¤¬¤¹
¤Ù¤ÆÆÉ¤ß¹þ¤ß²ÄÇ½¤Ç¡¤ÂÐ±þ¤¹¤ëMD5¥Á¥§¥Ã¥¯¥µ¥à¤ÈÂÐ±þ¤·¤Æ¤¤¤ë¾ì¹ç¡¤Àµ¤·¤¯
½ªÎ»¤·¤Þ¤¹¡¥¤½¤ì°Ê³°¤Î¾ì¹ç¡¤¼ºÇÔ¤¬¤¢¤ë¤³¤È¤ò¼¨¤¹¥¹¥Æ¡¼¥¿¥¹¥³¡¼¥É¤Ç½ªÎ»
¤·¤Þ¤¹¡¥

@item -t
@itemx --text
@opindex -t
@opindex --text
@cindex text input files
@c Treat all input files as text files.  This is the reverse of
@c @option{--binary}.
@c 
Á´¤Æ¤ÎÆþÎÏ¥Õ¥¡¥¤¥ë¤ò¡¤¥Æ¥­¥¹¥È¥Õ¥¡¥¤¥ë¤È¤·¤Æ°·¤¤¤Þ¤¹¡¥¤³¤Î¥ª¥×¥·¥ç¥ó¤Ï
@option{--binary}¤ÎÈ¿ÂÐ¤Ç¤¹¡¥

@item -w
@itemx --warn
@opindex -w
@opindex --warn
@cindex verifying MD5 checksums
@c When verifying checksums, warn about improperly formatted MD5 checksum lines.
@c This option is useful only if all but a few lines in the checked input
@c are valid.
@c 
¥Á¥§¥Ã¥¯¥µ¥à¤ò¾È¹ç¤¹¤ë¤È¤­¡¤ÉÔÅ¬ÀÚ¤Ë½ñ¼°²½¤µ¤ì¤¿MD5¥Á¥§¥Ã¥¯¥µ¥à¹Ô¤Ë¤Ä
¤¤¤Æ·Ù¹ð¤·¤Þ¤¹¡¥¤³¤Î¥ª¥×¥·¥ç¥ó¤Ï¡¤ÆþÎÏ¤ÎÄ´ºº¤Ç¡¤Á´¤Æ¤Ç¤Ï¤Ê¤¯¤¤¤¯¤Ä¤«¤Î
¹Ô¤¬Í­¸ú¤Ê¾ì¹ç¤Î¤ßÊØÍø¤Ç¤¹¡¥

@end table

@exitstatus


@node Operating on sorted files
@c @chapter Operating on sorted files
@chapter ¥½¡¼¥È¤µ¤ì¤¿¥Õ¥¡¥¤¥ë¤Î½èÍý

@cindex operating on sorted files
@cindex sorted files, operations on

@c These commands work with (or produce) sorted files.
@c 
°Ê²¼¤Î¥³¥Þ¥ó¥É¤Ï¡¤¥½¡¼¥È¤µ¤ì¤¿¥Õ¥¡¥¤¥ë¤ÇÆ°ºî¤¹¤ë(¤¢¤ë¤¤¤Ï¤½¤ì¤òÀ¸À®¤¹
¤ë)¥³¥Þ¥ó¥É¤Ç¤¹¡¥

@menu
* sort invocation::             Sort text files.
* uniq invocation::             Uniquify files.
* comm invocation::             Compare two sorted files line by line.
* ptx invocation::              Produce a permuted index of file contents.
* tsort invocation::            Topological sort.
* tsort background::            Where tsort came from.
@end menu


@node sort invocation
@c @section @command{sort}: Sort text files
@section @command{sort}: ¥Æ¥­¥¹¥È¥Õ¥¡¥¤¥ë¤ò¥½¡¼¥È

@pindex sort
@cindex sorting files

@c @command{sort} sorts, merges, or compares all the lines from the given
@c files, or standard input if none are given or for a @var{file} of
@c @samp{-}.  By default, @command{sort} writes the results to standard
@c output.  Synopsis:
@c 
@command{sort}¤Ï¡¤Í¿¤¨¤é¤ì¤¿¥Õ¥¡¥¤¥ë¡¤¤Þ¤¿¤ÏÍ¿¤¨¤é¤ì¤Ê¤¤¾ì¹ç¤ä¡¤
@samp{-}¤Î@var{file}¤Î¾ì¹ç¤ÏÉ¸½àÆþÎÏ¤«¤é¤ÎÁ´¤Æ¤Î¹Ô¤ò¡¤¥½¡¼¥È¡¤Åý¹ç¡¤¤Þ
¤¿¤ÏÈæ³Ó¤·¤Þ¤¹¡¥¥Ç¥Õ¥©¥ë¥È¤Ç¡¤@command{sort}¤Ï·ë²Ì¤òÉ¸½à½ÐÎÏ¤Ë½ñ¤­½Ð¤·
¤Þ¤¹¡¥³µÍ×¤Ç¤¹¡¥

@example
sort [@var{option}]@dots{} [@var{file}]@dots{}
@end example

@c @command{sort} has three modes of operation: sort (the default), merge,
@c and check for sortedness.  The following options change the operation
@c mode:
@c 
@command{sort}¤Ï¡¤½èÍý»þ¤Ë»°¤Ä¤Î¥â¡¼¥É¤¬¤¢¤ê¤Þ¤¹¡¥¥½¡¼¥È(¥Ç¥Õ¥©¥ë¥È)¡¤
Åý¹ç¡¤¤½¤·¤Æ¥½¡¼¥È¤µ¤ì¤Æ¤ë¤³¤È¤ÎÄ´ºº¤Ç¤¹¡¥°Ê²¼¤Î¥ª¥×¥·¥ç¥ó¤Ç½èÍý¥â¡¼¥É
¤òÊÑ¹¹¤·¤Þ¤¹¡¥

@table @samp

@item -c
@itemx --check
@opindex -c
@opindex --check
@cindex checking for sortedness
@c Check whether the given files are already sorted: if they are not all
@c sorted, print an error message and exit with a status of 1.
@c Otherwise, exit successfully.
@c 
Í¿¤¨¤é¤ì¤¿¥Õ¥¡¥¤¥ë¤¬¡¤¤¹¤Ç¤Ë¥½¡¼¥È¤µ¤ì¤Æ¤¤¤ë¤«¤É¤¦¤«Ä´ºº¤·¤Þ¤¹¡¥Á´¤Æ¤¬
¥½¡¼¥È¤µ¤ì¤Æ¤¤¤Ê¤¤¾ì¹ç¡¤¥¨¥é¡¼¥á¥Ã¥»¡¼¥¸¤ò½ÐÎÏ¤·¡¤1¤Î¥¹¥Æ¡¼¥¿¥¹¤Ç½ªÎ»
¤·¤Þ¤¹¡¥¤½¤ì°Ê³°¤Î¾ì¹ç¤ÏÀµ¾ï¤Ë½ªÎ»¤·¤Þ¤¹¡¥

@item -m
@itemx --merge
@opindex -m
@opindex --merge
@cindex merging sorted files
@c Merge the given files by sorting them as a group.  Each input file must
@c always be individually sorted.  It always works to sort instead of
@c merge; merging is provided because it is faster, in the case where it
@c works.
@c 
Í¿¤¨¤é¤ì¤¿¥Õ¥¡¥¤¥ë¤ò¡¤¥°¥ë¡¼¥×²½¤·¤Æ¥½¡¼¥È¤¹¤ë¤³¤È¤Ç¡¤Åý¹ç¤·¤Þ¤¹¡¥¤½¤ì
¤¾¤ì¤ÎÆþÎÏ¥Õ¥¡¥¤¥ë¤Ï¡¤¸ÄÊÌ¤Ë¥½¡¼¥È¤µ¤ì¤Æ¤¤¤ëÉ¬Í×¤¬¤¢¤ê¤Þ¤¹¡¥¤½¤ì¤Ï¾ï¤Ë¡¤
Åý¹ç¤Ç¤Ï¤Ê¤¯¥½¡¼¥È¤Î¤¿¤á¤ËÆ°ºî¤·¤Þ¤¹¡¥Åý¹ç¤Ï¡¤¤½¤ì¤¬Æ°ºî¤¹¤ë¾õ¶·¤Ç¤Ï¤è
¤ê¹âÂ®¤Ê¤¿¤áÄó¶¡¤µ¤ì¤Æ¤¤¤Þ¤¹¡¥

@end table

@vindex LC_ALL
@vindex LC_COLLATE
@c A pair of lines is compared as follows: if any key fields have
@c been specified, @command{sort} compares each pair of fields, in the
@c order specified on the command line, according to the associated
@c ordering options, until a difference is found or no fields are left.
@c Unless otherwise specified, all comparisons use the character collating
@c sequence specified by the @env{LC_COLLATE} locale.  @footnote{If you
@c use a non-@acronym{POSIX} locale (e.g., by setting @env{LC_ALL}
@c to @samp{en_US}), then @command{sort} may produce output that is sorted
@c differently than you're accustomed to.  In that case, set the @env{LC_ALL}
@c environment variable to @samp{C}.  Note that setting only @env{LC_COLLATE}
@c has two problems.  First, it is ineffective if @env{LC_ALL} is also set.
@c Second, it has undefined behavior if @env{LC_CTYPE} (or @env{LANG}, if
@c @env{LC_CTYPE} is unset) is set to an incompatible value.  For example,
@c you get undefined behavior if @env{LC_CTYPE} is @code{ja_JP.PCK} but
@c @env{LC_COLLATE} is @code{en_US.UTF-8}. }
@c 
¹Ô¤ÎÁÈ¤Ï¡¤°Ê²¼¤Î¤è¤¦¤ËÈæ³Ó¤µ¤ì¤Þ¤¹¡¥¥­¡¼¥Õ¥£¡¼¥ë¥É¤¬»ØÄê¤µ¤ì¤¿¾ì¹ç¡¤
@command{sort}¤Ï¡¤¤½¤ì¤¾¤ì¤Î¥Õ¥£¡¼¥ë¥É¤ÎÁÈ¤ò¡¤¥³¥Þ¥ó¥É¥é¥¤¥ó¤Ç»ØÄê¤µ¤ì
¤¿½çÈÖ¤Ç¡¤´ØÏ¢¤¹¤ë½ç½ø¥ª¥×¥·¥ç¥ó¤Ç¡¤º¹¤¬¸«¤Ä¤«¤ë¤Þ¤Ç¡¤¤Þ¤¿¤Ï¥Õ¥£¡¼¥ë¥É
¤Î»Ä¤ê¤¬Ìµ¤¯¤Ê¤ë¤Þ¤ÇÈæ³Ó¤·¤Þ¤¹¡¥»ØÄê¤µ¤ì¤Ê¤¤¾ì¹ç¤Ï¡¤¤¹¤Ù¤ÆÈæ³Ó¤¹¤ëºÝ¡¤
@env{LC_COLLATE}¥í¥«¡¼¥ë¤Ç»ØÄê¤µ¤ì¤¿¡¤Ê¸»ú¤Î½çÈÖ¤ò»ÈÍÑ¤·¤Þ¤¹¡¥
@footnote{@acronym{POSIX}¤Ç¤Ï¤Ê¤¤¥í¥«¡¼¥ë(Îã¤¨¤Ð@env{LC_ALL}¤ò
@samp{en_US}¤ËÀßÄê¤·¤Æ¤¤¤ë)¾ì¹ç¡¤@command{sort}¤Ï¤¤¤Ä¤â¤È¤Ï°Û¤Ê¤ë¥½¡¼
¥È¤µ¤ì¤¿½ÐÎÏ¤òÀ¸À®¤¹¤ë²ÄÇ½À­¤¬¤¢¤ê¤Þ¤¹¡¥¤½¤Î¾õ¶·¤Ç¤Ï¡¤@env{LC_ALL}´Ä¶­
ÊÑ¿ô¤ò@samp{C}¤ËÀßÄê¤·¤Æ¤¯¤À¤µ¤¤¡¥@env{LC_COLLATE}¤À¤±¤òÀßÄê¤¹¤ë¤³¤È¤Ë
¤ÏÆó¤Ä¤ÎÌäÂê¤¬¤¢¤ë¤³¤È¤ËÃí°Õ¤·¤Æ¤¯¤À¤µ¤¤¡¥ºÇ½é¤Ï¡¤@env{LC_ALL}¤¬´û¤ËÀß
Äê¤µ¤ì¤Æ¤¤¤ë¾ì¹ç¡¤Ìµ¸ú¤Ë¤Ê¤ë¤³¤È¤Ç¤¹¡¥ÆóÈÖÌÜ¤Ï¡¤@env{LC_CTYPE}(¤Þ¤¿¤Ï
@env{LC_CTYPE}¤¬ÀßÄê¤µ¤ì¤Æ¤¤¤Ê¤¤¾ì¹ç¤Ï@env{LANG})¤¬¸ß´¹À­¤ÎÌµ¤¤ÃÍ¤ËÀß
Äê¤µ¤ì¤Æ¤¤¤ë¾ì¹ç¤ÎÆ°ºî¤¬Ì¤ÄêµÁ¤Ç¤¢¤ë¤³¤È¤Ç¤¹¡¥Îã¤¨¤Ð¡¤@env{LC_CTYPE}¤¬
@code{ja_JP.PCK}¤Ç¡¤@env{LC_COLLATE}¤¬@code{en_US.UTF-8}¤Î¾ì¹ç¡¤Æ°ºî¤Ï
Ì¤ÄêµÁ¤Ç¤¹¡¥}

@c If any of the global options @samp{bdfgiMnr} are given but no key fields
@c are specified, @command{sort} compares the entire lines according to the
@c global options.
@c 
Âç°èÅª¤Ê¥ª¥×¥·¥ç¥ó@samp{bdfgiMnr}¤¬Í¿¤¨¤é¤ì¤Æ¡¤¥­¡¼¥Õ¥£¡¼¥ë¥É¤¬»ØÄê¤µ
¤ì¤Æ¤¤¤Ê¤¤¾ì¹ç¡¤@command{sort}¤ÏÂç°èÅª¤Ê¥ª¥×¥·¥ç¥ó¤Ë½¾¤¤¡¤¹ÔÁ´ÂÎ¤òÈæ³Ó
¤·¤Þ¤¹¡¥

@c Finally, as a last resort when all keys compare equal (or if no ordering
@c options were specified at all), @command{sort} compares the entire lines.
@c The last resort comparison honors the @option{--reverse} (@option{-r})
@c global option.  The @option{--stable} (@option{-s}) option disables this
@c last-resort comparison so that lines in which all fields compare equal
@c are left in their original relative order.  If no fields or global
@c options are specified, @option{--stable} (@option{-s}) has no effect.
@c 
ºÇ½ªÅª¤Ë¡¤Á´¤Æ¤Î¥­¡¼¤¬Æ±¤¸¤È¤­(¤Þ¤¿¤Ï¡¤½ç½ø¥ª¥×¥·¥ç¥ó¤¬Á´¤¯»ØÄê¤µ¤ì¤Æ
¤¤¤Ê¤¤¾ì¹ç)¡¤ºÇ¸å¤Î¼êÃÊ¤È¤·¤Æ¡¤@command{sort}¤Ï¹ÔÁ´ÂÎ¤òÈæ³Ó¤·¤Þ¤¹¡¥ºÇ
¸å¤Î¼êÃÊ¤Ï¡¤@option{--reverse}(@option{-r})¤ÎÂç°èÅª¤Ê¥ª¥×¥·¥ç¥ó¤òÂº½Å
¤·¤ÆÈæ³Ó¤·¤Þ¤¹¡¥@option{--stable}(@option{-s})¥ª¥×¥·¥ç¥ó¤Ï¡¤¤³¤ÎºÇ¸å¤Î
¼êÃÊ¤Ç¤ÏÍøÍÑ¤Ç¤­¤º¡¤¤½¤ì¤Ï¡¤Á´¤Æ¤Î¥Õ¥£¡¼¥ë¥É¤ÎÈæ³Ó¤¬Æ±¤¸¤Ë¤Ê¤ë¹Ô¤Ï¡¤¸µ
¤ÎÁêÂÐÅª¤Ê½ç½ø¤Î¤Þ¤Þ¤Ë¤¹¤ë¤¿¤á¤Ç¤¹¡¥¥Õ¥£¡¼¥ë¥É¤äÂç°èÅª¤Ê¥ª¥×¥·¥ç¥ó¤¬»Ø
Äê¤µ¤ì¤Ê¤¤¾ì¹ç¡¤@option{--stable}(@option{-s})¤Ï¸ú²Ì¤¬¤¢¤ê¤Þ¤»¤ó¡¥

@c @sc{gnu} @command{sort} (as specified for all @sc{gnu} utilities) has no
@c limit on input line length or restrictions on bytes allowed within lines.
@c In addition, if the final byte of an input file is not a newline, @sc{gnu}
@c @command{sort} silently supplies one.  A line's trailing newline is not
@c part of the line for comparison purposes.
@c 
@sc{gnu} @command{sort}¤Ï¡¤(Á´¤Æ¤Î@sc{gnu}¥æ¡¼¥Æ¥£¥ê¥Æ¥£¤Ç»ØÄê¤µ¤ì¤ë¤è
¤¦¤Ë)ÆþÎÏ¹Ô¤ÎÄ¹¤µ¤ÎÀ©¸Â¤ä¡¤¹Ô¤Çµö²Ä¤µ¤ì¤ë¥Ð¥¤¥È¿ô¤Î¸Â³¦¤¬¤¢¤ê¤Þ¤»¤ó¡¥
¹¹¤Ë¡¤ÆþÎÏ¥Õ¥¡¥¤¥ë¤ÎºÇ½ª¥Ð¥¤¥È¤¬²þ¹Ô¤Ç¤Ê¤¤¾ì¹ç¡¤@sc{gnu}
@command{sort}¤Ï¡¤ÌÛ¤Ã¤Æ¤½¤ì¤ò¶¡µë¤·¤Þ¤¹¡¥¹Ô¤Î¸å¤í¤Î²þ¹Ô¤Ï¡¤Èæ³Ó¤ÎÌÜÅª
¤Ç¤Ï¹Ô¤Î°ìÉô¤Ç¤¹¡¥

@cindex exit status of @command{sort}
@c Exit status:
@c 
½ªÎ»¥¹¥Æ¡¼¥¿¥¹¤Ï°Ê²¼¤Î¤è¤¦¤Ë¤Ê¤ê¤Þ¤¹¡¥
@display
@c 0 if no error occurred
@c 1 if invoked with @option{-c} and the input is not properly sorted
@c 2 if an error occurred
@c 
0 ¥¨¥é¡¼¤¬¤Ê¤¤¾ì¹ç
1 @option{-c}¥ª¥×¥·¥ç¥ó¤È¤È¤â¤Ë¸Æ¤Ó½Ð¤µ¤ì¡¤ÆþÎÏ¤¬Å¬ÀÚ¤Ë¥½¡¼¥È¤µ¤ì¤Æ¤¤¤Ê¤¤¾ì¹ç
2 ¥¨¥é¡¼¤¬À¸¤¸¤¿¾ì¹ç
@end display

@vindex TMPDIR
@c If the environment variable @env{TMPDIR} is set, @command{sort} uses its
@c value as the directory for temporary files instead of @file{/tmp}.  The
@c @option{--temporary-directory} (@option{-T}) option in turn overrides
@c the environment variable.
@c 
´Ä¶­ÊÑ¿ô@env{TMPDIR}¤¬ÀßÄê¤µ¤ì¤Æ¤¤¤ë¾ì¹ç¡¤@command{sort}¤Ï¡¤°ì»þ¥Õ¥¡¥¤
¥ë¤Î¥Ç¥£¥ì¥¯¥È¥ê¤È¤·¤Æ¡¤@file{/tmp}¤ÎÂå¤ï¤ê¤Ë¤½¤ÎÊÑ¿ô¤ò¥Ç¥£¥ì¥¯¥È¥ê¤È
¤·¤Æ»ÈÍÑ¤·¤Þ¤¹¡¥@option{--temporary-directory}(@option{-T})¥ª¥×¥·¥ç¥ó
¤Ï¡¤½ç½øÅª¤Ë´Ä¶­ÊÑ¿ô¤ËÍ¥Àè¤·¤Þ¤¹¡¥

@c The following options affect the ordering of output lines.  They may be
@c specified globally or as part of a specific key field.  If no key
@c fields are specified, global options apply to comparison of entire
@c lines; otherwise the global options are inherited by key fields that do
@c not specify any special options of their own.  In pre-@acronym{POSIX}
@c versions of @command{sort}, global options affect only later key fields,
@c so portable shell scripts should specify global options first.
@c 
°Ê²¼¤Î¥ª¥×¥·¥ç¥ó¤Ï¡¤½ÐÎÏ¹Ô¤Î½ç½ø¤Ë±Æ¶Á¤·¤Þ¤¹¡¥¤½¤ì¤é¤Ï¡¤Âç°èÅª¡¤¤Þ¤¿¤Ï
¥­¡¼¥Õ¥£¡¼¥ë¥É¤Î°ìÉô¤È¤·¤Æ»ØÄê¤·¤Æ¤â¤«¤Þ¤¤¤Þ¤»¤ó¡¥¥­¡¼¥Õ¥£¡¼¥ë¥É¤¬»ØÄê
¤µ¤ì¤Æ¤¤¤Ê¤¤¾ì¹ç¡¤Âç°èÅª¤Ê¥ª¥×¥·¥ç¥ó¤Ï¹ÔÁ´ÂÎ¤ÎÈæ³Ó¤ËÂÐ¤·¤ÆÅ¬ÍÑ¤µ¤ì¤Þ¤¹¡¥
¤½¤ì°Ê³°¤Ç¤Ï¡¤Âç°èÅª¤Ê¥ª¥×¥·¥ç¥ó¤Ï¡¤¤½¤ì¼«¿È¥ª¥×¥·¥ç¥ó¤¬»ØÄê¤µ¤ì¤Æ¤¤¤Ê
¤¤¥­¡¼¥Õ¥£¡¼¥ë¥É¤Ë·Ñ¾µ¤µ¤ì¤Þ¤¹¡¥°ÊÁ°¤Î@acronym{POSIX}¤Î¥Ð¡¼¥¸¥ç¥ó¤Î
@command{sort}¤Ç¤Ï¡¤Âç°èÅª¤Ê¥ª¥×¥·¥ç¥ó¤Ï¥­¡¼¥Õ¥£¡¼¥ë¥É¤À¤±¤Ë±Æ¶Á¤¹¤ë¤Î
¤Ç¡¤°Ü¿¢À­¤Î¹â¤¤¥·¥§¥ë¥¹¥¯¥ê¥×¥È¤Ç¤ÏÂç°èÅª¤Ê¥ª¥×¥·¥ç¥ó¤òºÇ½é¤Ë»ØÄê¤¹¤Ù
¤­¤Ç¤¹¡¥

@table @samp

@item -b
@itemx --ignore-leading-blanks
@opindex -b
@opindex --ignore-leading-blanks
@cindex blanks, ignoring leading
@vindex LC_CTYPE
@c Ignore leading blanks when finding sort keys in each line.
@c The @env{LC_CTYPE} locale determines character types.
@c 
¤½¤ì¤¾¤ì¤Î¹Ô¤Ç¥½¡¼¥È¤¹¤ë¥­¡¼¤òÃµ¤¹¤È¤­¡¤Á°¤Î¶õÇò¤òÌµ»ë¤·¤Þ¤¹¡¥
@env{LC_CTYPE}¥í¥«¡¼¥ë¤ÇÊ¸»ú·Á¼°¤ò·èÄê¤·¤Þ¤¹¡¥

@item -d
@itemx --dictionary-order
@opindex -d
@opindex --dictionary-order
@cindex dictionary order
@cindex phone directory order
@cindex telephone directory order
@vindex LC_CTYPE
@c Sort in @dfn{phone directory} order: ignore all characters except
@c letters, digits and blanks when sorting.
@c The @env{LC_CTYPE} locale determines character types.
@c 
@dfn{phone directory}¤Î½ç½ø¤Ç¥½¡¼¥È¤·¤Þ¤¹¡¥¥½¡¼¥È»þ¤Ë¡¤Ê¸»ú¡¤¿ô»ú¡¤¤½
¤·¤Æ¶õÇò°Ê³°¤ÎÁ´¤Æ¤ÎÊ¸»ú¤ÏÌµ»ë¤µ¤ì¤Þ¤¹¡¥@env{LC_CTYPE}¥í¥«¡¼¥ë¤ÇÊ¸»ú·Á
¼°¤ò·èÄê¤·¤Þ¤¹¡¥

@item -f
@itemx --ignore-case
@opindex -f
@opindex --ignore-case
@cindex ignoring case
@cindex case folding
@vindex LC_CTYPE
@c Fold lowercase characters into the equivalent uppercase characters when
@c comparing so that, for example, @samp{b} and @samp{B} sort as equal.
@c The @env{LC_CTYPE} locale determines character types.
@c 
Èæ³Ó»þ¤Ë¡¤¾®Ê¸»ú¤òÂçÊ¸»ú¤ÈÆ±¤¸¤Ë°·¤¤¡¤Îã¤¨¤Ð¡¤@samp{b}¤È@samp{B}¤ÏÆ±Åù
¤Ë¥½¡¼¥È¤µ¤ì¤Þ¤¹¡¥@env{LC_CTYPE}¥í¥«¡¼¥ë¤ÇÊ¸»ú·Á¼°¤ò·èÄê¤·¤Þ¤¹¡¥

@item -g
@itemx --general-numeric-sort
@opindex -g
@opindex --general-numeric-sort
@cindex general numeric sort
@vindex LC_NUMERIC
@c Sort numerically, using the standard C function @code{strtod} to convert
@c a prefix of each line to a double-precision floating point number.
@c This allows floating point numbers to be specified in scientific notation,
@c like @code{1.0e-34} and @code{10e100}.
@c The @env{LC_NUMERIC} locale determines the decimal-point character.
@c Do not report overflow, underflow, or conversion errors.
@c Use the following collating sequence:
@c 
¤½¤ì¤¾¤ì¤Î¹Ô¤Î¥×¥ì¥Õ¥£¥¯¥¹¤òÇÜÀºÅÙÉâÆ°¾®¿ôÅÀ¤Î¿ô¤ËÊÑ´¹¤¹¤ë¤¿¤á¡¤É¸½àC 
´Ø¿ô@code{strtod}¤ò»ÈÍÑ¤·¡¤¿ôÃÍÅª¤Ê¥½¡¼¥È¤ò¤·¤Þ¤¹¡¥¤³¤ì¤Ç¡¤
@code{1.0e-34}¤È@code{10e100}¤Î¤è¤¦¤ÊÉâÆ°¾®¿ôÅÀ¤Î¿ô¤ò¡¤²Ê³ØÅª¤ÊÉ½µ­Êý
¤Ç»ØÄê¤Ç¤­¤Þ¤¹¡¥@env{LC_NUMERIC}¥í¥«¡¼¥ë¤Ç¾®¿ôÅÀÊ¸»ú¤ò·èÄê¤·¤Þ¤¹¡¥¥ª¡¼
¥Ð¡¼¥Õ¥í¡¼¤ä¡¤¥¢¥ó¥À¡¼¥Õ¥í¡¼¡¤ÊÑ´¹¥¨¥é¡¼¤ÏÊó¹ð¤·¤Þ¤»¤ó¡¥°Ê²¼¤Î½çÈÖ¤ò»È
ÍÑ¤·¤Þ¤¹¡¥

@itemize @bullet
@item
@c Lines that do not start with numbers (all considered to be equal).
@c 
¿ô»ú¤Ç»Ï¤Þ¤é¤Ê¤¤¹Ô(Á´¤ÆÆ±¤¸¤È¹Í¤¨¤Þ¤¹)¡¥
@item
@c NaNs (``Not a Number'' values, in IEEE floating point arithmetic)
@c in a consistent but machine-dependent order.
@c 
NaN(``Not a Number''ÃÍ¤Ç¡¤IEEE¤Ç¤Î»»½ÑÅª¤ÊÉâÆ°¾®¿ôÅÀ¤Ç¤¹)°ì´Ó¤·¤Æ¤¤¤ë
¤¬¥Þ¥·¥ó¤Ë°ÍÂ¸¤·¤¿½çÈÖ¡¥
@item
@c Minus infinity.
@c 
Éé¤ÎÌµ¸ÂÂç¡¥
@item
@c Finite numbers in ascending numeric order (with @math{-0} and @math{+0} equal).
@c 
¿ô»ú¤Î½çÈÖ¤ËÊÂ¤ó¤ÀÍ­¸Â¿ô(@math{-0}¤È@math{+0}¤ÏÅù¤·¤¤)¡¥
@item
@c Plus infinity.
@c 
Àµ¤ÎÌµ¸ÂÂç¡¥
@end itemize

@c Use this option only if there is no alternative; it is much slower than
@c @option{--numeric-sort} (@option{-n}) and it can lose information when
@c converting to floating point.
@c 
Â¾¤ËÁªÂò»è¤¬Ìµ¤¤¾ì¹ç¤Î¤ß¡¤¤³¤Î¥ª¥×¥·¥ç¥ó¤ò»ÈÍÑ¤·¤Æ¤¯¤À¤µ¤¤¡¥
@option{--numeric-sort}(@option{-n})¤è¤ê¤Ï¤ë¤«¤ËÃÙ¤¯¡¤ÉâÆ°¾®¿ôÅÀ¤ËÊÑ´¹
¤¹¤ë¤È¤­¡¤¾ðÊó¤ò¼º¤¦¤Ï¤º¤Ç¤¹¡¥

@item -i
@itemx --ignore-nonprinting
@opindex -i
@opindex --ignore-nonprinting
@cindex nonprinting characters, ignoring
@cindex unprintable characters, ignoring
@vindex LC_CTYPE
@c Ignore nonprinting characters.
@c The @env{LC_CTYPE} locale determines character types.
@c This option has no effect if the stronger @option{--dictionary-order}
@c (@option{-d}) option is also given.
@c 
°õºþÉÔ²ÄÇ½¤ÊÊ¸»ú¤òÌµ»ë¤·¤Þ¤¹¡¥@env{LC_CTYPE}¥í¥«¡¼¥ë¤ÇÊ¸»ú·Á¼°¤ò·èÄê¤·
¤Þ¤¹¡¥¤³¤Î¥ª¥×¥·¥ç¥ó¤Ï¡¤¤è¤ê¶¯ÎÏ¤Ê@option{--dictionary-order}
(@option{-d})¥ª¥×¥·¥ç¥ó¤âÍ¿¤¨¤é¤ì¤Æ¤¤¤ë¾ì¹ç¡¤¸ú²Ì¤¬¤¢¤ê¤Þ¤»¤ó¡¥

@item -M
@itemx --month-sort
@opindex -M
@opindex --month-sort
@cindex months, sorting by
@vindex LC_TIME
@c An initial string, consisting of any amount of blanks, followed
@c by a month name abbreviation, is folded to UPPER case and
@c compared in the order @samp{JAN} < @samp{FEB} < @dots{} < @samp{DEC}.
@c Invalid names compare low to valid names.  The @env{LC_TIME} locale
@c category determines the month spellings.
@c 
Ç¤°Õ¤ÎÎÌ¤Î¶õÇò¤«¤éÀ®¤êÎ©¤ÄºÇ½é¤ÎÊ¸»úÎó¤Ë·î¤ÎÌ¾Á°¤Î¾ÊÎ¬¤¬Â³¤¯¤â¤Î¤Ï¡¤Âç
Ê¸»ú¤Î¤Þ¤ÞÊÝ»ý¤µ¤ì¡¤@samp{JAN} < @samp{FEB} < @dots{} < @samp{DEC}¤Î½ç
¤ËÈæ³Ó¤µ¤ì¤Þ¤¹¡¥Ìµ¸ú¤ÊÌ¾Á°¤Ï¡¤Í­¸ú¤ÊÌ¾Á°¤Î²¼¤Ë¤Ê¤ê¤Þ¤¹¡¥@env{LC_TIME} 
¥í¥«¡¼¥ë¤Ç¡¤·î¤Î¤Ä¤Å¤ê¤ò·èÄê¤·¤Þ¤¹¡¥

@item -n
@itemx --numeric-sort
@opindex -n
@opindex --numeric-sort
@cindex numeric sort
@vindex LC_NUMERIC
@c Sort numerically: the number begins each line; specifically, it consists
@c of optional blanks, an optional @samp{-} sign, and zero or more
@c digits possibly separated by thousands separators, optionally followed
@c by a decimal-point character and zero or more digits.  The @env{LC_NUMERIC}
@c locale specifies the decimal-point character and thousands separator.
@c 
¿ôÃÍÅª¤Ê¥½¡¼¥È¤Ç¤¹¡¥¿ô»ú¤Ç¤½¤ì¤¾¤ì¤Î¹Ô¤ò³«»Ï¤·¤Þ¤¹¡¥ÆÃ¤Ë¡¤¥ª¥×¥·¥ç¥ó¤Î
¶õÇò¡¤¥ª¥×¥·¥ç¥ó¤Î@samp{-}µ­¹æ¡¤¤½¤·¤Æ¡¤1000¤Ç¶èÀÚ¤é¤ì¤¿¤ê¡¤¾®¿ôÅÀÊ¸»ú
¤È¥¼¥í°Ê¾å¤Î·å¤òÂ³¤±¤ë¤³¤È¤¬²ÄÇ½¤Ê¡¤¥¼¥í°Ê¾å¤Î·å¤«¤éÀ®¤êÎ©¤Á¤Þ¤¹¡¥
@env{LC_NUMERIC}¥í¥«¡¼¥ë¤Ç¡¤¾®¿ôÅÀÊ¸»ú¤È1000¤Î¶èÀÚ¤ê¤ò»ØÄê¤·¤Þ¤¹¡¥

@c Numeric sort uses what might be considered an unconventional method to
@c compare strings representing floating point numbers.  Rather than first
@c converting each string to the C @code{double} type and then comparing
@c those values, @command{sort} aligns the decimal-point characters in the
@c two strings and compares the strings a character at a time.  One benefit
@c of using this approach is its speed.  In practice this is much more
@c efficient than performing the two corresponding string-to-double (or
@c even string-to-integer) conversions and then comparing doubles.  In
@c addition, there is no corresponding loss of precision.  Converting each
@c string to @code{double} before comparison would limit precision to about
@c 16 digits on most systems.
@c 
¿ôÃÍÅª¤Ê¥½¡¼¥È¤Ï¡¤ÉâÆ°¾®¿ôÅÀ¤Î¿ôÃÍ¤òÉ½¸½¤¹¤ëÊ¸»úÎó¤òÈæ³Ó¤¹¤ë¤¿¤á¡¤´·½¬
Åª¤È¤Ï»×¤ï¤ì¤Ê¤¤¼êË¡¤ò»ÈÍÑ¤·¤Þ¤¹¡¥ºÇ½é¤Ë¤½¤ì¤¾¤ì¤ÎÊ¸»úÎó¤òC¤Î
@code{double}·Á¼°¤ËÊÑ´¹¤·¤Æ¤½¤ì¤é¤ÎÃÍ¤òÈæ³Ó¤¹¤ë¤Î¤Ç¤Ï¤Ê¤¯¡¤
@command{sort}¤Ï¡¤Æó¤Ä¤ÎÊ¸»úÎó¤Î¾®¿ôÅÀÊ¸»ú¤ò°ìÎó¤ËÊÂ¤Ù¤Æ¡¤°ìÅÙ¤ËÊ¸»ú¤Î
Îó¤òÈæ³Ó¤·¤Þ¤¹¡¥¤³¤Î¥¢¥×¥í¡¼¥Á¤ò»È¤¦°ì¤Ä¤ÎÍø±×¤ÏÂ®ÅÙ¤Ç¤¹¡¥¼ÂºÝ¤Ë¤Ï¡¤Æó
¤Ä¤ÎÂÐ±þ¤¹¤ëÊ¸»úÎó¤òÇÜÀºÅÙÉâÆ°¾®¿ôÅÀ¤Ë(¤Þ¤¿¤Ï¡¤Ê¸»úÎó¤òÀ°¿ô¤Ë)ÊÑ´¹¤·¡¤
ÇÜÀºÅÙÉâÆ°¾®¿ôÅÀ¤òÈæ³Ó¤¹¤ë¤è¤ê¸úÎ¨Åª¤Ç¤¹¡¥¹¹¤Ë¡¤ÀºÅÙ¤Ë¤è¤ëÂ»¼º¤Ï¤¢¤ê¤Þ
¤»¤ó¡¥¤½¤ì¤¾¤ì¤ÎÊ¸»úÎó¤òÈæ³ÓÁ°¤Ë@code{double}¤ËÊÑ´¹¤¹¤ë¤È¡¤¤Û¤È¤ó¤É¤Î
¥·¥¹¥Æ¥à¤Ç16·åÄøÅÙ¤ËÀºÅÙ¤¬À©¸Â¤µ¤ì¤ë¤Ç¤·¤ç¤¦¡¥

@c Neither a leading @samp{+} nor exponential notation is recognized.
@c To compare such strings numerically, use the
@c @option{--general-numeric-sort} (@option{-g}) option.
@c 
Á°ÃÖ¤µ¤ì¤ë@samp{+}¤â¡¤»Ø¿ôÉ½µ­¤âÇ§¼±¤µ¤ì¤Þ¤»¤ó¡¥¤½¤Î¤è¤¦¤ÊÊ¸»úÎó¤ò¿ôÃÍ
Åª¤ËÈæ³Ó¤¹¤ë¤¿¤á¤Ë¡¤@option{-g}¥ª¥×¥·¥ç¥ó¤ò»ÈÍÑ¤·¤Æ¤¯¤À¤µ¤¤¡¥

@item -r
@itemx --reverse
@opindex -r
@opindex --reverse
@cindex reverse sorting
@c Reverse the result of comparison, so that lines with greater key values
@c appear earlier in the output instead of later.
@c 
Èæ³Ó¤Î·ë²Ì¤òµÕ½ç¤Ë¤·¡¤¤è¤êÂç¤­¤Ê¥­¡¼ÃÍ¤ò»ý¤Ä¹Ô¤¬¡¤½ÐÎÏ¤Ç¤Ï¸åÊý¤Ê¤ë¤Î¤Ç
¤Ï¤Ê¤¯¡¤Á°Êý¤Ë¸½¤ï¤ì¤ë¤è¤¦¤Ë¤Ê¤ê¤Þ¤¹¡¥

@end table

@c Other options are:
@c 
¤½¤ÎÂ¾¤Î¥ª¥×¥·¥ç¥ó¤Ï°Ê²¼¤ÎÄÌ¤ê¤Ç¤¹¡¥

@table @samp

@item -o @var{output-file}
@itemx --output=@var{output-file}
@opindex -o
@opindex --output
@cindex overwriting of input, allowed
@c Write output to @var{output-file} instead of standard output.
@c If necessary, @command{sort} reads input before opening
@c @var{output-file}, so you can safely sort a file in place by using
@c commands like @code{sort -o F F} and @code{cat F | sort -o F}.
@c 
É¸½à½ÐÎÏ¤ÎÂå¤ï¤ê¤Ë¡¤@var{output-file}¤Ë½ÐÎÏ¤ò½ñ¤­½Ð¤·¤Þ¤¹¡¥É¬Í×¤¬¤¢¤ì
¤Ð¡¤@command{sort}¤Ï@var{output-file}¤ò³«¤¯Á°¤ËÆþÎÏ¤òÆÉ¤ß¹þ¤à¤Î¤Ç¡¤
@code{sort -o F F}¤È@code{cat F | sort -o F}¤Î¤è¤¦¤Ê¥³¥Þ¥ó¥É¤ò»ÈÍÑ¤¹¤ë
¤³¤È¤Ç¡¤Æ±¤¸¥Õ¥¡¥¤¥ë¤ò°ÂÁ´¤Ë¥½¡¼¥È¤¹¤ë¤³¤È¤¬²ÄÇ½¤Ç¤¹¡¥

@vindex POSIXLY_CORRECT
@c On newer systems, @option{-o} cannot appear after an input file if
@c @env{POSIXLY_CORRECT} is set, e.g., @samp{sort F -o F}.  Portable
@c scripts should specify @option{-o @var{output-file}} before any input
@c files.
@c 
¤è¤ê¿·¤·¤¤¥·¥¹¥Æ¥à¤Ç¤Ï¡¤@env{POSIXLY_CORRECT}¤¬ÀßÄê¤µ¤ì¤Æ¤¤¤ë¾ì¹ç¡¤
@option{-o}¤òÆþÎÏ¥Õ¥¡¥¤¥ë¤Î¸å¤Ë½ñ¤¯¤³¤È¤¬¤Ç¤­¤Þ¤»¤ó¡¥Îã¤¨¤Ð¡¤
@samp{sort F -o F}¤Ç¤¹¡¥°Ü¿¢À­¤Î¹â¤¤¥¹¥¯¥ê¥×¥È¤Ç¤Ï¡¤¤¹¤Ù¤Æ¤ÎÆþÎÏ¥Õ¥¡¥¤
¥ë¤ÎÁ°¤Ë@option{-o @var{output-file}}¤ò»ØÄê¤¹¤Ù¤­¤Ç¤¹¡¥

@item -s
@itemx --stable
@opindex -s
@opindex --stable
@cindex sort stability
@cindex disabling sort's last-resort comparison

@c Make @command{sort} stable by disabling the last-resort
@c comparison that is performed in some cases.
@c By default, when lines compare equal based on command line options
@c that affect ordering, those lines are ordered using
@c a @dfn{last-resort comparison} that takes the entire
@c line as the key and acts as if no ordering options were specified.
@c But if @option{--reverse} (@option{-r}) was specified along with other
@c ordering options, then the last-resort comparison does use @option{--reverse}.
@c In any case, when no ordering option is specified or when only
@c @option{--reverse} is specified, the last-resort comparison is not performed
@c 
¾ò·ï¤Ë¤è¤Ã¤Æ¤Ï¼Â¹Ô¤µ¤ì¤ëºÇ¸å¤Î¼êÃÊ¤ÎÈæ³Ó¤òÍøÍÑÉÔ²ÄÇ½¤Ë¤·¡¤
@command{sort}¤ò°ÂÄê¤µ¤»¤Þ¤¹¡¥¥Ç¥Õ¥©¥ë¥È¤Ç¡¤¥³¥Þ¥ó¥É¥é¥¤¥ó¥ª¥×¥·¥ç¥ó¤Ë
¤è¤Ã¤Æ±Æ¶Á¤¹¤ë½çÈÖ¤È¤·¤Æ¹Ô¤ÎÈæ³Ó¤¬Æ±¤¸¤Ë¤Ê¤ë¤È¤­¡¤¹ÔÁ´ÂÎ¤ò¥­¡¼¤È¤·¤Æ¡¤
½ç½øÉÕ¤±¥ª¥×¥·¥ç¥ó¤¬»ØÄê¤µ¤ì¤Æ¤¤¤Ê¤¤¾õÂÖ¤Ç¡¤@dfn{ºÇ¸å¤Î¼êÃÊ¤ÎÈæ³Ó
(last-resort comparison)}¤ò»ÈÍÑ¤·¤Æ¡¤¤³¤ì¤é¤Î¹Ô¤Ë½çÈÖ¤òÉÕ¤±¤Þ¤¹¡¥¤·¤«
¤·¡¤½ç½ø»ØÄê¤È¤·¤Æ@option{--reverse} (@option{-r})¤¬»ØÄê¤µ¤ì¤Æ¤¤¤ë¾ì¹ç¡¤
ºÇ¸å¤Î¼êÃÊ¤ÎÈæ³Ó¤Ï@option{--reverse}¤ò»ÈÍÑ¤·¤Þ¤¹¡¥¤¢¤é¤æ¤ë¾õ¶·¤Ç¡¤½ç½ø
ÉÕ¤±¥ª¥×¥·¥ç¥ó¤¬»ØÄê¤µ¤ì¤Æ¤¤¤Ê¤¤¤È¤­¤ä¡¤@option{--reverse}¤À¤±¤¬»ØÄê¤µ
¤ì¤Æ¤¤¤ë¤È¤­¡¤ºÇ¸å¤Î¼êÃÊ¤ÎÈæ³Ó¤Ï¼Â¹Ô¤µ¤ì¤Þ¤»¤ó¡¥

@item -S @var{size}
@itemx --buffer-size=@var{size}
@opindex -S
@opindex --buffer-size
@cindex size for main memory sorting
@c Use a main-memory sort buffer of the given @var{size}.  By default,
@c @var{size} is in units of 1024 bytes.  Appending @samp{%} causes
@c @var{size} to be interpreted as a percentage of physical memory.
@c Appending @samp{K} multiplies @var{size} by 1024 (the default),
@c @samp{M} by 1,048,576, @samp{G} by 1,073,741,824, and so on for
@c @samp{T}, @samp{P}, @samp{E}, @samp{Z}, and @samp{Y}.  Appending
@c @samp{b} causes @var{size} to be interpreted as a byte count, with no
@c multiplication.
@c 
Í¿¤¨¤é¤ì¤¿@var{size}¤Î¥á¥¤¥ó¥á¥â¥ê¤Î¥½¡¼¥È¥Ð¥Ã¥Õ¥¡¤ò»ÈÍÑ¤·¤Þ¤¹¡¥¥Ç¥Õ¥©
¥ë¥È¤Ç¡¤@var{size}¤Ï1024¥Ð¥¤¥ÈÃ±°Ì¤Ç¤¹¡¥@samp{%}¤òÄÉ²Ã¤¹¤ë¤È¡¤
@var{size}¤òÊªÍý¥á¥â¥ê¤Î¥Ñ¡¼¥»¥ó¥È¤È¤·¤Æ²ò¼á¤·¤Þ¤¹¡¥@samp{K}¤òÄÉ²Ã¤¹¤ë
¤È¡¤@var{size}¤ò1024ÇÜ(¥Ç¥Õ¥©¥ë¥È)¤Ë¤·¡¤@samp{M}¤Ï1,048,576ÇÜ¡¤
@samp{G}¤Ï1,073,741,824ÇÜ¤Ê¤É¤Î¤è¤¦¤Ë¤Ê¤ê¡¤°Ê²¼@samp{T}¡¤@samp{P}¡¤
@samp{E}¡¤@samp{Z}¡¤¤½¤·¤Æ@samp{Y}¤âÆ±ÍÍ¤Ç¤¹¡¥@samp{b}¤òÄÉ²Ã¤¹¤ë¤È¡¤
@var{size}¤ÏÇÜ¿ôÉ½¸½¤Ç¤Ï¤Ê¤¯¥Ð¥¤¥È¿ô¤È¤·¤Æ²ò¼á¤µ¤ì¤Þ¤¹¡¥

@c This option can improve the performance of @command{sort} by causing it
@c to start with a larger or smaller sort buffer than the default.
@c However, this option affects only the initial buffer size.  The buffer
@c grows beyond @var{size} if @command{sort} encounters input lines larger
@c than @var{size}.
@c 
¤³¤Î¥ª¥×¥·¥ç¥ó¤Ç¡¤¥Ç¥Õ¥©¥ë¥È¤è¤êÂç¤­¤¤¤Þ¤¿¤Ï¾®¤µ¤¤¥½¡¼¥È¥Ð¥Ã¥Õ¥¡¤òÍÑ¤¤
¤Æ³«»Ï¤µ¤»¤ë¤³¤È¤Ç¡¤@command{sort}¤Î¥Ñ¥Õ¥©¡¼¥Þ¥ó¥¹¤Î²þÁ±¤¹¤ë¤³¤È¤¬²ÄÇ½
¤Ç¤¹¡¥¤·¤«¤·¡¤¤³¤Î¥ª¥×¥·¥ç¥ó¤Ï½é´ü¤Î¥Ð¥Ã¥Õ¥¡¥µ¥¤¥º¤À¤±¤Ë±Æ¶Á¤·¤Þ¤¹¡¥
@var{size}¤è¤êÂç¤­¤ÊÆþÎÏ¹Ô¤ò@command{sort}¤¬¸«¤Ä¤±¤¿¾ì¹ç¡¤¥Ð¥Ã¥Õ¥¡¤Ï
@var{size}°Ê¾å¤ËÂç¤­¤¯¤Ê¤ê¤Þ¤¹¡¥

@item -t @var{separator}
@itemx --field-separator=@var{separator}
@opindex -t
@opindex --field-separator
@cindex field separator character
@c Use character @var{separator} as the field separator when finding the
@c sort keys in each line.  By default, fields are separated by the empty
@c string between a non-blank character and a blank character.
@c That is, given the input line @w{@samp{ foo bar}}, @command{sort} breaks it
@c into fields @w{@samp{ foo}} and @w{@samp{ bar}}.  The field separator is
@c not considered to be part of either the field preceding or the field
@c following.  But note that sort fields that extend to the end of the line,
@c as @option{-k 2}, or sort fields consisting of a range, as @option{-k 2,3},
@c retain the field separators present between the endpoints of the range.
@c 
¤½¤ì¤¾¤ì¤Î¹Ô¤«¤é¥½¡¼¥È¥­¡¼¤ò¸¡º÷¤¹¤ë¤È¤­¡¤¥Õ¥£¡¼¥ë¥É¥»¥Ñ¥ì¡¼¥¿¤È¤·¤Æ¡¤
Ê¸»ú@var{separator}¤ò»ÈÍÑ¤·¤Þ¤¹¡¥¥Ç¥Õ¥©¥ë¥È¤Ç¡¤¥Õ¥£¡¼¥ë¥É¤Ï¡¤¶õÇò¤Ç¤Ê
¤¤Ê¸»ú¤È¶õÇòÊ¸»ú¤Î´Ö¤Î¶õ¤ÎÊ¸»úÎó¤ÇÊ¬Î¥¤µ¤ì¤Þ¤¹¡¥¤¹¤Ê¤ï¤Á¡¤ÆþÎÏ¹Ô
@w{@samp{ foo bar}}¤¬Í¿¤¨¤é¤ì¤¿¾ì¹ç¡¤@command{sort}¤Ï¤½¤ì¤ò¡¤¥Õ¥£¡¼¥ë
¥É@w{@samp{ foo}}¤È@w{@samp{ bar}}¤ËÊ¬Î¥¤·¤Þ¤¹¡¥¥Õ¥£¡¼¥ë¥É¥»¥Ñ¥ì¡¼¥¿¤Ï¡¤
¥Õ¥£¡¼¥ë¥É¤ÎÁ°¤ä¥Õ¥£¡¼¥ë¥É¤Î¸å¤ÎÉôÊ¬¤È¤Ï¹Í¤¨¤é¤ì¤Þ¤»¤ó¡¥¤·¤«¤·¡¤
@option{-k 2}¤Î¤è¤¦¤Ë¹ÔËö¤Þ¤ÇÅ¸³«¤µ¤ì¤ë¥½¡¼¥È¥Õ¥£¡¼¥ë¥É¤ä¡¤@option{-k
2,3}¤Î¤è¤¦¤ËÈÏ°Ï¤¬¤¢¤ë¥½¡¼¥È¥Õ¥£¡¼¥ë¥É¤Ï¡¤ÈÏ°Ï¤Î½ªÅÀ¤ËÂ¸ºß¤¹¤ë¥Õ¥£¡¼¥ë
¥É¥»¥Ñ¥ì¡¼¥¿¤òÊÝ»ý¤·¤Þ¤¹¡¥

@c To specify a zero byte (@acronym{ASCII} @sc{nul} (Null) character) as
@c the field separator, use the two-character string @samp{\0}, e.g.,
@c @samp{sort -t '\0'}.
@c 
¥Õ¥£¡¼¥ë¥ÉÊ¬Î¥Ê¸»ú¤È¤·¤Æ¥¼¥í¥Ð¥¤¥È(@acronym{ASCII} @sc{nul} (Null)Ê¸»ú) 
¤ò»ØÄê¤¹¤ë¤¿¤á¤Ë¡¤ÆóÊ¸»ú¤ÎÊ¸»úÎó@samp{\0}¡¤Îã¤¨¤Ð@samp{sort -t '\0'}¤ò
»ÈÍÑ¤·¤Æ²¼¤µ¤¤¡¥

@item -T @var{tempdir}
@itemx --temporary-directory=@var{tempdir}
@opindex -T
@opindex --temporary-directory
@cindex temporary directory
@vindex TMPDIR
@c Use directory @var{tempdir} to store temporary files, overriding the
@c @env{TMPDIR} environment variable.  If this option is given more than
@c once, temporary files are stored in all the directories given.  If you
@c have a large sort or merge that is I/O-bound, you can often improve
@c performance by using this option to specify directories on different
@c disks and controllers.
@c 
°ì»þ¥Õ¥¡¥¤¥ë¤òÊÝÂ¸¤¹¤ë¤¿¤á¥Ç¥£¥ì¥¯¥È¥ê@var{tempdir}¤ò»ÈÍÑ¤·¡¤¤½¤ì¤Ï
@env{TMPDIR}´Ä¶­ÊÑ¿ô¤ËÍ¥Àè¤·¤Þ¤¹¡¥¤³¤Î¥ª¥×¥·¥ç¥ó¤¬°ì²ó°Ê¾åÍ¿¤¨¤é¤ì¤¿¾ì
¹ç¡¤°ì»þ¥Õ¥¡¥¤¥ë¤Ï¤¹¤Ù¤ÆÍ¿¤¨¤é¤ì¤¿¥Ç¥£¥ì¥¯¥È¥ê¤ËÊÝÂ¸¤µ¤ì¤Þ¤¹¡¥Æþ½ÐÎÏ¤¬
¹´Â«¤µ¤ì¤ë¤Û¤É¤ÎÂçÎÌ¤Î¥½¡¼¥È¤ä¥Þ¡¼¥¸¤ò¹Ô¤Ê¤¦¾ì¹ç¡¤°Û¤Ê¤ë¥Ç¥£¥¹¥¯¤ä¥³¥ó
¥È¥í¡¼¥é¤Ë¤¢¤ë¥Ç¥£¥ì¥¯¥È¥ê¤ò»ØÄê¤¹¤ë¤¿¤á¤Ë¤³¤Î¥ª¥×¥·¥ç¥ó¤ò»ÈÍÑ¤¹¤ë¤³¤È
¤Ç¡¤¥Ñ¥Õ¥©¡¼¥Þ¥ó¥¹¤¬²þÁ±¤¹¤ë¤Ï¤º¤Ç¤¹¡¥

@item -u
@itemx --unique
@opindex -u
@opindex --unique
@cindex uniquifying output

@c Normally, output only the first of a sequence of lines that compare
@c equal.  For the @option{--check} (@option{-c}) option,
@c check that no pair of consecutive lines compares equal.
@c 
ÄÌ¾ï¡¤Èæ³Ó·ë²Ì¤¬Åù¤·¤¤¹Ô¤ÎºÇ½é¤Î¹Ô¤Î¤ß¤ò½ÐÎÏ¤·¤Þ¤¹¡¥
@option{--check}(@option{-c})¥ª¥×¥·¥ç¥ó¤ËÂÐ¤·¡¤Èæ³Ó·ë²Ì¤¬Åù¤·¤¤Ï¢Â³¤·
¤¿¹Ô¤ÎÂÐ¤¬Ìµ¤¤¤³¤È¤òÄ´ºº¤·¤Þ¤¹¡¥

@item -k @var{pos1}[,@var{pos2}]
@itemx --key=@var{pos1}[,@var{pos2}]
@opindex -k
@opindex --key
@cindex sort field
@c Specify a sort field that consists of the part of the line between
@c @var{pos1} and @var{pos2} (or the end of the line, if @var{pos2} is
@c omitted), @emph{inclusive}.  Fields and character positions are numbered
@c starting with 1.  So to sort on the second field, you'd use
@c @option{--key=2,2} (@option{-k 2,2}).  See below for more examples.
@c 
@var{pos1}¤È@var{pos2}(¤Þ¤¿¤Ï¡¤@var{pos2}¤¬¾ÊÎ¬¤µ¤ì¤¿¾ì¹ç¤Ï¹ÔËö)¤Î´Ö¤«
¤éÀ®¤êÎ©¤Ä¡¤@var{pos2}¤Ï@emph{´Þ¤Þ¤ì¤Þ¤¹}¡¤¹Ô¤Î°ìÉô¤ò¥½¡¼¥È»þ¤Î¥Õ¥£¡¼
¥ë¥É¤Ë»ØÄê¤·¤Þ¤¹¡¥¥Õ¥£¡¼¥ë¥É¤ÈÊ¸»ú¤Î°ÌÃÖ¤Ï¡¤1¤«¤éÈÖ¹æÉÕ¤±¤µ¤ì¤Þ¤¹¡¥¤½
¤Î¤¿¤á¡¤ÆóÈÖÌÜ¤Î¥Õ¥£¡¼¥ë¥É¤ò¥½¡¼¥È¤¹¤ë¤¿¤á¡¤@option{--key=2,2}
(@samp{-k 2,2})¤ò»ÈÍÑ¤·¤Æ¤¯¤À¤µ¤¤¡¥°Ê²¼¤Ë¤è¤êÂ¿¤¯¤ÎÎã¤¬¤¢¤ê¤Þ¤¹¡¥

@item -z
@itemx --zero-terminated
@opindex -z
@opindex --zero-terminated
@cindex sort zero-terminated lines
@c Treat the input as a set of lines, each terminated by a zero byte
@c (@acronym{ASCII} @sc{nul} (Null) character) instead of an
@c @acronym{ASCII} @sc{lf} (Line Feed).
@c This option can be useful in conjunction with @samp{perl -0} or
@c @samp{find -print0} and @samp{xargs -0} which do the same in order to
@c reliably handle arbitrary pathnames (even those which contain Line Feed
@c characters.)
@c 
ÆþÎÏ¤ò¹Ô¤Î½¸¹ç¤È¤·¤Æ°·¤¤¡¤@acronym{ASCII} @sc{lf} (Line Feed)¤ÎÂå¤ï¤ê
¤Ë¥¼¥í¥Ð¥¤¥È(@acronym{ASCII} @sc{nul} (Null)Ê¸»ú)¤Ç½ªÃ¼¤·¤Þ¤¹¡¥¤³¤Î¥ª
¥×¥·¥ç¥ó¤Ï¡¤Ç¤°Õ¤Î¥Ñ¥¹Ì¾¤ò(¥é¥¤¥ó¥Õ¥£¡¼¥ÉÊ¸»ú¤ò´Þ¤ó¤Ç¤¤¤Æ¤â)³Î¼Â¤Ë½èÍý
¤¹¤ë¤¿¤á¡¤@samp{perl -0}¤ä¡¤@samp{find -print0}¤È@samp{xargs -0}¤ÈÁÈ¤ß
¹ç¤ï¤»¤ë¤ÈÊØÍø¤Ç¤¹¡¥

@end table

@c Historical (BSD and System V) implementations of @command{sort} have
@c differed in their interpretation of some options, particularly
@c @option{-b}, @option{-f}, and @option{-n}.  @sc{gnu} sort follows the @acronym{POSIX}
@c behavior, which is usually (but not always!) like the System V behavior.
@c According to @acronym{POSIX}, @option{-n} no longer implies @option{-b}.  For
@c consistency, @option{-M} has been changed in the same way.  This may
@c affect the meaning of character positions in field specifications in
@c obscure cases.  The only fix is to add an explicit @option{-b}.
@c 
Îò»ËÅª¤Ê(BSD¤ÈSystem V¤Î)@command{sort}¤Î¼ÂÁõ¤Ï¡¤²ò¼á¤¬°Û¤Ê¤ë¥ª¥×¥·¥ç
¥ó¤¬¤¢¤ê¡¤ÆÃ¤Ë¡¤@option{-b}¡¤@option{-f}¤È@option{-n}¤¬¤¢¤²¤é¤ì¤Þ¤¹¡¥
@sc{gnu} @command{sort}¤Ï¡¤@acronym{POSIX}¤ÎÆ°ºî¤Ë½¾¤¤¡¤¤½¤ì¤ÏÄÌ¾ï(¾ï
¤Ë¤Ç¤Ï¤Ê¤¤!)System V¤ÎÆ°ºî¤Ë»÷¤Æ¤¤¤Þ¤¹¡¥@acronym{POSIX}¤Ë¤è¤ë¤È¡¤
@option{-n}¤Ï¡¤¤â¤Ï¤ä@option{-b}¤ò°ÅÌÛ¤Ë»ØÄê¤·¤Þ¤»¤ó¡¥°ì´ÓÀ­¤Î¤¿¤á¡¤
@option{-M}¤âÆ±ÍÍ¤ËÊÑ¹¹¤µ¤ì¤Þ¤·¤¿¡¥¤³¤ì¤Ï¡¤¥Õ¥£¡¼¥ë¥É¤Î»ØÄê¤¬ÌÀ³Î¤Ç¤Ê
¤¤¾õ¶·¤Ç¡¤Ê¸»ú¤Î°ÌÃÖ¤Î°ÕÌ£¤Ë±Æ¶Á¤¹¤ë¤«¤â¤·¤ì¤Þ¤»¤ó¡¥Í£°ì¤ÎÄûÀµÊýË¡¤Ï¡¤
ÌÀ¼¨Åª¤Ë@option{-b}¤ò²Ã¤¨¤ë¤³¤È¤Ç¤¹¡¥

@c A position in a sort field specified with the @option{-k}
@c option has the form @samp{@var{f}.@var{c}}, where @var{f} is the number
@c of the field to use and @var{c} is the number of the first character
@c from the beginning of the field.  In a start position, an omitted
@c @samp{.@var{c}} stands for the field's first character.  In an end
@c position, an omitted or zero @samp{.@var{c}} stands for the field's
@c last character.  If the
@c @option{-b} option was specified, the @samp{.@var{c}} part of a field
@c specification is counted from the first nonblank character of the field.
@c 
@option{-k}¥ª¥×¥·¥ç¥ó¤òÍÑ¤¤¤¿¥½¡¼¥È»þ¤Î¥Õ¥£¡¼¥ë¥É»ØÄê¤Î°ÌÃÖ¤Ï¡¤
@samp{@var{f}.@var{c}}·Á¼°¤È¤Ê¤ê¡¤@var{f}¤Ï»ÈÍÑ¤¹¤ë¥Õ¥£¡¼¥ë¥É¿ô¤Ç¡¤
@var{c}¤Ï¥Õ¥£¡¼¥ë¥É¤Î¤Ï¤¸¤Þ¤ê¤«¤é¿ô¤¨¤¿ºÇ½é¤ÎÊ¸»ú¤Þ¤Ç¤Î¿ô¤Ç¤¹¡¥ºÇ½é¤Î
°ÌÃÖ¤È¤·¤Æ¡¤@samp{.@var{c}}¤¬¾ÊÎ¬¤µ¤ì¤Æ¤¤¤ë¤È¥Õ¥£¡¼¥ë¥É¤ÎºÇ½é¤ÎÊ¸»ú¤ò
ÍÑ¤¤¤Þ¤¹¡¥@option{-b}¥ª¥×¥·¥ç¥ó¤¬»ØÄê¤µ¤ì¤Æ¤¤¤ë¾ì¹ç¡¤»ØÄê¤·¤¿¥Õ¥£¡¼¥ë
¥É¤Î@samp{.@var{c}} ¤ÎÉôÊ¬¤Ï¡¤¥Õ¥£¡¼¥ë¥É¤ÎºÇ½é¤Î¶õÇò¤Ç¤Ï¤Ê¤¤Ê¸»ú¤«¤é¿ô
¤¨¤Þ¤¹¡¥

@c A sort key position may also have any of the option letters @samp{Mbdfinr}
@c appended to it, in which case the global ordering options are not used
@c for that particular field.  The @option{-b} option may be independently
@c attached to either or both of the start and
@c end positions of a field specification, and if it is inherited
@c from the global options it will be attached to both.
@c Keys may span multiple fields.
@c 
¥½¡¼¥È¥­¡¼¤Î°ÌÃÖ¤Ï¡¤¥ª¥×¥·¥ç¥óÊ¸»ú@samp{Mbdfinr}¤ò²Ã¤¨¤Æ¤â¤«¤Þ¤ï¤º¡¤¤½
¤Î¾ì¹ç¡¤Âç°èÅª¤Ê½ç½ø¥ª¥×¥·¥ç¥ó¤Ï¡¤ÆÃÄê¤Î¥Õ¥£¡¼¥ë¥É¤Ë»ÈÍÑ¤µ¤ì¤Þ¤»¤ó¡¥
@option{-b}¥ª¥×¥·¥ç¥ó¤Ï¡¤»ØÄê¤·¤¿ºÇ½é¤ÈºÇ¸å¤Î¥Õ¥£¡¼¥ë¥É¤Î°ìÊý¤Þ¤¿¤ÏÎ¾
Êý¤ËÆÈÎ©¤ËÅ¬ÍÑ¤µ¤ì¡¤Âç°èÅª¤Ê¥ª¥×¥·¥ç¥ó¤ò·Ñ¾µ¤¹¤ë¾ì¹ç¡¤Î¾Êý¤ËÅ¬ÍÑ¤µ¤ì¤Þ
¤¹¡¥¥­¡¼¤ÏÊ£¿ô¤Î¥Õ¥£¡¼¥ë¥É¤Ë¸Ù¤Ã¤Æ¤â¤«¤Þ¤¤¤Þ¤»¤ó¡¥

@c On older systems, @command{sort} supports an obsolete origin-zero
@c syntax @samp{+@var{pos1} [-@var{pos2}]} for specifying sort keys.
@c @acronym{POSIX} 1003.1-2001 (@pxref{Standards conformance}) does not allow
@c this; use @option{-k} instead.
@c 
¸Å¤¤¥·¥¹¥Æ¥à¤Ç¤Ï¡¤@command{sort}¤Ï»þÂåÃÙ¤ì¤Î¥½¡¼¥È¥­¡¼¤ò»ØÄê¤¹¤ë¥¼¥í¤ò
µ¯ÅÀ¤È¤·¤¿¹½Ê¸¤Î@samp{+@var{pos1} [-@var{pos2}]}¤ò¥µ¥Ý¡¼¥È¤·¤Æ¤¤¤Þ¤¹¡¥
@acronym{POSIX} 1003.1-2001 (@pxref{Standards conformance})¤Ç¤Ï¤³¤ì¤ò
µö²Ä¤·¤Æ¤¤¤Þ¤»¤ó¡¥Âå¤ï¤ê¤Ë@option{-k}¤ò»ÈÍÑ¤·¤Æ¤¯¤À¤µ¤¤¡¥

@c Here are some examples to illustrate various combinations of options.
@c 
ÍÍ¡¹¤Ê¥ª¥×¥·¥ç¥ó¤ÎÁÈ¹ç¤»¤ò¾Ò²ð¤¹¤ëÎã¤Ï°Ê²¼¤Î¤è¤¦¤Ë¤Ê¤ê¤Þ¤¹¡¥

@itemize @bullet

@item
@c Sort in descending (reverse) numeric order.
@c 
²¼¹ßÅª¤Ê(µÕ½ç¤Î)¿ô¤Î½ç½ø¤Ç¥½¡¼¥È¤·¤Þ¤¹¡¥

@example
sort -nr
@end example

@item
@c Sort alphabetically, omitting the first and second fields.
@c This uses a single key composed of the characters beginning
@c at the start of field three and extending to the end of each line.
@c 
¥¢¥ë¥Õ¥¡¥Ù¥Ã¥È½ç¤Ë¡¤ºÇ½é¤ÈÆóÈÖÌÜ¤Î¥Õ¥£¡¼¥ë¥É¤ò½ü¤¤¤Æ¥½¡¼¥È¤·¤Þ¤¹¡¥¤³¤ì
¤Ï¡¤»°¤ÄÌÜ¤Î¥Õ¥£¡¼¥ë¥É¤«¤é»Ï¤Þ¤ê¡¤¤½¤ì¤¾¤ì¤Î¹Ô¤Î½ª¤ê¤Þ¤ÇÂ³¤¯Ê¸»ú¤Ç¹½À®
¤µ¤ì¤¿¡¤Ã±°ì¤Î¥­¡¼¤ò»ÈÍÑ¤·¤Þ¤¹¡¥

@example
sort -k 3
@end example

@item
@c Sort numerically on the second field and resolve ties by sorting
@c alphabetically on the third and fourth characters of field five.
@c Use @samp{:} as the field delimiter.
@c 
ÆóÈÖÌÜ¤Î¥Õ¥£¡¼¥ë¥É¤ò¿ôÃÍÅª¤Ë¥½¡¼¥È¤·¡¤¸Þ¤ÄÌÜ¤Î¥Õ¥£¡¼¥ë¥É¤Î»°ÈÖÌÜ¤È»ÍÈÖ
ÌÜ¤ÎÊ¸»ú¤Î¥¢¥ë¥Õ¥¡¥Ù¥Ã¥È¤Ç¥½¡¼¥È¤¹¤ë¤³¤È¤Ç¡¤¤½¤ÎÃÍ¤¬Æ±¤¸¤â¤Î¤òÊÂ¤Ù¤Þ¤¹¡¥
¥Õ¥£¡¼¥ë¥É¤ÎÊ¬Î¥¤Ë@samp{:}¤ò»ÈÍÑ¤·¤Þ¤¹¡¥

@example
sort -t : -k 2,2n -k 5.3,5.4
@end example

@c Note that if you had written @option{-k 2} instead of @option{-k 2,2}
@c @command{sort} would have used all characters beginning in the second field
@c and extending to the end of the line as the primary @emph{numeric}
@c key.  For the large majority of applications, treating keys spanning
@c more than one field as numeric will not do what you expect.
@c 
@samp{-k 2,2}¤ÎÂå¤ï¤ê¤Ë@samp{-k 2}¤È½ñ¤¤¤¿¾ì¹ç¡¤@samp{sort}¤ÏÆóÈÖÌÜ¤Î
¥Õ¥£¡¼¥ë¥É¤Ç»Ï¤Þ¤ê¡¤¹Ô¤Î½ª¤ê¤Þ¤ÇÂ³¤¯Á´¤Æ¤ÎÊ¸»ú¤ò¡¤¼çÍ×¤Ê@emph{¿ôÃÍ}¥­¡¼
¤È¤·¤Æ»ÈÍÑ¤¹¤ë¤³¤È¤ËÃí°Õ¤·¤Æ¤¯¤À¤µ¤¤¡¥¥¢¥×¥ê¥±¡¼¥·¥ç¥ó¤Î¤Û¤È¤ó¤ÉÂçÂ¿¿ô
¤ËÂÐ¤·¤Æ¤Ï¡¤¿ôÃÍ¤È¤·¤Æ°ì¤Ä¥Õ¥£¡¼¥ë¥É°Ê¾å¤Ë¸Ù¤Ã¤Æ°·¤¦¥­¡¼¤Ï¡¤´üÂÔ¤·¤¿¤â
¤Î¤Ç¤Ï¤Ê¤¤¤Ç¤·¤ç¤¦¡¥

@c Also note that the @samp{n} modifier was applied to the field-end
@c specifier for the first key.  It would have been equivalent to
@c specify @option{-k 2n,2} or @option{-k 2n,2n}.  All modifiers except
@c @samp{b} apply to the associated @emph{field}, regardless of whether
@c the modifier character is attached to the field-start and/or the
@c field-end part of the key specifier.
@c 
¤Þ¤¿¡¤@samp{n}¤Î½¤¾þ¤Ï¡¤ºÇ½é¤Î¥­¡¼¤ËÂÐ¤·¡¤¥Õ¥£¡¼¥ë¥É¤Î½ª¤ê¤ò»ØÄê¤¹¤ë¤â
¤Î¤ËÅ¬ÍÑ¤µ¤ì¤ë¤³¤È¤ËÃí°Õ¤·¤Æ¤¯¤À¤µ¤¤¡¥¤½¤ì¤Ï¡¤@samp{-k 2n,2}¤ä@samp{-k
2n,2n}¤ò»ØÄê¤¹¤ë¤³¤È¤ÈÆ±¤¸¤Ç¤¹¡¥Á´¤Æ¤Î½¤¾þ¤Ï¡¤@samp{b}¤¬´ØÏ¢¤¹¤ë
@emph{¥Õ¥£¡¼¥ë¥É}¤ËÅ¬ÍÑ¤µ¤ì¤ë¤³¤È¤ò´üÂÔ¤·¡¤½¤¾þÊ¸»ú¤¬¥Õ¥£¡¼¥ë¥É¤ÎºÇ½é
¤½¤·¤Æ/¤Þ¤¿¤Ï¡¤¥­¡¼»ØÄê¤Î¥Õ¥£¡¼¥ë¥É¤Î½ª¤ê¤ËÅ¬ÍÑ¤µ¤ì¤ë¤«¤É¤¦¤«¤Ë°ÍÂ¸¤·
¤Þ¤»¤ó¡¥

@item
@c Sort the password file on the fifth field and ignore any
@c leading blanks.  Sort lines with equal values in field five
@c on the numeric user ID in field three.
@c 
¸ÞÈÖÌÜ¤Î¥Õ¥£¡¼¥ë¥É¤Ç¥Ñ¥¹¥ï¡¼¥É¥Õ¥¡¥¤¥ë¤ò¥½¡¼¥È¤·¡¤Á°ÃÖ¤µ¤ì¤ë¤¹¤Ù¤Æ¤Î¶õ
Çò¤òÌµ»ë¤·¤Þ¤¹¡¥¸ÞÈÖÌÜ¤Î¥Õ¥£¡¼¥ë¥É¤¬Åù¤·¤¤ÃÍ¤Î¹Ô¤ò¡¤»°ÈÖÌÜ¤Î¥Õ¥£¡¼¥ë¥É
¤Î¥æ¡¼¥¶ID¤Ç¥½¡¼¥È¤·¤Þ¤¹¡¥

@example
sort -t : -k 5b,5 -k 3,3n /etc/passwd
@end example

@c An alternative is to use the global numeric modifier @option{-n}.
@c 
Âå¤ï¤ê¤Ë¡¤Âç°èÅª¤Ê¿ôÃÍ¤Î½¤¾þ@option{-n}¤ò»ÈÍÑ¤·¤Þ¤¹¡¥

@example
sort -t : -n -k 5b,5 -k 3,3 /etc/passwd
@end example

@item
@c Generate a tags file in case-insensitive sorted order.
@c 
ÂçÊ¸»ú¾®Ê¸»ú¤ò¼±ÊÌ¤¹¤ë¥¿¥°¥Õ¥¡¥¤¥ë¤òÀ¸À®¤·¤Þ¤¹¡¥

@smallexample
find src -type f -print0 | sort -t / -z -f | xargs -0 etags --append
@end smallexample

@c The use of @option{-print0}, @option{-z}, and @option{-0} in this case means
@c that pathnames that contain Line Feed characters will not get broken up
@c by the sort operation.
@c 
¤³¤Î¾õ¶·¤Ç¤Ï¡¤@option{-print0}¡¤@option{-z}¡¤¤½¤·¤Æ@option{-0}¤Î»ÈÍÑ¤Ï¡¤
Line FeedÊ¸»ú¤ò´Þ¤à¥Ñ¥¹Ì¾¤¬¥½¡¼¥È½èÍý¤ÇÊ¬³ä¤µ¤ì¤Ê¤¤¤è¤¦¤Ë¤·¤Þ¤¹¡¥

@c Finally, to ignore both leading and trailing blanks, you
@c could have applied the @samp{b} modifier to the field-end specifier
@c for the first key,
@c 
ºÇ¸å¤Ë¡¤Á°¸å¤Î¶õÇò¤òÌµ»ë¤¹¤ë¤¿¤á¡¤@samp{b}½¤¾þ¤òºÇ½é¤Î¥­¡¼¤ËÂÐ¤·¥Õ¥£¡¼
¥ë¥É¤Î½ª¤ê¤Î»ØÄê¤ËÅ¬ÍÑ¤Ç¤­¤Þ¤¹¡¥

@example
sort -t : -n -k 5b,5b -k 3,3 /etc/passwd
@end example

@c or by using the global @option{-b} modifier instead of @option{-n}
@c and an explicit @samp{n} with the second key specifier.
@c 
¤Þ¤¿¤Ï¡¤Âç°èÅª¤Ê@option{-b}½¤¾þ¤ò@option{-n}¤ÎÂå¤ï¤ê¤Ë»ÈÍÑ¤·¡¤ÆóÈÖÌÜ¤Î
¥­¡¼»ØÄê¤Ë@samp{n}¤òÌÀ¼¨¤·¤Þ¤¹¡¥

@example
sort -t : -b -k 5,5 -k 3,3n /etc/passwd
@end example

@c This example is a bit contrived and needs more explanation.
@c @item
@c Sort records separated by an arbitrary string by using a pipe to convert
@c each record delimiter string to @samp{\0}, then using sort's -z option,
@c and converting each @samp{\0} back to the original record delimiter.
@c
@c @example
@c printf 'c\n\nb\n\na\n'|perl -0pe 's/\n\n/\n\0/g'|sort -z|perl -0pe 's/\0/\n/g'
@c @end example

@end itemize


@node uniq invocation
@c @section @command{uniq}: Uniquify files
@section @command{uniq}: ¥Õ¥¡¥¤¥ë¤Î¥æ¥Ë¡¼¥¯²½

@pindex uniq
@cindex uniquify files

@c @command{uniq} writes the unique lines in the given @file{input}, or
@c standard input if nothing is given or for an @var{input} name of
@c @samp{-}.  Synopsis:
@c 
@command{uniq}¤ÏÍ¿¤¨¤é¤ì¤¿¥Õ¥¡¥¤¥ë¡¤¤Þ¤¿¤ÏÍ¿¤¨¤é¤ì¤Ê¤¤¾ì¹ç¤ä@samp{-}¤Î
@var{input}Ì¾¤ËÂÐ¤·¡¤¥æ¥Ë¡¼¥¯¤Ê¹Ô¤ò½ñ¤­½Ð¤·¤Þ¤¹¡¥³µÍ×¤Ç¤¹¡¥

@example
uniq [@var{option}]@dots{} [@var{input} [@var{output}]]
@end example

@c By default, @command{uniq} prints its input lines, except that
@c it discards all but the first of adjacent repeated lines, so that
@c no output lines are repeated.  Optionally, it can instead discard
@c lines that are not repeated, or all repeated lines.
@c 
¥Ç¥Õ¥©¥ë¥È¤Ç@command{uniq}¤Ï¤½¤ÎÆþÎÏ¹Ô¤ò½ÐÎÏ¤·¡¤¤½¤·¤Æ¡¤½ÐÎÏ¹Ô¤¬·«¤êÊÖ
¤µ¤Ê¤¤¤è¤¦¤ËÎÙÀÜ¤·¤¿·«¤êÊÖ¤·¤Æ¤¤¤ë¹Ô¤ÎºÇ½é¤Î¤â¤Î¤À¤±¤ò½ÐÎÏ¤·¤Þ¤¹¡¥¥ª¥×
¥·¥ç¥ó¤Ç¡¤¤½¤¦¤¹¤ëÂå¤ï¤ê¤Ë¡¤·«¤êÊÖ¤µ¤Ê¤¤¹Ô¤òÉ½¼¨¤·¤Ê¤¤¡¤¤µ¤é¤Ë¡¤¤¹¤Ù¤Æ
¤Î·«¤êÊÖ¤·¹Ô¤òÉ½¼¨¤¹¤ë¤³¤È¤â²ÄÇ½¤Ç¤¹¡¥

@c The input need not be sorted, but repeated input lines are detected
@c only if they are adjacent.  If you want to discard non-adjacent
@c duplicate lines, perhaps you want to use @code{sort -u}.
@c 
ÆþÎÏ¥Õ¥¡¥¤¥ë¤Ï¥½¡¼¥È¤µ¤ì¤Æ¤¤¤ëÉ¬Í×¤Ï¤¢¤ê¤Þ¤»¤ó¤¬¡¤·«¤êÊÖ¤·¤Æ¤¤¤ë¹Ô¤ÏÎÙ
ÀÜ¤·¤Æ¤¤¤ë¾ì¹ç¤Î¤ß¸¡½Ð¤µ¤ì¤Þ¤¹¡¥ÎÙÀÜ¤·¤Æ¤¤¤Ê¤¤¤â¤Î¤ò½üµî¤·¤¿¤¤¾ì¹ç¡¤¤ª
¤½¤é¤¯@code{sort -u}¤ò»ÈÍÑ¤·¤¿¤¤¤È»×¤¦¤Ç¤·¤ç¤¦¡¥

@vindex LC_COLLATE
@c Comparisons use the character collating sequence specified by the
@c @env{LC_COLLATE} locale category.
@c 
Èæ³Ó¤Ë¤Ï¡¤@env{LC_COLLATE}¥í¥«¡¼¥ë¥«¥Æ¥´¥ê¤Ç»ØÄê¤µ¤ì¤¿Ê¸»ú¤Î½çÈÖ¤ò»ÈÍÑ
¤·¤Þ¤¹¡¥

@c If no @var{output} file is specified, @command{uniq} writes to standard
@c output.
@c 
@var{output}¥Õ¥¡¥¤¥ë¤¬Ìµ¤¤¾ì¹ç¡¤@command{uniq}¤ÏÉ¸½à½ÐÎÏ¤Ë½ñ¤­½Ð¤·¤Þ¤¹¡¥

@c The program accepts the following options.  Also see @ref{Common options}.
@c 
¤³¤Î¥×¥í¥°¥é¥à¤Ï¡¤°Ê²¼¤Î¥ª¥×¥·¥ç¥ó¤â¼õ¤±Æþ¤ì¤Þ¤¹¡¥@ref{Common options} 
¤â»²¾È¤·¤Æ¤¯¤À¤µ¤¤¡¥

@table @samp

@item -f @var{n}
@itemx --skip-fields=@var{n}
@opindex -f
@opindex --skip-fields
@c Skip @var{n} fields on each line before checking for uniqueness.  Use
@c a null string for comparison if a line has fewer than @var{n} fields.  Fields
@c are sequences of non-space non-tab characters that are separated from
@c each other by at least one space or tab.
@c 
¥æ¥Ë¡¼¥¯¤µ¤òÄ´ºº¤¹¤ëÁ°¤Ë¡¤¤½¤ì¤¾¤ì¤Î¹Ô¤Î@var{n}¥Õ¥£¡¼¥ë¥É¥¹¥­¥Ã¥×¤·¤Þ
¤¹¡¥¹Ô¤¬@var{n}¥Õ¥£¡¼¥ë¥É¤è¤ê¾¯¤Ê¤¤¾ì¹ç¡¤Èæ³Ó¤Ç¶õ¤ÎÊ¸»úÎó¤ò»ÈÍÑ¤·¤Þ¤¹¡¥
¥Õ¥£¡¼¥ë¥É¤Ï¡¤¾¯¤Ê¤¯¤È¤â°ì¤Ä°Ê¾å¤Î¥¹¥Ú¡¼¥¹¤ä¥¿¥Ö¤Ç¶èÀÚ¤é¤ì¤¿¡¤Èó¥¹¥Ú¡¼
¥¹¡¤Èó¥¿¥ÖÊ¸»ú¤ÎÊÂ¤Ó¤Ç¤¹¡¥

@c On older systems, @command{uniq} supports an obsolete option
@c @option{-@var{n}}.  @acronym{POSIX} 1003.1-2001 (@pxref{Standards conformance})
@c does not allow this; use @option{-f @var{n}} instead.
@c 
¸Å¤¤¥·¥¹¥Æ¥à¤Ç¤Ï¡¤@command{uniq}¤Ï»þÂåÃÙ¤ì¤Î¥ª¥×¥·¥ç¥ó
@option{-@var{n}}¤ò¥µ¥Ý¡¼¥È¤·¤Æ¤¤¤Þ¤¹¡¥@acronym{POSIX} 1003.1-2001
(@pxref{Standards conformance})¤Ç¤Ï¤³¤ì¤òµö²Ä¤·¤Æ¤¤¤Þ¤»¤ó¡¥Âå¤ï¤ê¤Ë
@option{-f @var{n}}¤ò»ÈÍÑ¤·¤Æ¤¯¤À¤µ¤¤¡¥

@item -s @var{n}
@itemx --skip-chars=@var{n}
@opindex -s
@opindex --skip-chars
@c Skip @var{n} characters before checking for uniqueness.  Use a null string
@c for comparison if a line has fewer than @var{n} characters.  If you use both
@c the field and character skipping options, fields are skipped over first.
@c 
¥æ¥Ë¡¼¥¯¤µ¤ÎÄ´ºº¤ÎÁ°¤Ë¡¤@var{n}Ê¸»ú¥¹¥­¥Ã¥×¤·¤Þ¤¹¡¥¹Ô¤¬@var{n}Ê¸»ú¤è¤ê
¾¯¤Ê¤¤¾ì¹ç¡¤Èæ³Ó¤Ç¶õ¤ÎÊ¸»úÎó¤ò»ÈÍÑ¤·¤Þ¤¹¡¥¥Õ¥£¡¼¥ë¥É¤ÈÊ¸»ú¤Î¥¹¥­¥Ã¥×¥ª
¥×¥·¥ç¥ó¤òÎ¾Êý¤È¤â»ÈÍÑ¤·¤¿¾ì¹ç¡¤¥Õ¥£¡¼¥ë¥É¤¬ºÇ½é¤Ë¥¹¥­¥Ã¥×¤µ¤ì¤Þ¤¹¡¥

@c On older systems, @command{uniq} supports an obsolete option
@c @option{+@var{n}}.  @acronym{POSIX} 1003.1-2001 (@pxref{Standards conformance})
@c does not allow this; use @option{-s @var{n}} instead.
@c 
¸Å¤¤¥·¥¹¥Æ¥à¤Ç¤Ï¡¤@command{uniq}¤Ï»þÂåÃÙ¤ì¤Î¥ª¥×¥·¥ç¥ó
@option{+@var{n}}¤ò¥µ¥Ý¡¼¥È¤·¤Æ¤¤¤Þ¤¹¡¥@acronym{POSIX} 1003.1-2001
(@pxref{Standards conformance})¤Ç¤Ï¤³¤ì¤òµö²Ä¤·¤Æ¤¤¤Þ¤»¤ó¡¥Âå¤ï¤ê¤Ë
@option{-s @var{n}}¤ò»ÈÍÑ¤·¤Æ¤¯¤À¤µ¤¤¡¥

@item -c
@itemx --count
@opindex -c
@opindex --count
@c Print the number of times each line occurred along with the line.
@c 
¤½¤ì¤¾¤ì¤Î¹Ô¤ÇÆ±¤¸¤â¤Î¤¬È¯À¸¤·¤¿²ó¿ô¤ò½ÐÎÏ¤·¤Þ¤¹¡¥

@item -i
@itemx --ignore-case
@opindex -i
@opindex --ignore-case
@c Ignore differences in case when comparing lines.
@c 
¹Ô¤ÎÈæ³Ó»þ¤ËÂçÊ¸»ú¾®Ê¸»ú¤Î°ã¤¤¤òÌµ»ë¤·¤Þ¤¹¡¥

@item -d
@itemx --repeated
@opindex -d
@opindex --repeated
@cindex repeated lines, outputting
@c Discard lines that are not repeated.  When used by itself, this option
@c causes @command{uniq} to print the first copy of each repeated line,
@c and nothing else.
@c 
·«¤êÊÖ¤·¤Ç¤Ï¤Ê¤¤¹Ô¤ò½ü³°¤·¤Þ¤¹¡¥Ã±ÆÈ¤Ç»ÈÍÑ¤·¤Æ¤¤¤ë¤È¤­¡¤¤³¤Î¥ª¥×¥·¥ç¥ó
¤Ç@command{uniq}¤Ï·«¤êÊÖ¤·¤Æ¤¤¤ë¹Ô¤ÎºÇ½é¤Î¤â¤Î¤ò½ÐÎÏ¤·¡¤¤½¤ì°Ê³°¤Ï²¿¤â
½ÐÎÏ¤·¤Þ¤»¤ó¡¥

@item -D
@itemx --all-repeated[=@var{delimit-method}]
@opindex -D
@opindex --all-repeated
@cindex all repeated lines, outputting
@c Do not discard the second and subsequent repeated input lines,
@c but discard lines that are not repeated.
@c This option is useful mainly in conjunction with other options e.g.,
@c to ignore case or to compare only selected fields.
@c The optional @var{delimit-method} tells how to delimit
@c groups of repeated lines, and must be one of the following:
@c 
·«¤êÊÖ¤·¤Æ¤¤¤ë¹Ô¤ÎÆóÈÖÌÜ¤È¤½¤ì¤ËÂ³¤¯¹Ô¤ò½ü³°¤·¤Þ¤»¤ó¤¬¡¤·«¤êÊÖ¤·¤Æ¤¤¤Ê
¤¤¹Ô¤Ï½ü³°¤·¤Þ¤¹¡¥¤³¤Î¥ª¥×¥·¥ç¥ó¤Ï¡¤¼ç¤ËÂ¾¤Î¥ª¥×¥·¥ç¥ó¤ÈÁÈ¤ß¹ç¤ï¤»¤ë¤È
ÊØÍø¤Ç¡¤Îã¤¨¤Ð¡¤ÂçÊ¸»ú¾®Ê¸»ú¤òÌµ»ë¤·¤¿¤ê¡¤ÁªÂò¤·¤¿¥Õ¥£¡¼¥ë¥É¤Î¤ß¤òÈæ³Ó
¤¹¤ë¾ì¹ç¤Ç¤¹¡¥ÄÉ²Ã¤Î@var{delimit-method}¤Ç·«¤êÊÖ¤·¤Æ¤¤¤ë¹Ô¤ÎÁÈ¤òÊ¬¤±¤ë
ÊýË¡¤òÅÁ¤¨¡¢¤½¤ì¤Ï°Ê²¼¤Î°ì¤Ä¤Ë¤¹¤ëÉ¬Í×¤¬¤¢¤ê¤Þ¤¹¡¥

@table @samp

@item none
@c Do not delimit groups of repeated lines.
@c This is equivalent to @option{--all-repeated} (@option{-D}).
@c 
·«¤êÊÖ¤·¤Æ¤¤¤ë¹Ô¤ÎÁÈ¤òÊ¬Î¥¤·¤Þ¤»¤ó¡¥¤³¤ì¤Ï@option{--all-repeated}
(@option{-D})¤ÈÆ±¤¸¤Ç¤¹¡¥

@item prepend
@c Output a newline before each group of repeated lines.
@c 
¤½¤ì¤¾¤ì¤Î·«¤êÊÖ¤·¤Æ¤¤¤ë¹Ô¤ÎÁÈ¤ÎÁ°¤Ë²þ¹Ô¤ò½ÐÎÏ¤·¤Þ¤¹¡¥

@item separate
@c Separate groups of repeated lines with a single newline.
@c This is the same as using @samp{prepend}, except that
@c there is no newline before the first group, and hence
@c may be better suited for output direct to users.
@c 
·«¤êÊÖ¤·¤Æ¤¤¤ë¹Ô¤ÎÁÈ¤òÃ±°ì¤Î²þ¹Ô¤ÇÊ¬Î¥¤·¤Þ¤¹¡¥¤³¤ì¤Ï¡¤ºÇ½é¤ÎÁÈ¤ÎÁ°¤Ë²þ
¹Ô¤¬Ìµ¤¤¤³¤È°Ê³°@samp{prepend}¤ò»ÈÍÑ¤¹¤ë¤³¤È¤ÈÆ±¤¸¤Ç¡¤¥æ¡¼¥¶¤ËÄ¾ÀÜ½ÐÎÏ
¤¹¤ë¤¿¤á¤Ë¤Ï¤è¤êÅ¬¤·¤Æ¤¤¤ë¤Ç¤·¤ç¤¦¡¥
@end table

@c Note that when groups are delimited and the input stream contains
@c two or more consecutive blank lines, then the output is ambiguous.
@c To avoid that, filter the input through @samp{tr -s '\n'} to replace
@c each sequence of consecutive newlines with a single newline.
@c 
ÁÈ¤¬Ê¬Î¥¤µ¤ì¤Æ¤¤¤Æ¡¤ÆþÎÏ¤ËÆó¤Ä°Ê¾å¤Î¶õÇò¹Ô¤¬¤¢¤ë¤È¤­¡¤½ÐÎÏ¤¬ÉÔÌÀÎÆ¤Ë¤Ê
¤ë¤³¤È¤ËÃí°Õ¤·¤Æ¤¯¤À¤µ¤¤¡¥¤½¤ì¤òÈò¤±¤ë¤¿¤á¡¤Ï¢Â³¤·¤¿²þ¹Ô¤òÃ±°ì¤Î²þ¹Ô¤Ë
ÃÖ´¹¤¹¤ë¤è¤¦¤Ë¡¤ÆþÎÏ¤ò@samp{tr -s '\n'}¤Ç¥Õ¥£¥ë¥¿¥ê¥ó¥°¤·¤Æ¤¯¤À¤µ¤¤¡¥

@c This is a @sc{gnu} extension.
@c 
¤³¤ì¤Ï¡¤@sc{gnu}¤Î³ÈÄ¥¤Ç¤¹¡¥

@c FIXME: give an example showing *how* it's useful

@item -u
@itemx --unique
@opindex -u
@opindex --unique
@cindex unique lines, outputting
@c Discard the first repeated line.  When used by itself, this option
@c causes @command{uniq} to print unique lines, and nothing else.
@c 
ºÇ½é¤Ë·«¤êÊÖ¤·¤Æ¤¤¤ë¹Ô¤ò½ü³°¤·¤Þ¤¹¡¥Ã±ÆÈ¤Ç»ÈÍÑ¤·¤Æ¤¤¤ë¤È¤­¡¤¤³¤Î¥ª¥×¥·¥ç
¥ó¤Ç@command{uniq}¤Ï¥æ¥Ë¡¼¥¯¤Ê¹Ô¤ò½ÐÎÏ¤·¡¤¤½¤ì°Ê³°¤Ç¤Ï²¿¤â¤·¤Þ¤»¤ó¡¥

@item -w @var{n}
@itemx --check-chars=@var{n}
@opindex -w
@opindex --check-chars
@c Compare at most @var{n} characters on each line (after skipping any specified
@c fields and characters).  By default the entire rest of the lines are
@c compared.
@c 
(»ØÄê¤µ¤ì¤¿¤¹¤Ù¤Æ¤Î¥Õ¥£¡¼¥ë¥É¤ÈÊ¸»ú¤ò¥¹¥­¥Ã¥×¤·¤¿¸å)¤½¤ì¤¾¤ì¤Î¹Ô¤ÎºÇÂç
@var{n}Ê¸»ú¤òÈæ³Ó¤·¤Þ¤¹¡¥¥Ç¥Õ¥©¥ë¥È¤Ç¡¤¹Ô¤Î»Ä¤êÁ´ÂÎ¤¬Èæ³Ó¤µ¤ì¤Þ¤¹¡¥

@end table

@exitstatus


@node comm invocation
@c @section @command{comm}: Compare two sorted files line by line
@section @command{comm}: Æó¤Ä¤Î¥½¡¼¥È¤µ¤ì¤¿¹Ô¤È¹Ô¤ÎÈæ³Ó

@pindex comm
@cindex line-by-line comparison
@cindex comparing sorted files

@c @command{comm} writes to standard output lines that are common, and lines
@c that are unique, to two input files; a file name of @samp{-} means
@c standard input.  Synopsis:
@c 
@command{comm}¤Ï¡¤Æó¤Ä¤ÎÆþÎÏ¥Õ¥¡¥¤¥ë¤Î¶¦ÄÌ¤Î¹Ô¤È¥æ¥Ë¡¼¥¯¤Ê¹Ô¤òÉ¸½à½ÐÎÏ
¤Ë½ñ¤­½Ð¤·¤Þ¤¹¡¥@samp{-}¤Î¥Õ¥¡¥¤¥ëÌ¾¤ÏÉ¸½àÆþÎÏ¤ò°ÕÌ£¤·¤Þ¤¹¡¥³µÍ×¤Ç¤¹¡¥

@example
comm [@var{option}]@dots{} @var{file1} @var{file2}
@end example

@vindex LC_COLLATE
@c Before @command{comm} can be used, the input files must be sorted using the
@c collating sequence specified by the @env{LC_COLLATE} locale.
@c If an input file ends in a non-newline
@c character, a newline is silently appended.  The @command{sort} command with
@c no options always outputs a file that is suitable input to @command{comm}.
@c 
@command{comm}¤ò»ÈÍÑ¤¹¤ëÁ°¤Ë¡¤@env{LC_COLLATE}¥í¥«¡¼¥ë¤Ç»ØÄê¤µ¤ì¤¿½çÈÖ
¤ËÆþÎÏ¥Õ¥¡¥¤¥ë¤ò¥½¡¼¥È¤¹¤ëÉ¬Í×¤¬¤¢¤ê¤Þ¤¹¡¥ÆþÎÏ¥Õ¥¡¥¤¥ë¤¬²þ¹ÔÊ¸»ú¤Ç½ª¤é
¤Ê¤¤¾ì¹ç¡¤²þ¹Ô¤Ï°ÅÌÛ¤ËÉÕ²Ã¤µ¤ì¤Þ¤¹¡¥¥ª¥×¥·¥ç¥ó¤òÍÑ¤¤¤Ê¤¤@command{sort}
¥³¥Þ¥ó¥É¤Ï¡¤@command{comm}¤ÎÆþÎÏ¤ËÅ¬¤·¤¿¥Õ¥¡¥¤¥ë¤ò¾ï¤Ë½ÐÎÏ¤·¤Þ¤¹¡¥

@cindex differing lines
@cindex common lines
@c With no options, @command{comm} produces three-column output.  Column one
@c contains lines unique to @var{file1}, column two contains lines unique
@c to @var{file2}, and column three contains lines common to both files.
@c Columns are separated by a single TAB character.
@c 
¥ª¥×¥·¥ç¥ó¤¬Ìµ¤¤¾ì¹ç¡¤@command{comm}¤Ï»°Îó¤Î½ÐÎÏ¤òÀ¸À®¤·¤Þ¤¹¡¥°ìÎóÌÜ¤Ï
@var{file1}¤Î¥æ¥Ë¡¼¥¯¤Ê¹Ô¤ò´Þ¤ß¡¤ÆóÎóÌÜ¤Ï@var{file2}¤Î¥æ¥Ë¡¼¥¯¤Ê¹Ô¤ò´Þ
¤ß¡¤»°ÎóÌÜ¤ÏÎ¾Êý¤Î¥Õ¥¡¥¤¥ë¤Ë¶¦ÄÌ¤ÊÎó¤ò´Þ¤ß¤Þ¤¹¡¥Îó¤ÏÃ±°ì¤ÎTABÊ¸»ú¤ÇÊ¬
Î¥¤µ¤ì¤Þ¤¹¡¥
@c FIXME: when there's an option to supply an alternative separator
@c string, append `by default' to the above sentence.

@opindex -1
@opindex -2
@opindex -3
@c The options @option{-1}, @option{-2}, and @option{-3} suppress printing of
@c the corresponding columns.  Also see @ref{Common options}.
@c 
¥ª¥×¥·¥ç¥ó¤Î@option{-1}¡¤@option{-2}¡¤¤½¤·¤Æ@option{-3}¤Ï¡¤ÂÐ±þ¤¹¤ëÎó
¤Î½ÐÎÏ¤òÍÞÀ©¤·¤Þ¤¹¡¥@ref{Common options}¤â»²¾È¤·¤Æ¤¯¤À¤µ¤¤¡¥

@c Unlike some other comparison utilities, @command{comm} has an exit
@c status that does not depend on the result of the comparison.
@c Upon normal completion @command{comm} produces an exit code of zero.
@c If there is an error it exits with nonzero status.
@c 
Â¾¤ÎÈæ³Ó¥æ¡¼¥Æ¥£¥ê¥Æ¥£¤È¤Ï°Û¤Ê¤ê¡¤@command{comm}¤ÏÈæ³Ó¤Î·ë²Ì¤Ë°ÍÂ¸¤·¤Ê
¤¤½ªÎ»¥¹¥Æ¡¼¥¿¥¹¤¬¤¢¤ê¤Þ¤¹¡¥¾åµ­¤ÎÄÌ¾ï¤ÎÈæ³Ó¤Ç¤Ï¡¤@command{comm}¤Ï¥¼¥í
¤Î¥³¡¼¥É¤Ç½ªÎ»¤·¤Þ¤¹¡¥¥¨¥é¡¼¤¬¤¢¤Ã¤¿¾ì¹ç¡¤¥¼¥í¤Ç¤Ê¤¤¥¹¥Æ¡¼¥¿¥¹¤Ç½ªÎ»¤·
¤Þ¤¹¡¥

@node tsort invocation
@c @section @command{tsort}: Topological sort
@section @command{tsort}: °ÌÁê´ö²¿³ØÅª¤Ê¥½¡¼¥È

@pindex tsort
@cindex topological sort

@c @command{tsort} performs a topological sort on the given @var{file}, or
@c standard input if no input file is given or for a @var{file} of
@c @samp{-}.  For more details and some history, see @ref{tsort background}.
@c Synopsis:
@c 
@command{tsort}¤Ï¡¤°ÌÁê´ö²¿³ØÅª¤Ê¥½¡¼¥È¤ò¡¤Í¿¤¨¤é¤ì¤¿@var{file}¡¤¤Þ¤¿
¤ÏÆþÎÏ¥Õ¥¡¥¤¥ë¤¬Í¿¤¨¤é¤ì¤Ê¤¤¾ì¹ç¤ä@samp{-}¤Î¥Õ¥¡¥¤¥ë¤ËÂÐ¤·¤Æ¤ÏÉ¸½àÆþÎÏ
¤Ç¼Â¹Ô¤·¤Þ¤¹¡¥¾ÜºÙ¤È¤Á¤ç¤Ã¤È¤·¤¿Îò»Ë¤Ï@ref{tsort background}¤ò»²¾È¤·¤Æ
¤¯¤À¤µ¤¤¡¥³µÍ×¤Ç¤¹¡¥

@example
tsort [@var{option}] [@var{file}]
@end example

@c @command{tsort} reads its input as pairs of strings, separated by blanks,
@c indicating a partial ordering.  The output is a total ordering that
@c corresponds to the given partial ordering.
@c 
@command{tsort}¤Ï¡¤¤½¤ÎÆþÎÏ¤òÊ¸»úÎó¤ÎÁÈ¤Ç¡¤¶õÇò¤ÇÊ¬Î¥¤µ¤ì¤Æ¤¤¤Æ¡¤ÉÔ´°
Á´¤Ê½ç½ø¤Ç¼¨¤µ¤ì¤Æ¤¤¤ë¤â¤Î¤È¤·¤ÆÆÉ¤ß¹þ¤ß¤Þ¤¹¡¥½ÐÎÏ¤Ï¡¤Í¿¤¨¤é¤ì¤¿ÉÔ´°Á´
¤Ê½ç½ø¤ËÂÐ±þ¤¹¤ë´°Á´¤Ê½ç½ø¤Ë¤Ê¤ê¤Þ¤¹¡¥

@c For example
@c 
Îã¤¨¤Ð°Ê²¼¤Î¤è¤¦¤Ë¤·¤Þ¤¹¡¥

@example
tsort <<EOF
a b c
d
e f
b c d e
EOF
@end example

@noindent
@c will produce the output
@c 
¤³¤ì¤Ï°Ê²¼¤Î½ÐÎÏ¤òÀ¸À®¤·¤Þ¤¹¡¥

@example
a
b
c
d
e
f
@end example

@c Consider a more realistic example.
@c You have a large set of functions all in one file, and they may all be
@c declared static except one.  Currently that one (say @code{main}) is the
@c first function defined in the file, and the ones it calls directly follow
@c it, followed by those they call, etc.  Let's say that you are determined
@c to take advantage of prototypes, so you have to choose between declaring
@c all of those functions (which means duplicating a lot of information from
@c the definitions) and rearranging the functions so that as many as possible
@c are defined before they are used.  One way to automate the latter process
@c is to get a list for each function of the functions it calls directly.
@c Many programs can generate such lists.  They describe a call graph.
@c Consider the following list, in which a given line indicates that the
@c function on the left calls the one on the right directly.
@c 
¤è¤ê¸½¼ÂÅª¤ÊÎã¤ò¹Í¤¨¤Æ¤ß¤Þ¤·¤ç¤¦¡¥°ì¤Ä¤Î¥Õ¥¡¥¤¥ë¤ËÂç¤­¤Ê¤¹¤Ù¤Æ¤Î´Ø¿ô¤Î
¥»¥Ã¥È¤¬¤¢¤ê¡¤°ì¤Ä°Ê³°¤Î¤¹¤Ù¤Æ¤¬¥¹¥¿¥Æ¥£¥Ã¥¯¤ËÀë¸À¤µ¤ì¤Æ¤¤¤ë¤È²¾Äê¤·¤Þ
¤¹¡¥¸½ºß¡¤¤½¤ì(¤¤¤ï¤æ¤ë@code{main})¤Ï¥Õ¥¡¥¤¥ë¤ÎºÇ½é¤ËÄêµÁ¤µ¤ì¤Æ¤¤¤Æ¡¤
¤½¤ì¤«¤éÄ¾ÀÜ¸Æ¤Ó½Ð¤µ¤ì¤ë¤â¤Î¤¬Â³¤­¡¤¤½¤ì¤é¤¬¸Æ¤Ó½Ð¤¹¤â¤Î¤¬¤½¤ì¤ËÂ³¤¤¤Æ
¤¤¤ë¡¤¤È¤¤¤Ã¤¿¤è¤¦¤Ë¤Ê¤Ã¤Æ¤¤¤Þ¤¹¡¥¤µ¤Æ¡¤¥×¥í¥È¥¿¥¤¥×¤ÎÍøÅÀ¤¬·èÄê¤¹¤ë¤È¡¤
¤½¤ì¤é¤Î´Ø¿ô¤ÎÀë¸À(ÄêµÁ¤«¤é¤Î¤¿¤¯¤µ¤ó¤Î¾ðÊó¤¬½ÅÊ£¤·¤Æ¤¤¤ë¤³¤È¤ò°ÕÌ£¤·
¤Þ¤¹)¤Î´Ø·¸¤òÁªÂò¤·¡¤¤½¤ì¤é¤¬»ÈÍÑ¤µ¤ì¤ëÁ°¤Ë¤Ç¤­¤ë¤À¤±Â¿¤¯¤Î´Ø¿ô¤Î½çÈÖ
¤òÀ°Íý¤¹¤ë¤³¤È¤Ë¤Ê¤ë¤Ç¤·¤ç¤¦¡¤¤½¤ì°Ê¹ß¤Î½èÍý¤ò¼«Æ°²½¤¹¤ë°ì¤Ä¤ÎÊýË¡¤È¤·
¤Æ¡¤Ä¾ÀÜ¸Æ¤Ð¤ì¤ë¤½¤ì¤¾¤ì¤Î´Ø¿ô¤Î¥ê¥¹¥È¤òÆþ¼ê¤¹¤ë¤³¤È¤¬¤¢¤²¤é¤ì¤Þ¤¹¡¥¤½
¤Î¤è¤¦¤Ê¥ê¥¹¥È¤òÀ¸À®¤¹¤ë¤³¤È¤¬²ÄÇ½¤Ê¥×¥í¥°¥é¥à¤Ï¤¿¤¯¤µ¤ó¤¢¤ê¤Þ¤¹¡¥¤½¤ì
¤é¤Ï¥°¥é¥Õ¤È¸Æ¤Ð¤ì¤ëÊª¤òµ­½Ò¤·¤Þ¤¹¡¥¤½¤ì¤¾¤ì¤Î¹Ô¤Ç¡¤º¸¤Î´Ø¿ô¤¬±¦¤Î´Ø¿ô
¤òÄ¾ÀÜ¸Æ¤Ó½Ð¤¹¤³¤È¤ò¼¨¤·¤Æ¤¤¤ë°Ê²¼¤Î¥ê¥¹¥È¤ò¹Í¤¨¤Æ¤ß¤Þ¤·¤ç¤¦¡¥

@example
main parse_options
main tail_file
main tail_forever
tail_file pretty_name
tail_file write_header
tail_file tail
tail_forever recheck
tail_forever pretty_name
tail_forever write_header
tail_forever dump_remainder
tail tail_lines
tail tail_bytes
tail_lines start_lines
tail_lines dump_remainder
tail_lines file_lines
tail_lines pipe_lines
tail_bytes xlseek
tail_bytes start_bytes
tail_bytes dump_remainder
tail_bytes pipe_bytes
file_lines dump_remainder
recheck pretty_name
@end example

@c then you can use @command{tsort} to produce an ordering of those
@c functions that satisfies your requirement.
@c 
¤½¤Î¤È¤­¡¤Í×µá¤òËþÂ­¤¹¤ë¤è¤¦¤Ë¤½¤ì¤é¤Î´Ø¿ô¤Î½çÈÖ¤òÀ¸À®¤¹¤ë¤¿¤á¡¤
@command{tsort}¤ò»ÈÍÑ¤¹¤ë¤³¤È¤¬²ÄÇ½¤Ç¤¹¡¥

@example
example$ tsort call-graph | tac
dump_remainder
start_lines
file_lines
pipe_lines
xlseek
start_bytes
pipe_bytes
tail_lines
tail_bytes
pretty_name
write_header
tail
recheck
parse_options
tail_file
tail_forever
main
@end example

@c @command{tsort} detects any cycles in the input and writes the first cycle
@c encountered to standard error.
@c 
@command{tsort}¤ÏÆþÎÏÆâ¤Î½Û´Ä¤ò¸¡½Ð¤·¡¤½Ð¸½¤·¤¿ºÇ½é¤Î½Û´ÄÉôÊ¬¤òÉ¸½à¥¨
¥é¡¼¤Ë½ñ¤­½Ð¤·¤Þ¤¹¡¥

@c Note that for a given partial ordering, generally there is no unique
@c total ordering.  In the context of the call graph above, the function
@c @code{parse_options} may be placed anywhere in the list as long as it
@c precedes @code{main}.
@c 
Í¿¤¨¤é¤ì¤¿ÉÔ´°Á´¤Ê½ç½ø¤¬¡¤°ìÈÌ¤ËÍ£°ì¤Î´°Á´¤Ê½ç½ø¤Ç¤Ê¤¤¤³¤È¤ËÃí°Õ¤·¤Æ¤¯
¤À¤µ¤¤¡¥¾åµ­¤ÎÎã¤Î¾õ¶·¤Ç¤Ï¡¤´Ø¿ô@code{parse_options}¤Ï¡¤@code{main}¤Î
Á°¤Ç¤¢¤ì¤Ð¥ê¥¹¥È¤Î¤É¤³¤Ë¤¢¤Ã¤Æ¤â¤«¤Þ¤¤¤Þ¤»¤ó¡¥

@c The only options are @option{--help} and @option{--version}.  @xref{Common
@c options}.
@c 
¥ª¥×¥·¥ç¥ó¤Ï¡¤@option{--help}¤È@option{--version}¤Î¤ß¤Ç¤¹¡¥
@xref{Common options}.

@node tsort background
@c @section @command{tsort}: Background
@section @command{tsort}: ÇØ·Ê

@c @command{tsort} exists because very early versions of the Unix linker processed
@c an archive file exactly once, and in order.  As @command{ld} read each object
@c in the archive, it decided whether it was needed in the program based on
@c whether it defined any symbols which were undefined at that point in
@c the link.
@c 
@command{tsort}¤Ï¡¤½é´ü¤ÎUnix¤Î¥Ð¡¼¥¸¥ç¥ó¤Î¥ê¥ó¥«¤Ç¡¤¥¢¡¼¥«¥¤¥Ö¥Õ¥¡¥¤
¥ë¤òÀµ³Î¤Ë°ìÅÙ¤À¤±Àµ¤·¤¤½ç½ø¤Ç½èÍý¤¹¤ë¤¿¤á¤ËÂ¸ºß¤·¤Æ¤¤¤Þ¤¹¡¥
@command{ld}¤Ï¤½¤ì¤¾¤ì¤Î¥ª¥Ö¥¸¥§¥¯¥È¤ò¥¢¡¼¥«¥¤¥Ö¤«¤éÆÉ¤ß½Ð¤¹¤Î¤Ç¡¤¥×¥í
¥°¥é¥à¤Ç´ðËÜ¤È¤Ê¤ë¤â¤Î¤¬É¬Í×¤«¤É¤¦¤«¡¤¥ê¥ó¥¯»þ¤ËÌ¤ÄêµÁ¤Î¥·¥ó¥Ü¥ë¤¬ÄêµÁ
¤µ¤ì¤Æ¤¤¤ë¤«¤É¤¦¤«¤ÏÌÀ³Î¤Ç¤¹¡¥

@c This meant that dependencies within the archive had to be handled
@c specially.  For example, @code{scanf} probably calls @code{read}.  That means
@c that in a single pass through an archive, it was important for @code{scanf.o}
@c to appear before read.o, because otherwise a program which calls
@c @code{scanf} but not @code{read} might end up with an unexpected unresolved
@c reference to @code{read}.
@c 
¤³¤ì¤Ï¡¤¥¢¡¼¥«¥¤¥Ö¤Ç¤Î°ÍÂ¸À­¤òÆÃÊÌ½èÍý¤¹¤ëÉ¬Í×¤¬¤¢¤Ã¤¿¤³¤È¤ò°ÕÌ£¤·¤Þ¤¹¡¥
Îã¤¨¤Ð¡¤@code{scanf}¤Ï¤ª¤½¤é¤¯@code{read}¤ò¸Æ¤Ó½Ð¤·¤Þ¤¹¡¥¤½¤ì¤Ï¡¤°ìÅÙ
¥¢¡¼¥«¥¤¥ÖÁ´ÂÎ¤ò¸«ÅÏ¤¹¤È¤­¡¤@code{scanf.o}¤¬@code{read.o}¤ÎÁ°¤Ë¸½¤ì¤ë
¤³¤È¤¬½ÅÍ×¤À¤È¤¤¤¦¤³¤È¤Ç¡¤¤½¤¦¤Ç¤Ê¤±¤ì¤Ð¡¤@code{scanf}¤ò¸Æ¤Ó½Ð¤·¤Æ¤¤¤ë
¤¬¡¤@code{read}¤ò¸Æ¤Ó½Ð¤·¤Æ¤¤¤Ê¤¤¥×¥í¥°¥é¥à¤Ç¡¤´üÂÔ¤·¤Æ¤¤¤Ê¤¤Ì¤²ò·è¤Î
@code{read}¤Ø¤Î»²¾È¤Ë·ë¶É¤Ê¤Ã¤Æ¤·¤Þ¤¦¤«¤é¤Ç¤¹¡¥

@c The way to address this problem was to first generate a set of
@c dependencies of one object file on another.  This was done by a shell
@c script called @command{lorder}.  The GNU tools don't provide a version of
@c lorder, as far as I know, but you can still find it in BSD
@c distributions.
@c 
¤³¤ÎÌäÂê¤ò²ò·è¤¹¤ëÊýË¡¤Ï¡¤ºÇ½é¤Ë¥ª¥Ö¥¸¥§¥¯¥È¥Õ¥¡¥¤¥ëÆâ¤Î°ÍÂ¸À­¤òÀ¸À®¤¹
¤ë¤³¤È¤Ç¤¹¡¥¤³¤ì¤Ï¡¤@command{lorder}¤È¸Æ¤Ð¤ì¤ë¥·¥§¥ë¥¹¥¯¥ê¥×¥È¤Ç¹Ô¤Ê¤ï
¤ì¤Æ¤¤¤Þ¤·¤¿¡¥GNU¥Ä¡¼¥ë¤Ï¡¤»ä¤ÎÃÎ¤ë¸Â¤êlorder¤òÍÑ¤¤¤ë¥Ð¡¼¥¸¥ç¥ó¤òÄó¶¡
¤·¤Æ¤¤¤Þ¤»¤ó¤¬¡¤BSD¤ÎÇÛÉÛÊª¤Ç¤Ï¤Þ¤À¸«¤Ä¤«¤ë¤Ï¤º¤Ç¤¹¡¥

@c Then you ran @command{tsort} over the @command{lorder} output, and you used the
@c resulting sort to define the order in which you added objects to the archive.
@c 
@command{lorder}¤Î½ÐÎÏ¤Ç@command{tsort}¤ò¼Â¹Ô¤¹¤ë¤È¡¤¥¢¡¼¥«¥¤¥Ö¤ËÄÉ²Ã
¤·¤¿¥ª¥Ö¥¸¥§¥¯¥È¤ÎÄêµÁ½ç¤òÊÂ¤ÙÂØ¤¨¤¿·ë²Ì¤ò»ÈÍÑ¤¹¤ë¤³¤È¤¬²ÄÇ½¤Ë¤Ê¤ê¤Þ¤¹¡¥

@c This whole procedure has been obsolete since about 1980, because
@c Unix archives now contain a symbol table (traditionally built by
@c @command{ranlib}, now generally built by @command{ar} itself), and the Unix
@c linker uses the symbol table to effectively make multiple passes over
@c an archive file.
@c 
1980Ç¯°Ê¹ß¡¤Unix¤Î¥¢¡¼¥«¥¤¥Ö¤Ë¤Ï¥·¥ó¥Ü¥ëÉ½¤¬´Þ¤Þ¤ì¤Æ¤¤¤Æ(ÅÁÅýÅª¤Ë
@command{ranlib}¤Ç¹½ÃÛ¤µ¤ì¡¤º£¤Ç¤Ï@command{ar}¼«¿È¤Ç¹½ÃÛ¤µ¤ì¤Þ¤¹)¡¤
Unix¤Î¥ê¥ó¥«¤Ï¡¤¥¢¡¼¥«¥¤¥Ö¥Õ¥¡¥¤¥ëÁ´ÂÎ¤ò²¿²ó¤â¸úÎ¨Åª¤Ë½èÍý¤¹¤ë¤¿¤á¡¤¤½
¤Î¥·¥ó¥Ü¥ëÉ½¤ò»ÈÍÑ¤¹¤ë¤Î¤Ç¡¤¤³¤Î°ìÏ¢¤Î½èÍý¤Ï»þÂåÃÙ¤ì¤Ç¤¹¡¥

@c Anyhow, that's where tsort came from.  To solve an old problem with
@c the way the linker handled archive files, which has since been solved
@c in different ways.
@c 
¤¤¤º¤ì¤Ë¤»¤è¡¤¤³¤¦¤¤¤¦¤³¤È¤Ç@command{tsort}¤ÏÀ¸¤Þ¤ì¤Þ¤·¤¿¡¥¸Å¤¤ÌäÂê¤ò
²ò·è¤¹¤ë¤¿¤á¤Ë¥ê¥ó¥«¤¬¥¢¡¼¥«¥¤¥Ö¥Õ¥¡¥¤¥ë¤ò½èÍý¤¹¤ëÊýË¡¤Ç¡¤¤½¤ì¤ÏÊÌ¤ÎÊý
Ë¡¤Ç²ò·è¤µ¤ì¤Æ¤¤¤Þ¤¹¡¥

@exitstatus


@node ptx invocation
@c @section @command{ptx}: Produce permuted indexes
@section @command{ptx}: ÊÂ¤ÙÂØ¤¨¤¿º÷°ú¤ÎÀ¸À®

@pindex ptx

@c @command{ptx} reads a text file and essentially produces a permuted index, with
@c each keyword in its context.  The calling sketch is either one of:
@c 
@command{ptx}¤Ï¡¤¥Æ¥­¥¹¥È¥Õ¥¡¥¤¥ë¤òÆÉ¤ß¹þ¤ß¡¤¤½¤ÎÆâÍÆ¤Î¤½¤ì¤¾¤ì¤Î¥­¡¼
¥ï¡¼¥É¤òÍÑ¤¤¤Æ¡¤ÊÂ¤ÙÂØ¤¨¤é¤ì¤¿º÷°ú¤òËÜÍè¤ÏÀ¸À®¤·¤Þ¤¹¡¥¸Æ¤Ó½Ð¤·¤Î·ÁÂÖ¤Ï
°Ê²¼¤Î°ì¤Ä¤Ç¤¹¡¥

@example
ptx [@var{option} @dots{}] [@var{file} @dots{}]
ptx -G [@var{option} @dots{}] [@var{input} [@var{output}]]
@end example

@c The @option{-G} (or its equivalent: @option{--traditional}) option disables
@c all @sc{gnu} extensions and reverts to traditional mode, thus introducing some
@c limitations and changing several of the program's default option values.
@c When @option{-G} is not specified, @sc{gnu} extensions are always enabled.
@c @sc{gnu} extensions to @command{ptx} are documented wherever appropriate in this
@c document.  For the full list, see @xref{Compatibility in ptx}.
@c 
@option{-G}(¤Þ¤¿¤ÏÆ±Åù¤Î: @option{--traditional})¥ª¥×¥·¥ç¥ó¤Ï¡¤Á´¤Æ¤Î
@sc{gnu}³ÈÄ¥¤òÍøÍÑÉÔ²Ä¤Ë¤·¡¤ÅÁÅýÅª¤Ê¥â¡¼¥É¤ËÀÚÂØ¤¨¤ë¤Î¤Ç¡¤¤¤¤¯¤Ä¤«À©¸Â
¤¬¤¢¤ê¡¤¤½¤·¤Æ¥×¥í¥°¥é¥à¤Î¥ª¥×¥·¥ç¥ó¥Ç¥Õ¥©¥ë¥ÈÃÍ¤òÊÑ¹¹¤·¤Þ¤¹¡¥
@option{-G}¤¬»ØÄê¤µ¤ì¤Æ¤¤¤Ê¤¤¾ì¹ç¡¤@sc{gnu}³ÈÄ¥¤Ï¾ï¤ËÍøÍÑ²ÄÇ½¤Ç¤¹¡¥
@command{ptx}¤Î@sc{gnu}³ÈÄ¥¤Ï¡¤¤³¤Î¥É¥­¥å¥á¥ó¥È¤ËÅ¬ÀÚ¤ËÊ¸¾Ï²½¤µ¤ì¤Æ¤¤
¤Þ¤¹¡¥´°Á´¤Ê¥ê¥¹¥È¤Ï¡¤@xref{Compatibility in ptx}.

@c Individual options are explained in the following sections.
@c 
¸ÄÊÌ¤Î¥ª¥×¥·¥ç¥ó¤Ï¡¤°Ê²¼¤Î¥»¥¯¥·¥ç¥ó¤ÇÀâÌÀ¤·¤Þ¤¹¡¥

@c When @sc{gnu} extensions are enabled, there may be zero, one or several
@c @var{file}s after the options.  If there is no @var{file}, the program
@c reads the standard input.  If there is one or several @var{file}s, they
@c give the name of input files which are all read in turn, as if all the
@c input files were concatenated.  However, there is a full contextual
@c break between each file and, when automatic referencing is requested,
@c file names and line numbers refer to individual text input files.  In
@c all cases, the program outputs the permuted index to the standard
@c output.
@c 
@sc{gnu}³ÈÄ¥¤¬ÍøÍÑ²ÄÇ½¤Ê¤È¤­¡¤¥¼¥í¡¤°ì¤Ä¡¤¤Þ¤¿¤ÏÊ£¿ô¤Î@var{file}¤ò¥ª¥×
¥·¥ç¥ó¤Î¸å¤ËÂ³¤±¤Æ¤«¤Þ¤¤¤Þ¤»¤ó¡¥@var{file}¤¬Ìµ¤¤¾ì¹ç¡¤¥×¥í¥°¥é¥à¤ÏÉ¸½à
ÆþÎÏ¤«¤éÆÉ¤ß¹þ¤ß¤Þ¤¹¡¥°ì¤Ä¤Þ¤¿¤ÏÊ£¿ô@var{file}¤¢¤ë¾ì¹ç¡¤Á´¤Æ¤ÎÆþÎÏ¥Õ¥¡
¥¤¥ë¤¬Ï¢·ë¤µ¤ì¤Æ¤¤¤ë¤«¤Î¤è¤¦¤Ë¡¤½çÈÖ¤ËÁ´¤ÆÆÉ¤ß¹þ¤Þ¤ì¤ëÆþÎÏ¥Õ¥¡¥¤¥ëÌ¾¤Ë
¤Ê¤ê¤Þ¤¹¡¥¤·¤«¤·¡¤¤½¤ì¤¾¤ì¤Î¥Õ¥¡¥¤¥ë¤Î´Ö¤Ë´°Á´¤ËÊ¸Ì®¤Î½ª¤ê¤¬Í­¤ê¡¤¼«Æ°
Åª¤Ê»²¾È¤¬Í×µá¤µ¤ì¤ë¤È¤­¡¤¥Õ¥¡¥¤¥ëÌ¾¤È¹ÔÈÖ¹æ¤Ï¡¤ÆþÎÏ¥Õ¥¡¥¤¥ë¤Î¸ÄÊÌ¤Î¥Æ
¥­¥¹¥È¤ò»²¾È¤·¤Þ¤¹¡¥Á´¤Æ¤Î¾õ¶·¤Ç¡¤¥×¥í¥°¥é¥à¤ÏÊÂ¤ÙÂØ¤¨¤é¤ì¤¿º÷°ú¤òÉ¸½à
½ÐÎÏ¤Ë½ñ¤­½Ð¤·¤Þ¤¹¡¥

@c When @sc{gnu} extensions are @emph{not} enabled, that is, when the program
@c operates in traditional mode, there may be zero, one or two parameters
@c besides the options.  If there are no parameters, the program reads the
@c standard input and outputs the permuted index to the standard output.
@c If there is only one parameter, it names the text @var{input} to be read
@c instead of the standard input.  If two parameters are given, they give
@c respectively the name of the @var{input} file to read and the name of
@c the @var{output} file to produce.  @emph{Be very careful} to note that,
@c in this case, the contents of file given by the second parameter is
@c destroyed.  This behavior is dictated by System V @command{ptx}
@c compatibility; @sc{gnu} Standards normally discourage output parameters not
@c introduced by an option.
@c 
@sc{gnu}³ÈÄ¥¤¬ÍøÍÑ²ÄÇ½¤Ç@emph{¤Ê¤¤}¤È¤­¡¤¤¹¤Ê¤ï¤Á¡¤ÅÁÅýÅª¤Ê¥â¡¼¥É¤Ç¥×
¥í¥°¥é¥à¤¬Æ°ºî¤·¤Æ¤¤¤ë¤È¤­¡¤¥¼¥í¡¤°ì¤Ä¡¤¤Þ¤¿¤ÏÆó¤Ä¤Î¥Ñ¥é¥á¡¼¥¿¤ò¥ª¥×¥·¥ç
¥ó¤Î¸å¤ËÂ³¤±¤Æ¤«¤Þ¤â¤¤¤Þ¤»¤ó¡¥¥Ñ¥é¥á¡¼¥¿¤¬Ìµ¤¤¾ì¹ç¡¤¥×¥í¥°¥é¥à¤ÏÉ¸½àÆþ
ÎÏ¤òÆÉ¤ß¹þ¤ß¡¤É¸½à½ÐÎÏ¤ËÊÂ¤ÙÂØ¤¨¤¿º÷°ú¤òÀ¸À®¤·¤Þ¤¹¡¥°ì¤Ä¤Î¥Ñ¥é¥á¡¼¥¿¤Î
¤ß¤Î¾ì¹ç¡¤¤½¤ì¤ÏÉ¸½àÆþÎÏ¤ÎÂå¤ï¤ê¤ËÆÉ¤ß¹þ¤Þ¤ì¤ë¥Æ¥­¥¹¥È@var{input}¤ò»Ø
Ì¾¤·¤Þ¤¹¡¥Æó¤Ä¤Î¥Ñ¥é¥á¡¼¥¿¤¬Í¿¤¨¤é¤ì¤¿¾ì¹ç¡¤¤½¤ì¤é¤Ï¤½¤ì¤¾¤ì¡¤ÆÉ¤ß¹þ¤Þ
¤ì¤ë@var{input}¥Õ¥¡¥¤¥ëÌ¾¤È¡¤À¸À®¤¹¤ë@var{output}¥Õ¥¡¥¤¥ëÌ¾¤òÍ¿¤¨¤Þ¤¹¡¥
¤³¤Î¾ì¹ç¡¤ÆóÈÖÌÜ¤Î¥Ñ¥é¥á¡¼¥¿¤È¤·¤ÆÍ¿¤¨¤é¤ì¤ë¥Õ¥¡¥¤¥ë¤ÎÆâÍÆ¤¬²õ¤ì¤ë¤³¤È
¤Ë@emph{½½Ê¬Ãí°Õ¤·¤Æ}¤¯¤À¤µ¤¤¡¥¤³¤ÎÆ°ºî¤Ï¡¤System V @command{ptx}¸ß´¹
¤Çµ¬Äê¤µ¤ì¤Æ¤¤¤Þ¤¹¡¥@sc{gnu}¤ÎÉ¸½à¤Ï¡¤¥ª¥×¥·¥ç¥ó¤ÇÆ³Æþ¤µ¤ì¤Ê¤¤½ÐÎÏ¥Ñ¥é
¥á¡¼¥¿¤òËÉ»ß¤·¤Þ¤¹¡¥

@c Note that for @emph{any} file named as the value of an option or as an
@c input text file, a single dash @kbd{-} may be used, in which case
@c standard input is assumed.  However, it would not make sense to use this
@c convention more than once per program invocation.
@c 
@emph{¤¢¤é¤æ¤ë}¥Õ¥¡¥¤¥ë¤Ï¡¤¥ª¥×¥·¥ç¥óÃÍ¤äÆþÎÏ¥Æ¥­¥¹¥È¥Õ¥¡¥¤¥ë¤È¤·¤Æ»Ø
Ì¾¤µ¤ì¡¤Ã±°ì¤Î¥À¥Ã¥·¥å@kbd{-}¤ò»ÈÍÑ¤Ç¤­¡¤¤½¤Î¾ì¹ç¤ÏÉ¸½àÆþÎÏ¤È¹Í¤¨¤é¤ì
¤Þ¤¹¡¥¤·¤«¤·¡¤¥×¥í¥°¥é¥à¤Î¸Æ¤Ó½Ð¤·¤Ë°ì²ó°Ê¾å¡¤¤³¤Î´·½¬¤ò»ÈÍÑ¤¹¤ë°ÕÌ£¤Ï
¤¢¤ê¤Þ¤»¤ó¡¥

@menu
* General options in ptx::      Options which affect general program behavior.
* Charset selection in ptx::    Underlying character set considerations.
* Input processing in ptx::     Input fields, contexts, and keyword selection.
* Output formatting in ptx::    Types of output format, and sizing the fields.
* Compatibility in ptx::
@end menu


@node General options in ptx
@c @subsection General options
@subsection °ìÈÌÅª¤Ê¥ª¥×¥·¥ç¥ó

@table @samp

@item -C
@itemx --copyright
@c Print a short note about the copyright and copying conditions, then
@c exit without further processing.
@c 
Ãøºî¸¢¤È¥³¥Ô¡¼¾ò·ï¤ÎÃ»¤¤¥á¥â¤ò½ÐÎÏ¤·¡¤¤½¤ì°Ê¾å²¿¤â½èÍý¤»¤º½ªÎ»¤·¤Þ¤¹¡¥

@item -G
@itemx --traditional
@c As already explained, this option disables all @sc{gnu} extensions to
@c @command{ptx} and switches to traditional mode.
@c 
´û¤Ë³ÈÄ¥¤µ¤ì¤Æ¤¤¤ë¤Î¤Ç¡¤¤³¤Î¥ª¥×¥·¥ç¥ó¤Ï¡¤@command{ptx}¤ËÂÐ¤¹¤ëÁ´¤Æ¤Î
@sc{gnu}³ÈÄ¥¤òÍøÍÑÉÔ²Ä¤Ë¤·¡¤ÅÁÅýÅª¤Ê¥â¡¼¥É¤ËÀÚÂØ¤¨¤Þ¤¹¡¥

@item --help
@c Print a short help on standard output, then exit without further
@c processing.
@c 
Ã»¤¤¥Ø¥ë¥×¤òÉ¸½à½ÐÎÏ¤Ë½ÐÎÏ¤·¡¤¤½¤ì°Ê¾å²¿¤â½èÍý¤»¤º½ªÎ»¤·¤Þ¤¹¡¥

@item --version
@c Print the program version on standard output, then exit without further
@c processing.
@c 
¥×¥í¥°¥é¥à¤Î¥Ð¡¼¥¸¥ç¥ó¤òÉ¸½à½ÐÎÏ¤Ë½ÐÎÏ¤·¡¤¤½¤ì°Ê¾å²¿¤â½èÍý¤»¤º¤Ë½ªÎ»¤·
¤Þ¤¹¡¥

@end table

@exitstatus


@node Charset selection in ptx
@c @subsection Charset selection
@subsection Ê¸»ú¥»¥Ã¥È¤ÎÁªÂò

@c FIXME:  People don't necessarily know what an IBM-PC was these days.
@c 
@c As it is set up now, the program assumes that the input file is coded
@c using 8-bit ISO 8859-1 code, also known as Latin-1 character set,
@c @emph{unless} it is compiled for MS-DOS, in which case it uses the
@c character set of the IBM-PC.  (@sc{gnu} @command{ptx} is not known to work on
@c smaller MS-DOS machines anymore.)  Compared to 7-bit @acronym{ASCII}, the set
@c of characters which are letters is different; this alters the behavior
@c of regular expression matching.  Thus, the default regular expression
@c for a keyword allows foreign or diacriticized letters.  Keyword sorting,
@c however, is still crude; it obeys the underlying character set ordering
@c quite blindly.
@c 
¸½ºß¥»¥Ã¥È¥¢¥Ã¥×¤µ¤ì¤Æ¤¤¤ë¤Î¤Ç¡¤¥×¥í¥°¥é¥à¤Ï¡¤ÆþÎÏ¥Õ¥¡¥¤¥ë¤¬8¥Ó¥Ã¥È
ISO-8859-1¥³¡¼¥É¤ò»ÈÍÑ¤·¤ÆÉä¹æ²½¤µ¤ì¤Æ¤¤¤ë¤È¹Í¤¨¡¤Latin-1Ê¸»ú¥»¥Ã¥È¤À
¤È¤¤¤¦¤³¤È¤âÊ¬¤«¤ê¤Þ¤¹¤¬¡¤¤½¤ì¤Ï¡¤MS-DOS¤Ç¥³¥ó¥Ñ¥¤¥ë@emph{¤µ¤ì¤Æ¤¤¤Ê¤¤
¾ì¹ç}¤Ç¡¤¤½¤Î¾ì¹ç¤ÏIBM-PC¤ÎÊ¸»ú¥»¥Ã¥È¤ò»ÈÍÑ¤·¤Þ¤¹¡¥(@sc{gnu}
@command{ptx}¤ò¡¤¤è¤ê¾®¤µ¤¤MS-DOS¥Þ¥·¥ó¤ÇÆ°ºî¤µ¤»¤ëÊýË¡¤¬Ê¬¤«¤ê¤Þ¤»¤ó¡¥)
7-bit @acronym{ASCII}¤È¤Ï°Û¤Ê¤ê¡¤Ê¸»ú¤Ç¤¢¤ëÊ¸»ú¥»¥Ã¥È¤ÏÊÌÊª¤Ç¤¹¡¥¤³¤ì
¤ÏÀµµ¬É½¸½¤Î¥Þ¥Ã¥Á¤ÎÆ°ºî¤òÊÑ¹¹¤·¤Þ¤¹¡¥¤½¤Î¤¿¤á¡¤¥­¡¼¥ï¡¼¥É¤ËÂÐ¤¹¤ë¥Ç¥Õ¥©
¥ë¥È¤ÎÀµµ¬É½¸½¤Ç¡¤³°¹ñ¤äÈ¯²»µ­¹æ¤ÎÊ¸»ú¤¬²ÄÇ½¤È¤Ê¤ê¤Þ¤¹¡¥¤·¤«¤·¡¤¥­¡¼¥ï¡¼
¥É¤Î¥½¡¼¥È¤Ï¤½¤Î¤Þ¤Þ¤Ç¤¹¡¥¤½¤ì¤Ï¡¤Á´¤¯ÌÕÌÜÅª¤Ë´ðÁÃÅª¤ÊÊ¸»ú¥»¥Ã¥È¤Î½ç½ø
¤Ë½¾¤¤¤Þ¤¹¡¥

@table @samp

@item -f
@itemx --ignore-case
@c Fold lower case letters to upper case for sorting.
@c 
¥½¡¼¥È¤ËÂÐ¤·¡¤¾®Ê¸»ú¤òÂçÊ¸»ú¤Ë¤Þ¤È¤á¤Þ¤¹¡¥

@end table


@node Input processing in ptx
@c @subsection Word selection and input processing
@subsection Ã±¸ì¤ÎÁªÂò¤ÈÆþÎÏ¤Î½èÍý

@table @samp

@item -b @var{file}
@item --break-file=@var{file}

@c This option provides an alternative (to @option{-W}) method of describing
@c which characters make up words.  It introduces the name of a
@c file which contains a list of characters which can@emph{not} be part of
@c one word; this file is called the @dfn{Break file}.  Any character which
@c is not part of the Break file is a word constituent.  If both options
@c @option{-b} and @option{-W} are specified, then @option{-W} has precedence and
@c @option{-b} is ignored.
@c 
¤³¤Î¥ª¥×¥·¥ç¥ó¤Ï¡¤Ã±¸ì¤òÀ¸À®¤¹¤ëÊ¸»ú¤Îµ­½ÒÊýË¡(@option{-W})¤ÎÂåÂØÊª¤ò
Äó¶¡¤·¤Þ¤¹¡¥¤½¤ì¤Ï¡¤Ã±¸ì¤ÎÉôÊ¬¤Ë¤Ê¤é¤Ê¤¤Ê¸»ú¤Î¥ê¥¹¥È¤ò´Þ¤à¥Õ¥¡¥¤¥ëÌ¾¤ò
Æ³Æþ¤·¡¤¤³¤Î¥Õ¥¡¥¤¥ë¤Ï@dfn{¥Ö¥ì¡¼¥¯¥Õ¥¡¥¤¥ë(Break file)}¤È¸Æ¤Ð¤ì¤Þ¤¹¡¥
¥Ö¥ì¡¼¥¯¥Õ¥¡¥¤¥ë¤Î°ìÉô¤Ç¤Ê¤¤¤¢¤é¤æ¤ëÊ¸»ú¤ÏÃ±¸ì¤ÎÍ×ÁÇ¤Ç¤¹¡¥@option{-b}
¤È@option{-W}¤òÎ¾Êý»ØÄê¤·¤¿¾ì¹ç¡¤@option{-W}¤¬Í¥Àè¤µ¤ì@option{-b}¤ÏÌµ
»ë¤µ¤ì¤Þ¤¹¡¥

@c When @sc{gnu} extensions are enabled, the only way to avoid newline as a
@c break character is to write all the break characters in the file with no
@c newline at all, not even at the end of the file.  When @sc{gnu} extensions
@c are disabled, spaces, tabs and newlines are always considered as break
@c characters even if not included in the Break file.
@c 
@sc{gnu}³ÈÄ¥¤¬ÍøÍÑ²ÄÇ½¤Ê¾ì¹ç¡¤²þ¹Ô¤ò¥Ö¥ì¡¼¥¯Ê¸»ú¤È¤¹¤ë¤³¤È¤òÈò¤±¤ëÍ£°ì
¤ÎÊýË¡¤Ç¡¤¥Õ¥¡¥¤¥ë¤Î½ª¤ê¤Ë¤µ¤¨²þ¹Ô¤¬Á´¤¯Ìµ¤¤¥Õ¥¡¥¤¥ë¤Ë¡¤Á´¤Æ¤Î¥Ö¥ì¡¼¥¯
Ê¸»ú¤ò½ñ¤¯¤³¤È¤Ç¤Ç¤­¤Þ¤¹¡¥@sc{gnu}³ÈÄ¥¤¬ÍøÍÑÉÔ²ÄÇ½¤Ê¾ì¹ç¡¤¥¹¥Ú¡¼¥¹¡¤¥¿
¥Ö¡¤¤½¤·¤Æ²þ¹Ô¤Ï¡¤¥Ö¥ì¡¼¥¯¥Õ¥¡¥¤¥ë¤Ë´Þ¤Þ¤ì¤Æ¤¤¤Ê¤¤¾ì¹ç¤Ç¤â¡¤¾ï¤Ë¥Ö¥ì¡¼
¥¯Ê¸»ú¤À¤È¹ÍÎ¸¤µ¤ì¤Þ¤¹¡¥

@item -i @var{file}
@itemx --ignore-file=@var{file}

@c The file associated with this option contains a list of words which will
@c never be taken as keywords in concordance output.  It is called the
@c @dfn{Ignore file}.  The file contains exactly one word in each line; the
@c end of line separation of words is not subject to the value of the
@c @option{-S} option.
@c 
¤³¤Î¥ª¥×¥·¥ç¥ó¤Ç´ØÏ¢ÉÕ¤±¤é¤ì¤¿¥Õ¥¡¥¤¥ë¤Ï¡¤ÍÑ¸ìº÷°ú¤Î½ÐÎÏ¤Ç¥­¡¼¥ï¡¼¥É¤È
¤µ¤ì¤Ê¤¤Ã±¸ì¤Î¥ê¥¹¥È¤ò´Þ¤ß¤Þ¤¹¡¥¤½¤ì¤Ï@dfn{Ìµ»ë¥Õ¥¡¥¤¥ë(Ignore file)} 
¤È¸Æ¤Ð¤ì¤Þ¤¹¡¥¥Õ¥¡¥¤¥ë¤Ï¡¤Àµ³Î¤Ë¤½¤ì¤¾¤ì¤Î¹Ô¤Ë°ìÃ±¸ì¤ò´Þ¤ß¤Þ¤¹¡¥Ã±¸ì¤ò
Ê¬¤±¤ë¹Ô¤Î½ª¤ê¤Ï¡¤@option{-S}¥ª¥×¥·¥ç¥ó¤ÎÃÍ¤òÅ¬ÍÑ¤µ¤ì¤Þ¤»¤ó¡¥

@c There is a default Ignore file used by @command{ptx} when this option is
@c not specified, usually found in @file{/usr/local/lib/eign} if this has
@c not been changed at installation time.  If you want to deactivate the
@c default Ignore file, specify @code{/dev/null} instead.
@c 
¤³¤Î¥ª¥×¥·¥ç¥ó¤¬»ØÄê¤µ¤ì¤Ê¤¤¾ì¹ç¡¤¥Ç¥Õ¥©¥ë¥È¤ÎÌµ»ë¥Õ¥¡¥¤¥ë¤¬
@command{ptx}¤Ç»ÈÍÑ¤µ¤ì¡¤¥¤¥ó¥¹¥È¡¼¥ë»þ¤ËÊÑ¹¹¤µ¤ì¤Æ¤¤¤Ê¤¤¾ì¹ç¡¤ÄÌ¾ï¤Ï
@file{/usr/local/lib/eign}¤Ç¸«¤Ä¤«¤ê¤Þ¤¹¡¥¥Ç¥Õ¥©¥ë¥È¤ÎÌµ»ë¥Õ¥¡¥¤¥ë¤Î±Æ
¶Á¤òÌµ¤¯¤·¤¿¤¤¾ì¹ç¡¤Âå¤ï¤ê¤Ë@code{/dev/null}¤ò»ØÄê¤·¤Æ¤¯¤À¤µ¤¤¡¥

@item -o @var{file}
@itemx --only-file=@var{file}

@c The file associated with this option contains a list of words which will
@c be retained in concordance output; any word not mentioned in this file
@c is ignored.  The file is called the @dfn{Only file}.  The file contains
@c exactly one word in each line; the end of line separation of words is
@c not subject to the value of the @option{-S} option.
@c 
¤³¤Î¥ª¥×¥·¥ç¥ó¤Ç´ØÏ¢ÉÕ¤±¤é¤ì¤¿¥Õ¥¡¥¤¥ë¤Ï¡¤ÍÑ¸ìº÷°ú¤Î½ÐÎÏ¤Ë°Ý»ý¤µ¤ì¤ëÃ±
¸ì¤Î¥ê¥¹¥È¤ò´Þ¤ß¡¤¤³¤Î¥Õ¥¡¥¤¥ë¤Ç½Ò¤Ù¤Æ¤¤¤Ê¤¤¤¢¤é¤æ¤ëÃ±¸ì¤ÏÌµ»ë¤µ¤ì¤Þ¤¹¡¥
¥Õ¥¡¥¤¥ë¤Ï@dfn{¥ª¥ó¥ê¡¼¥Õ¥¡¥¤¥ë(Only file)}¤È¸Æ¤Ð¤ì¤Æ¤¤¤Þ¤¹¡¥¥Õ¥¡¥¤¥ë
¤Ï¡¤Àµ³Î¤Ë¤½¤ì¤¾¤ì¤Î¹Ô¤Ë°ìÃ±¸ì¤ò´Þ¤ß¤Þ¤¹¡¥Ã±¸ì¤òÊ¬¤±¤ë¹Ô¤Î½ª¤ê¤Ï¡¤
@option{-S}¥ª¥×¥·¥ç¥ó¤ÎÃÍ¤òÅ¬ÍÑ¤µ¤ì¤Þ¤»¤ó¡¥

@c There is no default for the Only file.  When both an Only file and an
@c Ignore file are specified, a word is considered a keyword only
@c if it is listed in the Only file and not in the Ignore file.
@c 
¥ª¥ó¥ê¡¼¥Õ¥¡¥¤¥ë¤Ë¥Ç¥Õ¥©¥ë¥È¤Ï¤¢¤ê¤Þ¤»¤ó¡¥¥ª¥ó¥ê¡¼¥Õ¥¡¥¤¥ë¤ÈÌµ»ë¥Õ¥¡¥¤
¥ë¤ÎÎ¾Êý¤Ë¤¢¤ë¾ì¹ç¡¤¥ª¥ó¥ê¡¼¥Õ¥¡¥¤¥ë¤ÇÍ¿¤¨¤é¤ì¡¤Ìµ»ë¥Õ¥¡¥¤¥ë¤ÇÍ¿¤¨¤é¤ì
¤Ê¤¤Ã±¸ì¤Î¤ß¥­¡¼¥ï¡¼¥É¤ËÅ¬ÍÑ¤µ¤ì¤Þ¤¹¡¥

@item -r
@itemx --references

@c On each input line, the leading sequence of non-white space characters will be
@c taken to be a reference that has the purpose of identifying this input
@c line in the resulting permuted index.  For more information about reference
@c production, see @xref{Output formatting in ptx}.
@c Using this option changes the default value for option @option{-S}.
@c 
¤½¤ì¤¾¤ì¤ÎÆþÎÏ¹Ô¤Ç¡¤¶õÇòÊ¸»ú¤Ç¤Ê¤¤Á°ÃÖ¤µ¤ì¤¿ÊÂ¤Ó¤Ï¡¤·ë²Ì¤È¤·¤ÆÆÀ¤é¤ì¤ë
ÊÂ¤ÙÂØ¤¨¤µ¤ì¤¿º÷°ú¤Ç¡¤¤³¤ÎÆþÎÏ¹Ô¤ò¼±ÊÌ¤¹¤ëÌÜÅª¤Î»²¾È¤È¤·¤Æ¼õ¤±¼è¤é¤ì¤Þ
¤¹¡¥»²¾ÈÀ¸À®¤Ë´Ø¤¹¤ë¤è¤êÂ¿¤¯¤Î¾ðÊó¤Ï¡¤@xref{Output formatting in ptx}. 
¤³¤Î¥ª¥×¥·¥ç¥ó¤Î»ÈÍÑ¤Ç¡¤¥ª¥×¥·¥ç¥ó@option{-S}¤ËÂÐ¤¹¤ë¥Ç¥Õ¥©¥ë¥ÈÃÍ¤òÊÑ
¹¹¤·¤Þ¤¹¡¥

@c Using this option, the program does not try very hard to remove
@c references from contexts in output, but it succeeds in doing so
@c @emph{when} the context ends exactly at the newline.  If option
@c @option{-r} is used with @option{-S} default value, or when @sc{gnu} extensions
@c are disabled, this condition is always met and references are completely
@c excluded from the output contexts.
@c 
¤³¤Î¥ª¥×¥·¥ç¥ó¤ò»ÈÍÑ¤¹¤ë¤È¡¤¥×¥í¥°¥é¥à¤Ï½ÐÎÏ¤ÎÊ¸Ì®¤«¤é¤Î»²¾È¤Îºï½ü¤Î»î
¤ß¤¬Èó¾ï¤ËÆñ¤·¤¯¤Ê¤ê¤Þ¤¹¤¬¡¤Ê¸Ì®¤Î½ª¤ê¤¬Àµ³Î¤Ë²þ¹Ô¤Ç½ª¤ë@emph{¤È¤­}¡¤
¤½¤¦¤¹¤ë¤³¤È¤ËÀ®¸ù¤·¤Þ¤¹¡¥¥ª¥×¥·¥ç¥ó@option{-r}¤¬@option{-S}¥Ç¥Õ¥©¥ë¥È
ÃÍ¤È¤È¤â¤Ë»ÈÍÑ¤µ¤ì¤¿¾ì¹ç¤ä¡¤@sc{gnu}³ÈÄ¥¤¬ÍøÍÑÉÔ²ÄÇ½¤Ê¤È¤­¡¤¤³¤Î¾ò·ï¤Ï
¾ï¤ËËþ¤¿¤µ¤ì¡¤»²¾È¤Ï´°Á´¤Ë½ÐÎÏÊ¸Ì®¤«¤é½ü³°¤µ¤ì¤Þ¤¹¡¥

@item -S @var{regexp}
@itemx --sentence-regexp=@var{regexp}

@c This option selects which regular expression will describe the end of a
@c line or the end of a sentence.  In fact, this regular expression is not
@c the only distinction between end of lines or end of sentences, and input
@c line boundaries have no special significance outside this option.  By
@c default, when @sc{gnu} extensions are enabled and if @option{-r} option is not
@c used, end of sentences are used.  In this case, this @var{regex} is
@c imported from @sc{gnu} Emacs:
@c 
¤³¤Î¥ª¥×¥·¥ç¥ó¤Ï¡¤¹ÔËö¤äÊ¸¤Î½ª¤ê¤òµ­½Ò¤¹¤ëÀµµ¬É½¸½¤òÁªÂò¤·¤Þ¤¹¡¥¼ÂºÝ¡¤
¤³¤ÎÀµµ¬É½¸½¤Î¸ú²Ì°Ê³°¤Ë¡¤¹ÔËö¤äÊ¸¤Î½ª¤ï¤ê¤Î¤Ë¤ÏÂ¾¤Î¶èÊÌ¤¬¤¢¤ê¡¤ÆþÎÏ¹Ô
¤Î¶­³¦¤Ï¡¤¤³¤Î¥ª¥×¥·¥ç¥ó¤Î³°¤ÇÆÃÊÌ¤Ê½ÅÍ×À­¤Ï¤¢¤ê¤Þ¤»¤ó¡¥¥Ç¥Õ¥©¥ë¥È¤Ç¡¤
@sc{gnu}³ÈÄ¥¤¬»ÈÍÑ²ÄÇ½¤Ê¤È¤­¤ä¡¤@option{-r}¥ª¥×¥·¥ç¥ó¤¬»ÈÍÑ¤µ¤ì¤Æ¤¤¤Ê
¤¤¾ì¹ç¡¤Ê¸¤Î½ª¤ê¤¬»ÈÍÑ¤µ¤ì¤Þ¤¹¡¥¤³¤Î¾ì¹ç¡¤Àµ³Î¤Ê@var{regex}¤Ï@sc{gnu}
emacs¤«¤é¼è¤ê¹þ¤Þ¤ì¤Þ¤¹¡¥

@example
[.?!][]\"')@}]*\\($\\|\t\\|  \\)[ \t\n]*
@end example

@c Whenever @sc{gnu} extensions are disabled or if @option{-r} option is used, end
@c of lines are used; in this case, the default @var{regexp} is just:
@c 
@sc{gnu}³ÈÄ¥¤¬»ÈÍÑÉÔ²ÄÇ½¤Ê¤È¤­¤ä¡¤@option{-r}¥ª¥×¥·¥ç¥ó¤¬»ÈÍÑ¤µ¤ì¤Æ¤¤
¤ë¾ì¹ç¤Ï¡¤¾ï¤Ë¹Ô¤Î½ª¤ê¤¬»ÈÍÑ¤µ¤ì¡¤¤³¤Î¾ì¹ç¥Ç¥Õ¥©¥ë¥È¤Î@var{regexp}¤Ï°Ê
²¼¤Î¤è¤¦¤Ë¤Ê¤ê¤Þ¤¹¡¥

@example
\n
@end example

@c Using an empty @var{regexp} is equivalent to completely disabling end of
@c line or end of sentence recognition.  In this case, the whole file is
@c considered to be a single big line or sentence.  The user might want to
@c disallow all truncation flag generation as well, through option @option{-F
@c ""}.  @xref{Regexps, , Syntax of Regular Expressions, emacs, The GNU Emacs
@c Manual}.
@c 
¶õ¤Î@var{regexp}¤Î»ÈÍÑ¤Ï¡¤¹ÔËö¤ÈÊ¸¤Î½ª¤ê¤ÎÇ§¼±¤ò´°Á´¤ËÉÔ²ÄÇ½¤Ë¤¹¤ë¤³¤È
¤ÈÆ±Åù¤Ç¤¹¡¥¤³¤Î¾ì¹ç¡¤¥Õ¥¡¥¤¥ëÁ´ÂÎ¤¬Ã±°ì¤ÎÂç¤­¤Ê¹Ô¤äÊ¸¤È¹Í¤¨¤é¤ì¤Þ¤¹¡¥
¥æ¡¼¥¶¤Ï¡¤¥ª¥×¥·¥ç¥ó@samp{-F ""}¤òÄÌ¤¸¤Æ¡¤Á´¤Æ¤ÎÀÚ¤êµÍ¤á¥Õ¥é¥°¤ÎÀ¸À®¤ò¡¤
ÉÔµö²Ä¤Ë¤·¤¿¤¤¾ì¹ç¤â¤¢¤ê¤Þ¤¹¡¥@xref{Regexps, , Syntax of Regular
Expressions, emacs, The GNU Emacs Manual}.

@c When the keywords happen to be near the beginning of the input line or
@c sentence, this often creates an unused area at the beginning of the
@c output context line; when the keywords happen to be near the end of the
@c input line or sentence, this often creates an unused area at the end of
@c the output context line.  The program tries to fill those unused areas
@c by wrapping around context in them; the tail of the input line or
@c sentence is used to fill the unused area on the left of the output line;
@c the head of the input line or sentence is used to fill the unused area
@c on the right of the output line.
@c 
¥­¡¼¥ï¡¼¥É¤¬ÆþÎÏ¹Ô¤äÊ¸¤ÎºÇ½é¤ÇÈ¯À¸¤·¤¿¤È¤­¡¤½ÐÎÏÊ¸Ì®¤Î¹Ô¤ÎºÇ½é¤Ë¡¤ÍøÍÑ
¤µ¤ì¤Ê¤¤ÎÎ°è¤òºîÀ®¤¹¤ë¤³¤È¤â¤è¤¯¤¢¤ê¤Þ¤¹¡¥¥­¡¼¥ï¡¼¥É¤¬ÆþÎÏ¹Ô¤äÊ¸¤Î½ª¤ê
¶á¤¯¤ÇÈ¯À¸¤·¤¿¤È¤­¡¤½ÐÎÏÊ¸Ì®¤Î¹Ô¤Î½ª¤ê¤ËÍøÍÑ¤µ¤ì¤Ê¤¤ÎÎ°è¤òºîÀ®¤¹¤ë¤³¤È
¤â¤è¤¯¤¢¤ê¤Þ¤¹¡¥¥×¥í¥°¥é¥à¤Ï¡¤¤½¤ÎÃæ¤ÎÊ¸Ì®¤Î¼þ¤ê¤òÊñ¤à¤³¤È¤Ç¡¤¤½¤ì¤é¤Î
ÎÎ°è¤òÊä½¼¤·¤è¤¦¤È¤·¤Þ¤¹¡¥ÆþÎÏ¹Ô¤äÊ¸¤ÎÆ¬¤Ï¡¤½ÐÎÏ¹Ô¤Î±¦¤ÎÍøÍÑ¤µ¤ì¤Æ¤¤¤Ê
¤¤¹Ô¤òÊä½¼¤¹¤ë¤¿¤á¤Ë»ÈÍÑ¤µ¤ì¤Þ¤¹¡¥

@c As a matter of convenience to the user, many usual backslashed escape
@c sequences from the C language are recognized and converted to the
@c corresponding characters by @command{ptx} itself.
@c 
¥æ¡¼¥¶¤ÎÍøÊØÀ­¤ÎÌäÂê¤È¤·¤Æ¡¤C¸À¸ì¤Ç¸«¤Ä¤«¤ë¡¤ÄÌ¾ï¤Î¥Ð¥Ã¥¯¥¹¥é¥Ã¥·¥å¤µ
¤ì¤¿¥¨¥¹¥±¡¼¥×¡¦¥·¡¼¥±¥ó¥¹¤ÏÇ§¼±¤µ¤ì¡¤@command{ptx}¼«¿È¤Ë¤è¤Ã¤ÆÂÐ±þ¤¹
¤ëÊ¸»ú¤ËÊÑ´¹¤µ¤ì¤Þ¤¹¡¥

@item -W @var{regexp}
@itemx --word-regexp=@var{regexp}

@c This option selects which regular expression will describe each keyword.
@c By default, if @sc{gnu} extensions are enabled, a word is a sequence of
@c letters; the @var{regexp} used is @samp{\w+}.  When @sc{gnu} extensions are
@c disabled, a word is by default anything which ends with a space, a tab
@c or a newline; the @var{regexp} used is @samp{[^ \t\n]+}.
@c 
¤³¤Î¥ª¥×¥·¥ç¥ó¤Ï¡¤¤½¤ì¤¾¤ì¤Î¥­¡¼¥ï¡¼¥É¤òµ­½Ò¤·¤Æ¤¤¤ëÀµµ¬É½¸½¤òÁªÂò¤·¤Þ
¤¹¡¥¥Ç¥Õ¥©¥ë¥È¤Ç¡¤@sc{gnu}³ÈÄ¥¤¬ÍøÍÑ²ÄÇ½¤Ê¾ì¹ç¡¤Ã±¸ì¤ÏÊ¸»ú¤ÎÊÂ¤Ó¤Ç¤¹¡¥
»ÈÍÑ¤µ¤ì¤ë@var{regexp}¤Ï@samp{\w+}¤Ç¤¹¡¥@sc{gnu}³ÈÄ¥¤¬ÍøÍÑÉÔ²ÄÇ½¤Ê¾ì¹ç¡¤
Ã±¸ì¤Ï¥Ç¥Õ¥©¥ë¥È¤Ç¡¤¥¹¥Ú¡¼¥¹¡¤¥¿¥Ö¡¤¤Þ¤¿¤Ï²þ¹Ô¤Ç½ª¤ë¤¢¤é¤æ¤ë¤â¤Î¤Ç¤¹¡¥
»ÈÍÑ¤µ¤ì¤ë@var{regexp}¤Ï@samp{[^ \t\n]+}¤Ç¤¹¡¥

@c An empty @var{regexp} is equivalent to not using this option.
@c @xref{Regexps, , Syntax of Regular Expressions, emacs, The GNU Emacs
@c Manual}.
@c 
¶õ¤Î@var{regexp}¤Ï¡¤¤³¤Î¥ª¥×¥·¥ç¥ó¤ò»ÈÍÑ¤·¤Ê¤¤¤Î¤ÈÆ±Åù¤Ç¡¤¥Ç¥Õ¥©¥ë¥ÈÆ°
ºî¤Ë¤Ê¤ê¤Þ¤¹¡¥@xref{Regexps, , Syntax of Regular Expressions, emacs,
The GNU Emacs Manual}.

@c As a matter of convenience to the user, many usual backslashed escape
@c sequences, as found in the C language, are recognized and converted to
@c the corresponding characters by @command{ptx} itself.
@c 
¥æ¡¼¥¶¤ÎÍøÊØÀ­¤ÎÌäÂê¤È¤·¤Æ¡¤C¸À¸ì¤Ç¸«¤Ä¤«¤ë¡¤Â¿¤¯¤ÎÄÌ¾ï¤Î¥Ð¥Ã¥¯¥¹¥é¥Ã
¥·¥å¤µ¤ì¤¿¥¨¥¹¥±¡¼¥×¡¦¥·¡¼¥±¥ó¥¹¤ÏÇ§¼±¤µ¤ì¡¤@command{ptx}¼«¿È¤Ë¤è¤Ã¤Æ
ÂÐ±þ¤¹¤ëÊ¸»ú¤ËÊÑ´¹¤µ¤ì¤Þ¤¹¡¥

@end table


@node Output formatting in ptx
@c @subsection Output formatting
@subsection ½ÐÎÏ¤Î½ñ¼°

@c Output format is mainly controlled by the @option{-O} and @option{-T} options
@c described in the table below.  When neither @option{-O} nor @option{-T} are
@c selected, and if @sc{gnu} extensions are enabled, the program chooses an
@c output format suitable for a dumb terminal.  Each keyword occurrence is
@c output to the center of one line, surrounded by its left and right
@c contexts.  Each field is properly justified, so the concordance output
@c can be readily observed.  As a special feature, if automatic
@c references are selected by option @option{-A} and are output before the
@c left context, that is, if option @option{-R} is @emph{not} selected, then
@c a colon is added after the reference; this nicely interfaces with @sc{gnu}
@c Emacs @code{next-error} processing.  In this default output format, each
@c white space character, like newline and tab, is merely changed to
@c exactly one space, with no special attempt to compress consecutive
@c spaces.  This might change in the future.  Except for those white space
@c characters, every other character of the underlying set of 256
@c characters is transmitted verbatim.
@c 
½ÐÎÏ½ñ¼°¤Ï¡¤¼ç¤Ë@option{-O}¤È@option{-T}¥ª¥×¥·¥ç¥ó¤ÇÀ©¸æ¤µ¤ì¡¤¤½¤ì¤Ï°Ê
²¼¤ÎÉ½¤Çµ­½Ò¤µ¤ì¤Æ¤¤¤Þ¤¹¡¥@option{-O}¤â@option{-T}¤âÁªÂò¤µ¤ì¤Æ¤¤¤Ê¤¤¤È
¤­¤Ç¡¤@sc{gnu}³ÈÄ¥¤¬ÍøÍÑ²ÄÇ½¤Ê¾ì¹ç¡¤¥×¥í¥°¥é¥à¤ÏdumbÃ¼Ëö¤ËÅ¬¤·¤¿½ÐÎÏ½ñ
¼°¤òÁªÂò¤·¤Þ¤¹¡¥¤½¤ì¤¾¤ì¤Î¥­¡¼¥ï¡¼¥É¤ÎÀ¸À®¤Ï¡¤½ÐÎÏ¤ò¹Ô¤ÎÃæ¿´¤Ë¤·¡¤¼þ¤ê
¤ò¤½¤Îº¸±¦¤ÎÊ¸Ì®¤Ç°Ï¤¤¤Þ¤¹¡¥¤½¤ì¤¾¤ì¤Î¥Õ¥£¡¼¥ë¥É¤ÏÅ¬ÀÚ¤ÇÀµ¤·¤¤¤â¤Î¤Ê¤Î
¤Ç¡¤ÍÑ¸ìº÷°ú¤Î½ÐÎÏ¤òÍÆ°×¤Ë´Ñ»¡¤¹¤ë¤³¤È¤¬²ÄÇ½¤Ç¤¹¡¥ÆÃÊÌ¤ÊÆÃÄ§¤È¤·¤Æ¡¤¼«
Æ°Åª¤Ê»²¾È¤¬¥ª¥×¥·¥ç¥ó@option{-A}¤Ç»ØÄê¤µ¤ì¤Æ¤¤¤Æ¡¤º¸¤ÎÊ¸Ì®¤ÎÁ°¤Ë½ÐÎÏ
¤µ¤ì¤Æ¤¤¤ë¡¤¤¹¤Ê¤ï¤Á¡¤¥ª¥×¥·¥ç¥ó@option{-R}¤¬ÁªÂò¤µ¤ì¤Æ@emph{¤¤¤Ê¤¤}¾ì
¹ç¡¤¥³¥í¥ó¤¬»²¾È¤Î¸å¤ËÄÉ²Ã¤µ¤ì¤Þ¤¹¡¥¤³¤ì¤Ï¡¤@sc{gnu} Emacs¤¬
@code{next-error}¤ò½èÍý¤¹¤ë¤³¤È¤Ç¤¦¤Þ¤¯ºîÍÑ¤·¤Þ¤¹¡¥¤³¤Î¥Ç¥Õ¥©¥ë¥È½ÐÎÏ
½ñ¼°¤Ç¤Ï¡¤²þ¹Ô¤ä¥¿¥Ö¤Î¤è¤¦¤Ê¤½¤ì¤¾¤ì¤Î¶õÇòÊ¸»ú¤Ï¡¤Àµ³Î¤Ë°ì¤Ä¤Î¥¹¥Ú¡¼¥¹
¤ËÃ±¤ËÊÑ´¹¤µ¤ì¡¤Ï¢Â³¤·¤¿¥¹¥Ú¡¼¥¹¤Î°µ½Ì¤ÏÆÃ¤Ë»î¤ß¤Þ¤»¤ó¡¥¤³¤ì¤Ï¾­ÍèÊÑ¹¹
¤µ¤ì¤ë¤«¤â¤·¤ì¤Þ¤»¤ó¡¥¤³¤ì¤é¤Î¶õÇòÊ¸»ú°Ê³°¤Î¡¤256Ê¸»ú¤Î´ðËÜ¥»¥Ã¥È¤ÎÁ´
¤Æ¤ÎÂ¾¤ÎÊ¸»ú¤ÏÃà¸ìÅª¤ËÅ¾Á÷¤µ¤ì¤Þ¤¹¡¥

@c Output format is further controlled by the following options.
@c 
½ÐÎÏ½ñ¼°¤Ï¡¤°Ê²¼¤Î¥ª¥×¥·¥ç¥ó¤Ç¹¹¤ËÀ©¸æ¤µ¤ì¤Þ¤¹¡¥

@table @samp

@item -g @var{number}
@itemx --gap-size=@var{number}

@c Select the size of the minimum white space gap between the fields on the
@c output line.
@c 
½ÐÎÏ¹Ô¤Î¥Õ¥£¡¼¥ë¥É´Ö¤ÎºÇ¾®¤Î¶õÇò¤Î·ä´Ö¤òÁªÂò¤·¤Þ¤¹¡¥

@item -w @var{number}
@itemx --width=@var{number}

@c Select the maximum output width of each final line.  If references are
@c used, they are included or excluded from the maximum output width
@c depending on the value of option @option{-R}.  If this option is not
@c selected, that is, when references are output before the left context,
@c the maximum output width takes into account the maximum length of all
@c references.  If this option is selected, that is, when references are
@c output after the right context, the maximum output width does not take
@c into account the space taken by references, nor the gap that precedes
@c them.
@c 
¤½¤ì¤¾¤ì¤ÎºÇ½ª¹Ô¤Î½ÐÎÏºÇÂçÉý¤òÁªÂò¤·¤Þ¤¹¡¥»²¾È¤¬»ÈÍÑ¤µ¤ì¤ë¾ì¹ç¡¤
@option{-R}¥ª¥×¥·¥ç¥ó¤ÎÃÍ¤Ë°ÍÂ¸¤·¤Æ¡¤¤½¤ì¤é¤Ï½ÐÎÏºÇÂçÉý¤Ë´Þ¤á¤é¤ì¤¿¤ê
¾Ê¤«¤ì¤¿¤ê¤·¤Þ¤¹¡¥¤³¤ì¤é¤Î¥ª¥×¥·¥ç¥ó¤¬ÁªÂò¤µ¤ì¤Æ¤¤¤Ê¤¤¾ì¹ç¡¤¤¹¤Ê¤ï¤Á¡¤
»²¾È¤¬º¸¤ÎÊ¸Ì®¤ÎÁ°¤Ë½ÐÎÏ¤µ¤ì¤ë¤È¤­¡¤½ÐÎÏºÇÂçÉý¤ÏÁ´¤Æ¤Î»²¾È¤ÎºÇÂçÄ¹¤Þ¤Ç
¹ÍÎ¸¤µ¤ì¤Þ¤¹¡¥¤³¤Î¥ª¥×¥·¥ç¥ó¤¬ÁªÂò¤µ¤ì¤¿¾ì¹ç¡¤¤¹¤Ê¤ï¤Á¡¤»²¾È¤¬±¦¤ÎÊ¸Ì®
¤Î¸å¤Ë½ÐÎÏ¤µ¤ì¤ë¤È¤­¡¤½ÐÎÏºÇÂçÉý¤Ï»²¾È¤¬»ÈÍÑ¤¹¤ë¥¹¥Ú¡¼¥¹¤ÎÎÌ¤â¡¤Á°¤Ë¤¢
¤ë·ä´Ö¤â¹ÍÎ¸¤µ¤ì¤Þ¤»¤ó¡¥

@item -A
@itemx --auto-reference

@c Select automatic references.  Each input line will have an automatic
@c reference made up of the file name and the line ordinal, with a single
@c colon between them.  However, the file name will be empty when standard
@c input is being read.  If both @option{-A} and @option{-r} are selected, then
@c the input reference is still read and skipped, but the automatic
@c reference is used at output time, overriding the input reference.
@c 
¼«Æ°Åª¤Ê»²¾È¤òÁªÂò¤·¤Þ¤¹¡¥¤½¤ì¤¾¤ì¤ÎÆþÎÏ¹Ô¤Ï¡¤¥Õ¥¡¥¤¥ëÌ¾¤È´Ö¤ËÃ±°ì¤Î¥³
¥í¥ó¤òÍÑ¤¤¤¿¹Ô¤Î½ø¿ô¤ÇºîÀ®¤µ¤ì¤¿¼«Æ°Åª¤Ê»²¾È¤ò»ý¤Á¤Þ¤¹¡¥¤·¤«¤·¡¤É¸½àÆþ
ÎÏ¤¬ÆÉ¤ß¹þ¤Þ¤ì¤Æ¤¤¤ë¤È¤­¤Ï¡¤¥Õ¥¡¥¤¥ëÌ¾¤Ï¶õ¤Ç¤¹¡¥@option{-A}¤È
@option{-r}¤ÎÎ¾Êý¤¬ÁªÂò¤µ¤ì¤¿¾ì¹ç¡¤ÆþÎÏ»²¾È¤ÏÆÉ¤ß¹þ¤Þ¤ì¥¹¥­¥Ã¥×¤µ¤ì¤Þ
¤¹¤¬¡¤¼«Æ°Åª¤Ê»²¾È¤Ï½ÐÎÏ»þ¤ËÍøÍÑ¤µ¤ì¡¤¤½¤ì¤ÏÆþÎÏ»²¾È¤ËÍ¥Àè¤·¤Þ¤¹¡¥

@item -R
@itemx --right-side-refs

@c In the default output format, when option @option{-R} is not used, any
@c references produced by the effect of options @option{-r} or @option{-A} are
@c placed to the far right of output lines, after the right context.  With
@c default output format, when the @option{-R} option is specified, references
@c are rather placed at the beginning of each output line, before the left
@c context.  For any other output format, option @option{-R} is
@c ignored, with one exception:  with @option{-R} the width of references
@c is @emph{not} taken into account in total output width given by @option{-w}.
@c 
¥Ç¥Õ¥©¥ë¥È½ÐÎÏ½ñ¼°¤Ç¡¤¥ª¥×¥·¥ç¥ó@option{-R}¤¬»ÈÍÑ¤µ¤ì¤Æ¤¤¤Ê¤¤¤È¤­¡¤¥ª
¥×¥·¥ç¥ó@option{-r}¤ä@option{-A}¤Î±Æ¶Á¤ÇÀ¸À®¤µ¤ì¤ë¤¢¤é¤æ¤ë»²¾È¤Ï¡¤±¦¤Î
Ê¸Ì®¤Î¸å¤Ë¡¤½ÐÎÏ¹Ô¤Î±¦Ã¼¤ËÍ¿¤¨¤é¤ì¤Þ¤¹¡¥¥Ç¥Õ¥©¥ë¥È½ÐÎÏ½ñ¼°¤Ç¡¤¥ª¥×¥·¥ç
¥ó@option{-R}¤¬»ØÄê¤µ¤ì¤¿¾ì¹ç¡¤»²¾È¤Ï¡¤º¸¤ÎÊ¸Ì®¤ÎÁ°¤Ë¡¤¤½¤ì¤¾¤ì¤Î½ÐÎÏ
¹Ô¤Î»Ï¤á¤ËÂå¤ï¤ê¤ËÍ¿¤¨¤é¤ì¤Þ¤¹¡¥¤½¤ì°Ê³°¤Î¤¢¤é¤æ¤ë½ÐÎÏ½ñ¼°¤ËÂÐ¤·¡¤
@option{-R}¤¬ÁªÂò¤µ¤ì¤¿¤È¤­¤Ï¾ï¤Ë¡¤»²¾È¤ÎÉý¤¬@option{-w}¤ÇÍ¿¤¨¤é¤ì¤¿Á´
ÂÎ¤Î½ÐÎÏÉý¤Ë´Þ¤Þ¤ì@emph{¤Ê¤¤}¤È¤¤¤¦»ö¼Â°Ê³°¡¤¥ª¥×¥·¥ç¥ó@option{-R}¤Ï¤Û
¤È¤ó¤ÉÌµ»ë¤µ¤ì¤Þ¤¹¡¥

@c This option is automatically selected whenever @sc{gnu} extensions are
@c disabled.
@c 
@sc{gnu}³ÈÄ¥¤¬ÍøÍÑÉÔ²ÄÇ½¤Ê¤È¤­¤Ï¡¤¾ï¤Ë¤³¤Î¥ª¥×¥·¥ç¥ó¤Ï¼«Æ°Åª¤ËÁªÂò¤µ¤ì
¤Þ¤¹¡¥

@item -F @var{string}
@itemx --flac-truncation=@var{string}

@c This option will request that any truncation in the output be reported
@c using the string @var{string}.  Most output fields theoretically extend
@c towards the beginning or the end of the current line, or current
@c sentence, as selected with option @option{-S}.  But there is a maximum
@c allowed output line width, changeable through option @option{-w}, which is
@c further divided into space for various output fields.  When a field has
@c to be truncated because it cannot extend beyond the beginning or the end of
@c the current line to fit in, then a truncation occurs.  By default,
@c the string used is a single slash, as in @option{-F /}.
@c 
¤³¤Î¥ª¥×¥·¥ç¥ó¤Ï¡¤Ê¸»úÎó@var{string}¤Î»ÈÍÑ¤¬Êó¹ð¤µ¤ì¤¿½ÐÎÏ¤Ç¤Î¡¤¤¢¤é¤æ
¤ëÀÚ¤êµÍ¤á¤òÍ×µá¤·¤Þ¤¹¡¥¤Û¤È¤ó¤É¤Î½ÐÎÏ¥Õ¥£¡¼¥ë¥É¤Ï¡¤¥ª¥×¥·¥ç¥ó
@option{-S}¤¬ÁªÂò¤µ¤ì¤¿¤Î¤ÈÆ±ÍÍ¤Ë¡¤¸½ºß¤Î¹Ô¤ä¸½ºß¤ÎÊ¸¤Î»Ï¤á¤ä½ª¤ê¤Ë¸þ
¤«¤Ã¤Æ¡¤ÍýÏÀÅª¤ËÅ¸³«¤µ¤ì¤Þ¤¹¡¥¤·¤«¤·¡¤µö²Ä¤µ¤ì¤ë½ÐÎÏ¹ÔÉý¤ÎºÇÂçÃÍ¤ÏÂ¸ºß
¤·¡¤¤½¤ì¤Ï¥ª¥×¥·¥ç¥ó@option{-w}¤ÇÊÑ¹¹¤Ç¤­¡¤¤½¤·¤Æ¤½¤ì¤ÏÍÍ¡¹¤Ê½ÐÎÏ¥Õ¥£¡¼
¥ë¥É¤ËÂÐ¤·¥¹¥Ú¡¼¥¹¤Ç¹¹¤ËÊ¬³ä¤µ¤ì¤Þ¤¹¡¥¸½ºß¤Î¹Ô¤ËÅ¬¤¹¤ë¤è¤¦¤Ë¡¤¤½¤Î¹Ô¤Î
ºÇ½é¤ä½ª¤ê¤Þ¤Ç¿­¤Ð¤¹¤³¤È¤¬¤Ç¤­¤Ê¤¤¤¿¤á¥Õ¥£¡¼¥ë¥É¤òÀÚ¤êµÍ¤á¤ëÉ¬Í×¤¬¤¢¤ë
¤È¤­¡¤ÀÚ¤êµÍ¤á¤¬È¯À¸¤·¤Þ¤¹¡¥¥Ç¥Õ¥©¥ë¥È¤Ç¡¤»ÈÍÑ¤µ¤ì¤ëÊ¸»úÎó¤ÏÃ±°ì¤Î¥¹¥é¥Ã
¥·¥å¤Ç¡¤@samp{-F /}¤Î¤è¤¦¤Ë¤Ê¤ê¤Þ¤¹¡¥

@c @var{string} may have more than one character, as in @option{-F ...}.
@c Also, in the particular case when @var{string} is empty (@option{-F ""}),
@c truncation flagging is disabled, and no truncation marks are appended in
@c this case.
@c 
@var{string}¤Ï°ìÊ¸»ú°Ê¾å¤¬²ÄÇ½¤Ç¡¤@samp{-F ...}¤Î¤è¤¦¤Ë¤Ê¤ê¤Þ¤¹¡¥¤Þ¤¿¡¤
@var{string}¤¬¶õ(@samp{-F ""})¤È¤Ê¤ëÆÃÄê¤Î¾ì¹ç¡¤ÀÚ¤êµÍ¤á¥Õ¥é¥°¤ÏÍøÍÑÉÔ
²ÄÇ½¤Ç¡¤ÀÚ¤êµÍ¤á¥Þ¡¼¥¯¤Ï¤³¤Î¾ì¹ç¤Ï¸½¤ï¤ì¤Þ¤»¤ó¡¥

@c As a matter of convenience to the user, many usual backslashed escape
@c sequences, as found in the C language, are recognized and converted to
@c the corresponding characters by @command{ptx} itself.
@c 
¥æ¡¼¥¶¤ÎÍøÊØÀ­¤ÎÌäÂê¤È¤·¤Æ¡¤Â¿¤¯¤ÎÄÌ¾ï¤Î¡¤C¸À¸ì¤Ç¸«¤Ä¤«¤ë¡¤¥Ð¥Ã¥¯¥¹¥Ú¡¼
¥¹¤µ¤ì¤¿¥¨¥¹¥±¡¼¥×¥·¡¼¥±¥ó¥¹¤ÏÇ§¼±¤µ¤ì¡¤@command{ptx}¼«¿È¤Ë¤è¤Ã¤Æ¡¤ÂÐ
±þ¤¹¤ëÊ¸»ú¤ËÊÑ´¹¤µ¤ì¤Þ¤¹¡¥

@item -M @var{string}
@itemx --macro-name=@var{string}

@c Select another @var{string} to be used instead of @samp{xx}, while
@c generating output suitable for @command{nroff}, @command{troff} or @TeX{}.
@c 
@code{nroff}¡¤@code{troff}¤ä@TeX{}¤ËÅ¬¤·¤¿½ÐÎÏ¤òÀ¸À®¤·¤Æ¤¤¤ë´Ö¡¤
@samp{xx}¤ÎÂå¤ï¤ê¤Ë¡¤»ÈÍÑ¤¹¤ëÂ¾¤Î@var{string}¤òÁªÂò¤·¤Þ¤¹¡¥

@item -O
@itemx --format=roff

@c Choose an output format suitable for @command{nroff} or @command{troff}
@c processing.  Each output line will look like:
@c 
@code{nroff}¤ä@code{troff}¤Î½èÍý¤ËÅ¬¤·¤¿½ÐÎÏ½ñ¼°¤òÁªÂò¤·¤Þ¤¹¡¥¤½¤ì¤¾¤ì
¤Î½ÐÎÏ¹Ô¤Ï°Ê²¼¤Î¤è¤¦¤Ë¤Ê¤ê¤Þ¤¹¡¥

@smallexample
.xx "@var{tail}" "@var{before}" "@var{keyword_and_after}" "@var{head}" "@var{ref}"
@end smallexample

@c so it will be possible to write a @samp{.xx} roff macro to take care of
@c the output typesetting.  This is the default output format when @sc{gnu}
@c extensions are disabled.  Option @option{-M} can be used to change
@c @samp{xx} to another macro name.
@c 
¤½¤ì¤Ç¡¤½ÐÎÏ¤Î¿¢»ú¤ò½èÍý¤¹¤ë¤¿¤á¤Î¡¤@samp{.xx} roff¥Þ¥¯¥í¤ò½ñ¤¯¤³¤È¤¬
²ÄÇ½¤Ë¤Ê¤ê¤Þ¤¹¡¥@sc{gnu}³ÈÄ¥¤¬ÍøÍÑÉÔ²ÄÇ½¤Ê¾ì¹ç¡¤¤³¤ì¤Ï¥Ç¥Õ¥©¥ë¥È½ÐÎÏ¤Ç
¤¹¡¥¥ª¥×¥·¥ç¥ó@option{-M}¤Ï¡¤@samp{xx}¤òÂ¾¤Î¥Þ¥¯¥íÌ¾¤ËÊÑ¹¹¤¹¤ë¤¿¤á¤Ë»È
ÍÑ¤¹¤ë¤³¤È¤¬²ÄÇ½¤Ç¤¹¡¥

@c In this output format, each non-graphical character, like newline and
@c tab, is merely changed to exactly one space, with no special attempt to
@c compress consecutive spaces.  Each quote character: @kbd{"} is doubled
@c so it will be correctly processed by @command{nroff} or @command{troff}.
@c 
¤³¤Î½ÐÎÏ·Á¼°¤Ç¡¤²þ¹Ô¤ä¥¿¥Ö¤Î¤è¤¦¤Ê¡¤É½¼¨ÉÔ²ÄÇ½¤Ê¤½¤ì¤¾¤ì¤ÎÊ¸»ú¤Ï¡¤Ï¢Â³
¤·¤¿¥¹¥Ú¡¼¥¹¤ò°µ½Ì¤¹¤ë¤È¤¤¤¦ÆÃÊÌ¤Ê»î¤ß¤ò¹Ô¤ï¤º¡¤Àµ³Î¤Ë°ì¤Ä¤Î¥¹¥Ú¡¼¥¹¤Ë
Ã±¤ËÊÑ´¹¤µ¤ì¤Þ¤¹¡¥¤½¤ì¤¾¤ì¤Î°úÍÑÊ¸»ú¡§@kbd{"}¤ÏÆó½Å¤Ë¤Ê¤ë¤Î¤Ç¡¤
@code{nroff}¤ä@code{troff}¤ÇÀµ¤·¤¯½èÍý¤µ¤ì¤Þ¤¹¡¥

@item -T
@itemx --format=tex

@c Choose an output format suitable for @TeX{} processing.  Each output
@c line will look like:
@c 
@TeX{}¤Ç¤Î½èÍý¤ËÅ¬¤·¤¿½ÐÎÏ½ñ¼°¤òÁªÂò¤·¤Þ¤¹¡¥¤½¤ì¤¾¤ì¤Î½ÐÎÏ¹Ô¤Ï°Ê²¼¤Î¤è
¤¦¤Ë¤Ê¤ê¤Þ¤¹¡¥

@smallexample
\xx @{@var{tail}@}@{@var{before}@}@{@var{keyword}@}@{@var{after}@}@{@var{head}@}@{@var{ref}@}
@end smallexample

@noindent
@c so it will be possible to write a @code{\xx} definition to take care of
@c the output typesetting.  Note that when references are not being
@c produced, that is, neither option @option{-A} nor option @option{-r} is
@c selected, the last parameter of each @code{\xx} call is inhibited.
@c Option @option{-M} can be used to change @samp{xx} to another macro
@c name.
@c 
¤½¤ì¤Ç¡¤½ÐÎÏ¤Î¿¢»ú¤Î½èÍý¤¹¤ë¤¿¤á¤Î@code{\xx}ÄêµÁ¤ò½ñ¤¯¤³¤È¤¬²ÄÇ½¤Ë¤Ê¤ê
¤Þ¤¹¡¥»²¾È¤¬À¸À®¤µ¤ì¤Ê¤¤¤È¤­¡¤¤¹¤Ê¤Ï¤Á¡¤¥ª¥×¥·¥ç¥ó@option{-A}¤â¥ª¥×¥·¥ç
¥ó@option{-r}¤âÁªÂò¤µ¤ì¤Æ¤¤¤Ê¤¤¤È¤­¡¤¤½¤ì¤¾¤ì¤Î@code{\xx}¤ÎºÇ¸å¤Î¥Ñ¥é
¥á¡¼¥¿¤¬ÍÞÀ©¤µ¤ì¤ë¤³¤È¤ËÃí°Õ¤·¤Æ¤¯¤À¤µ¤¤¡¥¥ª¥×¥·¥ç¥ó@option{-M}¤Ï¡¤
@samp{xx}¤òÂ¾¤Î¥Þ¥¯¥íÌ¾¤ËÊÑ¹¹¤¹¤ë¤¿¤á¤ËÍøÍÑ²ÄÇ½¤Ç¤¹¡¥

@c In this output format, some special characters, like @kbd{$}, @kbd{%},
@c @kbd{&}, @kbd{#} and @kbd{_} are automatically protected with a
@c backslash.  Curly brackets @kbd{@{}, @kbd{@}} are protected with a
@c backslash and a pair of dollar signs (to force mathematical mode).  The
@c backslash itself produces the sequence @code{\backslash@{@}}.
@c Circumflex and tilde diacritical marks produce the sequence @code{^\@{ @}} and
@c @code{~\@{ @}} respectively.  Other diacriticized characters of the
@c underlying character set produce an appropriate @TeX{} sequence as far
@c as possible.  The other non-graphical characters, like newline and tab,
@c and all other characters which are not part of @acronym{ASCII}, are merely
@c changed to exactly one space, with no special attempt to compress
@c consecutive spaces.  Let me know how to improve this special character
@c processing for @TeX{}.
@c 
¤³¤Î½ÐÎÏ½ñ¼°¤Ç¤Ï¡¤@kbd{$}¡¤@kbd{%}¡¤@kbd{&}¡¤@kbd{#}¤½¤·¤Æ@kbd{_}¤Î¤è
¤¦¤Ê¤¤¤¯¤Ä¤«¤ÎÆÃ¼ìÊ¸»ú¤Ï¡¤¼«Æ°Åª¤Ë¥Ð¥Ã¥¯¥¹¥é¥Ã¥·¥å¤ÇÊÝ¸î¤µ¤ì¤Þ¤¹¡¥µÝ¥«¥Ã
¥³¤Î@kbd{@{}¡¤@kbd{@}}¤â¥Ð¥Ã¥¯¥¹¥é¥Ã¥·¥å¤ÇÊÝ¸î¤µ¤ì¤Þ¤¹¤¬¡¤(¿ô³Ø¥â¡¼¥É
¤ò¶¯À©¤¹¤ë)¥É¥ëµ­¹æ¤ÎÁÈ¤Ç¤â°Ï¤Þ¤ì¤Þ¤¹¡¥¥Ð¥Ã¥¯¥¹¥é¥Ã¥·¥å¼«¿È¤Ï
@code{\backslash@{@}}¤ÎÊÂ¤Ó¤òÀ¸À®¤·¤Þ¤¹¡¥¶ÊÀÞ¥¢¥¯¥»¥ó¥Èµ­¹æ¤È¥Æ¥£¥ë¥Ç
Ê¬²»µ­¹æ¤Ï¡¤@code{^\@{ @}}¤È@code{~\@{ @}}¤ÎÊÂ¤Ó¤ò¤½¤ì¤¾¤ìÀ¸À®¤·¤Þ¤¹¡¥
¤½¤ÎÂ¾¤Î´ðÁÃ¤È¤Ê¤ëÊ¸»ú¥»¥Ã¥È¤ÎÊ¬²»Ê¸»ú¤Ï¡¤Å¬ÀÚ¤Ê@TeX{}¤ÎÊÂ¤Ó¤ò²ÄÇ½¤Ê¸Â
¤êÀ¸À®¤·¤Þ¤¹¡¥²þ¹Ô¤È¥¿¥Ö¤Î¤è¤¦¤Ê¤½¤ÎÂ¾¤ÎÉ½¼¨ÉÔ²ÄÇ½¤ÊÊ¸»ú¤È¡¤
@acronym{ASCII}¤Ç¤Ï¤Ê¤¤Á´¤Æ¤ÎÂ¾¤ÎÊ¸»ú¤Ï¡¤Ï¢Â³¤·¤¿¥¹¥Ú¡¼¥¹¤ò°µ½Ì¤¹¤ë¤È
¤¤¤¦ÆÃÊÌ¤Ê»î¤ß¤ò¹Ô¤ï¤º¡¤°ì¤Ä¤Î¥¹¥Ú¡¼¥¹¤ËÃ±¤ËÊÑ´¹¤µ¤ì¤Þ¤¹¡¥¤³¤ì¤é¤ÎÆÃ¼ì
Ê¸»ú¤ò@TeX{}¤Ç½èÍý¤¹¤ë²þÁ±ÊýË¡¤òÃÎ¤é¤»¤Æ¤¯¤À¤µ¤¤¡¥

@end table


@node Compatibility in ptx
@c @subsection The @sc{gnu} extensions to @command{ptx}
@subsection @command{ptx}¤Î@sc{gnu}³ÈÄ¥

@c This version of @command{ptx} contains a few features which do not exist in
@c System V @command{ptx}.  These extra features are suppressed by using the
@c @option{-G} command line option, unless overridden by other command line
@c options.  Some @sc{gnu} extensions cannot be recovered by overriding, so the
@c simple rule is to avoid @option{-G} if you care about @sc{gnu} extensions.
@c Here are the differences between this program and System V @command{ptx}.
@c 
¤³¤Î@command{ptx}¤Î¥Ð¡¼¥¸¥ç¥ó¤Ë¤Ï¡¤System V @command{ptx}¤Ë¤ÏÂ¸ºß¤·¤Ê
¤¤¤¤¤¯¤Ä¤«¤ÎÆÃÄ§¤¬¤¢¤ê¤Þ¤¹¡¥¤³¤ì¤é¤Î³ÈÄ¥¤µ¤ì¤¿ÆÃÄ§¤Ï¡¤Â¾¤Î¥³¥Þ¥ó¥É¥é¥¤
¥ó¥ª¥×¥·¥ç¥ó¤ÇÍ¥Àè¤µ¤ì¤Ê¤¤¾ì¹ç¡¤@option{-G}¥³¥Þ¥ó¥É¥é¥¤¥ó¥ª¥×¥·¥ç¥ó¤ò
»ÈÍÑ¤·¤ÆÍÞÀ©¤µ¤ì¤Þ¤¹¡¥@sc{gnu}³ÈÄ¥¤Ë¤Ï¡¤Í¥Àè¤Ç¸µ¤ËÌá¤¹¤³¤È¤¬¤Ç¤­¤Ê¤¤¤â
¤Î¤¬¤¢¤ê¡¤¤½¤Î¤¿¤á¡¤@sc{gnu}³ÈÄ¥¤òµ¤¤Ë¤¹¤ë¾ì¹ç¡¤´ÊÃ±¤Êµ¬Â§¤Ç
@option{-G}¤òÈò¤±¤ë¤Ï¤º¤Ç¤¹¡¥¤³¤³¤Ë¡¤¤³¤Î¥×¥í¥°¥é¥à¤ÈSystem V
@command{ptx}¤Î´Ö¤Î°ã¤¤¤¬¤¢¤ê¤Þ¤¹¡¥

@itemize @bullet

@item
@c This program can read many input files at once, it always writes the
@c resulting concordance on standard output.  On the other hand, System V
@c @command{ptx} reads only one file and sends the result to standard output
@c or, if a second @var{file} parameter is given on the command, to that
@c @var{file}.
@c 
¤³¤Î¥×¥í¥°¥é¥à¤Ï¡¤°ìÅÙ¤ËÂ¿¤¯¤ÎÆþÎÏ¥Õ¥¡¥¤¥ë¤òÆÉ¤à¤³¤È¤¬²ÄÇ½¤Ç¡¤¤½¤ì¤Ï¾ï
¤Ë¡¤ÍÑ¸ìº÷°ú¤Î·ë²Ì¤òÉ¸½à½ÐÎÏ¤Ë½ñ¤­½Ð¤·¤Þ¤¹¡¥°ìÊý¡¤System V
@command{ptx}¤Ï¡¤°ì¤Ä¤Î¤ß¥Õ¥¡¥¤¥ë¤òÆÉ¤ß¹þ¤ß¡¤·ë²Ì¤òÉ¸½à½ÐÎÏ¤Ë½ñ¤­½Ð¤¹
¤«¡¤ÆóÈÖÌÜ¤Î@var{file}¥Ñ¥é¥á¡¼¥¿¤¬¥³¥Þ¥ó¥É¤ÇÍ¿¤¨¤é¤ì¤Æ¤¤¤ë¾ì¹ç¤Ï¡¤¤½¤Î
@var{file}¤Ë½ñ¤­½Ð¤·¤Þ¤¹¡¥

@c Having output parameters not introduced by options is a dangerous
@c practice which @sc{gnu} avoids as far as possible.  So, for using @command{ptx}
@c portably between @sc{gnu} and System V, you should always use it with a
@c single input file, and always expect the result on standard output.  You
@c might also want to automatically configure in a @option{-G} option to
@c @command{ptx} calls in products using @command{ptx}, if the configurator finds
@c that the installed @command{ptx} accepts @option{-G}.
@c 
¥ª¥×¥·¥ç¥ó¤ÇÆ³Æþ¤µ¤ì¤Ê¤¤½ÐÎÏ¥Ñ¥é¥á¡¼¥¿¤¬¤¢¤ë¤È¡¤@sc{gnu}¤¬¤Ç¤­¤ë¸Â¤êÈò
¤±¤è¤¦¤È¤·¤Æ¤¤¤ë´í¸±¤ÊÁàºî¤Ë¤Ê¤ê¤Þ¤¹¡¥¤½¤Î¤¿¤á¡¤@sc{gnu}¤ÈSystem V¤Î´Ö
¤Î°Ü¿¢À­¤Î¤¢¤ë@command{ptx}¤ò»ÈÍÑ¤¹¤ë¤¿¤á¡¤Ã±°ì¤ÎÆþÎÏ¥Õ¥¡¥¤¥ë¤Ç¾ï¤Ë»È
ÍÑ¤¹¤ë¤³¤È¤ËÃí°Õ¤òÊ§¤¤¡¤¾ï¤ËÉ¸½à½ÐÎÏ¤Ç·ë²Ì¤ò´üÂÔ¤¹¤ë¤Ù¤­¤Ç¤¹¡¥ÇÛÃÖ¤¹¤ë
¤â¤Î¤¬@option{-G}¤ò¼õ¤±Æþ¤ì¤ë@command{ptx}¤¬¥¤¥ó¥¹¥È¡¼¥ë¤µ¤ì¤Æ¤¤¤ë¤³¤È
¤¬Ê¬¤«¤Ã¤¿¾ì¹ç¡¤@command{ptx}¤ò»ÈÍÑ¤·¤¿À½ÉÊ¤Ç¤Î@command{ptx}¤Î¸Æ¤Ó½Ð¤·
¤Ç¡¤@option{-G}¥ª¥×¥·¥ç¥ó¤ò¼«Æ°Åª¤ËÇÛÃÖ¤·¤¿¤¤¤È»×¤¦¤«¤â¤·¤ì¤Þ¤»¤ó¡¥

@item
@c The only options available in System V @command{ptx} are options @option{-b},
@c @option{-f}, @option{-g}, @option{-i}, @option{-o}, @option{-r}, @option{-t} and
@c @option{-w}.  All other options are @sc{gnu} extensions and are not repeated in
@c this enumeration.  Moreover, some options have a slightly different
@c meaning when @sc{gnu} extensions are enabled, as explained below.
@c 
System V @command{ptx}¤Ç¤Î¤ßÍøÍÑ²ÄÇ½¤Ê¥ª¥×¥·¥ç¥ó¤Ï¡¤@option{-b}¡¤
@option{-f}¡¤@option{-g}¡¤@option{-i}¡¤@option{-o}¡¤@option{-r}¡¤
@option{-t}¡¤¤½¤·¤Æ@option{-w}¤Ç¤¹¡¥Á´¤Æ¤ÎÂ¾¤Î¥ª¥×¥·¥ç¥ó¤Ï@sc{gnu}³ÈÄ¥
¤Ç¡¤¤³¤ÎÎóµó¤Ç¤Ï·«¤êÊÖ¤·¤Þ¤»¤ó¡¥¤µ¤é¤Ë¡¤@sc{gnu}³ÈÄ¥¤¬ÍøÍÑ²ÄÇ½¤Ê¤È¤­¡¤
¤ï¤º¤«¤Ë°ÕÌ£¤¬°Û¤Ê¤ë¥ª¥×¥·¥ç¥ó¤â¤¢¤ê¡¤¤½¤ì¤Ï°Ê²¼¤Çµ­½Ò¤·¤Þ¤¹¡¥

@item
@c By default, concordance output is not formatted for @command{troff} or
@c @command{nroff}.  It is rather formatted for a dumb terminal.  @command{troff}
@c or @command{nroff} output may still be selected through option @option{-O}.
@c 
¥Ç¥Õ¥©¥ë¥È¤Ç¡¤ÍÑ¸ìº÷°ú½ÐÎÏ¤Ï@code{troff}¤ä@code{nroff}¤ËÂÐ¤·¤Æ½ñ¼°²½¤µ
¤ì¤Þ¤»¤ó¡¥¤½¤ì¤Ï¤à¤·¤í¡¤dumbÃ¼Ëö¤ËÂÐ¤¹¤ë½ÐÎÏ¤Ç¤¹¡¥@code{troff}¤ä
@code{nroff}¤Ø¤Î½ÐÎÏ¤Ï¡¤¥ª¥×¥·¥ç¥ó@option{-O}¤òÄÌ¤¸¤ÆÁªÂò¤·¤Æ¤â¤«¤Þ¤¤
¤Þ¤»¤ó¡¥

@item
@c Unless @option{-R} option is used, the maximum reference width is
@c subtracted from the total output line width.  With @sc{gnu} extensions
@c disabled, width of references is not taken into account in the output
@c line width computations.
@c 
@option{-R}¥ª¥×¥·¥ç¥ó¤¬ÁªÂò¤µ¤ì¤Ê¤¤¾ì¹ç¡¤ºÇÂç¤Î»²¾ÈÉý¤Ï½ÐÎÏ¹ÔÉýÁ´ÂÎ¤«
¤é°ú¤¤¤¿¤â¤Î¤Ë¤Ê¤ê¤Þ¤¹¡¥@sc{gnu}³ÈÄ¥¤¬ÍøÍÑÉÔ²ÄÇ½¤Ê¾ì¹ç¡¤»²¾È¤ÎÉý¤Ï½ÐÎÏ
¹Ô¤ÎÉý¤Î·×»»¤Ç¹ÍÎ¸¤µ¤ì¤Þ¤»¤ó¡¥

@item
@c All 256 characters, even @kbd{NUL}s, are always read and processed from
@c input file with no adverse effect, even if @sc{gnu} extensions are disabled.
@c However, System V @command{ptx} does not accept 8-bit characters, a few
@c control characters are rejected, and the tilde @kbd{~} is also rejected.
@c 
@kbd{NUL}¤ò´Þ¤à256Ê¸»úÁ´¤Æ¤Ï¡¤¤¿¤È¤¨@sc{gnu}³ÈÄ¥¤¬ÍøÍÑÉÔ²ÄÇ½¤Ê¾ì¹ç¤Ç¤â¡¤
¾ï¤ËÆþÎÏ¥Õ¥¡¥¤¥ë¤«¤éÆÉ¤ß¹þ¤Þ¤ì¡¤ÌäÂê¤È¤Ê¤ë±Æ¶Á¤â¤Ê¤¯½èÍý¤µ¤ì¤Þ¤¹¡¥¤·¤«
¤·¡¤System V @command{ptx}¤Ï8¥Ó¥Ã¥ÈÊ¸»ú¤ò¼õ¤±Æþ¤ì¤º¡¤¤¤¤¯¤Ä¤«¤ÎÀ©¸æÊ¸
»ú¤Ïºï½ü¤µ¤ì¡¤¥Á¥ë¥À@kbd{~}¤Ï½èÊ¬¤µ¤ì¤Þ¤¹¡¥

@item
@c Input line length is only limited by available memory, even if @sc{gnu}
@c extensions are disabled.  However, System V @command{ptx} processes only
@c the first 200 characters in each line.
@c 
ÆþÎÏ¹Ô¤ÎÄ¹¤µ¤Ï¡¤@sc{gnu}³ÈÄ¥¤¬ÍøÍÑ¤Ç¤­¤Ê¤¤¾ì¹ç¤Ç¤µ¤¨¡¤ÍøÍÑ²ÄÇ½¤Ê¥á¥â¥ê
¤Ç¤Î¤ßÀ©¸Â¤µ¤ì¤Þ¤¹¡¥¤·¤«¤·System V @command{ptx}¤Ï¡¤¤½¤ì¤¾¤ì¤Î¹Ô¤ÎºÇ½é
¤Î200Ê¸»ú¤Î¤ß½èÍý¤·¤Þ¤¹¡¥

@item
@c The break (non-word) characters default to be every character except all
@c letters of the underlying character set, diacriticized or not.  When @sc{gnu}
@c extensions are disabled, the break characters default to space, tab and
@c newline only.
@c 
¥Ö¥ì¡¼¥¯(Ã±¸ì¤Ç¤Ï¤Ê¤¤)Ê¸»ú¤Ï¡¤Á´¤Æ¤Î´ðÁÃ¤È¤Ê¤ëÊ¸»ú¥»¥Ã¥È°Ê³°¡¤Ê¬²»µ­¹æ
¤ÎÍ­Ìµ¤Ë¤è¤é¤º¡¤Á´¤Æ¤ÎÊ¸»ú¤ò¥Ç¥Õ¥©¥ë¥È¤È¤·¤Þ¤¹¡¥@sc{gnu}³ÈÄ¥¤¬ÍøÍÑÉÔ²Ä
Ç½¤Ê¤È¤­¡¤¥Ö¥ì¡¼¥¯Ê¸»ú¤Ï¡¤¥¹¥Ú¡¼¥¹¡¤¥¿¥Ö¤È²þ¹Ô¤Î¤ß¤ò¥Ç¥Õ¥©¥ë¥È¤È¤·¤Þ¤¹¡¥

@item
@c The program makes better use of output line width.  If @sc{gnu} extensions
@c are disabled, the program rather tries to imitate System V @command{ptx},
@c but still, there are some slight disposition glitches this program does
@c not completely reproduce.
@c 
¥×¥í¥°¥é¥à¤Ï¡¤½ÐÎÏ¹Ô¤ÎÉý¤Ç¤è¤êÎÉ¤¤¤â¤Î¤ò»ÈÍÑ¤·¤Þ¤¹¡¥@sc{gnu}³ÈÄ¥¤¬ÍøÍÑ
ÉÔ²ÄÇ½¤Ê¾ì¹ç¡¤¥×¥í¥°¥é¥à¤Ï¡¤Âå¤ï¤ê¤ËSystem V @command{ptx}¤òÌÏÊï¤·¤è¤¦
¤È¤·¤Þ¤¹¤¬¡¤¤³¤Î¥×¥í¥°¥é¥à¤¬´°Á´¤ËºÆ¸½¤·¤Æ¤¤¤Ê¤¤¡¤¤ï¤º¤«¤ÊÇÛÃÖÉÔÈ÷¤â¤Þ
¤À¤¢¤ê¤Þ¤¹¡¥

@item
@c The user can specify both an Ignore file and an Only file.  This is not
@c allowed with System V @command{ptx}.
@c 
¥æ¡¼¥¶¤Ï¡¤Ignore¥Õ¥¡¥¤¥ë¤ÈOnly¥Õ¥¡¥¤¥ë¤ÎÎ¾Êý¤ò»ØÄê¤Ç¤­¤Þ¤¹¡¥¤³¤ì¤Ï¡¤
System V @command{ptx}¤Ç¤Ïµö²Ä¤µ¤ì¤Þ¤»¤ó¡¥

@end itemize


@node Operating on fields within a line
@c @chapter Operating on fields within a line
@chapter ¹Ô¤Î¥Õ¥£¡¼¥ë¥É¤Î½èÍý

@menu
* cut invocation::              Print selected parts of lines.
* paste invocation::            Merge lines of files.
* join invocation::             Join lines on a common field.
@end menu


@node cut invocation
@c @section @command{cut}: Print selected parts of lines
@section @command{cut}: ¹Ô¤ÎÁªÂò¤·¤¿ÉôÊ¬¤Î½ÐÎÏ

@pindex cut
@c @command{cut} writes to standard output selected parts of each line of each
@c input file, or standard input if no files are given or for a file name of
@c @samp{-}.  Synopsis:
@c 
@command{cut}¤Ï¡¤¤½¤ì¤¾¤ì¤ÎÆþÎÏ¥Õ¥¡¥¤¥ë¤ä¡¤¥Õ¥¡¥¤¥ë¤¬Í¿¤¨¤é¤ì¤Ê¤¤¾ì¹ç
¤ä@samp{-}¤Î¥Õ¥¡¥¤¥ëÌ¾¤ËÂÐ¤·¤Æ¤ÏÉ¸½àÆþÎÏ¤Î¡¤¤½¤ì¤¾¤ì¤Î¹Ô¤ÎÁªÂò¤µ¤ì¤¿Éô
Ê¬¤òÉ¸½à½ÐÎÏ¤Ë½ñ¤­½Ð¤·¤Þ¤¹¡¥³µÍ×¤Ç¤¹¡¥

@example
cut [@var{option}]@dots{} [@var{file}]@dots{}
@end example

@c In the table which follows, the @var{byte-list}, @var{character-list},
@c and @var{field-list} are one or more numbers or ranges (two numbers
@c separated by a dash) separated by commas.  Bytes, characters, and
@c fields are numbered starting at 1.  Incomplete ranges may be
@c given: @option{-@var{m}} means @samp{1-@var{m}}; @samp{@var{n}-} means
@c @samp{@var{n}} through end of line or last field.  The list elements
@c can be repeated, can overlap, and can be specified in any order; but
@c the selected input is written in the same order that it is read, and
@c is written exactly once.
@c 
°Ê²¼¤ÎÉ½¤Ç¡¤@var{byte-list}¡¤@var{character-list}¡¤¤½¤·¤Æ
@var{field-list}¤Ï¡¤°ì¤Ä°Ê¾å¤Î¿ô»ú¤Þ¤¿¤Ï¥«¥ó¥Þ¤ÇÊ¬¤±¤é¤ì¤¿(¥À¥Ã¥·¥å¤Ç
Ê¬¤±¤é¤ì¤¿Æó¤Ä¤Î¿ô»ú¤Î)ÈÏ°Ï¤Ç¤¹¡¥¥Ð¥¤¥È¡¤Ê¸»ú¡¤¤½¤·¤Æ¥Õ¥£¡¼¥ë¥É¤Ï¡¤1¤Ç
»Ï¤Þ¤ëÈÖ¹æ¤¬¤Ä¤­¤Þ¤¹¡¥ÉÔ´°Á´¤ÊÈÏ°Ï¤òÍ¿¤¨¤ë¤³¤È¤¬¤Ç¤­¤Þ¤¹¡¥
@samp{-@var{m}}¤Ï@samp{1-@var{m}}¤ò°ÕÌ£¤·¤Þ¤¹¡¥@samp{@var{n}-}¤Ï¡¤
@samp{@var{n}}¤«¤é¹ÔËö¤ä¥Õ¥£¡¼¥ë¥É¤Î½ª¤ê¤Þ¤Ç¤ò°ÕÌ£¤·¤Þ¤¹¡¥

@c The program accepts the following options.  Also see @ref{Common
@c options}.
@c 
¤³¤Î¥×¥í¥°¥é¥à¤Ï°Ê²¼¤Î¥ª¥×¥·¥ç¥ó¤â¼õ¤±Æþ¤ì¤Þ¤¹¡¥@ref{Common options}¤â
»²¾È¤·¤Æ¤¯¤À¤µ¤¤¡¥

@table @samp

@item -b @var{byte-list}
@itemx --bytes=@var{byte-list}
@opindex -b
@opindex --bytes
@c Print only the bytes in positions listed in @var{byte-list}.  Tabs and
@c backspaces are treated like any other character; they take up 1 byte.
@c If an output delimiter is specified, (see the description of
@c @option{--output-delimiter}), then output that string between
@c ranges of selected bytes.
@c 
@var{byte-list}¤Ç¥ê¥¹¥È¥¢¥Ã¥×¤µ¤ì¤¿°ÌÃÖ¤Ë¤¢¤ë¥Ð¥¤¥È¤Î¤ß¤ò½ÐÎÏ¤·¤Þ¤¹¡¥
¥¿¥Ö¤È¥Ð¥Ã¥¯¥¹¥Ú¡¼¥¹¤ÏÂ¾¤ÎÊ¸»ú¤ÈÆ±ÍÍ¤Ë°·¤ï¤ì¤Þ¤¹¡¥¤½¤ì¤é¤Ï1¥Ð¥¤¥È»ÈÍÑ
¤·¤Þ¤¹¡¥½ÐÎÏ¤ÎÊ¬Î¥Ê¸»ú¤¬»ØÄê¤µ¤ì¤Æ¤¤¤ë¾ì¹ç(@option{--output-delimiter} 
¤ò»²¾È¤·¤Æ²¼¤µ¤¤)¡¤ÁªÂò¤·¤¿¥Ð¥¤¥È¤ÎÈÏ°Ï¤Î´Ö¤ÎÊ¸»úÎó¤ò½ÐÎÏ¤·¤Þ¤¹¡¥

@item -c @var{character-list}
@itemx --characters=@var{character-list}
@opindex -c
@opindex --characters
@c Print only characters in positions listed in @var{character-list}.
@c The same as @option{-b} for now, but internationalization will change
@c that.  Tabs and backspaces are treated like any other character; they
@c take up 1 character.
@c If an output delimiter is specified, (see the description of
@c @option{--output-delimiter}), then output that string between
@c ranges of selected bytes.
@c 
@var{character-list}¤Ë¥ê¥¹¥È¥¢¥Ã¥×¤µ¤ì¤Æ¤¤¤ë°ÌÃÖ¤Ë¤¢¤ëÊ¸»ú¤Î¤ß¤ò½ÐÎÏ¤·
¤Þ¤¹¡¥¸½ºß¤Ï@option{-b}¤ÈÆ±¤¸¤Ç¤¹¤¬¡¤¹ñºÝ²½¤Ç¤½¤ì¤¬ÊÑ¹¹¤µ¤ì¤ë²ÄÇ½À­¤¬
¤¢¤ê¤Þ¤¹¡¥¥¿¥Ö¤È¥Ð¥Ã¥¯¥¹¥Ú¡¼¥¹¤ÏÂ¾¤ÎÊ¸»ú¤ÈÆ±ÍÍ¤Ë°·¤ï¤ì¤Þ¤¹¡¥¤½¤ì¤é¤Ï1 
¥Ð¥¤¥È»ÈÍÑ¤·¤Þ¤¹¡¥½ÐÎÏ¤ÎÊ¬Î¥Ê¸»ú¤¬»ØÄê¤µ¤ì¤Æ¤¤¤ë¾ì¹ç
(@option{--output-delimiter} ¤ò»²¾È¤·¤Æ²¼¤µ¤¤)¡¤ÁªÂò¤·¤¿¥Ð¥¤¥È¤ÎÈÏ°Ï¤Î
´Ö¤ÎÊ¸»úÎó¤ò½ÐÎÏ¤·¤Þ¤¹¡¥

@item -f @var{field-list}
@itemx --fields=@var{field-list}
@opindex -f
@opindex --fields
@c Print only the fields listed in @var{field-list}.  Fields are
@c separated by a TAB character by default.
@c Also print any line that contains no delimiter character, unless
@c the @option{--only-delimited} (@option{-s}) option is specified
@c 
@var{field-list}¤Ë¥ê¥¹¥È¥¢¥Ã¥×¤µ¤ì¤¿¥Õ¥£¡¼¥ë¥É¤Î¤ß¤ò½ÐÎÏ¤·¤Þ¤¹¡¥¥Ç¥Õ¥©
¥ë¥È¤Ç¡¤¥Õ¥£¡¼¥ë¥É¤ÏTABÊ¸»ú¤ÇÊ¬¤±¤é¤ì¤Æ¤¤¤Þ¤¹¡¥
@option{--only-delimited} (@option{-s})¥ª¥×¥·¥ç¥ó¤¬»ØÄê¤µ¤ì¤Ê¤¤¸Â¤ê¡¤
¥Ç¥ê¥ß¥¿Ê¸»ú¤ÎÌµ¤¤¹Ô¤â½ÐÎÏ¤µ¤ì¤Þ¤¹¡¥

@item -d @var{input_delim_byte}
@itemx --delimiter=@var{input_delim_byte}
@opindex -d
@opindex --delimiter
@c For @option{-f}, fields are separated in the input by the first character
@c in @var{input_delim_byte} (default is TAB).
@c 
@option{-f}¤ËÂÐ¤·¡¤¥Õ¥£¡¼¥ë¥É¤Ï¡¤@var{input_delim_byte}¤ÎºÇ½é¤ÎÊ¸»ú¤Ë
¤è¤Ã¤Æ¡¤ÆþÎÏ¤òÊ¬Î¥¤·¤¿¤â¤Î¤Ë¤Ê¤ê¤Þ¤¹¡¥(¥Ç¥Õ¥©¥ë¥È¤ÏTAB¤Ç¤¹)¡¥

@item -n
@opindex -n
@c Do not split multi-byte characters (no-op for now).
@c 
¥Þ¥ë¥Á¥Ð¥¤¥È¤ÎÊ¸»ú¤òÊ¬¤±¤Þ¤»¤ó(¸½ºß²¿¤â¤·¤Þ¤»¤ó)¡¥

@item -s
@itemx --only-delimited
@opindex -s
@opindex --only-delimited
@c For @option{-f}, do not print lines that do not contain the field separator
@c character.  Normally, any line without a field separator is printed verbatim.
@c 
@option{-f}¤ËÂÐ¤·¡¤¥Õ¥£¡¼¥ë¥ÉÊ¬Î¥Ê¸»ú¤ò´Þ¤Þ¤Ê¤¤Îó¤ò½ÐÎÏ¤·¤Þ¤»¤ó¡¥ÄÌ¾ï¡¤
¥Õ¥£¡¼¥ë¥ÉÊ¬Î¥Ê¸»ú¤¬Ìµ¤¤¹Ô¤Ï¡¤¤½¤Î¤Þ¤Þ½ÐÎÏ¤µ¤ì¤Þ¤¹¡¥

@itemx --output-delimiter=@var{output_delim_string}
@opindex --output-delimiter
@c With @option{-f}, output fields are separated by @var{output_delim_string}.
@c The default with @option{-f} is to use the input delimiter.
@c When using @option{-b} or @option{-c} to select ranges of byte or
@c character offsets (as opposed to ranges of fields),
@c output @var{output_delim_string} between ranges of selected bytes.
@c 
@option{-f}¤ËÂÐ¤·¡¤½ÐÎÏ¥Õ¥£¡¼¥ë¥É¤Ï¡¤@var{output_delim_string}¤ÇÊ¬¤±¤é
¤ì¤Þ¤¹¡¥¥Ç¥Õ¥©¥ë¥È¤ÏÆþÎÏ¤ÎÊ¬Î¥Ê¸»ú¤ò»ÈÍÑ¤·¤Þ¤¹¡¥¥Ð¥¤¥È¤äÊ¸»ú¤Î¥ª¥Õ¥»¥Ã
¥È¤ÎÈÏ°Ï¤òÁªÂò¤¹¤ë¤¿¤á¤Ë@option{-b}¤ä@option{-c}¤ò»ÈÍÑ¤·¤Æ¤¤¤ë¤È¤­¡¤Áª
Âò¤·¤¿¥Ð¥¤¥È¿ô¤ÎÈÏ°Ï¤Î´Ö¤Ë@var{output_delim_string}¤ò½ÐÎÏ¤·¤Þ¤¹¡¥

@end table

@exitstatus


@node paste invocation
@c @section @command{paste}: Merge lines of files
@section @command{paste}: ¥Õ¥¡¥¤¥ë¤Î¹Ô¤òÅý¹ç¤·¤Þ¤¹

@pindex paste
@cindex merging files

@c @command{paste} writes to standard output lines consisting of sequentially
@c corresponding lines of each given file, separated by a TAB character.
@c Standard input is used for a file name of @samp{-} or if no input files
@c are given.
@c 
@command{paste}¤Ï¡¤Í¿¤¨¤é¤ì¤¿¤½¤ì¤¾¤ì¤Î¥Õ¥¡¥¤¥ë¤Î¡¤½çÈÖÅª¤ËÂÐ±þ¤·¤Æ¤¤
¤ë¹Ô¤ò¡¤TABÊ¸»ú¤ÇÊ¬Î¥¤·¤Ê¤¬¤éÉ¸½à½ÐÎÏ¤Ë½ñ¤­½Ð¤·¤Þ¤¹¡¥@samp{-}¤Î¥Õ¥¡¥¤
¥ëÌ¾¤ËÂÐ¤·¤Æ¡¤¤Þ¤¿¤ÏÆþÎÏ¥Õ¥¡¥¤¥ë¤¬Í¿¤¨¤é¤ì¤Ê¤¤¾ì¹ç¡¤É¸½àÆþÎÏ¤¬»ÈÍÑ¤µ¤ì
¤Þ¤¹¡¥

@c For example:
@c 
Îã¤¨¤Ð°Ê²¼¤Î¤è¤¦¤Ë¤Ê¤ê¤Þ¤¹¡¥

@example
$ cat num2
1
2
$ cat let3
a
b
c
$ paste num2 let3
1       a
2       b
        c
@end example

@c Synopsis:
@c 
³µÍ×¤Ç¤¹¡¥

@example
paste [@var{option}]@dots{} [@var{file}]@dots{}
@end example

@c The program accepts the following options.  Also see @ref{Common options}.
@c 
¥×¥í¥°¥é¥à¤Ï°Ê²¼¤Î¥ª¥×¥·¥ç¥ó¤ò¼õ¤±Æþ¤ì¤Þ¤¹¡¥@ref{Common options}¤â»²¾È
¤·¤Æ¤¯¤À¤µ¤¤¡¥

@table @samp

@item -s
@itemx --serial
@opindex -s
@opindex --serial
@c Paste the lines of one file at a time rather than one line from each
@c file.  Using the above example data:
@c 
¤½¤ì¤¾¤ì¤Î¥Õ¥¡¥¤¥ë¤«¤é°ì¹Ô¤Ç¤Ï¤Ê¤¯¡¤°ìÅÙ¤Ë°ì¤Ä¤Î¥Õ¥¡¥¤¥ë¤Î¹Ô¤ò¥Ú¡¼¥¹¥È
¤·¤Þ¤¹¡¥

@example
$ paste -s num2 let3
1       2
a       b       c
@end example

@item -d @var{delim-list}
@itemx --delimiters=@var{delim-list}
@opindex -d
@opindex --delimiters
@c Consecutively use the characters in @var{delim-list} instead of
@c TAB to separate merged lines.  When @var{delim-list} is
@c exhausted, start again at its beginning.  Using the above example data:
@c 
Åý¹ç¤µ¤ì¤ë¹Ô¤ÎÊ¬Î¥Ê¸»úTAB¤ÎÂå¤ï¤ê¤Ë¡¤@var{delim-list}¤ÎÊ¸»ú¤ò½çÈÖ¤Ë»È
ÍÑ¤·¤Þ¤¹¡¥@var{delim-list}¤¬»È¤¤¿Ô¤¯¤µ¤ì¤¿¤È¤­¡¤ºÇ½é¤«¤éºÆ¤Ó³«»Ï¤·¤Þ¤¹¡¥

@example
$ paste -d '%_' num2 let3 num2
1%a_1
2%b_2
%c_
@end example

@end table

@exitstatus


@node join invocation
@c @section @command{join}: Join lines on a common field
@section @command{join}: ¶¦ÄÌ¤Î¥Õ¥£¡¼¥ë¥É¤Ç¹Ô¤ò·ë¹ç

@pindex join
@cindex common field, joining on

@c @command{join} writes to standard output a line for each pair of input
@c lines that have identical join fields.  Synopsis:
@c 
@command{join}¤Ï¡¤Æ±°ì¤Î·ë¹ç¥Õ¥£¡¼¥ë¥É¤ò»ý¤Ä¤½¤ì¤¾¤ì¤ÎÆþÎÏ¹Ô¤ÎÁÈ¤ËÂÐ¤·¡¤
°ì¹Ô¤òÉ¸½à½ÐÎÏ¤Ë½ñ¤­½Ð¤·¤Þ¤¹¡¥³µÍ×¤Ç¤¹¡¥

@example
join [@var{option}]@dots{} @var{file1} @var{file2}
@end example

@vindex LC_COLLATE
@c Either @var{file1} or @var{file2} (but not both) can be @samp{-},
@c meaning standard input.  @var{file1} and @var{file2} should be
@c sorted on the join fields.
@c 
@var{file1}¤Þ¤¿¤Ï@var{file2}¤Ï(Î¾Êý¤Ç¤Ï¤Ê¤¯)@samp{-}¤¬²ÄÇ½¤Ç¡¤É¸½àÆþÎÏ
¤ò°ÕÌ£¤·¤Þ¤¹¡¥@var{file1}¤È@var{file2}¤Ï¡¤·ë¹ç¥Õ¥£¡¼¥ë¥É¾å¤ÇÊÂ¤ÙÂØ¤¨¤·
¤Æ¤ª¤¯¤Ù¤­¤Ç¤¹¡¥

@c Normally, the sort order is that of the
@c collating sequence specified by the @env{LC_COLLATE} locale.  Unless
@c the @option{-t} option is given, the sort comparison ignores blanks at
@c the start of the join field, as in @code{sort -b}.  If the
@c @option{--ignore-case} option is given, the sort comparison ignores
@c the case of characters in the join field, as in @code{sort -f}.
@c 
ÄÌ¾ï¡¤ÊÂ¤ÙÂØ¤¨¤Î½ç½ø¤Ï¡¤@env{LC_COLLATE}¥í¥«¡¼¥ë¤Ç»ØÄê¤µ¤ì¤Æ¤¤¤ë½çÈÖ¤Ç
¤¹¡¥@option{-t}¥ª¥×¥·¥ç¥ó¤¬Í¿¤¨¤é¤ì¤Ê¤¤¸Â¤ê¡¤@code{sort -b}¤Î¤è¤¦¤Ë¡¤
ÊÂ¤ÙÂØ¤¨¤ÎÈæ³Ó¤Ç¤Ï·ë¹ç¥Õ¥£¡¼¥ë¥É¤ÎºÇ½é¤Î¶õÇò¤ÏÌµ»ë¤µ¤ì¤Þ¤¹¡¥
@option{--ignore-case}¥ª¥×¥·¥ç¥ó¤¬Í¿¤¨¤é¤ì¤Æ¤¤¤ë¾ì¹ç¡¤@code{sort -f}¤Î
¤è¤¦¤Ë¡¤ÊÂ¤ÙÂØ¤¨¤ÎÈæ³Ó¤Ç¤Ï·ë¹ç¥Õ¥£¡¼¥ë¥É¤ÎÊ¸»ú¤ÎÂçÊ¸»ú¾®Ê¸»ú¤ÏÌµ»ë¤µ¤ì
¤Þ¤¹¡¥

@c However, as a GNU extension, if the input has no unpairable lines the
@c sort order can be any order that considers two fields to be equal if and
@c only if the sort comparison described above considers them to be equal.
@c For example:
@c 
¤·¤«¤·¡¤GNU¤Î³ÈÄ¥¤È¤·¤Æ¡¤ÆþÎÏ¤ËÁÈ¤Ë¤Ê¤ë¹Ô¤¬Ìµ¤¤¾ì¹ç¡¤ÊÂ¤Ó½ç¤Ï¡¤¾åµ­¤Î
ÊÂ¤ÓÂØ¤¨¤ÎÈæ³Ó¤¬Æ±¤¸¤Ç¤¢¤ë¤È¹Í¤¨¤é¤ì¤ë¾ì¹ç¡¤¤½¤·¤Æ¤½¤Î¤È¤­¤À¤±¡¤Æó¤Ä¤Î
¥Õ¥£¡¼¥ë¥É¤¬Æ±¤¸¤Ç¤¢¤ë¤È¹Í¤¨¤é¤ì¤ë½çÈÖ¤Ë¤Ê¤ë¤Ï¤º¤Ç¤¹¡¥Îã¤¨¤Ð¡¤°Ê²¼¤Î¤è
¤¦¤Ë¤Ê¤ê¤Þ¤¹¡¥

@example
$ cat file1
a a1
c c1
b b1
$ cat file2
a a2
c c2
b b2
$ join file1 file2
a a1 a2
c c1 c2
b b1 b2
@end example

@c The defaults are: the join field is the first field in each line;
@c fields in the input are separated by one or more blanks, with leading
@c blanks on the line ignored; fields in the output are separated by a
@c space; each output line consists of the join field, the remaining
@c fields from @var{file1}, then the remaining fields from @var{file2}.
@c 
¥Ç¥Õ¥©¥ë¥È¤Ï¡¤°Ê²¼¤ÎÄÌ¤ê¤Ç¤¹¡¥·ë¹ç¥Õ¥£¡¼¥ë¥É¤Ï¡¤¤½¤ì¤¾¤ì¤Î¹Ô¤ÎºÇ½é¤Î
¥Õ¥£¡¼¥ë¥É¤Ç¤¹¡¥ÆþÎÏ¤Î¥Õ¥£¡¼¥ë¥É¤Ï¡¤°ì¤Ä°Ê¾å¤Î¶õÇò¤ÇÊ¬Î¥¤µ¤ì¤Æ¤¤¤Æ¡¤¹Ô
¤ÎÁ°¤Î¶õÇò¤ÏÌµ»ë¤µ¤ì¤Þ¤¹¡¥½ÐÎÏ¤Î¥Õ¥£¡¼¥ë¥É¤Ï¥¹¥Ú¡¼¥¹¤ÇÊ¬Î¥¤µ¤ì¤Æ¤¤¤Þ¤¹¡¥
¤½¤ì¤¾¤ì¤Î½ÐÎÏ¹Ô¤Ï¡¤·ë¹ç¥Õ¥£¡¼¥ë¥É¡¤@var{file1}¤Î»Ä¤ê¤Î¥Õ¥£¡¼¥ë¥É¡¤¤½
¤·¤Æ@var{file2}¤Î»Ä¤ê¤Î¥Õ¥£¡¼¥ë¥É¤«¤éÀ®¤êÎ©¤Á¤Þ¤¹¡¥

@c The program accepts the following options.  Also see @ref{Common options}.
@c 
¥×¥í¥°¥é¥à¤Ï¡¤°Ê²¼¤Î¥ª¥×¥·¥ç¥ó¤ò¼õ¤±Æþ¤ì¤Þ¤¹¡¥@ref{Common options}¤â»²
¾È¤·¤Æ¤¯¤À¤µ¤¤¡¥

@table @samp

@item -a @var{file-number}
@opindex -a
@c Print a line for each unpairable line in file @var{file-number} (either
@c @samp{1} or @samp{2}), in addition to the normal output.
@c 
¥Õ¥¡¥¤¥ë@var{file-number} (@samp{1}¤Þ¤¿¤Ï@samp{2}¤Î¤¤¤º¤ì¤«)¤ÇÁÈ¤Ë¤Ê¤Ã
¤Æ¤¤¤Ê¤¤¤½¤ì¤¾¤ì¤Î¹Ô¤ËÂÐ¤·¡¤°ì¹Ô¤òÄÌ¾ï¤Î½ÐÎÏ¤ËÄÉ²Ã¤·¤Æ½ÐÎÏ¤·¤Þ¤¹¡¥

@item -e @var{string}
@opindex -e
@c Replace those output fields that are missing in the input with
@c @var{string}.
@c 
ÆþÎÏ¤Ç·ç¤±¤Æ¤¤¤ë¤³¤ì¤é¤Î½ÐÎÏ¥Õ¥£¡¼¥ë¥É¤ò¡¤@var{string}¤ÇÃÖ´¹¤·¤Þ¤¹¡¥

@item -i
@itemx --ignore-case
@opindex -i
@opindex --ignore-case
@c Ignore differences in case when comparing keys.
@c With this option, the lines of the input files must be ordered in the same way.
@c Use @samp{sort -f} to produce this ordering.
@c 
¥­¡¼¤òÈæ³Ó¤¹¤ë¤È¤­¡¤ÂçÊ¸»ú¾®Ê¸»ú¤Î°ã¤¤¤òÌµ»ë¤·¤Þ¤¹¡¥¤³¤Î¥ª¥×¥·¥ç¥ó¤òÍÑ
¤¤¤ë¤È¡¤ÆþÎÏ¥Õ¥¡¥¤¥ë¤Î¹Ô¤ÏÆ±¤¸ÊýË¡¤Ç¥½¡¼¥È¤µ¤ì¤Æ¤¤¤ëÉ¬Í×¤¬¤¢¤ê¤Þ¤¹¡¥¤³
¤Î½ç½ø¤òÀ¸À®¤¹¤ë¤¿¤á¤Ë¡¤@samp{sort -f}¤ò»ÈÍÑ¤·¤Æ¤¯¤À¤µ¤¤¡¥

@item -1 @var{field}
@opindex -1
@c Join on field @var{field} (a positive integer) of file 1.
@c 
¥Õ¥¡¥¤¥ë1¤Î¥Õ¥£¡¼¥ë¥É@var{field}(Àµ¤ÎÀ°¿ô)¤Ç·ë¹ç¤·¤Þ¤¹¡¥

@item -2 @var{field}
@opindex -2
@c Join on field @var{field} (a positive integer) of file 2.
@c 
¥Õ¥¡¥¤¥ë2¤Î¥Õ¥£¡¼¥ë¥É@var{field} (Àµ¤ÎÀ°¿ô)¤Ç·ë¹ç¤·¤Þ¤¹¡¥

@item -j @var{field}
@c Equivalent to @option{-1 @var{field} -2 @var{field}}.
@c 
@samp{-1 @var{field} -2 @var{field}}¤ÈÆ±¤¸¤Ç¤¹¡¥

@item -o @var{field-list}
@c Construct each output line according to the format in @var{field-list}.
@c Each element in @var{field-list} is either the single character @samp{0} or
@c has the form @var{m.n} where the file number, @var{m}, is @samp{1} or
@c @samp{2} and @var{n} is a positive field number.
@c 
@var{field-list}¤Î½ñ¼°¤Ë½¾¤¤¡¤¤½¤ì¤¾¤ì¤Î½ÐÎÏ¹Ô¤òÀ¸À®¤·¤Þ¤¹¡¥
@var{field-list}¤Î¤½¤ì¤¾¤ì¤ÎÍ×ÁÇ¤Ï¡¤Ã±°ìÊ¸»ú@samp{0}¡¤¤Þ¤¿¤Ï¡¤¥Õ¥¡¥¤¥ë
ÈÖ¹æ¤Î@var{m}¡¤@samp{1}¤Þ¤¿¤Ï@samp{2}¡¤¤½¤·¤Æ@var{n}¤¬Àµ¤Î¥Õ¥£¡¼¥ë¥ÉÈÖ
¹æ¤È¤Ê¤Ã¤Æ¤¤¤ë¡¤@var{m.n}¤Î·Á¼°¤Ë¤Ê¤ê¤Þ¤¹¡¥

@c A field specification of @samp{0} denotes the join field.
@c In most cases, the functionality of the @samp{0} field spec
@c may be reproduced using the explicit @var{m.n} that corresponds
@c to the join field.  However, when printing unpairable lines
@c (using either of the @option{-a} or @option{-v} options), there is no way
@c to specify the join field using @var{m.n} in @var{field-list}
@c if there are unpairable lines in both files.
@c To give @command{join} that functionality, @acronym{POSIX} invented the @samp{0}
@c field specification notation.
@c 
@samp{0}¤Î¥Õ¥£¡¼¥ë¥É»ØÄê¤Ï¡¤·ë¹ç¥Õ¥£¡¼¥ë¥É¤ò¼¨¤·¤Þ¤¹¡¥¤Û¤È¤ó¤É¤Î¾ì¹ç¡¤
@samp{0}¥Õ¥£¡¼¥ë¥É¤Î»ØÄê¤Îµ¡Ç½¤Ï¡¤ÂÐ±þ¤¹¤ë·ë¹ç¥Õ¥£¡¼¥ë¥É¤È¤Ê¤ë¡¤ÌÀ¼¨Åª
¤Ê@var{m.n}¤òÍÑ¤¤¤ÆºÆ¸½¤Ç¤­¤Þ¤¹¡¥¤·¤«¤·¡¤(@option{-a}¤Þ¤¿¤Ï@option{-v}
¥ª¥×¥·¥ç¥ó¤òÍÑ¤¤¤Æ)ÁÈ¤Ë¤Ê¤é¤Ê¤¤¹Ô¤ò½ÐÎÏ¤¹¤ë¤È¤­¡¤Î¾Êý¤Î¥Õ¥¡¥¤¥ë¤ÇÁÈ¤Ë
¤Ê¤é¤Ê¤¤¹Ô¤¬¤¢¤ë¾ì¹ç¡¤@var{field-list}¤Ç@var{m.n}¤òÍÑ¤¤¤Æ·ë¹ç¥Õ¥£¡¼¥ë
¥É¤ò»ØÄê¤¹¤ëÊýË¡¤Ï¤¢¤ê¤Þ¤»¤ó¡¥@command{join}¤Ë¤½¤Îµ¡Ç½¤òÍ¿¤¨¤ë¤¿¤á¡¤
@acronym{POSIX}¤Ï@samp{0}¥Õ¥£¡¼¥ë¥É»ØÄê¤ÎÉ½µ­¤ò¹Í¤¨½Ð¤·¤Þ¤·¤¿¡¥

@c The elements in @var{field-list}
@c are separated by commas or blanks.
@c All output lines -- including those printed because of any -a or -v
@c option -- are subject to the specified @var{field-list}.
@c 
@var{field-list}¤ÎÍ×ÁÇ¤Ï¡¤¥«¥ó¥Þ¤Þ¤¿¤Ï¶õÇò¤ÇÊ¬¤±¤é¤ì¤Æ¤¤¤Þ¤¹¡¥Á´¤Æ¤Î½Ð
ÎÏ¹Ô¤Ï -- @option{-a}¤ä@option{-v}¥ª¥×¥·¥ç¥ó¤Ç½ÐÎÏ¤µ¤ì¤ë¤â¤Î¤ò´Þ¤á -- 
»ØÄê¤µ¤ì¤¿@var{field-list}¤¬Å¬ÍÑ¤µ¤ì¤Þ¤¹¡¥

@item -t @var{char}
@c Use character @var{char} as the input and output field separator.
@c Treat as significant each occurrence of @var{char} in the input file.
@c 
Ê¸»ú@var{char}¤òÆþ½ÐÎÏ¤Î¥Õ¥£¡¼¥ë¥É¥»¥Ñ¥ì¡¼¥¿¤È¤·¤Æ»ÈÍÑ¤·¤Þ¤¹¡¥ÆþÎÏ¥Õ¥¡
¥¤¥ë¤Ç@var{char}¤¬¸«¤Ä¤«¤ë¤¿¤Ó¤Ë¡¤°ÕÌ£¤¬¤¢¤ë¤â¤Î¤È¤·¤Æ°·¤¤¤Þ¤¹¡¥

@item -v @var{file-number}
@c Print a line for each unpairable line in file @var{file-number}
@c (either @samp{1} or @samp{2}), instead of the normal output.
@c 
ÄÌ¾ï¤Î½ÐÎÏ¤ÎÂå¤ï¤ê¤Ë¡¤¥Õ¥¡¥¤¥ë@var{file-number} (@samp{1}¤Þ¤¿¤Ï
@samp{2})¤ÎÁÈ¤Ë¤Ê¤é¤Ê¤¤¤½¤ì¤¾¤ì¤Î¹Ô¤ËÂÐ¤·¡¤°ì¹Ô¤ò½ÐÎÏ¤·¤Þ¤¹¡¥

@end table

@c In addition, when @sc{gnu} @command{join} is invoked with exactly one argument,
@c the @option{--help} and @option{--version} options are recognized.
@c @xref{Common options}.
@c 
¹¹¤Ë¡¤@sc{gnu} @command{join}¤Ï¡¤Ã±°ì¤Î°ú¿ô¤Ç¸Æ¤Ó½Ð¤µ¤ì¤¿¤È¤­¡¤¥ª¥×¥·¥ç
¥ó@option{--help}¤È@option{--version}¤ÏÇ§¼±¤µ¤ì¤Þ¤¹¡¥@xref{Common
options}.

@exitstatus


@node Operating on characters
@c @chapter Operating on characters
@chapter Ê¸»ú¤Î½èÍý

@cindex operating on characters

@c This commands operate on individual characters.
@c 
¤³¤Î¥³¥Þ¥ó¥É¤Ï¡¤¸ÄÊÌ¤ËÊ¸»ú¤ò½èÍý¤·¤Þ¤¹¡¥

@menu
* tr invocation::               Translate, squeeze, and/or delete characters.
* expand invocation::           Convert tabs to spaces.
* unexpand invocation::         Convert spaces to tabs.
@end menu


@node tr invocation
@c @section @command{tr}: Translate, squeeze, and/or delete characters
@section @command{tr}: Ê¸»ú¤ÎÊÑ´¹¡¤°µ½Ì¡¤¤½¤·¤Æ/¤Þ¤¿¤Ï¡¤ºï½ü

@pindex tr

@c Synopsis:
@c 
³µÍ×¤Ç¤¹¡¥

@example
tr [@var{option}]@dots{} @var{set1} [@var{set2}]
@end example

@c @command{tr} copies standard input to standard output, performing
@c one of the following operations:
@c 
@command{tr}¤ÏÉ¸½àÆþÎÏ¤òÉ¸½à½ÐÎÏ¤Ë¥³¥Ô¡¼¤·¡¤¤½¤Î¤È¤­°Ê²¼¤Î½èÍý¤Î°ì¤Ä¤ò
¼Â¹Ô¤·¤Þ¤¹¡¥

@itemize @bullet
@item
@c translate, and optionally squeeze repeated characters in the result,
@c 
ÊÑ´¹¡¤¤µ¤é¤Ë·ë²Ì¤Î·«¤êÊÖ¤·Ê¸»ú¤Î°µ½Ì¡¥
@item
@c squeeze repeated characters,
@c 
·«¤êÊÖ¤·Ê¸»ú¤Î°µ½Ì¡¥
@item
@c delete characters,
@c 
Ê¸»ú¤Îºï½ü¡¥
@item
@c delete characters, then squeeze repeated characters from the result.
@c 
Ê¸»ú¤Îºï½ü¸å¡¤·ë²Ì¤«¤é·«¤êÊÖ¤·Ê¸»ú¤Î°µ½Ì¡¥
@end itemize

@c The @var{set1} and (if given) @var{set2} arguments define ordered
@c sets of characters, referred to below as @var{set1} and @var{set2}.  These
@c sets are the characters of the input that @command{tr} operates on.
@c The @option{--complement} (@option{-c}) option replaces @var{set1} with its
@c complement (all of the characters that are not in @var{set1}).
@c 
@var{set1}¤È(Í¿¤¨¤é¤ì¤Æ¤¤¤ë¾ì¹ç)@var{set2}°ú¿ô¤Ï¡¤½çÈÖÉÕ¤±¤µ¤ì¤¿Ê¸»ú¤ò
ÄêµÁ¤·¡¤°Ê²¼¤Î@var{set1}¤È@var{set2}¤ò»²¾È¤·¤Þ¤¹¡¥¤³¤ì¤é¤ÎÁÈ¤Ï¡¤
@command{tr}¤¬½èÍý¤¹¤ëÆþÎÏÊ¸»ú¤Ç¤¹¡¥@option{--complement}
(@option{-c})¥ª¥×¥·¥ç¥ó¤Ï¡¤@var{set1}¤ò¤½¤ÎÊä½¸¹ç(@var{set1}¤ËÌµ¤¤Á´¤Æ
¤ÎÊ¸»ú)¤ËÃÖ´¹¤·¤Þ¤¹¡¥

@exitstatus

@menu
* Character sets::              Specifying sets of characters.
* Translating::                 Changing one set of characters to another.
* Squeezing::                   Squeezing repeats and deleting.
* Warnings in tr::              Warning messages.
@end menu


@node Character sets
@c @subsection Specifying sets of characters
@subsection Ê¸»ú¤ÎÁÈ¤Î»ØÄê

@cindex specifying sets of characters

@c The format of the @var{set1} and @var{set2} arguments resembles
@c the format of regular expressions; however, they are not regular
@c expressions, only lists of characters.  Most characters simply
@c represent themselves in these strings, but the strings can contain
@c the shorthands listed below, for convenience.  Some of them can be
@c used only in @var{set1} or @var{set2}, as noted below.
@c 
@var{set1}¤È@var{set2}¤Î°ú¿ô¤Î½ñ¼°¤Ï¡¤Àµµ¬É½¸½¤Î½ñ¼°¤Ë»÷¤Æ¤¤¤Þ¤¹¡¥¤·¤«
¤·Àµµ¬É½¸½¤Ç¤Ï¤Ê¤¯¡¤Ê¸»ú¤Î¥ê¥¹¥È¤Î¤ß¤Ç¤¹¡¥¤³¤ì¤é¤ÎÊ¸»úÎó¤Î¤Û¤È¤ó¤É¤ÎÊ¸
»ú¤ÏÃ±¤Ë¤½¤ÎÊ¸»ú¼«¿È¤òÉ½¤·¤Þ¤¹¤¬¡¤ÍøÊØÀ­¤Î¤¿¤á¡¤Ê¸»úÎó¤Ë¤Ï°Ê²¼¤Ç¥ê¥¹¥È
¥¢¥Ã¥×¤µ¤ì¤¿Â®µ­¤ò´Þ¤à¤³¤È¤¬¤Ç¤­¤Þ¤¹¡¥¤½¤Î¤¦¤Á¡¤°Ê²¼¤ÇÃí°Õ¤¹¤ë
@var{set1}¤Þ¤¿¤Ï@var{set2}¤Î¤ß¤Ç¤·¤«ÍøÍÑ¤Ç¤­¤Ê¤¤¤â¤Î¤â¤¢¤ê¤Þ¤¹¡¥

@table @asis

@c @item Backslash escapes
@item ¥Ð¥Ã¥¯¥¹¥é¥Ã¥·¥å¥¨¥¹¥±¡¼¥×
@cindex backslash escapes

@c A backslash followed by a character not listed below causes an error
@c message.
@c 
°Ê²¼¤Ç¥ê¥¹¥È¥¢¥Ã¥×¤µ¤ì¤Æ¤¤¤Ê¤¤¡¤Ê¸»ú¤¬Â³¤¯¥Ð¥Ã¥¯¥¹¥é¥Ã¥·¥å¤Ï¡¤¥¨¥é¡¼¥á¥Ã
¥»¡¼¥¸¤òÈ¯À¸¤·¤Þ¤¹¡¥

@table @samp
@item \a
Control-G.
@item \b
Control-H.
@item \f
Control-L.
@item \n
Control-J.
@item \r
Control-M.
@item \t
Control-I.
@item \v
Control-K.
@item \@var{ooo}
@c The character with the value given by @var{ooo}, which is 1 to 3
@c octal digits,
@c 
@var{ooo}¤ÇÍ¿¤¨¤é¤ì¤ëÃÍ¤ÎÊ¸»ú¤Ç¡¤°ì·å¤«¤é»°·å¤Þ¤Ç¤ÎÈ¬¿Ê¿ô¡¥
@item \\
@c A backslash.
@c 
¥Ð¥Ã¥¯¥¹¥é¥Ã¥·¥å¡¥
@end table

@c @item Ranges
@item ÈÏ°Ï
@cindex ranges

@c The notation @samp{@var{m}-@var{n}} expands to all of the characters
@c from @var{m} through @var{n}, in ascending order.  @var{m} should
@c collate before @var{n}; if it doesn't, an error results.  As an example,
@c @samp{0-9} is the same as @samp{0123456789}.
@c 
É½µ­ÊýË¡¤Î@samp{@var{m}-@var{n}}¤Ï¡¤@var{m}¤«¤é@var{n}¤Þ¤Ç¾º½ç¤Ë¡¤Á´¤Æ
¤ÎÊ¸»ú¤ËÅ¸³«¤µ¤ì¤Þ¤¹¡¥@var{m}¤Ï¡¤ÂÐ¾È¤Ç@var{n}¤ÎÁ°¤Ç¤¢¤ë¤Ù¤­¤Ç¤¹¡¥¤½¤¦
¤Ç¤Ê¤¤¾ì¹ç¡¤·ë²Ì¤È¤·¤Æ¥¨¥é¡¼¤È¤Ê¤ê¤Þ¤¹¡¥Îã¤È¤·¤Æ¤Ï¡¤@samp{0-9}¤Ï
@samp{0123456789}¤ÈÆ±¤¸¤Ç¤¹¡¥

@c @sc{gnu} @command{tr} does not support the System V syntax that uses square
@c brackets to enclose ranges.  Translations specified in that format
@c sometimes work as expected, since the brackets are often transliterated
@c to themselves.  However, they should be avoided because they sometimes
@c behave unexpectedly.  For example, @samp{tr -d '[0-9]'} deletes brackets
@c as well as digits.
@c 
@sc{gnu} @command{tr}¤Ï¡¤ÈÏ°Ï¤ò°Ï¤à³Ñ³ç¸Ì¤ò»ÈÍÑ¤¹¤ëSystem V¹½Ê¸¤ò¥µ¥Ý¡¼
¥È¤·¤Þ¤»¤ó¡¥¤½¤Î½ñ¼°¤Ç»ØÄê¤µ¤ì¤¿ÊÑ´¹¤Ï¡¤³ç¸Ì¤Ï¤½¤ì¼«¿È¤ËÊÑ´¹¤µ¤ì¤ë¤Î¤Ç¡¤
´üÂÔ¤·¤¿¤è¤¦¤ËÆ°ºî¤·¤Þ¤¹¡¥¤·¤«¤·¡¤´üÂÔ¤·¤Ê¤¤Æ°ºî¤ò¹Ô¤Ê¤¦¤È¤­¤â¤¢¤ë¤Î¤Ç
Èò¤±¤ë¤Ù¤­¤Ç¤¹¡¥Îã¤¨¤Ð¡¤@samp{tr -d '[0-9]'}¤Ï¿ô»ú¤À¤±¤Ç¤Ê¤¯³ç¸Ì¤âºï½ü
¤·¤Þ¤¹¡¥

@c Many historically common and even accepted uses of ranges are not
@c portable.  For example, on @acronym{EBCDIC} hosts using the @samp{A-Z}
@c range will not do what most would expect because @samp{A} through @samp{Z}
@c are not contiguous as they are in @acronym{ASCII}.
@c If you can rely on a @acronym{POSIX} compliant version of @command{tr}, then
@c the best way to work around this is to use character classes (see below).
@c Otherwise, it is most portable (and most ugly) to enumerate the members
@c of the ranges.
@c 
Â¿¤¯¤ÎÎò»ËÅª¤Ë°ìÈÌÅª¤Ê¤â¤Î¤È¡¤ÈÏ°Ï¤Î»ÈÍÑ¤Î¼õ¤±Æþ¤ì¤Ë¤Ï°Ü¿¢À­¤¬¤¢¤ê¤Þ¤»
¤ó¡¥Îã¤¨¤Ð¡¤@acronym{EBCDIC}¤Î¥Û¥¹¥È¤Ç¤Ï¡¤@samp{A-Z}¤ÎÈÏ°Ï¤ò»ÈÍÑ¤¹¤ë¤È¡¤
@acronym{ASCII}¤Ç¤Ï@samp{A}¤«¤é@samp{Z}¤Þ¤Ç¤¬ÉÔÏ¢Â³¤Ê¤Î¤Ç´üÂÔ¤·¤¿¤è¤¦
¤ËÆ°ºî¤·¤Þ¤»¤ó¡¥@acronym{POSIX}¤Ë½àµò¤·¤Æ¤¤¤ë¥Ð¡¼¥¸¥ç¥ó¤Î@command{tr} 
¤Ë°ÍÂ¸¤·¤Æ¤¤¤ë¾ì¹ç¡¤¤³¤ì¤ò²óÈò¤¹¤ëºÇÁ±¤ÎÊýË¡¤Ï¡¤Ê¸»ú¥¯¥é¥¹¤ò»ÈÍÑ¤¹¤ë¤³
¤È¤Ç¤¹(°Ê²¼¤ò»²¾È¤·¤Æ²¼¤µ¤¤)¡¥¤½¤ì°Ê³°¤Ç¤Ï¡¤ÈÏ°ÏÆâ¤Î¥á¥ó¥Ð¡¼¤òÎóµó¤¹¤ë
¤³¤È¤¬ºÇ¤â°Ü¿¢À­¤¬¤¢¤ë(¤½¤·¤ÆºÇ¤â½¹¤¤)ÊýË¡¤Ç¤¹¡¥

@c @item Repeated characters
@item ·«¤êÊÖ¤µ¤ì¤ëÊ¸»ú
@cindex repeated characters

@c The notation @samp{[@var{c}*@var{n}]} in @var{set2} expands to @var{n}
@c copies of character @var{c}.  Thus, @samp{[y*6]} is the same as
@c @samp{yyyyyy}.  The notation @samp{[@var{c}*]} in @var{string2} expands
@c to as many copies of @var{c} as are needed to make @var{set2} as long as
@c @var{set1}.  If @var{n} begins with @samp{0}, it is interpreted in
@c octal, otherwise in decimal.
@c 
@var{set2}¤Ç¤Î@samp{[@var{c}*@var{n}]}¤ÎÉ½µ­¤Ï¡¤Ê¸»ú@var{c}¤Î@var{n}¸Ä
¤Î¥³¥Ô¡¼¤ËÅ¸³«¤µ¤ì¤Þ¤¹¡¥¤³¤Î¤¿¤á¡¤@samp{[y*6]}¤Ï@samp{yyyyyy}¤ÈÆ±¤¸¤Ç
¤¹¡¥@var{set2}¤Ç¤Î@samp{[@var{c}*]}¤ÎÉ½µ­¤Ï¡¤@var{set2}¤ò@var{set1}¤È
Æ±¤¸Ä¹¤µ¤Ë¤¹¤ë¤Î¤ËÉ¬Í×¤Ê¤¿¤¯¤µ¤ó¤Î@var{c}¤Î¥³¥Ô¡¼¤ËÅ¸³«¤µ¤ì¤Þ¤¹¡¥
@var{n}¤¬@samp{0}¤Ç»Ï¤Þ¤ë¾ì¹ç¤ÏÈ¬¿Ê¿ô¤Ë¡¤¤½¤ì°Ê³°¤Ç¤Ï½½¿Ê¿ô¤À¤È²ò¼á¤µ
¤ì¤Þ¤¹¡¥

@c @item Character classes
@item Ê¸»ú¥¯¥é¥¹
@cindex character classes

@c The notation @samp{[:@var{class}:]} expands to all of the characters in
@c the (predefined) class @var{class}.  The characters expand in no
@c particular order, except for the @code{upper} and @code{lower} classes,
@c which expand in ascending order.  When the @option{--delete} (@option{-d})
@c and @option{--squeeze-repeats} (@option{-s}) options are both given, any
@c character class can be used in @var{set2}.  Otherwise, only the
@c character classes @code{lower} and @code{upper} are accepted in
@c @var{set2}, and then only if the corresponding character class
@c (@code{upper} and @code{lower}, respectively) is specified in the same
@c relative position in @var{set1}.  Doing this specifies case conversion.
@c The class names are given below; an error results when an invalid class
@c name is given.
@c 
@samp{[:@var{class}:]}¤ÎÉ½µ­¤Ï¡¤(¤¢¤é¤«¤¸¤áÄêµÁ¤µ¤ì¤¿)¥¯¥é¥¹
@var{class} ¤Ë¤¢¤ëÁ´¤Æ¤ÎÊ¸»ú¤ËÅ¸³«¤µ¤ì¤Þ¤¹¡¥Ê¸»ú¤Ï¡¤ÆÃÄê¤Î½ç½ø¤ÇÅ¸³«¤µ
¤ì¤Þ¤»¤ó¤¬¡¤@code{upper}¤È@code{lower}¥¯¥é¥¹¤Ï¡¤¾º½ç¤ËÅ¸³«¤µ¤ì¤Þ¤¹¡¥
@option{--delete} (@option{-d})¤È@option{--squeeze-repeats}
(@option{-s})¥ª¥×¥·¥ç¥ó¤¬Î¾ÊýÍ¿¤¨¤é¤ì¤Æ¤¤¤ë¾ì¹ç¡¤¤¹¤Ù¤Æ¤ÎÊ¸»ú¥¯¥é¥¹¤ò
@var{set2}¤Ç»ÈÍÑ¤¹¤ë¤³¤È¤¬²ÄÇ½¤Ç¤¹¡¥¤½¤ì°Ê³°¤Î¾ì¹ç¡¤Ê¸»ú¥¯¥é¥¹
@code{lower}¤È@code{upper}¤Ï@var{set2}¤ËÅ¬ÍÑ¤µ¤ì¡¤¤µ¤é¤Ë¡¤ÂÐ±þ¤¹¤ë(¤½
¤ì¤¾¤ì@code{upper}¤È@code{lower}¤Î)Ê¸»ú¥¯¥é¥¹¤¬@var{set1}¤Î°ÌÃÖ¤ËÁêÂÐ
Åª¤ËÆ±¤¸¤â¤Î¤¬»ØÄê¤µ¤ì¤Æ¤¤¤ë¾ì¹ç¤À¤±¤½¤¦¤Ê¤ê¤Þ¤¹¡¥¤³¤ì¤Ï¡¤ÂçÊ¸»ú¾®Ê¸»ú
¤ÎÊÑ´¹¤Î»ØÄê¤Ç¤¹¡¥¥¯¥é¥¹Ì¾¤Ï°Ê²¼¤ÇÍ¿¤¨¤é¤ì¤Þ¤¹¡¥Ìµ¸ú¤Ê¥¯¥é¥¹Ì¾¤¬Í¿¤¨¤é
¤ì¤¿¾ì¹ç¡¤·ë²Ì¤È¤·¤Æ¥¨¥é¡¼¤È¤Ê¤ê¤Þ¤¹¡¥

@table @code
@item alnum
@opindex alnum
@c Letters and digits.
@c 
Ê¸»ú¤È¿ô»ú¡¥
@item alpha
@opindex alpha
@c Letters.
@c 
Ê¸»ú¡¥
@item blank
@opindex blank
@c Horizontal whitespace.
@c 
¿åÊ¿Êý¸þ¤Î¶õÇò¡¥
@item cntrl
@opindex cntrl
@c Control characters.
@c 
¥³¥ó¥È¥í¡¼¥ëÊ¸»ú¡¥
@item digit
@opindex digit
@c Digits.
@c 
¿ô»ú¡¥
@item graph
@opindex graph
@c Printable characters, not including space.
@c 
¥¹¥Ú¡¼¥¹¤ò´Þ¤Þ¤Ê¤¤¡¤°õºþ²ÄÇ½¤ÊÊ¸»ú¡¥
@item lower
@opindex lower
@c Lowercase letters.
@c 
¾®Ê¸»ú¡¥
@item print
@opindex print
@c Printable characters, including space.
@c 
¥¹¥Ú¡¼¥¹¤ò´Þ¤à¡¤°õºþ²ÄÇ½¤ÊÊ¸»ú¡¥
@item punct
@opindex punct
@c Punctuation characters.
@c 
¶çÆÉÅÀÊ¸»ú¡¥
@item space
@opindex space
@c Horizontal or vertical whitespace.
@c 
¿åÊ¿¿âÄ¾¤Î¶õÇò¡¥
@item upper
@opindex upper
@c Uppercase letters.
@c 
ÂçÊ¸»ú¡¥
@item xdigit
@opindex xdigit
@c Hexadecimal digits.
@c 
16¿Ê¿ô¤Î¿ô»ú¡¥
@end table

@c @item Equivalence classes
@item Åù²Á¤Ê¥¯¥é¥¹
@cindex equivalence classes

@c The syntax @samp{[=@var{c}=]} expands to all of the characters that are
@c equivalent to @var{c}, in no particular order.  Equivalence classes are
@c a relatively recent invention intended to support non-English alphabets.
@c But there seems to be no standard way to define them or determine their
@c contents.  Therefore, they are not fully implemented in @sc{gnu} @command{tr};
@c each character's equivalence class consists only of that character,
@c which is of no particular use.
@c 
¹½Ê¸@samp{[=@var{c}=]}¤Ï¡¤@var{c}¤ÈÅù²Á¤ÊÊ¸»ú¤ÎÁ´¤Æ¤Ë¡¤ÆÃÄê¤Î½ç½ø¤ò»ý
¤¿¤º¤ËÅ¸³«¤µ¤ì¤Þ¤¹¡¥Åù²Á¤Ê¥¯¥é¥¹¤Ï¡¤±Ñ¸ì°Ê³°¤Î¥¢¥ë¥Õ¥¡¥Ù¥Ã¥È¤ò¥µ¥Ý¡¼¥È
¤¹¤ëÌÜÅª¤Ç¡¤Èæ³ÓÅªºÇ¶áÈ¯ÌÀ¤µ¤ì¤Þ¤·¤¿¡¥¤·¤«¤·¡¤¤½¤ì¤é¤ÎÄêµÁ¤äÆâÍÆ¤ò·èÄê
¤¹¤ëÉ¸½àÅª¤ÊÊýË¡¤Ï¤Ê¤µ¤½¤¦¤Ç¤¹¡¥¤½¤Î¤¿¤á¡¤@sc{gnu} @command{tr}¤Ç¤Ï¡¤
´°Á´¤Ë¤Ï¼ÂÁõ¤µ¤ì¤Æ¤¤¤Þ¤»¤ó¡¥¤½¤ì¤¾¤ì¤ÎÊ¸»ú¤ÎÅù²Á¥¯¥é¥¹¤Ï¡¤¤½¤ÎÊ¸»ú¤«¤é
¤Î¤ß¹½À®¤µ¤ì¤Æ¤¤¤Æ¡¤ÆÃÄê¤ÎÍøÍÑ²ÁÃÍ¤Ï¤¢¤ê¤Þ¤»¤ó¡¥
@end table


@node Translating
@c @subsection Translating
@subsection ÊÑ´¹

@cindex translating characters

@c @command{tr} performs translation when @var{set1} and @var{set2} are
@c both given and the @option{--delete} (@option{-d}) option is not given.
@c @command{tr} translates each character of its input that is in @var{set1}
@c to the corresponding character in @var{set2}.  Characters not in
@c @var{set1} are passed through unchanged.  When a character appears more
@c than once in @var{set1} and the corresponding characters in @var{set2}
@c are not all the same, only the final one is used.  For example, these
@c two commands are equivalent:
@c 
@var{set1}¤È@var{set2}¤ÎÎ¾Êý¤¬Í¿¤¨¤é¤ì¡¤@option{--delete}
(@option{-d})¥ª¥×¥·¥ç¥ó¤¬Í¿¤¨¤é¤ì¤Æ¤¤¤Ê¤¤¾ì¹ç¡¤@command{tr}¤ÏÊÑ´¹¤ò¼Â
¹Ô¤·¤Þ¤¹¡¥@command{tr}¤Ï¡¤@var{set1}¤Ë¤¢¤ëÆþÎÏ¤Î¤¾¤ì¤¾¤ì¤ÎÊ¸»ú¤ò¡¤ÂÐ±þ
¤¹¤ë@var{set2}¤ÎÊ¸»ú¤ËÊÑ´¹¤·¤Þ¤¹¡¥@var{set1}¤ËÌµ¤¤Ê¸»ú¤Ï¡¤¤½¤Î¤Þ¤ÞÊÑ´¹
¤µ¤ì¤ºÄÌ²á¤·¤Þ¤¹¡¥@var{set1}¤ÎÊ¸»ú¤¬°ì²ó°Ê¾å¸½¤ï¤ì¡¤@var{set2}¤ÎÂÐ±þ¤¹
¤ëÊ¸»ú¤¬Á´¤ÆÆ±¤¸¤Ç¤Ï¤Ê¤¤¾ì¹ç¡¤ºÇ¸å¤Î°ì¤Ä¤Î¤ß»ÈÍÑ¤µ¤ì¤Þ¤¹¡¥Îã¤¨¤Ð¡¤°Ê²¼
¤ÎÆó¤Ä¤Î¥³¥Þ¥ó¥É¤ÏÅù²Á¤Ç¤¹¡¥

@example
tr aaa xyz
tr a z
@end example

@c A common use of @command{tr} is to convert lowercase characters to
@c uppercase.  This can be done in many ways.  Here are three of them:
@c 
@command{tr}¤Î°ìÈÌÅª¤Ê»ÈÍÑË¡¤Ï¡¤¾®Ê¸»ú¤òÂçÊ¸»ú¤ËÊÑ´¹¤¹¤ë¤³¤È¤Ç¤¹¡¥¤³¤ì
¤ò¹Ô¤Ê¤¦ÊýË¡¤Ï¤¿¤¯¤µ¤ó¤¢¤ë¤Ï¤º¤Ç¤¹¡¥¤½¤Î»°¤Ä¤ò°Ê²¼¤Ë½ñ¤­¤Þ¤¹¡¥

@example
tr abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWXYZ
tr a-z A-Z
tr '[:lower:]' '[:upper:]'
@end example

@noindent
@c But note that using ranges like @code{a-z} above is not portable.
@c 
¤·¤«¤·¡¤¾åµ­¤Î@code{a-z}¤Î¤è¤¦¤ÊÈÏ°Ï¤Î»ÈÍÑ¤Ë¤Ï°Ü¿¢À­¤¬¤¢¤ê¤Þ¤»¤ó¡¥

@c When @command{tr} is performing translation, @var{set1} and @var{set2}
@c typically have the same length.  If @var{set1} is shorter than
@c @var{set2}, the extra characters at the end of @var{set2} are ignored.
@c 
@command{tr}¤¬ÊÑ´¹¤ò¼Â¹Ô¤·¤Æ¤¤¤ë¤È¤­¡¤@var{set1}¤È@var{set2}¤Ï¡¤ÄÌ¾ïÆ±
¤¸Ä¹¤µ¤Ç¤¹¡¥@var{set1}¤¬@var{set2}¤è¤êÃ»¤¤¾ì¹ç¡¤@var{set2}¤Î½ª¤ê¤ÎÍ¾Ê¬
¤ÊÊ¸»ú¤ÏÌµ»ë¤µ¤ì¤Þ¤¹¡¥

@c On the other hand, making @var{set1} longer than @var{set2} is not
@c portable; @acronym{POSIX} says that the result is undefined.  In this situation,
@c BSD @command{tr} pads @var{set2} to the length of @var{set1} by repeating
@c the last character of @var{set2} as many times as necessary.  System V
@c @command{tr} truncates @var{set1} to the length of @var{set2}.
@c 
°ìÊý¡¤@var{set1}¤ò@var{set2}¤è¤êÂç¤­¤¯¤¹¤ë¤³¤È¤Ï°Ü¿¢À­¤¬¤¢¤ê¤Þ¤»¤ó¡¥
@acronym{POSIX}¤Ç¤Ï¡¤¤½¤Î·ë²Ì¤¬Ì¤ÄêµÁ¤À¤È½Ò¤Ù¤Æ¤¤¤Þ¤¹¡¥¤³¤Î¾ì¹ç¡¤BSD
@command{tr}¤Ï¡¤@var{set2}¤ò@var{set2}¤ÎºÇ¸åÊ¸»ú¤ÇÉ¬Í×¤Ê¤À¤±·«¤êÊÖ¤¹¤³
¤È¤Ç@var{set1}¤ÎÄ¹¤µ¤Ë°ú¤­±ä¤Ð¤·¤Þ¤¹¡¥System V @command{tr}¤Ï¡¤
@var{set1}¤ò@var{set2}¤ÎÄ¹¤µ¤ËÀÚ¤êµÍ¤á¤Þ¤¹¡¥

@c By default, @sc{gnu} @command{tr} handles this case like BSD @command{tr}.
@c When the @option{--truncate-set1} (@option{-t}) option is given,
@c @sc{gnu} @command{tr} handles this case like the System V @command{tr}
@c instead.  This option is ignored for operations other than translation.
@c 
¥Ç¥Õ¥©¥ë¥È¤Ç¡¤@sc{gnu} @command{tr}¤ÏBSD @command{tr}¤Î¤è¤¦¤Ë¤³¤Î¾õÂÖ
¤ò½èÍý¤·¤Þ¤¹¡¥@option{--truncate-set1} (@option{-t})¥ª¥×¥·¥ç¥ó¤¬Í¿¤¨¤é
¤ì¤Æ¤¤¤ë¾ì¹ç¡¤@sc{gnu} @command{tr}¤ÏSystem V @command{tr}¤Î¤è¤¦¤Ë¤³¤Î
¾õÂÖ¤ò½èÍý¤·¤Þ¤¹¡¥¤³¤Î¥ª¥×¥·¥ç¥ó¤Ï¡¤ÊÑ´¹°Ê³°¤Î½èÍý¤Ç¤ÏÌµ»ë¤µ¤ì¤Þ¤¹¡¥

@c Acting like System V @command{tr} in this case breaks the relatively common
@c BSD idiom:
@c 
¤³¤Î¾ì¹ç¡¤System V @command{tr}¤Î¤è¤¦¤ËÆ°ºî¤µ¤»¤ë¤È¡¤Èæ³ÓÅª°ìÈÌÅª¤ÊBSD
¤ÎÉ½¸½¤Ï²õ¤ì¤Þ¤¹¡¥

@example
tr -cs A-Za-z0-9 '\012'
@end example

@noindent
@c because it converts only zero bytes (the first element in the
@c complement of @var{set1}), rather than all non-alphanumerics, to
@c newlines.
@c 
¤½¤ì¤Ï¡¤Á´¤Æ¤ÎÈó±Ñ¿ô»ú¤ò²þ¹Ô¤ËÊÑ´¹¤¹¤ëÂå¤ï¤ê¤Ë¡¤(@var{set1}¤ÎÊä¸ì¤ÎºÇ
½é¤ÎÍ×ÁÇ)¥¼¥í¥Ð¥¤¥È¤Î¤ßÊÑ´¹¤µ¤ì¤ë¤¿¤á¤Ç¤¹¡¥

@noindent
@c By the way, the above idiom is not portable because it uses ranges.
@c Assuming a @acronym{POSIX} compliant @command{tr}, here is a better way to write it:
@c 
¤È¤³¤í¤Ç¡¤¾åµ­¤Î´·Îã¤ÏÈÏ°Ï¤ò»ÈÍÑ¤·¤Æ¤¤¤ë¤Î¤Ç°Ü¿¢À­¤¬¤¢¤ê¤Þ¤»¤ó¡¥
@acronym{POSIX}¤¬@command{tr}¤ËÊ¸¶ç¤ò¤¤¤¦¾ì¹ç¡¤¤³¤³¤Ç¤Ï°Ê²¼¤Î¤è¤¦¤Ë½ñ
¤¤¤¿Êý¤¬ÎÉ¤¤¤Ç¤·¤ç¤¦¡¥

@example
tr -cs '[:alnum:]' '[\n*]'
@end example


@node Squeezing
@c @subsection Squeezing repeats and deleting
@subsection ·«¤êÊÖ¤·¤Î°µ½Ì¤Èºï½ü

@cindex squeezing repeat characters
@cindex deleting characters

@c When given just the @option{--delete} (@option{-d}) option, @command{tr}
@c removes any input characters that are in @var{set1}.
@c 
@option{--delete} (@option{-d})¥ª¥×¥·¥ç¥ó¤Î¤ßÍ¿¤¨¤é¤ì¤¿¤È¤­¡¤
@command{tr}¤Ï¡¤@var{set1}¤Ë¤¢¤ë¤¢¤é¤æ¤ëÆþÎÏÊ¸»ú¤òºï½ü¤·¤Þ¤¹¡¥

@c When given just the @option{--squeeze-repeats} (@option{-s}) option,
@c @command{tr} replaces each input sequence of a repeated character that
@c is in @var{set1} with a single occurrence of that character.
@c 
@option{--squeeze-repeats} (@option{-s})¥ª¥×¥·¥ç¥ó¤Î¤ßÍ¿¤¨¤é¤ì¤¿¤È¤­¡¤
@command{tr}¤Ï¡¤@var{set1}¤Ë¤¢¤ë¡¤¤½¤ì¤¾¤ì¤ÎÆþÎÏ¤Ç·«¤êÊÖ¤µ¤ì¤ëÊ¸»ú¤ÎÊÂ
¤Ó¤ò¡¤¤½¤ÎÊ¸»ú¤¬°ìÅÙ¤À¤±É½¤ì¤ë¤è¤¦¤ËÃÖ´¹¤·¤Þ¤¹¡¥

@c When given both @option{--delete} and @option{--squeeze-repeats}, @command{tr}
@c first performs any deletions using @var{set1}, then squeezes repeats
@c from any remaining characters using @var{set2}.
@c 
@option{--delete}¤È@option{--squeeze-repeats}¤ÎÎ¾Êý¤¬Í¿¤¨¤é¤ì¤¿¾ì¹ç¡¤
@command{tr}¤Ï¡¤ºÇ½é¤Ë@var{set1}¤òÍÑ¤¤¤Æºï½ü¤ò¼Â¹Ô¤·¡¤@var{set2}¤òÍÑ¤¤
¤Æ»Ä¤ê¤ÎÊ¸»ú¤«¤é·«¤êÊÖ¤·¤ò°µ½Ì¤·¤Þ¤¹¡¥

@c The @option{--squeeze-repeats} option may also be used when translating,
@c in which case @command{tr} first performs translation, then squeezes
@c repeats from any remaining characters using @var{set2}.
@c 
@option{--squeeze-repeats}¥ª¥×¥·¥ç¥ó¤Ï¡¤ÊÑ´¹»þ¤Ë¤âÍøÍÑ¤Ç¤­¡¤¤½¤Î¾ì¹ç¡¤
@command{tr}¤Ï¡¤ºÇ½é¤ËÊÑ´¹¤ò¼Â¹Ô¤·¡¤@var{set2}¤òÍÑ¤¤¤Æ»Ä¤ê¤ÎÊ¸»ú¤«¤é·«
¤êÊÖ¤·¤ò°µ½Ì¤·¤Þ¤¹¡¥

@c Here are some examples to illustrate various combinations of options:
@c 
¤³¤³¤Ë¡¤¥ª¥×¥·¥ç¥ó¤ÎÍÍ¡¹¤ÊÁÈ¹ç¤»¤ÎÉ½¸½Îã¤ò¤¤¤¯¤Ä¤«¤¢¤²¤Þ¤¹¡¥

@itemize @bullet

@item
@c Remove all zero bytes:
@c 
Á´¤Æ¤Î¥¼¥í¥Ð¥¤¥È¤òºï½ü¡¥

@example
tr -d '\000'
@end example

@item
@c Put all words on lines by themselves.  This converts all
@c non-alphanumeric characters to newlines, then squeezes each string
@c of repeated newlines into a single newline:
@c 
Á´¤Æ¤ÎÃ±¸ì¤òÃ±ÆÈ¹Ô¤Ë¤·¤Þ¤¹¡¥¤³¤ì¤Ï¡¤Á´¤Æ¤ÎÈó±Ñ¿ôÊ¸»ú¤ò²þ¹Ô¤ËÊÑ´¹¤·¡¤·«
¤êÊÖ¤µ¤ì¤ë²þ¹Ô¤Ë¤Ê¤Ã¤Æ¤¤¤ë¤½¤ì¤¾¤ì¤ÎÊ¸»úÎó¤òÃ±°ì¤Î²þ¹Ô¤Ë°µ½Ì¤·¤Þ¤¹¡¥

@example
tr -cs '[:alnum:]' '[\n*]'
@end example

@item
@c Convert each sequence of repeated newlines to a single newline:
@c 
·«¤êÊÖ¤µ¤ì¤ë²þ¹Ô¤Î¤½¤ì¤¾¤ì¤ÎÊÂ¤Ó¤ò¡¤Ã±°ì¤Î²þ¹Ô¤ËÊÑ´¹¤·¤Þ¤¹¡¥

@example
tr -s '\n'
@end example

@item
@c Find doubled occurrences of words in a document.
@c For example, people often write ``the the'' with the repeated words
@c separated by a newline.  The bourne shell script below works first
@c by converting each sequence of punctuation and blank characters to a
@c single newline.  That puts each ``word'' on a line by itself.
@c Next it maps all uppercase characters to lower case, and finally it
@c runs @command{uniq} with the @option{-d} option to print out only the words
@c that were repeated.
@c 
¥É¥­¥å¥á¥ó¥È¤ÇÃ±¸ì¤ÎÆó½Å¤Î½Ð¸½¤ò¸«ÉÕ¤±¤Þ¤¹¡¥Îã¤¨¤Ð¡¤²þ¹Ô¤ÇÊ¬Î¥¤µ¤ì¤Æ¤¤
¤ë·«¤êÊÖ¤·¤Æ¤¤¤ëÃ±¸ì``the the''¤È½ñ¤¯¤³¤È¤â¤è¤¯¤¢¤ê¤Þ¤¹¡¥°Ê²¼¤Îbourne 
¥·¥§¥ë¥¹¥¯¥ê¥×¥È¤Ï¡¤ºÇ½é¤Ë¶çÆÉÅÀ¤È¶õÇòÊ¸»ú¤ÎÊÂ¤Ó¤òÃ±°ì¤Î²þ¹ÔÊ¸»ú¤ËÊÑ´¹
¤¹¤ëÆ°ºî¤ò¹Ô¤¤¤Þ¤¹¡¥¤½¤ì¤Ç¤½¤ì¤¾¤ì¤Î``Ã±¸ì''¤¬Ã±ÆÈ¹Ô¤Ë½ñ¤«¤ì¤Þ¤¹¡¥¼¡¤Ë
Á´¤Æ¤ÎÂçÊ¸»ú¤ò¾®Ê¸»ú¤ËÃÖ¤­´¹¤¨¡¤ºÇ¸å¤Ë·«¤êÊÖ¤·¤Æ¤¤¤ëÃ±¸ì¤À¤±¤ò½ÐÎÏ¤¹¤ë
¤¿¤á¤Ë¡¤@command{uniq}¤ò@option{-d}¥ª¥×¥·¥ç¥ó¤Ç¼Â¹Ô¤·¤Þ¤¹¡¥

@example
#!/bin/sh
cat "$@@" \
  | tr -s '[:punct:][:blank:]' '\n' \
  | tr '[:upper:]' '[:lower:]' \
  | uniq -d
@end example

@item
@c Deleting a small set of characters is usually straightforward.  For example,
@c to remove all @samp{a}s, @samp{x}s, and @samp{M}s you would do this:
@c 
Ê¸»ú¤Î¾®¤µ¤ÊÁÈ¤òºï½ü¤¹¤ë¤³¤È¤Ï¡¤°ìÈÌÅª¤Ë´ÊÃ±¤Ç¤¹¡¥Îã¤¨¤Ð¡¤¤¹¤Ù¤Æ¤Î
@samp{a}¡¤@samp{x}¡¤¤½¤·¤Æ@samp{M}¤òºï½ü¤¹¤ë¤¿¤á¤Ë¡¤°Ê²¼¤Î¤è¤¦¤Ë¤·¤Þ¤¹¡¥

@example
tr -d axM
@end example

@c However, when @samp{-} is one of those characters, it can be tricky because
@c @samp{-} has special meanings.  Performing the same task as above but also
@c removing all @samp{-} characters, we might try @code{tr -d -axM}, but
@c that would fail because @command{tr} would try to interpret @option{-a} as
@c a command-line option.  Alternatively, we could try putting the hyphen
@c inside the string, @code{tr -d a-xM}, but that wouldn't work either because
@c it would make @command{tr} interpret @code{a-x} as the range of characters
@c @samp{a}@dots{}@samp{x} rather than the three.
@c One way to solve the problem is to put the hyphen at the end of the list
@c of characters:
@c 
¤·¤«¤·¡¤¤³¤ì¤é¤ÎÊ¸»ú¤Î°ì¤Ä¤¬@samp{-}¤Î¤È¤­¡¤@samp{-}¤Ë¤ÏÆÃÊÌ¤Ê°ÕÌ£¤¬¤¢
¤ë¤Î¤Ç¡¤¤Á¤ç¤Ã¤È¥È¥ê¥Ã¥­¡¼¤Ë¤Ê¤ê¤Þ¤¹¡¥¾åµ­¤ÈÆ±¤¸ºî¶È¤ò¼Â¹Ô¤·¡¤¤µ¤é¤Ë¤¹
¤Ù¤Æ¤Î@samp{-}Ê¸»ú¤òºï½ü¤¹¤ë¤¿¤á¡¤@code{tr -d -axM}¤ò»î¤·¤Æ¤ß¤ë¤«¤â¤·
¤ì¤Þ¤»¤ó¤¬¡¤@command{tr}¤Ï@option{-a}¤ò¥³¥Þ¥ó¥É¥é¥¤¥ó¥ª¥×¥·¥ç¥ó¤È²ò¼á
¤·¤è¤¦¤È¤¹¤ë¤Î¤Ç¼ºÇÔ¤¹¤ë¤Ç¤·¤ç¤¦¡¥Âå¤ï¤ê¤Ë¡¤Ê¸»úÎó¤Î´Ö¤Ë¥Ï¥¤¥Õ¥ó¤ò
@code{tr -d a-xM}¤Î¤è¤¦¤Ë½ñ¤¤¤Æ¤ß¤Æ¤â¡¤@command{tr}¤Ï@code{a-x}¤ò»°Ê¸
»ú¤Ç¤Ï¤Ê¤¯@samp{a}@dots{}@samp{x}¤ÎÈÏ°Ï¤È¤·¤Æ²ò¼á¤¹¤ë¤Î¤ÇÆ°ºî¤·¤Þ¤»¤ó¡¥
ÌäÂê¤ò²ò·è¤¹¤ëÊýË¡¤Î°ì¤Ä¤Ï¡¤Ê¸»ú¤Î¥ê¥¹¥È¤ÎºÇ¸å¤Ë¥Ï¥¤¥Õ¥ó¤ò½ñ¤¯¤³¤È¤Ç¤¹¡¥

@example
tr -d axM-
@end example

@c More generally, use the character class notation @code{[=c=]}
@c with @samp{-} (or any other character) in place of the @samp{c}:
@c 
¤è¤ê°ìÈÌÅª¤Ë¡¤Ê¸»ú¥¯¥é¥¹¤ÎÉ½µ­@code{[=c=]}¤ò»ÈÍÑ¤·¡¤@samp{-}(¤Þ¤¿¤Ï¡¤
Ç¤°Õ¤ÎÊ¸»ú)¤ò@samp{c}¤Î°ÌÃÖ¤Ë½ñ¤­¤Þ¤¹¡¥

@example
tr -d '[=-=]axM'
@end example

@c Note how single quotes are used in the above example to protect the
@c square brackets from interpretation by a shell.
@c 
¾åµ­¤ÎÎã¤Ç»ÈÍÑ¤·¤Æ¤¤¤ë¥·¥ó¥°¥ë¥¯¥ª¡¼¥È¤Ï¡¤³Ñ³ç¸Ì¤ò¥·¥§¥ë¤¬²ò¼á¤¹¤ë¤³¤È
¤òËÉ¤®¤Þ¤¹¡¥

@end itemize


@node Warnings in tr
@c @subsection Warning messages
@subsection ·Ù¹ð¥á¥Ã¥»¡¼¥¸

@vindex POSIXLY_CORRECT
@c Setting the environment variable @env{POSIXLY_CORRECT} turns off the
@c following warning and error messages, for strict compliance with
@c @acronym{POSIX}.  Otherwise, the following diagnostics are issued:
@c 
´Ä¶­ÊÑ¿ô@env{POSIXLY_CORRECT}¤òÀßÄê¤¹¤ë¤È¡¤@acronym{POSIX}¤ò¸·Ì©¤Ë½å¼é
¤¹¤ë¤¿¤á¡¤°Ê²¼¤Î·Ù¹ð¤È¥¨¥é¡¼¤Î¥á¥Ã¥»¡¼¥¸¤ò¥ª¥Õ¤Ë¤·¤Þ¤¹¡¥¤½¤ì°Ê³°¤Î¾ì¹ç¡¤
°Ê²¼¤Î¿ÇÃÇ·ë²Ì¤ò½ÐÎÏ¤·¤Þ¤¹¡¥

@enumerate

@item
@c When the @option{--delete} option is given but @option{--squeeze-repeats}
@c is not, and @var{set2} is given, @sc{gnu} @command{tr} by default prints
@c a usage message and exits, because @var{set2} would not be used.
@c The @acronym{POSIX} specification says that @var{set2} must be ignored in
@c this case. Silently ignoring arguments is a bad idea.
@c 
@option{--delete}¥ª¥×¥·¥ç¥ó¤¬Í¿¤¨¤é¤ì¤Æ¤¤¤ë¤¬¡¤
@option{--squeeze-repeats}¤¬Í¿¤¨¤é¤ì¤Æ¤ª¤é¤º¡¤@var{set2}¤¬Í¿¤¨¤é¤ì¤Æ¤¤
¤ë¤È¤­¡¤@sc{gnu} @command{tr}¤Ï¡¤@var{set2}¤¬»ÈÍÑ¤µ¤ì¤Ê¤¤¤¿¤á¡¤¥Ç¥Õ¥©
¥ë¥È¤Ç»ÈÍÑÊýË¡¤Î¥á¥Ã¥»¡¼¥¸¤ò½ÐÎÏ¤·½ªÎ»¤·¤Þ¤¹¡¥@acronym{POSIX}»ÅÍÍ¤Ç¤Ï¡¤
¤³¤Î¾ì¹ç@var{set2}¤ÏÌµ»ë¤¹¤ëÉ¬Í×¤¬¤¢¤ë¤È½Ò¤Ù¤é¤ì¤Æ¤¤¤Þ¤¹¡¥ÌÛ¤Ã¤Æ°ú¿ô¤ò
Ìµ»ë¤¹¤ë¤Î¤Ï°­¤¤¹Í¤¨¤Ç¤¹¡¥

@item
@c When an ambiguous octal escape is given.  For example, @samp{\400}
@c is actually @samp{\40} followed by the digit @samp{0}, because the
@c value 400 octal does not fit into a single byte.
@c 
Û£Ëæ¤ÊÈ¬¿Ê¿ô¤Î¥¨¥¹¥±¡¼¥×¤¬Í¿¤¨¤é¤ì¤¿¤È¤­¤Ç¤¹¡¥Îã¤¨¤Ð@samp{\400}¤Ï¡¤È¬
¿Ê¿ô¤Î400¤ÎÃÍ¤¬Ã±°ì¥Ð¥¤¥È¤ËÅ¬¤µ¤Ê¤¤¤Î¤Ç¡¤¼ÂºÝ¤Ë¤Ï@samp{0}¤¬¸åÃÖ¤µ¤ì¤¿
@samp{\40}¤Ë¤Ê¤ê¤Þ¤¹¡¥

@end enumerate

@c @sc{gnu} @command{tr} does not provide complete BSD or System V compatibility.
@c For example, it is impossible to disable interpretation of the @acronym{POSIX}
@c constructs @samp{[:alpha:]}, @samp{[=c=]}, and @samp{[c*10]}.  Also, @sc{gnu}
@c @command{tr} does not delete zero bytes automatically, unlike traditional
@c Unix versions, which provide no way to preserve zero bytes.
@c 
@sc{gnu} @command{tr}¤Ï¡¤BSD¤äSystem V¤È¤Î´°Á´¤Ê¸ß´¹À­¤òÄó¶¡¤·¤Æ¤¤¤Þ¤»
¤ó¡¥Îã¤¨¤Ð¡¤@acronym{POSIX}¤Î³µÇ°@samp{[:alpha:]}¡¤@samp{[=c=]}¡¤¤½¤·
¤Æ@samp{[c*10]}¤Î²ò¼á¤òÍøÍÑÉÔ²Ä¤Ë¤¹¤ë¤³¤È¤Ï¤Ç¤­¤Þ¤»¤ó¡¥¤Þ¤¿¡¤@sc{gnu}
@command{tr}¤Ï¡¤¥¼¥í¥Ð¥¤¥È¤òÊÝ¸î¤¹¤ëÊýË¡¤òÄó¶¡¤Ç¤­¤Ê¤¤ÅÁÅýÅª¤ÊUnix¥Ð¡¼
¥¸¥ç¥ó¤È°Û¤Ê¤ê¡¤¥¼¥í¥Ð¥¤¥È¤ò¼«Æ°Åª¤Ëºï½ü¤Ç¤­¤Þ¤»¤ó¡¥


@node expand invocation
@c @section @command{expand}: Convert tabs to spaces
@section @command{expand}: ¥¿¥Ö¤ò¥¹¥Ú¡¼¥¹¤ËÊÑ´¹

@pindex expand
@cindex tabs to spaces, converting
@cindex converting tabs to spaces

@c @command{expand} writes the contents of each given @var{file}, or standard
@c input if none are given or for a @var{file} of @samp{-}, to standard
@c output, with tab characters converted to the appropriate number of
@c spaces.  Synopsis:
@c 
@command{expand}¤Ï¡¤Í¿¤¨¤é¤ì¤¿¤½¤ì¤¾¤ì¤Î@var{file}¡¤¤Þ¤¿¤Ï¡¤Í¿¤¨¤é¤ì¤Ê
¤¤¾ì¹ç¤ä@samp{-}¤Î@var{file}¤Î¾ì¹ç¤ÏÉ¸½àÆþÎÏ¤ÎÆâÍÆ¤ò¡¤¥¿¥ÖÊ¸»ú¤òÅ¬ÀÚ¤Ê
¿ô¤Î¥¹¥Ú¡¼¥¹¤ËÊÑ´¹¤·¤Æ¡¤É¸½à½ÐÎÏ¤Ë½ñ¤­½Ð¤·¤Þ¤¹¡¥³µÍ×¤Ç¤¹¡¥

@example
expand [@var{option}]@dots{} [@var{file}]@dots{}
@end example

@c By default, @command{expand} converts all tabs to spaces.  It preserves
@c backspace characters in the output; they decrement the column count for
@c tab calculations.  The default action is equivalent to @option{-t 8} (set
@c tabs every 8 columns).
@c 
¥Ç¥Õ¥©¥ë¥È¤Ç¡¤@command{expand}¤ÏÁ´¤Æ¤Î¥¿¥Ö¤ò¥¹¥Ú¡¼¥¹¤ËÊÑ´¹¤·¤Þ¤¹¡¥¤½¤ì
¤ÏÁ´¤Æ¤Î½ÐÎÏ¤Ç¥Ð¥Ã¥¯¥¹¥Ú¡¼¥¹Ê¸»ú¤ò°Ý»ý¤·¤Þ¤¹¡¥¤½¤ì¤é¤Ï¥¿¥Ö·×»»¤ËÂÐ¤·¡¤
Îó¤Î¿ô¤ò¸º¾¯¤µ¤»¤Þ¤¹¡¥¥Ç¥Õ¥©¥ë¥È¤ÎÆ°ºî¤Ï@option{-8}(¥¿¥Ö¤ò¤½¤ì¤¾¤ìÈ¬Îó
¤ËÀßÄê¤¹¤ë)¤ÈÆ±¤¸¤Ç¤¹¡¥

@c The program accepts the following options.  Also see @ref{Common options}.
@c 
¥×¥í¥°¥é¥à¤Ï¡¤°Ê²¼¤Î¥ª¥×¥·¥ç¥ó¤ò¼õ¤±Æþ¤ì¤Þ¤¹¡¥@ref{Common options}¤â»²
¾È¤·¤Æ¤¯¤À¤µ¤¤¡¥

@table @samp

@item -t @var{tab1}[,@var{tab2}]@dots{}
@itemx --tabs=@var{tab1}[,@var{tab2}]@dots{}
@opindex -t
@opindex --tabs
@cindex tabstops, setting
@c If only one tab stop is given, set the tabs @var{tab1} spaces apart
@c (default is 8).  Otherwise, set the tabs at columns @var{tab1},
@c @var{tab2}, @dots{} (numbered from 0), and replace any tabs beyond the
@c last tabstop given with single spaces.  Tabstops can be separated by
@c blanks as well as by commas.
@c 
°ì¤Ä¤Î¥¿¥Ö¥¹¥È¥Ã¥×¤Î¤ßÍ¿¤¨¤é¤ì¤¿¾ì¹ç¡¤¥¿¥Ö¤ò@var{tab1}¸Ä¤ÎÊÌ¡¹¤Î¥¹¥Ú¡¼
¥¹(¥Ç¥Õ¥©¥ë¥È¤Ç8)¤ËÀßÄê¤·¤Þ¤¹¡¥¤½¤ì°Ê³°¤Î¾ì¹ç¡¤¥¿¥Ö¤ò@var{tab1}¡¤
@var{tab2}¡¤@dots{}(0¤«¤éÈÖ¹æÉÕ¤±¤µ¤ì¤ë)Îó¤ËÀßÄê¤·¡¤Í¿¤¨¤é¤ì¤¿ºÇ¸å¤Î¥¿
¥Ö¥¹¥È¥Ã¥×°Ê¹ß¤Î¤¢¤é¤æ¤ë¥¿¥Ö¤òÃ±°ì¤Î¥¹¥Ú¡¼¥¹¤ÇÃÖ´¹¤·¤Þ¤¹¡¥¥¿¥Ö¥¹¥È¥Ã¥×
¤Ï¡¤¥«¥ó¥Þ¤Ç¤Ï¤Ê¤¯¶õÇò¤ÇÊ¬¤±¤ë¤³¤È¤â²ÄÇ½¤Ç¤¹¡¥

@c On older systems, @command{expand} supports an obsolete option
@c @option{-@var{tab1}[,@var{tab2}]@dots{}}, where tabstops must be
@c separated by commas.  @acronym{POSIX} 1003.1-2001 (@pxref{Standards
@c conformance}) does not allow this; use @option{-t
@c @var{tab1}[,@var{tab2}]@dots{}} instead.
@c 
¸Å¤¤¥·¥¹¥Æ¥à¤Ç¤Ï¡¤@command{expand}¤Ï»þÂåÃÙ¤ì¤Î¥ª¥×¥·¥ç¥ó
@option{-@var{tab1}[,@var{tab2}]@dots{}}¤ò¥µ¥Ý¡¼¥È¤·¤Æ¤¤¤Æ¡¤¤½¤³¤Ç¤Ï¥¿
¥Ö¥¹¥È¥Ã¥×¤ò¥«¥ó¥Þ¤ÇÊ¬Î¥¤¹¤ë¤Ï¤º¤Ç¤¹¡¥@acronym{POSIX} 1003.1-2001
(@pxref{Standards conformance})¤Ç¤Ï¤³¤ì¤òµö²Ä¤·¤Æ¤¤¤Þ¤»¤ó¡¥Âå¤ï¤ê¤Ë
@option{-t @var{tab1}[,@var{tab2}]@dots{}}¤ò»ÈÍÑ¤·¤Æ¤¯¤À¤µ¤¤¡¥

@item -i
@itemx --initial
@opindex -i
@opindex --initial
@cindex initial tabs, converting
@c Only convert initial tabs (those that precede all non-space or non-tab
@c characters) on each line to spaces.
@c 
¤½¤ì¤¾¤ì¤Î¹Ô¤ÎºÇ½é¤Î¥¿¥Ö(Á°¤Ë¤¢¤ë¤â¤Î¤¬Á´¤ÆÈó¥¹¥Ú¡¼¥¹Ê¸»ú¤äÈó¥¿¥ÖÊ¸»ú
¤È¤Ê¤ë¤â¤Î)¤ò¥¹¥Ú¡¼¥¹¤ËÊÑ´¹¤·¤Þ¤¹¡¥

@end table

@exitstatus


@node unexpand invocation
@c @section @command{unexpand}: Convert spaces to tabs
@section @command{unexpand}: ¥¹¥Ú¡¼¥¹¤ò¥¿¥Ö¤ËÊÑ´¹¤¹¤ë

@pindex unexpand

@c @command{unexpand} writes the contents of each given @var{file}, or
@c standard input if none are given or for a @var{file} of @samp{-}, to
@c standard output, with strings of two or more space or tab characters
@c converted to as many tabs as possible followed by as many spaces as are
@c needed.  Synopsis:
@c 
@command{unexpand}¤Ï¡¤Í¿¤¨¤é¤ì¤¿¤½¤ì¤¾¤ì¤Î@var{file}¡¤¤Þ¤¿¤ÏÍ¿¤¨¤é¤ì¤Ê
¤¤¾ì¹ç¤ä@samp{-}¤Î@var{file}¤ËÂÐ¤·¤Æ¤ÏÉ¸½àÆþÎÏ¤ÎÆâÍÆ¤ò¡¤Æó¤Ä°Ê¾å¤Î¥¹¥Ú¡¼
¥¹¤ä¥¿¥ÖÊ¸»ú¤ÎÊ¸»úÎó¤ò¡¤Æó¤Ä°Ê¾å¤Î¥¹¥Ú¡¼¥¹¤ä¥¿¥ÖÊ¸»ú¤ò¡¤É¬Í×¤È¤µ¤ì¤ë¿ô
¤Î¥¹¥Ú¡¼¥¹¤ò²ÄÇ½¤Ê¸Â¤êÏ¢Â³¤¹¤ë¥¿¥Ö¤ËÊÑ´¹¤·¤Ê¤¬¤é¡¤ÆâÍÆ¤òÉ¸½à½ÐÎÏ¤Ë½ñ¤­
½Ð¤·¤Þ¤¹¡¥³µÍ×¤Ç¤¹¡¥

@example
unexpand [@var{option}]@dots{} [@var{file}]@dots{}
@end example

@c By default, @command{unexpand} converts only initial spaces and tabs (those
@c that precede all non space or tab characters) on each line.  It
@c preserves backspace characters in the output; they decrement the column
@c count for tab calculations.  By default, tabs are set at every 8th
@c column.
@c 
¥Ç¥Õ¥©¥ë¥È¤Ç¡¤@command{unexpand}¤Ï¡¤ºÇ½é¤Î¥¹¥Ú¡¼¥¹¤È¥¿¥Ö(Á°¤Ë¤¢¤ë¤â¤Î
¤¬Á´¤ÆÈó¥¹¥Ú¡¼¥¹Ê¸»ú¤äÈó¥¿¥ÖÊ¸»ú¤È¤Ê¤ë¤â¤Î)¤À¤±¤ò¡¤¤¾¤ì¤¾¤ì¤Î¹Ô¤ÇÊÑ´¹
¤·¤Þ¤¹¡¥¤½¤ì¤Ï¡¤½ÐÎÏ¤Ç¥Ð¥Ã¥¯¥¹¥Ú¡¼¥¹Ê¸»ú¤ò°Ý»ý¤·¤Þ¤¹¡¥¥¿¥Ö¤Î·×»»¤ÇÎó¤¬
¸º¾¯¤·¤Þ¤¹¡¥¥Ç¥Õ¥©¥ë¥È¤Ç¡¤¥¿¥Ö¤ÏÈ¬ÎóÃ±°Ì¤ËÀßÄê¤µ¤ì¤Þ¤¹¡¥

@c The program accepts the following options.  Also see @ref{Common options}.
@c 
¥×¥í¥°¥é¥à¤Ï°Ê²¼¤Î¥ª¥×¥·¥ç¥ó¤ò¼õ¤±Æþ¤ì¤Þ¤¹¡¥@ref{Common options}¤â»²¾È
¤·¤Æ¤¯¤À¤µ¤¤¡¥

@table @samp

@item -t @var{tab1}[,@var{tab2}]@dots{}
@itemx --tabs=@var{tab1}[,@var{tab2}]@dots{}
@opindex -t
@opindex --tabs
@c If only one tab stop is given, set the tabs @var{tab1} spaces apart
@c instead of the default 8.  Otherwise, set the tabs at columns
@c @var{tab1}, @var{tab2}, @dots{} (numbered from 0), and leave spaces and
@c tabs beyond the tabstops given unchanged.  Tabstops can be separated by
@c blanks as well as by commas.  This option implies the @option{-a} option.
@c 
°ì¤Ä¤Î¥¿¥Ö¥¹¥È¥Ã¥×¤Î¤ßÍ¿¤¨¤é¤ì¤¿¾ì¹ç¡¤¥¿¥Ö¤ò¡¤¥Ç¥Õ¥©¥ë¥È¤Î8¤ÎÂå¤ï¤ê¤Ë¡¤
¤½¤ì¤¾¤ì@var{tab1}¥¹¥Ú¡¼¥¹¤ËÀßÄê¤·¤Þ¤¹¡¥¤½¤ì°Ê³°¤Î¾ì¹ç¡¤¥¿¥Ö¤ò
@var{tab1}Îó¡¤@var{tab2}Îó¡¤@dots{} (0¤«¤éÈÖ¹æÉÕ¤±¤µ¤ì¤ë)¤ËÀßÄê¤·¡¤Í¿
¤¨¤é¤ì¤¿¥¿¥Ö¥¹¥È¥Ã¥×°Ê¹ß¤Î¥¹¥Ú¡¼¥¹¥¿¥Ö¤Ï¡¤ÊÑ¹¹¤µ¤ì¤º¤Ë»Ä¤ê¤Þ¤¹¡¥¥¿¥Ö¥¹
¥È¥Ã¥×¤Ï¥«¥ó¥Þ¤Ç¤Ï¤Ê¤¯¶õÇò¤ÇÊ¬Î¥¤¹¤ë¤³¤È¤â²ÄÇ½¤Ç¤¹¡¥¥ª¥×¥·¥ç¥ó¤Ï°ÅÌÛ¤Ë
@option{-a}¥ª¥×¥·¥ç¥ó¤ò»ØÄê¤·¤Þ¤¹¡¥

@c On older systems, @command{unexpand} supports an obsolete option
@c @option{-@var{tab1}[,@var{tab2}]@dots{}}, where tabstops must be
@c separated by commas.  (Unlike @option{-t}, this obsolete option does
@c not imply @option{-a}.)  @acronym{POSIX} 1003.1-2001 (@pxref{Standards
@c conformance}) does not allow this; use @option{--first-only -t
@c @var{tab1}[,@var{tab2}]@dots{}} instead.
@c 
¸Å¤¤¥·¥¹¥Æ¥à¤Ç¤Ï¡¤@command{unexpand}¤Ï»þÂåÃÙ¤ì¤Î¥ª¥×¥·¥ç¥ó
@option{-@var{tab1}[,@var{tab2}]@dots{}}¤ò¥µ¥Ý¡¼¥È¤·¤Æ¤¤¤Æ¡¤¤½¤³¤Ç¤Ï¥¿
¥Ö¥¹¥È¥Ã¥×¤ò¥«¥ó¥Þ¤ÇÊ¬Î¥¤¹¤ë¤Ï¤º¤Ç¤¹¡¥@acronym{POSIX} 1003.1-2001
(@pxref{Standards conformance})¤Ç¤Ï¤³¤ì¤òµö²Ä¤·¤Æ¤¤¤Þ¤»¤ó¡¥Âå¤ï¤ê¤Ë
@option{--first-only -t @var{tab1}[,@var{tab2}]@dots{}}¤ò»ÈÍÑ¤·¤Æ¤¯¤À
¤µ¤¤¡¥

@item -a
@itemx --all
@opindex -a
@opindex --all
@c Convert all strings of two or more spaces or tabs, not just initial
@c ones, to tabs.
@c 
ºÇ½é¤Î¤â¤Î¤À¤±¤Ç¤Ê¤¯¡¤Á´¤Æ¤ÎÆó¤Ä°Ê¾å¤Î¥¹¥Ú¡¼¥¹¤ä¥¿¥Ö¤ò¥¿¥Ö¤ËÊÑ´¹¤·¤Þ¤¹¡¥

@end table

@exitstatus


@node Directory listing
@c @chapter Directory listing
@chapter ¥Ç¥£¥ì¥¯¥È¥ê¤Î¥ê¥¹¥È¥¢¥Ã¥×

@c This chapter describes the @command{ls} command and its variants @command{dir}
@c and @command{vdir}, which list information about files.
@c 
¤³¤Î¾Ï¤Ç¤Ï¡¤@command{ls}¥³¥Þ¥ó¥É¤È¤½¤ÎÊÑ·Á¤Î@command{dir}¤È
@command{vdir}¤òµ­½Ò¤·¡¤¤½¤ì¤Ï¥Õ¥¡¥¤¥ë¤Ë´Ø¤¹¤ë¾ðÊó¤ò¥ê¥¹¥È¥¢¥Ã¥×¤·¤Þ¤¹¡¥

@menu
* ls invocation::               List directory contents.
* dir invocation::              Briefly ls.
* vdir invocation::             Verbosely ls.
* dircolors invocation::        Color setup for ls, etc.
@end menu


@node ls invocation
@c @section @command{ls}: List directory contents
@section @command{ls}: ¥Ç¥£¥ì¥¯¥È¥ê¤ÎÆâÍÆ¤ò¥ê¥¹¥È¥¢¥Ã¥×

@pindex ls
@cindex directory listing

@c The @command{ls} program lists information about files (of any type,
@c including directories).  Options and file arguments can be intermixed
@c arbitrarily, as usual.
@c 
@command{ls}¥×¥í¥°¥é¥à¤Ï¡¤¥Õ¥¡¥¤¥ë(¤Î¤¹¤Ù¤Æ¤Î·Á¼°¤Ç¡¤¥Ç¥£¥ì¥¯¥È¥ê¤ò´Þ
¤à)¤Ë´Ø¤¹¤ë¾ðÊó¤ò¥ê¥¹¥È¥¢¥Ã¥×¤·¤Þ¤¹¡¥¥ª¥×¥·¥ç¥ó¤È¥Õ¥¡¥¤¥ë°ú¿ô¤Ï¡¤ÄÌ¾ï
¤Î¤â¤Î¤ÈÆ±ÍÍ¡¤Ç¤°Õ¤Ëº®¤¼¤ë¤³¤È¤¬²ÄÇ½¤Ç¤¹¡¥

@c For non-option command-line arguments that are directories, by default
@c @command{ls} lists the contents of directories, not recursively, and
@c omitting files with names beginning with @samp{.}.  For other non-option
@c arguments, by default @command{ls} lists just the file name.  If no
@c non-option argument is specified, @command{ls} operates on the current
@c directory, acting as if it had been invoked with a single argument of @samp{.}.
@c 
¥ª¥×¥·¥ç¥ó¤ÎÌµ¤¤¥³¥Þ¥ó¥É¥é¥¤¥ó¤Î¥Ç¥£¥ì¥¯¥È¥ê°ú¿ô¤ËÂÐ¤·¡¤@command{ls}¤Ï
¥Ç¥Õ¥©¥ë¥È¤Ç¡¤¥Ç¥£¥ì¥¯¥È¥ê¤ÎÆâÍÆ¤ò¥ê¥¹¥È¥¢¥Ã¥×¤·¡¤¤½¤ì¤ÏºÆµ¢Åª¤Ç¤Ï¤Ê¤¯¡¤
@samp{.}¤Ç»Ï¤Þ¤ëÌ¾Á°¤ò»ý¤Ä¥Õ¥¡¥¤¥ë¤Ï½ü³°¤·¤Æ¤¤¤Þ¤¹¡¥Â¾¤Î¥ª¥×¥·¥ç¥ó¤ÎÌµ
¤¤°ú¿ô¤ËÂÐ¤·¡¤@command{ls}¤Ï¥Ç¥Õ¥©¥ë¥È¤Ç¡¤¤½¤Î¥Õ¥¡¥¤¥ëÌ¾¤Î¤ß¤ò¥ê¥¹¥È¥¢¥Ã
¥×¤·¤Þ¤¹¡¥¥ª¥×¥·¥ç¥ó¤Ç¤Ï¤Ê¤¤°ú¿ô¤¬»ØÄê¤µ¤ì¤Ê¤¤¾ì¹ç¡¤@command{ls}¤Ï¸½ºß
¤Î¥Ç¥£¥ì¥¯¥È¥ê¤ÎÆâÍÆ¤ò¥ê¥¹¥È¥¢¥Ã¥×¤·¤Þ¤¹¡¥

@vindex LC_ALL
@c By default, the output is sorted alphabetically, according to the locale
@c settings in effect. @footnote{If you use a non-@acronym{POSIX}
@c locale (e.g., by setting @env{LC_ALL} to @samp{en_US}), then @command{ls} may
@c produce output that is sorted differently than you're accustomed to.
@c In that case, set the @env{LC_ALL} environment variable to @samp{C}.}
@c If standard output is
@c a terminal, the output is in columns (sorted vertically) and control
@c characters are output as question marks; otherwise, the output is listed
@c one per line and control characters are output as-is.
@c 
¥Ç¥Õ¥©¥ë¥È¤Ç¡¤½ÐÎÏ¤Ï¥¢¥ë¥Õ¥¡¥Ù¥Ã¥È½ç¤Ë½ÐÎÏ¤µ¤ì¡¤¤½¤ì¤Ï¥í¥«¡¼¥ë¤ÎÀßÄê¤Ë
±Æ¶Á¤µ¤ì¤Þ¤¹¡¥@footnote{@acronym{POSIX}¥í¥«¡¼¥ë¤Ë¤Ç¤Ï¤Ê¤¤¤â¤Î¤ò»ÈÍÑ¤·
¤Æ¤¤¤ë(Îã¤¨¤Ð¡¤@env{LC_ALL}¤ò@samp{en_US}¤ËÀßÄê¤·¤Æ¤¤¤ë)¾ì¹ç¡¤
@command{ls} ¤Ï´·¤ì¤Æ¤¤¤ë¤â¤Î¤È¤Ï°Û¤Ê¤ëÊÂ¤ÙÂØ¤¨¤Î½ÐÎÏ¤òÀ¸À®¤¹¤ë²ÄÇ½À­
¤¬¤¢¤ê¤Þ¤¹¡¥¤½¤Î¤è¤¦¤Ê¾õ¶·¤Ç¤Ï¡¤@env{LC_ALL}¤ò@samp{C}¤ËÀßÄê¤·¤Æ²¼¤µ¤¤¡¥} 
É¸½à½ÐÎÏ¤¬Ã¼Ëö¤Î¾ì¹ç¡¤½ÐÎÏ¤Ï(¿âÄ¾Êý¸þ¤Ë¥½¡¼¥È¤µ¤ì¤¿)Îó¤Ë¤Ê¤ê¡¤À©¸æÊ¸»ú
¤Ïµ¿ÌäÉä¤È¤·¤Æ½ÐÎÏ¤µ¤ì¤Þ¤¹¡¥¤½¤ì°Ê³°¤Î¾ì¹ç¡¤½ÐÎÏ¤Ï°ì¹Ô¤´¤È¤Ë¥ê¥¹¥È¥¢¥Ã
¥×¤µ¤ì¡¤À©¸æÊ¸»ú¤Ï¤½¤Î¤Þ¤Þ¤Ë¤Ê¤ê¤Þ¤¹¡¥

@c Because @command{ls} is such a fundamental program, it has accumulated many
@c options over the years.  They are described in the subsections below;
@c within each section, options are listed alphabetically (ignoring case).
@c The division of options into the subsections is not absolute, since some
@c options affect more than one aspect of @command{ls}'s operation.
@c 
@command{ls}¤Ï¤¢¤Þ¤ê¤Ë´ðËÜÅª¤Ê¥×¥í¥°¥é¥à¤Ê¤Î¤Ç¡¤¿ôÇ¯¤«¤±¤ÆÂ¿¤¯¤Î¥ª¥×¥·¥ç
¥ó¤òÃßÀÑ¤·¤Æ¤­¤Þ¤·¤¿¡¥¤½¤ì¤é¤Ï°Ê²¼¤Î¥µ¥Ö¥»¥¯¥·¥ç¥ó¤Çµ­½Ò¤·¤Þ¤¹¡¥¤½¤ì¤¾
¤ì¤Î¥»¥¯¥·¥ç¥ó¤Ç¡¤¥ª¥×¥·¥ç¥ó¤Ï¥¢¥ë¥Õ¥¡¥Ù¥Ã¥È½ç¤Ë(ÂçÊ¸»ú¾®Ê¸»ú¤òÌµ»ë¤·
¤Æ)¥ê¥¹¥È¥¢¥Ã¥×¤µ¤ì¤Æ¤¤¤Þ¤¹¡¥¥ª¥×¥·¥ç¥ó¤ò¥µ¥Ö¥»¥¯¥·¥ç¥ó¤ËÊ¬¤±¤ë¤³¤È¤Ï
ÀäÂÐ¤Ç¤Ï¤Ê¤¯¡¤¤½¤ì¤Ï¡¤°ì¤Ä°Ê¾å¤Î@command{ls}¤Î½èÍý¤Î¶ÉÌÌ¤Ë±Æ¶Á¤¹¤ë¤¿¤á
¤Ç¤¹¡¥

@exitstatus

@c Also see @ref{Common options}.
@c 
@ref{Common options}¤â»²¾È¤·¤Æ¤¯¤À¤µ¤¤¡¥

@menu
* Which files are listed::
* What information is listed::
* Sorting the output::
* More details about version sort::
* General output formatting::
* Formatting file timestamps::
* Formatting the file names::
@end menu


@node Which files are listed
@c @subsection Which files are listed
@subsection ¥ê¥¹¥È¥¢¥Ã¥×¤µ¤ì¤ë¥Õ¥¡¥¤¥ë

@c These options determine which files @command{ls} lists information for.
@c By default, any files and the contents of any directories on the command
@c line are shown.
@c 
¤³¤ì¤é¤Î¥ª¥×¥·¥ç¥ó¤Ï¡¤@command{ls}¤¬¥ê¥¹¥È¥¢¥Ã¥×¤¹¤ë¥Õ¥¡¥¤¥ë¤Î¾ðÊó¤ò·è
Äê¤·¤Þ¤¹¡¥¥Ç¥Õ¥©¥ë¥È¤Ç¡¤¥³¥Þ¥ó¥É¥é¥¤¥ó¤Î¤¢¤é¤æ¤ë¥Õ¥¡¥¤¥ë¤È¥Ç¥£¥ì¥¯¥È¥ê
¤ÎÆâÍÆ¤¬É½¼¨¤µ¤ì¤Þ¤¹¡¥

@table @samp

@item -a
@itemx --all
@opindex -a
@opindex --all
@c List all files in directories, including files that start with @samp{.}.
@c 
@samp{.}¤Ç»Ï¤Þ¤ë¥Õ¥¡¥¤¥ë¤ò´Þ¤á¡¤¥Ç¥£¥ì¥¯¥È¥ê¤ÎÁ´¤Æ¤Î¥Õ¥¡¥¤¥ë¤ò¥ê¥¹¥È¥¢¥Ã
¥×¤·¤Þ¤¹¡¥

@item -A
@itemx --almost-all
@opindex -A
@opindex --almost-all
@c List all files in directories except for @file{.} and @file{..}.
@c 
@file{.}¤È@file{..}°Ê³°¤Î¡¤¥Ç¥£¥ì¥¯¥È¥ê¤ÎÁ´¤Æ¤Î¥Õ¥¡¥¤¥ë¤ò¥ê¥¹¥È¥¢¥Ã¥×
¤·¤Þ¤¹¡¥

@item -B
@itemx --ignore-backups
@opindex -B
@opindex --ignore-backups
@cindex backup files, ignoring
@c Do not list files that end with @samp{~}, unless they are given on the
@c command line.
@c 
¥³¥Þ¥ó¥É¥é¥¤¥ó¤ÇÍ¿¤¨¤é¤ì¤Ê¤¤¸Â¤ê¡¤@samp{~}¤Ç½ª¤ë¥Õ¥¡¥¤¥ë¤ò¥ê¥¹¥È¥¢¥Ã¥×
¤·¤Þ¤»¤ó¡¥

@item -d
@itemx --directory
@opindex -d
@opindex --directory
@c List just the names of directories, as with other types of files, rather
@c than listing their contents.
@c 
¥Ç¥£¥ì¥¯¥È¥ê¤ÎÌ¾Á°¤Î¤ß¥ê¥¹¥È¥¢¥Ã¥×¤·¡¤¤½¤ì¤Ï¥Õ¥¡¥¤¥ë¤ÎÂ¾¤Î·Á¼°¤ÈÆ±ÍÍ¤Ç¡¤
¤½¤ÎÆâÍÆ¤ò¥ê¥¹¥È¥¢¥Ã¥×¤·¤Þ¤»¤ó¡¥
@c The following sentence is the same as the one for -F.
@c 
@c Do not follow symbolic links listed on the
@c command line unless the @option{--dereference-command-line} (@option{-H}),
@c @option{--dereference} (@option{-L}), or
@c @option{--dereference-command-line-symlink-to-dir} options are specified.
@c 
@option{--dereference-command-line} (@option{-H})¡¤
@option{--dereference} (@option{-L})¡¤¤Þ¤¿¤Ï
@option{--dereference-command-line-symlink-to-dir}¥ª¥×¥·¥ç¥ó¤¬»ØÄê¤µ¤ì
¤Æ¤¤¤Ê¤¤¸Â¤ê¡¤¥³¥Þ¥ó¥É¥é¥¤¥ó¤Ç¥ê¥¹¥È¥¢¥Ã¥×¤µ¤ì¤Æ¤¤¤ë¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯
¤ò¤¿¤É¤ê¤Þ¤»¤ó¡¥

@item -H
@itemx --dereference-command-line
@opindex -H
@opindex --dereference-command-line
@cindex symbolic links, dereferencing
@c If a command line argument specifies a symbolic link, show information
@c for the file the link references rather than for the link itself.
@c 
¥³¥Þ¥ó¥É¥é¥¤¥ó°ú¿ô¤¬¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯¤ò»ØÄê¤·¤Æ¤¤¤ë¾ì¹ç¡¤¥ê¥ó¥¯¼«¿È¤Ç
¤Ï¤Ê¤¯¥ê¥ó¥¯¤¬»²¾È¤·¤Æ¤¤¤ë¥Õ¥¡¥¤¥ë¤Î¾ðÊó¤òÉ½¼¨¤·¤Þ¤¹¡¥

@itemx --dereference-command-line-symlink-to-dir
@opindex --dereference-command-line-symlink-to-dir
@cindex symbolic links, dereferencing
@c Do not dereference symbolic links, with one exception:
@c if a command line argument specifies a symbolic link that refers to
@c a directory, show information for that directory rather than for the
@c link itself.
@c This is the default behavior when no other dereferencing-related
@c option has been specified (@option{--classify} (@option{-F}),
@c @option{--directory} (@option{-d}),
@c (@option{-l}),
@c @option{--dereference} (@option{-L}), or
@c @option{--dereference-command-line} (@option{-H})).
@c 
°ì¤Ä¤ÎÎã³°¤¬¤¢¤ê¤Þ¤¹¤¬¡¤¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯¤ò´ÖÀÜ»²¾È¤·¤Þ¤»¤ó¡¥¥³¥Þ¥ó¥É
¥é¥¤¥ó°ú¿ô¤Ç¡¤¥Ç¥£¥ì¥¯¥È¥ê¤ò»²¾È¤¹¤ë¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯¤¬»ØÄê¤µ¤ì¤Æ¤¤¤ë
¾ì¹ç¡¤¥ê¥ó¥¯¼«¿È¤Ç¤Ï¤Ê¤¯¥Ç¥£¥ì¥¯¥È¥ê¤Î¾ðÊó¤òÉ½¼¨¤·¤Þ¤¹¡¥Â¾¤Ë»²¾È¤Ë´ØÏ¢
¤¹¤ë¥ª¥×¥·¥ç¥ó(@option{--classify} (@option{-F})¡¤@option{--directory}
(@option{-d})¡¤(@option{-l})¡¤@option{--dereference} (@option{-L})¡¤¤Þ
¤¿¤Ï@option{--dereference-command-line} (@option{-H}))¤¬»ØÄê¤µ¤ì¤Æ¤¤¤Ê
¤¤¤È¤­¡¤¤³¤ì¤Ï¥Ç¥Õ¥©¥ë¥È¤ÎÆ°ºî¤Ç¤¹¡¥

@item -I PATTERN
@itemx --ignore=PATTERN
@opindex -I
@opindex --ignore=@var{pattern}
@c Do not list files whose names match the shell pattern (not regular
@c expression) @var{pattern} unless they are given on the command line.  As
@c in the shell, an initial @samp{.} in a file name does not match a
@c wildcard at the start of @var{pattern}.  Sometimes it is useful
@c to give this option several times.  For example,
@c 
¥³¥Þ¥ó¥É¥é¥¤¥ó¤ÇÍ¿¤¨¤é¤ì¤Æ¤¤¤Ê¤¤¸Â¤ê¡¤¥·¥§¥ë¥Ñ¥¿¡¼¥ó(Àµµ¬É½¸½¤Ç¤Ï¤¢¤ê
¤Þ¤»¤ó)@var{pattern}¤Ë¥Þ¥Ã¥Á¤¹¤ëÌ¾Á°¤Î¥Õ¥¡¥¤¥ë¤ò¥ê¥¹¥È¥¢¥Ã¥×¤·¤Þ¤»¤ó¡¥
¥·¥§¥ë¤ÈÆ±ÍÍ¤Ë¡¤¥Õ¥¡¥¤¥ëÌ¾¤ÎºÇ½é¤Î@samp{.}¤Ï¡¤@var{pattern}¤ÎºÇ½é¤Î¥ï
¥¤¥ë¥É¥«¡¼¥É¤Ë¥Þ¥Ã¥Á¤·¤Þ¤»¤ó¡¥¤³¤Î¥ª¥×¥·¥ç¥ó¤òÊ£¿ô²óÍ¿¤¨¤ë¤ÈÊØÍø¤Ê¤È¤­
¤â¤¢¤ê¤Þ¤¹¡¥Îã¤¨¤Ð¡¤°Ê²¼¤Î¤è¤¦¤Ë¤·¤Þ¤¹¡¥

@smallexample
$ ls --ignore='.??*' --ignore='.[^.]' --ignore='#*'
@end smallexample

@c The first option ignores names of length 3 or more that start with @samp{.},
@c the second ignores all two-character names that start with @samp{.}
@c except @samp{..}, and the third ignores names that start with @samp{#}.
@c 
ºÇ½é¤Î¥ª¥×¥·¥ç¥ó¤Ï¡¤@samp{.}¤Ç»Ï¤Þ¤ëÄ¹¤µ¤¬3Ê¸»ú°Ê¾å¤ÎÌ¾Á°¤òÌµ»ë¤·¡¤Æó
ÈÖÌÜ¤Ï@samp{..}°Ê³°¤Î@samp{.}¤Ç»Ï¤Þ¤ëÁ´¤Æ¤Î2Ê¸»ú¤ÎÌ¾Á°¤òÌµ»ë¤·¡¤»°ÈÖÌÜ
¤Ï@samp{#}¤Ç»Ï¤Þ¤ëÌ¾Á°¤òÌµ»ë¤·¤Þ¤¹¡¥

@item -L
@itemx --dereference
@opindex -L
@opindex --dereference
@cindex symbolic links, dereferencing
@c When showing file information for a symbolic link, show information
@c for the file the link references rather than the link itself.
@c However, even with this option, @command{ls} still prints the name
@c of the link itself, not the name of the file that the link points to.
@c 
Ä¹¤¤¥ê¥¹¥È¤Ç¡¤¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯¼«¿È¤Ç¤Ï¤Ê¤¯¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯¤¬»²¾È¤¹
¤ë¥Õ¥¡¥¤¥ë¤Î¾ðÊó(Îã¤¨¤Ð¡¤»þ´Ö¤äµö²Ä)¤òÉ½¼¨¤·¤Þ¤¹¡¥¤·¤«¤·¡¤¤³¤Î¥ª¥×¥·¥ç
¥ó¤ò»ÈÍÑ¤·¤Æ¤¤¤Æ¤â¡¤@command{ls}¤Ï¥ê¥ó¥¯Àè¤Î¥Õ¥¡¥¤¥ëÌ¾¤Ç¤Ï¤Ê¤¯¡¤¥ê¥ó¥¯
¼«¿È¤ÎÌ¾Á°¤ò½ÐÎÏ¤·¤Þ¤¹¡¥

@item -R
@itemx --recursive
@opindex -R
@opindex --recursive
@cindex recursive directory listing
@cindex directory listing, recursive
@c List the contents of all directories recursively.
@c 
Á´¤Æ¤Î¥Ç¥£¥ì¥¯¥È¥ê¤ÎÆâÍÆ¤ò¡¤ºÆµ¢Åª¤Ë¥ê¥¹¥È¥¢¥Ã¥×¤·¤Þ¤¹¡¥

@end table


@node What information is listed
@c @subsection What information is listed
@subsection ¥ê¥¹¥È¥¢¥Ã¥×¤µ¤ì¤ë¾ðÊó

@c These options affect the information that @command{ls} displays.  By
@c default, only file names are shown.
@c 
¤³¤ì¤é¤Î¥ª¥×¥·¥ç¥ó¤Ï¡¤@command{ls}¤¬É½¼¨¤¹¤ë¾ðÊó¤Ë±Æ¶Á¤·¤Þ¤¹¡¥¥Ç¥Õ¥©¥ë
¥È¤Ç¡¤¥Õ¥¡¥¤¥ëÌ¾¤Î¤ßÉ½¼¨¤µ¤ì¤Þ¤¹¡¥

@table @samp

@item --author
@opindex --author
@cindex hurd, author, printing
@c List each file's author when producing long format directory listings.
@c In GNU/Hurd, file authors can differ from their owners, but in other
@c operating systems the two are the same.
@c 
Ä¹¤¤½ñ¼°¤Î¥Ç¥£¥ì¥¯¥È¥ê¤Î¥ê¥¹¥È¤òÀ¸À®¤¹¤ë¤È¤­¡¤¤½¤ì¤¾¤ì¤Î¥Õ¥¡¥¤¥ë¤ÎÃø¼Ô
¤ò¥ê¥¹¥È¥¢¥Ã¥×¤·¤Þ¤¹¡¥GNU/Hurd¤Ç¤Ï¡¤¥Õ¥¡¥¤¥ë¤ÎÃø¼Ô¤Ï¤½¤Î½êÍ­¼Ô¤È¤Ï°Û¤Ê
¤ê¤Þ¤¹¤¬¡¤Â¾¤Î¥ª¥Ú¥ì¡¼¥Æ¥£¥ó¥°¥·¥¹¥Æ¥à¤Ç¤Ï¤½¤ÎÆó¤Ä¤ÏÆ±¤¸¤Ç¤¹¡¥

@item -D
@itemx --dired
@opindex -D
@opindex --dired
@cindex dired Emacs mode support
@c With the long listing (@option{-l}) format, print an additional line after
@c the main output:
@c 
Ä¹¤¤¥ê¥¹¥È(@option{-l})¤Î½ñ¼°¤òÍÑ¤¤¤¿¾ì¹ç¡¤¼ç¤Ê½ÐÎÏ¤Î¸å¤ËÄÉ²Ã¤·¤Æ°Ê²¼
¤ò½ÐÎÏ¤·¤Þ¤¹¡¥

@example
//DIRED// @var{beg1} @var{end1} @var{beg2} @var{end2} @dots{}
@end example

@noindent
@c The @var{begN} and @var{endN} are unsigned integers that record the
@c byte position of the beginning and end of each file name in the output.
@c This makes it easy for Emacs to find the names, even when they contain
@c unusual characters such as space or newline, without fancy searching.
@c 
@var{begN}¤È@var{endN}¤Ï¡¤½ÐÎÏ¤Î¤½¤ì¤¾¤ì¤Î¥Õ¥¡¥¤¥ëÌ¾¤Î»Ï¤á¤È½ª¤ê¤Î¥Ð¥¤
¥È°ÌÃÖ¤òµ­Ï¿¤¹¤ëÉä¹æÌµ¤·À°¿ô¤Ç¤¹¡¥¤³¤ì¤Ç¡¤¤¿¤È¤¨¥¹¥Ú¡¼¥¹¤ä²þ¹Ô¤È¤¤¤Ã¤¿
ÄÌ¾ïÍÑ¤¤¤Ê¤¤Ê¸»ú¤ò´Þ¤à¤È¤­¤â¡¤°Û¾ï¤Ê¸¡º÷¤ò¤¹¤ë¤³¤È¤Ê¤¯¡¤Emacs¤Ç´ÊÃ±¤Ë
Ì¾Á°¤ò¸«¤Ä¤«¤ë¤è¤¦¤Ë¤Ê¤ê¤Þ¤¹¡¥

@c If directories are being listed recursively (@option{-R}), output a similar
@c line with offsets for each subdirectory name:
@c 
¥Ç¥£¥ì¥¯¥È¥ê¤¬ºÆµ¢Åª(@option{-R})¤Ë¥ê¥¹¥È¥¢¥Ã¥×¤µ¤ì¤ë¾ì¹ç¡¤½ÐÎÏ¤Ï¤½¤ì
¤¾¤ì¤Î¥µ¥Ö¥Ç¥£¥ì¥¯¥È¥ê¤Î¸å¤Ë¡¤ÎÉ¤¯»÷¤¿¹Ô¤ò½ÐÎÏ¤·¤Þ¤¹¡¥
@example
//SUBDIRED// @var{beg1} @var{end1} @dots{}
@end example

@c Finally, output a line of the form:
@c 
ºÇ½ªÅª¤Ë°Ê²¼¤Î·Á¼°¤Î¹Ô¤ò½ÐÎÏ¤·¤Þ¤¹¡¥
@example
//DIRED-OPTIONS// --quoting-style=@var{word}
@end example
@c where @var{word} is the quoting style (@pxref{Formatting the file names}).
@c 
@var{word}¤Ï°úÍÑ·Á¼°¤Ç¤¹(@pxref{Formatting the file names})¡¥

@c Here is an actual example:
@c 
°Ê²¼¤Ï¼ÂºÝ¤ÎÎã¤Ç¤¹¡¥

@example
$ mkdir -p a/sub/deeper a/sub2
$ touch a/f1 a/f2
$ touch a/sub/deeper/file
$ ls -gloRF --dired a
  a:
  total 8
  -rw-r--r--  1    0 Dec  3 00:50 f1
  -rw-r--r--  1    0 Dec  3 00:50 f2
  drwxr-xr-x  3 4096 Dec  3 00:50 sub/
  drwxr-xr-x  2 4096 Dec  3 00:50 sub2/

  a/sub:
  total 4
  drwxr-xr-x  2 4096 Dec  3 00:50 deeper/

  a/sub/deeper:
  total 0
  -rw-r--r--  1 0 Dec  3 00:50 file

  a/sub2:
  total 0
//DIRED// 49 51 86 88 123 126 162 166 222 228 288 292
//SUBDIRED// 2 3 171 176 233 245 296 302
//DIRED-OPTIONS// --quoting-style=literal
@end example

@c Note that the pairs of offsets on the @samp{//DIRED//} line above delimit
@c these names: @file{f1}, @file{f2}, @file{sub}, @file{sub2}, @file{deeper},
@c @file{file}.
@c The offsets on the @samp{//SUBDIRED//} line delimit the following
@c directory names: @file{a}, @file{a/sub}, @file{a/sub/deeper}, @file{a/sub2}.
@c 
¾åµ­¤Î@samp{//DIRED//}¹Ô¤Î¥ª¥Õ¥»¥Ã¥È¤ÎÁÈ¤¬¡¤°Ê²¼¤ÎÌ¾Á°@file{f1}¡¤
@file{f2}¡¤@file{sub}¡¤@file{sub2}¡¤@file{deeper}¡¤@file{file}¤òÊ¬Î¥¤·
¤Æ¤¤¤ë¤³¤È¤ËÃí°Õ¤·¤Æ²¼¤µ¤¤¡¥@samp{//SUBDIRED//}¹Ô¤Î¥ª¥Õ¥»¥Ã¥È¤Ï¡¤°Ê²¼
¤Î¥Ç¥£¥ì¥¯¥È¥êÌ¾@file{a}¡¤@file{a/sub}¡¤@file{a/sub/deeper}¡¤
@file{a/sub2}¤òÊ¬Î¥¤·¤Æ¤¤¤Þ¤¹¡¥

@c Here is an example of how to extract the fifth entry name, @samp{deeper},
@c corresponding to the pair of offsets, 222 and 228:
@c 
°Ê²¼¤Ï¡¤¸ÞÈÖÌÜ¤Î¹àÌÜÌ¾¤òÃê½Ð¤¹¤ëÊýË¡¡¤@samp{deeper}¤ÎÎã¤Ç¡¤ÂÐ±þ¤¹¤ë¥ª
¥Õ¥»¥Ã¥È¤ÎÁÈ¤Ï¡¤222¤È228¤Ç¤¹¡¥

@example
$ ls -gloRF --dired a > out
$ dd bs=1 skip=222 count=6 < out 2>/dev/null; echo
deeper
@end example

@c Note that although the listing above includes a trailing slash
@c for the @samp{deeper} entry, the offsets select the name without
@c the trailing slash.  However, if you invoke @command{ls} with @option{--dired}
@c along with an option like @option{--escape} (aka @option{-b}) and operate
@c on a file whose name contains special characters, notice that the backslash
@c @emph{is} included:
@c 
¾åµ­¤Î¥ê¥¹¥È¤Ë¤Ï¡¤@samp{deeper}¤Î¹àÌÜ¤ËÂÐ¤·¤Æ¥¹¥é¥Ã¥·¥å¤¬¸åÃÖ¤µ¤ì¤Æ¤¤
¤Þ¤¹¤¬¡¤¥ª¥Õ¥»¥Ã¥È¤Ï¡¤ºÇ¸å¤Î¥¹¥é¥Ã¥·¥å¤òÍÑ¤¤¤Æ¤¤¤Ê¤¤Ì¾Á°¤òÁªÂò¤·¤Æ¤¤¤ë
¤³¤È¤ËÃí°Õ¤·¤Æ²¼¤µ¤¤¡¥¤·¤«¤·¡¤@command{ls}¤ò
@option{--escape}(@option{-b}) ¤Î¤è¤¦¤Ê¥ª¥×¥·¥ç¥ó¤È¤È¤â¤Ë
@option{--dired}¤òÍÑ¤¤¤Æ¸Æ¤Ó½Ð¤·¡¤ÆÃ¼ìÊ¸»ú¤ò´Þ¤à¥Õ¥¡¥¤¥ëÌ¾¤ò½èÍý¤¹¤ë¾ì
¹ç¡¤¥Ð¥Ã¥¯¥¹¥é¥Ã¥·¥å¤¬´Þ¤Þ¤ì¤ë@emph{¤³¤È}¤ËÃí°Õ¤·¤Æ²¼¤µ¤¤¡¥

@example
$ touch 'a b'
$ ls -blog --dired 'a b'
  -rw-r--r--  1 0 Dec  3 00:52 a\ b
//DIRED// 31 35
//DIRED-OPTIONS// --quoting-style=escape
@end example

@c If you use a quoting style that adds quote marks
@c (e.g., @option{--quoting-style=c}), then the offsets include the quote marks.
@c So beware that the user may select the quoting style via the environment
@c variable @env{QUOTING_STYLE}.  Hence, applications using @option{--dired}
@c should either specify an explicit @option{--quoting-style=literal} option
@c (aka @option{-N} or @option{--literal}) on the command line, or else be
@c prepared to parse the escaped names.
@c 
°úÍÑ¤Î°õ(Îã¤¨¤Ð@option{--quoting-style=c})¤òÄÉ²Ã¤·¤Æ¡¤°úÍÑ·Á¼°¤ò»ÈÍÑ¤·
¤Æ¤¤¤ë¾ì¹ç¡¤¥ª¥Õ¥»¥Ã¥È¤Ë¤Ï°úÍÑ¤Î°õ¤¬´Þ¤Þ¤ì¤Þ¤¹¡¥¤½¤Î¤¿¤á¡¤¥æ¡¼¥¶¤¬´Ä¶­
ÊÑ¿ô@env{QUOTING_STYLE}¤Ç¡¤°úÍÑ·Á¼°¤òÁªÂò¤·¤Æ¤¤¤ë²ÄÇ½À­¤¬¤¢¤ë¤³¤È¤ËÃí
°Õ¤·¤Æ²¼¤µ¤¤¡¥¤³¤Î¤¿¤á¡¤@option{--dired}¤ò»ÈÍÑ¤·¤Æ¤¤¤ë¥¢¥×¥ê¥±¡¼¥·¥ç¥ó
¤Ç¤Ï¡¤ÌÀ¼¨Åª¤Ë¥³¥Þ¥ó¥É¥é¥¤¥ó¤Ç@option{--quoting-style=literal}¥ª¥×¥·¥ç
¥ó(@option{-N}¤Þ¤¿¤Ï@option{--literal})¤ò»ØÄê¤¹¤ë¡¤¤Þ¤¿¤Ï¥¨¥¹¥±¡¼¥×¤µ
¤ì¤¿Ì¾Á°¤Î¥Ñ¡¼¥µ¤òÍÑ°Õ¤·¤Æ¤ª¤¤¤Æ²¼¤µ¤¤¡¥

@item --full-time
@opindex --full-time
@c Produce long format directory listings, and list times in full.  It is
@c equivalent to using @option{--format=long} with
@c @option{--time-style=full-iso} (@pxref{Formatting file timestamps}).
@c 
Ä¹¤¤·Á¼°¤Î¥Ç¥£¥ì¥¯¥È¥ê¥ê¥¹¥È¤Î½ñ¼°¤È¡¤´°Á´¤Ê»þ´Ö¤Î¥ê¥¹¥È¤òÀ¸À®¤·¤Þ¤¹¡¥
@option{--time-style=full-iso}¤È¤È¤â¤Ë@option{--format=long}¤ò»ÈÍÑ¤¹¤ë
¤³¤È¤ÈÅù²Á¤Ç¤¹(@pxref{Formatting file timestamps})¡¥

@item -g
@opindex -g
@c Produce long format directory listings, but don't display owner information.
@c 
Ä¹¤¤½ñ¼°¤Î¥Ç¥£¥ì¥¯¥È¥ê¤Î¥ê¥¹¥ÈÉ½¼¨¤Ç¤¹¤¬¡¤½êÍ­¼Ô¤Î¾ðÊó¤ÏÉ½¼¨¤·¤Þ¤»¤ó¡¥

@item -G
@itemx --no-group
@opindex -G
@opindex --no-group
@c Inhibit display of group information in a long format directory listing.
@c (This is the default in some non-@sc{gnu} versions of @command{ls}, so we
@c provide this option for compatibility.)
@c 
Ä¹¤¤½ñ¼°¤Î¥Ç¥£¥ì¥¯¥È¥ê¤Î¥ê¥¹¥ÈÉ½¼¨¤Ç¡¤¥°¥ë¡¼¥×¾ðÊó¤ÎÉ½¼¨¤ò¶Ø»ß¤·¤Þ¤¹¡¥
(¤³¤ì¤Ï@sc{gnu}¤Ç¤Ï¤Ê¤¤¥Ð¡¼¥¸¥ç¥ó¤Î@command{ls}¤Ç¤Ï¥Ç¥Õ¥©¥ë¥È¤Ç¡¤²æ¡¹
¤Ï¸ß´¹À­¤Î¤¿¤á¤Ë¤³¤Î¥ª¥×¥·¥ç¥ó¤òÄó¶¡¤·¤Þ¤¹¡¥)

@optHumanReadable

@item -i
@itemx --inode
@opindex -i
@opindex --inode
@cindex inode number, printing
@c Print the inode number (also called the file serial number and index
@c number) of each file to the left of the file name.  (This number
@c uniquely identifies each file within a particular filesystem.)
@c 
¤½¤ì¤¾¤ì¤Î¥Õ¥¡¥¤¥ë¤ÎinodeÈÖ¹æ(¥Õ¥¡¥¤¥ë¥·¥ê¥¢¥ëÈÖ¹æ¤È¥¤¥ó¥Ç¥Ã¥¯¥¹ÈÖ¹æ¤È
¤â¸Æ¤Ð¤ì¤Æ¤¤¤Þ¤¹)¤ò¡¤¥Õ¥¡¥¤¥ëÌ¾¤Îº¸¤Ë½ÐÎÏ¤·¤Þ¤¹¡¥(¤³¤ÎÈÖ¹æ¤Ï¡¤ÆÃÄê¤Î¥Õ¥¡
¥¤¥ë¥·¥¹¥Æ¥àÆâ¤Î¡¤¤½¤ì¤¾¤ì¤Î¥Õ¥¡¥¤¥ë¤òÃ±°ì¤Î¤â¤Î¤È¤·¤Æ¼±ÊÌ¤·¤Þ¤¹¡¥)

@item -l
@itemx --format=long
@itemx --format=verbose
@opindex -l
@opindex --format
@opindex long ls @r{format}
@opindex verbose ls @r{format}
@c In addition to the name of each file, print the file type, permissions,
@c number of hard links, owner name, group name, size, and
@c timestamp (@pxref{Formatting file timestamps}), normally
@c the modification time.
@c 
¤½¤ì¤¾¤ì¤Î¥Õ¥¡¥¤¥ëÌ¾¤Ë²Ã¤¨¤Æ¡¤¥Õ¥¡¥¤¥ë·Á¼°¡¤µö²Ä¡¤¥Ï¡¼¥É¥ê¥ó¥¯¿ô¡¤½êÍ­
¼ÔÌ¾¡¤¥Ð¥¤¥È¤Î¥µ¥¤¥º¡¤¤½¤·¤ÆÄÌ¾ï¤ÏÊÔ½¸¤·¤¿»þ´Ö¤È¤Ê¤Ã¤Æ¤¤¤ë¥¿¥¤¥à¥¹¥¿¥ó
¥×(@pxref{Formatting file timestamps})¤ò½ÐÎÏ¤·¤Þ¤¹¡¥

@c Normally the size is printed as a byte count without punctuation, but
@c this can be overridden (@pxref{Block size}).  For example, @option{-h}
@c prints an abbreviated, human-readable count, and
@c @samp{--block-size="'1"} prints a byte count with the thousands
@c separator of the current locale.
@c 
ÄÌ¾ï¡¤¥µ¥¤¥º¤Ï¶çÆÉÅÀ¤òÍÑ¤¤¤º¥Ð¥¤¥È¿ô¤ò½ÐÎÏ¤·¤Þ¤¹¤¬¡¤¤³¤ì¤ÏÍ¥Àè²ÄÇ½¤Ç¤¹
(@pxref{Block size})¡¥Îã¤¨¤Ð¡¤@option{-h}¤Ç¤Ï¡¤¿Í´Ö¤¬ÆÉ¤ß°×¤¤¾ÊÎ¬¤·¤¿
¤â¤Î¤ò½ÐÎÏ¤·¡¤@samp{--block-size="'1"}¤Ï¡¤¸½ºß¤Î¥í¥«¡¼¥ë¤ÇÀéÃ±°Ì¤ÇÊ¬Î¥
¤·¤Æ¥Ð¥¤¥È¿ô¤ò½ÐÎÏ¤·¤Þ¤¹¡¥

@c For each directory that is listed, preface the files with a line
@c @samp{total @var{blocks}}, where @var{blocks} is the total disk allocation
@c for all files in that directory.  The block size currently defaults to 1024
@c bytes, but this can be overridden (@pxref{Block size}).
@c The @var{blocks} computed counts each hard link separately;
@c this is arguably a deficiency.
@c 
¥ê¥¹¥È¥¢¥Ã¥×¤µ¤ì¤Æ¤¤¤ë¤½¤ì¤¾¤ì¤Î¥Ç¥£¥ì¥¯¥È¥ê¤ËÂÐ¤·¡¤@samp{total
@var{blocks}}¤È¤¤¤¦¹Ô¤ò¥Õ¥¡¥¤¥ë¤ËÁ°ÃÖ¤·¡¤¤½¤³¤Ç¤Î@var{blocks}¤Ï¡¤¤½¤Î
¥Ç¥£¥ì¥¯¥È¥ê¤ÎÁ´¤Æ¤Î¥Õ¥¡¥¤¥ë¤ËÂÐ¤¹¤ëÁ´ÂÎÅª¤Ê¥Ç¥£¥¹¥¯ÀêÍ­ÎÌ¤Ç¤¹¡¥¥Ö¥í¥Ã
¥¯¥µ¥¤¥º¤Ï¡¤¸½ºß¥Ç¥Õ¥©¥ë¥È¤Ç1024¥Ð¥¤¥È¤Ç¤¹¤¬¡¤¤³¤ì¤ËÍ¥Àè¤µ¤»¤ë¤³¤È¤¬²Ä
Ç½¤Ç¤¹(@pxref{Block size})¡¥@var{blocks}¤Ï¡¤¤½¤ì¤¾¤ì¤Î¥Ï¡¼¥É¥ê¥ó¥¯¤òÊÌ¡¹
¤Ë¿ô¤¨¤Æ·×»»¤·¤Þ¤¹¡¥¤³¤ì¤Ï¤ª¤½¤é¤¯·ç´Ù¤Ç¤¹¡¥

@cindex permissions, output by @command{ls}
@c The permissions listed are similar to symbolic mode specifications
@c (@pxref{Symbolic Modes}).  But @command{ls} combines multiple bits into the
@c third character of each set of permissions as follows:
@c 
¥ê¥¹¥È¥¢¥Ã¥×¤µ¤ì¤ëµö²Ä¤Ï¡¤¾ÝÄ§Åª¤Ê¥â¡¼¥É¤Ç¤Î»ØÄê¤Ë»÷¤Æ¤¤¤Þ¤¹
(@pxref{Symbolic Modes})¡¥¤·¤«¤·¡¤@command{ls}¤Ï¡¤¤½¤ì¤¾¤ì¤Îµö²Ä¤ÎÀßÄê
¤òÊ£¿ô¤Î¥Ó¥Ã¥È¤ò»°ÈÖÌÜ¤ÎÊ¸»ú¤ËÁÈ¤ß¹ç¤ï¤»¡¤°Ê²¼¤Î¤è¤¦¤Ë¤·¤Þ¤¹¡¥

@table @samp
@item s
@c If the setuid or setgid bit and the corresponding executable bit
@c are both set.
@c 
setuid¤äsetgid¥Ó¥Ã¥È¤ÈÂÐ±þ¤¹¤ë¼Â¹Ô²ÄÇ½¥Ó¥Ã¥È¤¬¡¤Î¾ÊýÀßÄê¤µ¤ì¤Æ¤¤¤ë¾ì¹ç¡¥

@item S
@c If the setuid or setgid bit is set but the corresponding executable bit
@c is not set.
@c 
setuid¤äsetgid¥Ó¥Ã¥È¤ÏÀßÄê¤µ¤ì¤Æ¤¤¤ë¤¬¡¤ÂÐ±þ¤¹¤ë¼Â¹Ô²ÄÇ½¥Ó¥Ã¥È¤¬ÀßÄê¤µ
¤ì¤Æ¤¤¤Ê¤¤¾ì¹ç¡¥

@item t
@c If the sticky bit and the other-executable bit are both set.
@c 
sticky¥Ó¥Ã¥È¤Èother¤Î¼Â¹Ô²ÄÇ½¥Ó¥Ã¥È¤¬Î¾ÊýÀßÄê¤µ¤ì¤Æ¤¤¤ë¾ì¹ç¡¥

@item T
@c If the sticky bit is set but the other-executable bit is not set.
@c 
sticky¥Ó¥Ã¥È¤ÏÀßÄê¤µ¤ì¤Æ¤¤¤ë¤¬¡¤other¤Î¼Â¹Ô²ÄÇ½¥Ó¥Ã¥È¤¬ÀßÄê¤µ¤ì¤Æ¤¤¤Ê
¤¤¾ì¹ç¡¥

@item x
@c If the executable bit is set and none of the above apply.
@c 
¼Â¹Ô²ÄÇ½¥Ó¥Ã¥È¤¬ÀßÄê¤µ¤ì¤Æ¤¤¤Æ¡¤¾åµ­¤Ï²¿¤âÅ¬±þ¤µ¤ì¤Ê¤¤¾ì¹ç¡¥

@item -
@c Otherwise.
@c 
¤½¤ì°Ê³°¡¥
@end table

@c Following the permission bits is a single character that specifies
@c whether an alternate access method applies to the file.  When that
@c character is a space, there is no alternate access method.  When it
@c is a printing character (e.g., @samp{+}), then there is such a method.
@c 
µö²Ä¥Ó¥Ã¥È¤ËÂ³¤¯¤â¤Î¤Ï¡¤¥Õ¥¡¥¤¥ë¤ËÅ¬ÍÑ¤¹¤ë¥¢¥¯¥»¥¹¼êË¡¤ÎÊÑ¹¹¤ò»ØÄê¤¹¤ë
Ã±°ì¤ÎÊ¸»ú¤Ç¤¹¡¥Ê¸»ú¤¬¥¹¥Ú¡¼¥¹¤Î¤È¤­¡¤¥¢¥¯¥»¥¹¼êË¡¤ÎÊÑ¹¹¤Ï¤¢¤ê¤Þ¤»¤ó¡¥
°õºþ²ÄÇ½¤ÊÊ¸»ú(Îã¤¨¤Ð@samp{+})¤Î¤È¤­¡¤¤½¤Î¤è¤¦¤Ê¼êË¡¤¬¤¢¤ê¤Þ¤¹¡¥

@item -n
@itemx --numeric-uid-gid
@opindex -n
@opindex --numeric-uid-gid
@cindex numeric uid and gid
@c Produce long format directory listings, but
@c display numeric UIDs and GIDs instead of the owner and group names.
@c 
Ä¹¤¤½ñ¼°¤Ç¥Ç¥£¥ì¥¯¥È¥ê¤Î¥ê¥¹¥È¤òÀ¸À®¤·¤Þ¤¹¤¬¡¤½êÍ­¼Ô¤È¥°¥ë¡¼¥×¤ÎÌ¾Á°¤Î
Âå¤ï¤ê¤Ë¿ôÃÍ¤ÎUID¤ÈGID¤ò¥ê¥¹¥È¥¢¥Ã¥×¤·¤Þ¤¹¡¥

@item -o
@opindex -o
@c Produce long format directory listings, but don't display group information.
@c It is equivalent to using @option{--format=long} with @option{--no-group} .
@c 
Ä¹¤¤¥Ç¥£¥ì¥¯¥È¥ê¤Î¥ê¥¹¥È¤Î½ñ¼°¤òÀ¸À®¤·¤Þ¤¹¤¬¡¤¥°¥ë¡¼¥×¾ðÊó¤ÏÉ½¼¨¤·¤Þ¤»
¤ó¡¥¤½¤ì¤Ï¡¤@option{--no-group}¤òÍÑ¤¤¤¿@option{--format=long}¤Î»ÈÍÑ¤È
Æ±¤¸¤Ç¤¹¡¥

@item -s
@itemx --size
@opindex -s
@opindex --size
@cindex disk allocation
@cindex size of files, reporting
@c Print the disk allocation of each file to the left of the file name.
@c This is the amount of disk space used by the file, which is usually a
@c bit more than the file's size, but it can be less if the file has holes.
@c 
¥Õ¥¡¥¤¥ëÌ¾¤Îº¸Â¦¤Ë¡¤¤½¤ì¤¾¤ì¤Î¥Õ¥¡¥¤¥ë¤Î¥Ç¥£¥¹¥¯ÀêÍ­ÎÌ¤ò½ÐÎÏ¤·¤Þ¤¹¡¥¤³
¤ì¤Ï¡¤¥Õ¥¡¥¤¥ë¤¬»ÈÍÑ¤·¤Æ¤¤¤ë¥Ç¥£¥¹¥¯¥¹¥Ú¡¼¥¹¤ÎÁíÎÌ¤Ç¡¤¤½¤ì¤ÏÄÌ¾ï¥Õ¥¡¥¤
¥ë¥µ¥¤¥º¤è¤ê¤ï¤º¤«¤ËÂ¿¤¯¤Ê¤ê¤Þ¤¹¤¬¡¤¥Õ¥¡¥¤¥ë¤Ë·ç´Ù¤¬¤¢¤ë¾ì¹ç¤Ï¡¤¤è¤ê¾®
¤µ¤¯¤Ê¤ë¤Ï¤º¤Ç¤¹¡¥

@c Normally the disk allocation is printed in units of
@c 1024 bytes, but this can be overridden (@pxref{Block size}).
@c 
ÄÌ¾ï¥Ç¥£¥¹¥¯¤ÎÀêÍ­ÎÌ¤Ï1024¥Ð¥¤¥ÈÃ±°Ì¤Ç½ÐÎÏ¤µ¤ì¤Þ¤¹¤¬¡¤¤³¤ì¤ËÍ¥Àè¤µ¤»¤ë
¤³¤È¤¬²ÄÇ½¤Ç¤¹(@pxref{Block size})¡¥

@cindex NFS mounts from BSD to HP-UX
@c For files that are NFS-mounted from an HP-UX system to a BSD system,
@c this option reports sizes that are half the correct values.  On HP-UX
@c systems, it reports sizes that are twice the correct values for files
@c that are NFS-mounted from BSD systems.  This is due to a flaw in HP-UX;
@c it also affects the HP-UX @command{ls} program.
@c 
HP-UX¥·¥¹¥Æ¥à¤«¤éBSD¥·¥¹¥Æ¥à¤Ë¡¤NFS¤Ç¥Þ¥¦¥ó¥È¤µ¤ì¤Æ¤¤¤ë¥Õ¥¡¥¤¥ë¤ËÂÐ¤·¡¤
¤³¤Î¥ª¥×¥·¥ç¥ó¤Ï¡¤Àµ¤·¤¤ÃÍ¤ÎÈ¾Ê¬¤Î¥µ¥¤¥º¤òÊó¹ð¤·¤Þ¤¹¡¥HP-UX¥·¥¹¥Æ¥à¤Ç
¤Ï¡¤BSD¥·¥¹¥Æ¥à¤«¤éNFS¤Ç¥Þ¥¦¥ó¥È¤µ¤ì¤Æ¤¤¤ë¥Õ¥¡¥¤¥ë¤ËÂÐ¤·¡¤Àµ¤·¤¤ÃÍ¤Î2
ÇÜ¤Î¥µ¥¤¥º¤òÊó¹ð¤·¤Þ¤¹¡¥¤³¤ì¤Ï¡¤HP-UX¤Î·çÅÀ¤Î¤¿¤á¤Ç¤¹¡¥¤½¤ì¤ÏHP-UX¤Î
@command{ls}¥×¥í¥°¥é¥à¤Ë¤â±Æ¶Á¤·¤Þ¤¹¡¥

@optSi

@end table


@node Sorting the output
@c @subsection Sorting the output
@subsection ½ÐÎÏ¤ÎÊÂ¤ÙÂØ¤¨

@cindex sorting @command{ls} output
@c These options change the order in which @command{ls} sorts the information
@c it outputs.  By default, sorting is done by character code
@c (e.g., @acronym{ASCII} order).
@c 
¤³¤ì¤é¤Î¥ª¥×¥·¥ç¥ó¤Ï¡¤@command{ls}¤¬ÊÂ¤ÙÂØ¤¨¤ë½ÐÎÏ¤Î¾ðÊó¤Î½ç½ø¤òÊÑ¹¹¤·
¤Þ¤¹¡¥¥Ç¥Õ¥©¥ë¥È¤Ç¡¤ÊÂ¤ÙÂØ¤¨¤ÏÊ¸»ú¥³¡¼¥É¤Ë¤è¤Ã¤Æ¹Ô¤ï¤ì¤Þ¤¹(Îã¤¨¤Ð¡¤
@acronym{ASCII}¤Î½çÈÖ¤Ç¤¹)¡¥

@table @samp

@item -c
@itemx --time=ctime
@itemx --time=status
@itemx --time=use
@opindex -c
@opindex --time
@opindex ctime@r{, printing or sorting by}
@opindex status time@r{, printing or sorting by}
@opindex use time@r{, printing or sorting files by}
@c If the long listing format (e.g., @option{-l}, @option{-o}) is being used,
@c print the status change time (the @samp{ctime} in the inode) instead of
@c the modification time.
@c When explicitly sorting by time (@option{--sort=time} or @option{-t})
@c or when not using a long listing format,
@c sort according to the status change time.
@c 
Ä¹¤¤¥ê¥¹¥È½ñ¼°(Îã¤¨¤Ð¡¤@option{-l}¡¤@option{-o})¤¬»ÈÍÑ¤µ¤ì¤Æ¤¤¤ë¾ì¹ç¡¤
ÊÔ½¸»þ´Ö¤ÎÂå¤ï¤ê¤Ë¥¹¥Æ¡¼¥¿¥¹ÊÑ¹¹»þ´Ö(inode¤Î@samp{ctime})¤¬½ÐÎÏ¤µ¤ì¤Þ
¤¹¡¥»þ´Ö(@option{--sort=time}¤Þ¤¿¤Ï@option{-t})¤ÇÌÀ¼¨Åª¤ËÊÂ¤ÙÂØ¤¨¤ò¤·
¤¿¤ê¡¤Ä¹¤¤¥ê¥¹¥È¤Î½ñ¼°¤ò»ÈÍÑ¤·¤Ê¤¤¤È¤­¡¤¥¹¥Æ¡¼¥¿¥¹¤ÎÊÑ¹¹»þ´Ö¤Ë¤è¤Ã¤ÆÊÂ
¤ÙÂØ¤¨¤Þ¤¹¡¥

@item -f
@opindex -f
@cindex unsorted directory listing
@cindex directory order, listing by
@c Primarily, like @option{-U}---do not sort; list the files in whatever
@c order they are stored in the directory.  But also enable @option{-a} (list
@c all files) and disable @option{-l}, @option{--color}, and @option{-s} (if they
@c were specified before the @option{-f}).
@c 
¼ç¤Ë¡¤@option{-U}¤Ë»÷¤Æ¤¤¤Þ¤¹ --- ÊÂ¤ÙÂØ¤¨¤·¤Þ¤»¤ó¡¥¥Ç¥£¥ì¥¯¥È¥ê¤ËÊÝÂ¸
¤µ¤ì¤Æ¤¤¤ë¥Õ¥¡¥¤¥ë¤Î½çÈÖ¤Ë¡¤¤½¤ì¤é¤ò¥ê¥¹¥È¥¢¥Ã¥×¤·¤Þ¤¹¡¥¤·¤«¤·¡¤
@option{-a}(¤¹¤Ù¤Æ¤Î¥Õ¥¡¥¤¥ë¤ò¥ê¥¹¥È¥¢¥Ã¥×)¤âÍøÍÑ²ÄÇ½¤Ç¡¤(Á°¤Ë
@option{-f}¤¬»ØÄê¤µ¤ì¤Æ¤¤¤ë¾ì¹ç)@option{-l}¡¤@option{--color}¡¤¤½¤·¤Æ
@option{-s}¤ÏÍøÍÑÉÔ²ÄÇ½¤Ç¤¹¡¥

@item -r
@itemx --reverse
@opindex -r
@opindex --reverse
@cindex reverse sorting
@c Reverse whatever the sorting method is---e.g., list files in reverse
@c alphabetical order, youngest first, smallest first, or whatever.
@c 
ÊÂ¤ÙÂØ¤¨¤Î¤¢¤é¤æ¤ë¼êË¡¤òÈ¿Å¾¤·¤Þ¤¹ --- Îã¤¨¤Ð¡¤¥¢¥ë¥Õ¥¡¥Ù¥Ã¥È¤ÎµÕ½ç¡¤
¿·¤·¤¤¤â¤Î¤òºÇ½é¡¤¾®¤µ¤¤¤â¤Î¤òºÇ½é¡¤¤Þ¤¿¤Ï¤¹¤Ù¤ÆµÕ½ç¤Ë¥ê¥¹¥È¥¢¥Ã¥×¤·¤Þ
¤¹¡¥

@item -S
@itemx --sort=size
@opindex -S
@opindex --sort
@opindex size of files@r{, sorting files by}
@c Sort by file size, largest first.
@c 
¥Õ¥¡¥¤¥ë¥µ¥¤¥º¤Ç¡¤Âç¤­¤¤¤â¤Î¤òºÇ½é¤Ë¤·¤ÆÊÂ¤ÙÂØ¤¨¤Þ¤¹¡¥

@item -t
@itemx --sort=time
@opindex -t
@opindex --sort
@opindex modification time@r{, sorting files by}
@c Sort by modification time (the @samp{mtime} in the inode), newest first.
@c 
ÊÔ½¸»þ´Ö(inode¤Î@samp{mtime})¤Ç¡¤¿·¤·¤¤¤â¤Î¤òºÇ½é¤Ë¤·¤ÆÊÂ¤ÙÂØ¤¨¤Þ¤¹¡¥

@item -u
@itemx --time=atime
@itemx --time=access
@opindex -u
@opindex --time
@opindex use time@r{, printing or sorting files by}
@opindex atime@r{, printing or sorting files by}
@opindex access time@r{, printing or sorting files by}
@c If the long listing format (e.g., @option{--format=long}) is being used,
@c print the last access time (the @samp{atime} in the inode).
@c When explicitly sorting by time (@option{--sort=time} or @option{-t})
@c or when not using a long listing format, sort according to the access time.
@c 
Ä¹¤¤¥ê¥¹¥È½ñ¼°(Îã¤¨¤Ð¡¤@option{--format=long})¤¬»ÈÍÑ¤µ¤ì¤Æ¤¤¤ë¾ì¹ç¡¤ºÇ
¸å¤Ë¥¢¥¯¥»¥¹¤·¤¿»þ´Ö(inode¤Î@samp{atime})¤¬½ÐÎÏ¤µ¤ì¤Þ¤¹¡¥»þ´Ö
(@option{--sort=time}¤Þ¤¿¤Ï@option{-t})¤ÇÌÀ¼¨Åª¤ËÊÂ¤ÙÂØ¤¨¤ò¤·¤¿¤ê¡¤Ä¹
¤¤¥ê¥¹¥È¤Î½ñ¼°¤ò»ÈÍÑ¤·¤Ê¤¤¤È¤­¡¤¥¢¥¯¥»¥¹¤·¤¿»þ´Ö¤Ë¤è¤Ã¤ÆÊÂ¤ÙÂØ¤¨¤Þ¤¹¡¥

@item -U
@itemx --sort=none
@opindex -U
@opindex --sort
@opindex none@r{, sorting option for @command{ls}}
@c Do not sort; list the files in whatever order they are
@c stored in the directory.  (Do not do any of the other unrelated things
@c that @option{-f} does.)  This is especially useful when listing very large
@c directories, since not doing any sorting can be noticeably faster.
@c 
ÊÂ¤ÙÂØ¤¨¤·¤Þ¤»¤ó¡¥¥Ç¥£¥ì¥¯¥È¥ê¤ËÊÝÂ¸¤µ¤ì¤Æ¤¤¤ë½çÈÖ¤Ë¥Õ¥¡¥¤¥ë¤ò¥ê¥¹¥È¥¢¥Ã
¥×¤·¤Þ¤¹¡¥(@option{-f}¤¬¹Ô¤¦¡¤Â¾¤È´ØÏ¢¤¹¤ë¤³¤È¤Ï²¿¤â¤·¤Þ¤»¤ó¡¥) ÊÂ¤ÙÂØ
¤¨¤ò¹Ô¤ï¤Ê¤¤¤³¤È¤Ç¡¤ÌÜÎ©¤Ã¤ÆÂ®¤¯¤¹¤ë¤³¤È¤¬²ÄÇ½¤Ê¤Î¤Ç¡¤Èó¾ï¤ËÂç¤­¤Ê¥Ç¥£
¥ì¥¯¥È¥ê¤ò¥ê¥¹¥È¥¢¥Ã¥×¤¹¤ë¤È¤­¡¤¤³¤ì¤ÏÆÃ¤ËÊØÍø¤Ç¤¹¡¥

@item -v
@itemx --sort=version
@opindex -v
@opindex --sort
@opindex version@r{, sorting option for @command{ls}}
@c Sort by version name and number, lowest first.  It behaves like a default
@c sort, except that each sequence of decimal digits is treated numerically
@c as an index/version number.  (@xref{More details about version sort}.)
@c 
¥Ð¡¼¥¸¥ç¥óÌ¾¤È¿ô»ú¤Ç¡¤¾®¤µ¤¤¤â¤Î¤òºÇ½é¤Ë¤·¤ÆÊÂ¤ÙÂØ¤¨¤Þ¤¹¡¥¤½¤ì¤Ï¥Ç¥Õ¥©
¥ë¥È¤ÎÊÂ¤ÙÂØ¤¨¤Ë»÷¤Æ¤¤¤ëÆ°ºî¤Ç¡¤¤½¤ì¤¾¤ì¤Î10¿Ê¿ô¤ÎÊÂ¤Ó¤¬¡¤º÷°ú/¥Ð¡¼¥¸¥ç
¥óÈÖ¹æ¤È¤·¤Æ¿ôÃÍÅª¤Ë°·¤ï¤ì¤ë¤³¤È¤¬´üÂÔ¤µ¤ì¤Þ¤¹¡¥(@xref{More details
about version sort}.)

@item -X
@itemx --sort=extension
@opindex -X
@opindex --sort
@opindex extension@r{, sorting files by}
@c Sort directory contents alphabetically by file extension (characters
@c after the last @samp{.}); files with no extension are sorted first.
@c 
¥Ç¥£¥ì¥¯¥È¥ê¤ÎÆâÍÆ¤ò¡¤¥Õ¥¡¥¤¥ë¤Î³ÈÄ¥»Ò(ºÇ¸å¤Î@samp{.}¤Î¸å¤ÎÊ¸»ú)¤Ç¡¤¥¢
¥ë¥Õ¥¡¥Ù¥Ã¥È½ç¤ËÊÂ¤ÙÂØ¤¨¤Þ¤¹¡¥¥Õ¥¡¥¤¥ë¤Î³ÈÄ¥»Ò¤¬¤Ê¤¤¤â¤Î¤¬ºÇ½é¤Ë¤Ê¤ê¤Þ
¤¹¡¥

@end table


@node More details about version sort
@c @subsection More details about version sort
@subsection ¥Ð¡¼¥¸¥ç¥ó¤ÎÊÂ¤ÙÂØ¤¨¤Î¾ÜºÙ

@c The version sort takes into account the fact that file names frequently include
@c indices or version numbers.  Standard sorting functions usually do not produce
@c the ordering that people expect because comparisons are made on a
@c character-by-character basis.  The version
@c sort addresses this problem, and is especially useful when browsing
@c directories that contain many files with indices/version numbers in their
@c names:
@c 
¥Ð¡¼¥¸¥ç¥ó¤ÎÊÂ¤ÙÂØ¤¨¤Ï¡¤¥Õ¥¡¥¤¥ëÌ¾¤¬º÷°ú¤ä¥Ð¡¼¥¸¥ç¥óÈÖ¹æ¤ò´Þ¤à¤³¤È¤¬Â¿
¤¤¤È¤¤¤¦»ö¼Â¤ò¹ÍÎ¸¤Ë¤¤¤ì¤Æ¤¤¤Þ¤¹¡¥É¸½àÅª¤ÊÊÂ¤ÙÂØ¤¨µ¡Ç½¤Ï¡¤°ìÊ¸»ú¤Å¤Ä¤ò
´ðËÜ¤ËÈæ³Ó¤¹¤ë¤¿¤á¡¤ÄÌ¾ï¡¤¿Í¡¹¤¬´üÂÔ¤¹¤ë½ç½ø¤òÀ¸À®¤·¤Þ¤»¤ó¡¥¥Ð¡¼¥¸¥ç¥ó
¤ÎÊÂ¤ÙÂØ¤¨¤Ï¡¤¤³¤ÎÌäÂê¤òÄó½Ð¤·¡¤¤½¤ÎÌ¾Á°¤Ëº÷°ú/¥Ð¡¼¥¸¥ç¥óÈÖ¹æ¤òÈ¼¤¦¥Õ¥¡
¥¤¥ë¤òÂ¿¤¯´Þ¤à¥Ç¥£¥ì¥¯¥È¥ê¤òÄ¯¤á¤ë¤È¤­ÆÃ¤ËÌò¤ËÎ©¤Á¤Þ¤¹¡¥

@example
      > ls -1            > ls -1v
      foo.zml-1.gz       foo.zml-1.gz
      foo.zml-100.gz     foo.zml-2.gz
      foo.zml-12.gz      foo.zml-6.gz
      foo.zml-13.gz      foo.zml-12.gz
      foo.zml-2.gz       foo.zml-13.gz
      foo.zml-25.gz      foo.zml-25.gz
      foo.zml-6.gz       foo.zml-100.gz
@end example

@c Note also that numeric parts with leading zeroes are considered as
@c fractional one:
@c 
¿ô»ú¤ÎÉôÊ¬¤Ë¥¼¥í¤¬Á°ÃÖ¤µ¤ì¤Æ¤¤¤Æ¤â¡¤Ê¬¿ô¤È¤·¤Æ¹ÍÎ¸¤µ¤ì¤ë¤³¤È¤ËÃí°Õ¤·¤Æ
²¼¤µ¤¤¡¥

@example
      > ls -1            > ls -1v
      abc-1.007.tgz      abc-1.007.tgz
      abc-1.012b.tgz     abc-1.01a.tgz
      abc-1.01a.tgz      abc-1.012b.tgz
@end example

@c This functionality is implemented using the @code{strverscmp} function.
@c @xref{String/Array Comparison, , , libc, The GNU C Library Reference Manual}.
@c One result of that implementation decision is that @code{ls -v} does not
@c use the locale category, @env{LC_COLLATE}.  As a result, non-numeric prefixes
@c are sorted as if @env{LC_COLLATE} were set to @code{C}.
@c 
¤³¤Îµ¡Ç½¤Ï¡¤@code{strverscmp}´Ø¿ô¤ò»ÈÍÑ¤·¤Æ¼ÂÁõ¤·¤Æ¤¤¤Þ¤¹¡¥
@xref{String/Array Comparison, , , libc, The GNU C Library Reference
Manual}.¼ÂÁõ¤ò·èÄê¤·¤¿·ë²Ì¡¤@code{ls -v}¤Ï¥í¥«¡¼¥ë¥«¥Æ¥´¥ê¤Î
@env{LC_COLLATE}¤ò»ÈÍÑ¤·¤Ê¤¯¤Ê¤ê¤Þ¤·¤¿¡¥·ë²Ì¤È¤·¤Æ¡¤¿ô»ú°Ê³°¤ÎÀÜÆ¬¼­¤Ï¡¤
@env{LC_COLLATE}¤¬@code{C}¤ËÀßÄê¤µ¤ì¤Æ¤¤¤ë¤«¤Î¤è¤¦¤ËÊÂ¤ÙÂØ¤¨¤é¤ì¤Þ¤¹¡¥


@node General output formatting
@c @subsection General output formatting
@subsection °ìÈÌÅª¤Ê½ÐÎÏ½ñ¼°

@c These options affect the appearance of the overall output.
@c 
¤³¤ì¤é¤Î¥ª¥×¥·¥ç¥ó¤Ï¡¤½ÐÎÏ¤Î³°´Ñ¤Ë±Æ¶Á¤·¤Þ¤¹¡¥

@table @samp

@item -1
@itemx --format=single-column
@opindex -1
@opindex --format
@opindex single-column @r{output of files}
@c List one file per line.  This is the default for @command{ls} when standard
@c output is not a terminal.
@c 
¥Õ¥¡¥¤¥ë¤ò°ì¹Ô¤´¤È¤Ë¥ê¥¹¥È¥¢¥Ã¥×¤·¤Þ¤¹¡¥¤³¤ì¤Ï¡¤É¸½à½ÐÎÏ¤¬Ã¼Ëö¤Ç¤Ê¤¤¤È
¤­¤Î¥Ç¥Õ¥©¥ë¥È¤Ç¤¹¡¥

@item -C
@itemx --format=vertical
@opindex -C
@opindex --format
@opindex vertical @r{sorted files in columns}
@c List files in columns, sorted vertically.  This is the default for
@c @command{ls} if standard output is a terminal.  It is always the default
@c for the @command{dir} and @command{d} programs.
@c @sc{gnu} @command{ls} uses variable width columns to display as many files as
@c possible in the fewest lines.
@c 
Îó¤Ç½ÄÊý¸þ¤ËÊÂ¤ÙÂØ¤¨¤µ¤ì¤Æ¥ê¥¹¥È¥¢¥Ã¥×¤µ¤ì¤Þ¤¹¡¥É¸½à½ÐÎÏ¤¬Ã¼Ëö¤Î¾ì¹ç¡¤
¤³¤ì¤Ï¥Ç¥Õ¥©¥ë¥È¤Ç¤¹¡¥@command{dir}¤È@code{d}¥×¥í¥°¥é¥à¤ËÂÐ¤·¡¤¤½¤ì¤Ï
¾ï¤Ë¥Ç¥Õ¥©¥ë¥È¤Ç¤¹¡¥@sc{gnu} @command{ls}¤Ï¡¤ºÇ¤â¾¯¤Ê¤¤¹Ô¤Ç²ÄÇ½¤Ê¸Â¤ê
Â¿¤¯¤Î¥Õ¥¡¥¤¥ë¤òÉ½¼¨¤Ç¤­¤ë¤è¤¦¤Ë¡¤Îó¤ÎÉý¤òÊÑ¹¹¤·¤Æ»ÈÍÑ¤·¤Þ¤¹¡¥

@item --color [=@var{when}]
@opindex --color
@cindex color, distinguishing file types with
@c Specify whether to use color for distinguishing file types.  @var{when}
@c may be omitted, or one of:
@c 
¥Õ¥¡¥¤¥ë·Á¼°¤ò¶èÊÌ¤¹¤ë¤¿¤á»ÈÍÑ¤¹¤ë¿§¤ò»ØÄê¤·¤Þ¤¹¡¥@var{when}¤Ï¾ÊÎ¬¤µ¤ì
¤ë¡¤¤Þ¤¿¤Ï°Ê²¼¤Î°ì¤Ä¤Ë¤Ê¤ê¤Þ¤¹¡¥
@itemize @bullet
@item none
@vindex none @r{color option}
@c - Do not use color at all.  This is the default.
@c 
- ¿§¤òÁ´¤¯»ÈÍÑ¤·¤Þ¤»¤ó¡¥¤³¤ì¤Ï¥Ç¥Õ¥©¥ë¥È¤Ç¤¹¡¥
@item auto
@vindex auto @r{color option}
@cindex terminal, using color iff
@c - Only use color if standard output is a terminal.
@c 
- É¸½à½ÐÎÏ¤¬Ã¼Ëö¤Î¾ì¹ç¤Î¤ß¿§¤ò»ÈÍÑ¤·¤Þ¤¹¡¥
@item always
@vindex always @r{color option}
@c - Always use color.
@c 
- ¾ï¤Ë¿§¤ò»ÈÍÑ¤·¤Þ¤¹¡¥
@end itemize
@c Specifying @option{--color} and no @var{when} is equivalent to
@c @option{--color=always}.
@c Piping a colorized listing through a pager like @command{more} or
@c @command{less} usually produces unreadable results.  However, using
@c @code{more -f} does seem to work.
@c 
@option{--color}¤ò»ØÄê¤·@var{when}¤¬Ìµ¤¤¤Î¤Ï¡¤@option{--color=always}
¤ÈÆ±¤¸¤Ç¤¹¡¥¿§ÉÕ¤­¤Î¥ê¥¹¥È¤ò@command{more}¤ä@command{less}¤ÎÍÍ¤Ê¥Ú¡¼¥¸¥ã
¤Ë¥Ñ¥¤¥×¤ÇÅÏ¤¹¤È¡¤ÄÌ¾ïÆÉ¤à¤³¤È¤¬¤Ç¤­¤Ê¤¤·ë²Ì¤òÀ¸À®¤·¤Þ¤¹¡¥¤·¤«¤·¡¤
@code{more -f}¤ò»ÈÍÑ¤¹¤ë¤ÈÆ°ºî¤¹¤ë¤Ç¤·¤ç¤¦¡¥

@item -F
@itemx --classify
@itemx --indicator-style=classify
@opindex -F
@opindex --classify
@opindex --indicator-style
@cindex file type and executables, marking
@cindex executables and file type, marking
@c Append a character to each file name indicating the file type.  Also,
@c for regular files that are executable, append @samp{*}.  The file type
@c indicators are @samp{/} for directories, @samp{@@} for symbolic links,
@c @samp{|} for FIFOs, @samp{=} for sockets, and nothing for regular files.
@c 
¥Õ¥¡¥¤¥ë·Á¼°¤ò¼¨¤¹Ê¸»ú¤ò¡¤¤½¤ì¤¾¤ì¤Î¥Õ¥¡¥¤¥ëÌ¾¤ËÄÉ²Ã¤·¤Þ¤¹¡¥¤Þ¤¿¡¤¼Â¹Ô
²ÄÇ½¤ÊÉ¸½à¥Õ¥¡¥¤¥ë¤ËÂÐ¤·¡¤@samp{*}¤ò²Ã¤¨¤Þ¤¹¡¥¥Õ¥¡¥¤¥ë·Á¼°É½¼¨»Ò¤Ï¡¤¥Ç¥£
¥ì¥¯¥È¥ê¤ËÂÐ¤¹¤ë@samp{/}¡¤¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯¤ËÂÐ¤¹¤ë@samp{@@}¡¤FIFO¤Ë
ÂÐ¤¹¤ë@samp{|}¡¤¥½¥±¥Ã¥È¤ËÂÐ¤¹¤ë@samp{=}¤Ç¡¤É¸½à¥Õ¥¡¥¤¥ë¤Ï²¿¤â¤¢¤ê¤Þ¤»
¤ó¡¥
@c The following sentence is the same as the one for -d.
@c 
@c Do not follow symbolic links listed on the
@c command line unless the @option{--dereference-command-line} (@option{-H}),
@c @option{--dereference} (@option{-L}), or
@c @option{--dereference-command-line-symlink-to-dir} options are specified.
@c 
@option{--dereference-command-line} (@option{-H})¡¤
@option{--dereference} (@option{-L})¡¤¤Þ¤¿¤Ï
@option{--dereference-command-line-symlink-to-dir}¥ª¥×¥·¥ç¥ó¤¬»ØÄê¤µ¤ì
¤Æ¤¤¤Ê¤¤¸Â¤ê¡¤¥³¥Þ¥ó¥É¥é¥¤¥ó¤Ç¥ê¥¹¥È¥¢¥Ã¥×¤µ¤ì¤Æ¤¤¤ë¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯
¤ò¤¿¤É¤ê¤Þ¤»¤ó¡¥

@item --indicator-style=@var{word}
@opindex --indicator-style
@c Append a character indicator with style @var{word} to entry names,
@c as follows:
@c 
¥¨¥ó¥È¥ê¡¼Ì¾¤Ë¥¹¥¿¥¤¥ë@var{word}Ê¸»úÉ½¼¨»Ò¤ò°Ê²¼¤Î¤è¤¦¤ËÄÉ²Ã¤·¤Þ¤¹¡¥
@table @samp
@item none
@c Do not append any character indicator; this is the default.
@c 
¤¢¤é¤æ¤ëÊ¸»úÉ½¼¨»Ò¤òÄÉ²Ã¤·¤Þ¤»¤ó¡¥¤³¤ì¤Ï¥Ç¥Õ¥©¥ë¥È¤Ç¤¹¡¥
@item file-type
@c Append @samp{/} for directories, @samp{@@} for symbolic links, @samp{|}
@c for FIFOs, @samp{=} for sockets, and nothing for regular files.  This is
@c the same as the @option{-p} or @option{--file-type} option.
@c 
¥Ç¥£¥ì¥¯¥È¥ê¤ËÂÐ¤·@samp{/}¡¤¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯¤ËÂÐ¤·@samp{@@}¡¤FIFO¤Ë
ÂÐ¤·@samp{|}¡¤¥½¥±¥Ã¥È¤ËÂÐ¤·@samp{=}¤òÄÉ²Ã¤·¡¤É¸½à¥Õ¥¡¥¤¥ë¤Ë¤Ï²¿¤âÄÉ²Ã
¤·¤Þ¤»¤ó¡¥¤³¤ì¤Ï@option{-p}¤ä@option{--file-type}¥ª¥×¥·¥ç¥ó¤ÈÆ±¤¸¤Ç¤¹¡¥
@item classify
@c Append @samp{*} for executable regular files, otherwise behave as for
@c @samp{file-type}.  This is the same as the @option{-F} or
@c @option{--classify} option.
@c 
¼Â¹Ô²ÄÇ½¤ÊÉ¸½à¥Õ¥¡¥¤¥ë¤Ë@samp{*}¤ò²Ã¤¨¡¤¤½¤ì°Ê³°¤Ï@samp{file-type}¤È¤·
¤ÆÆ°ºî¤·¤Þ¤¹¡¥¤³¤ì¤Ï¡¤@option{-F}¤ä@option{--classify}¥ª¥×¥·¥ç¥ó¤ÈÆ±¤¸
¤Ç¤¹¡¥
@end table

@item -k
@opindex -k
@c Print file sizes in 1024-byte blocks, overriding the default block
@c size (@pxref{Block size}).
@c This option is equivalent to @option{--block-size=1K}.
@c 
¥Õ¥¡¥¤¥ë¤ÎÂç¤­¤µ¤ò1024¥Ð¥¤¥È¥Ö¥í¥Ã¥¯¤Ç½ÐÎÏ¤·¡¤¥Ç¥Õ¥©¥ë¥È¤Î¥Ö¥í¥Ã¥¯¥µ¥¤
¥º(@pxref{Block size})¤ËÍ¥Àè¤·¤Þ¤¹¡¥

@item -m
@itemx --format=commas
@opindex -m
@opindex --format
@opindex commas@r{, outputting between files}
@c List files horizontally, with as many as will fit on each line,
@c separated by @samp{, } (a comma and a space).
@c 
¤½¤ì¤¾¤ì¤Î¹Ô¤Ë¤Ç¤­¤ë¤À¤±Â¿¤¯¥Õ¥£¥Ã¥È¤¹¤ë¤è¤¦¤Ë¡¤@samp{, } (¥«¥ó¥Þ¤È¥¹
¥Ú¡¼¥¹)¤ÇÊ¬¤±¤Æ¡¤¿åÊ¿Êý¸þ¤Ë¥ê¥¹¥È¥¢¥Ã¥×¤·¤Þ¤¹¡¥

@item -p
@itemx --file-type
@itemx --indicator-style=file-type
@opindex --file-type
@opindex --indicator-style
@cindex file type, marking
@c Append a character to each file name indicating the file type. This is
@c like @option{-F}, except that executables are not marked.
@c 
¤½¤ì¤¾¤ì¤Î¥Õ¥¡¥¤¥ëÌ¾¤Ë¥Õ¥¡¥¤¥ë·Á¼°¤ò¼¨¤¹Ê¸»ú¤òÄÉ²Ã¤·¤Þ¤¹¡¥¤³¤ì¤Ï
@option{-F}¤Ë»÷¤Æ¤¤¤Þ¤¹¤¬¡¤¼Â¹Ô²ÄÇ½¤Ê¤â¤Î¤Ï°õ¤òÉÕ¤±¤Þ¤»¤ó¡¥

@item -x @var{format}
@itemx --format=across
@itemx --format=horizontal
@opindex -x
@opindex --format
@opindex across@r{, listing files}
@opindex horizontal@r{, listing files}
@c List the files in columns, sorted horizontally.
@c 
¥Õ¥¡¥¤¥ë¤òÎó¤Ë¡¤¿åÊ¿¤Ë¥½¡¼¥È¤·¤Æ¥ê¥¹¥È¥¢¥Ã¥×¤·¤Þ¤¹¡¥

@item -T @var{cols}
@itemx --tabsize=@var{cols}
@opindex -T
@opindex --tabsize
@c Assume that each tabstop is @var{cols} columns wide.  The default is 8.
@c @command{ls} uses tabs where possible in the output, for efficiency.  If
@c @var{cols} is zero, do not use tabs at all.
@c 
¤½¤ì¤¾¤ì¤Î¥¿¥Ö¥¹¥È¥Ã¥×¤¬@var{cols}Îó¤ÎÉý¤À¤È¹Í¤¨¤Þ¤¹¡¥¥Ç¥Õ¥©¥ë¥È¤Ï8¤Ç
¤¹¡¥@command{ls}¤Ï¡¤¸úÎ¨¤Î¤¿¤á¤Ë½ÐÎÏ²ÄÇ½¤Ê¤È¤³¤í¤Ç¤Ï¥¿¥Ö¤ò»ÈÍÑ¤·¤Þ¤¹¡¥
@var{cols}¤¬0¤Î¾ì¹ç¤Ï¥¿¥Ö¤òÁ´¤¯»ÈÍÑ¤·¤Þ¤»¤ó¡¥

@item -w
@itemx --width=@var{cols}
@opindex -w
@opindex --width
@vindex COLUMNS
@c Assume the screen is @var{cols} columns wide.  The default is taken
@c from the terminal settings if possible; otherwise the environment
@c variable @env{COLUMNS} is used if it is set; otherwise the default
@c is 80.
@c 
²èÌÌ¤¬@var{cols}Îó¤ÎÉý¤À¤È¹Í¤¨¤Þ¤¹¡¥²ÄÇ½¤Ê¾ì¹ç¡¤¥Ç¥Õ¥©¥ë¥È¤ÏÃ¼Ëö¤ÎÀßÄê
¤ÇÍ¿¤¨¤é¤ì¤Þ¤¹¡¥¤½¤ì°Ê³°¤Ç¡¤´Ä¶­ÊÑ¿ô@env{COLUMNS}¤¬ÀßÄê¤µ¤ì¤Æ¤¤¤ë¾ì¹ç¡¤
¤½¤ì¤¬»ÈÍÑ¤µ¤ì¤Þ¤¹¡¥¤½¤ì°Ê³°¤Î¾ì¹ç¡¤¥Ç¥Õ¥©¥ë¥È¤Î80¤Ç¤¹¡¥

@end table


@node Formatting file timestamps
@c @subsection Formatting file timestamps
@subsection ¥Õ¥¡¥¤¥ë¤Î¥¿¥¤¥à¥¹¥¿¥ó¥×¤Î½ñ¼°²½

@c By default, file timestamps are listed in abbreviated form.  Most
@c locales use a timestamp like @samp{2002-03-30 23:45}.  However, the
@c default @acronym{POSIX} locale uses a date like @samp{Mar 30@ @ 2002}
@c for non-recent timestamps, and a date-without-year and time like
@c @samp{Mar 30 23:45} for recent timestamps.
@c 
¥Ç¥Õ¥©¥ë¥È¤Ç¡¤¥Õ¥¡¥¤¥ë¤Î¥¿¥¤¥à¥¹¥¿¥ó¥×¤ÏÃ»½Ì¤·¤¿ÍÍ¼°¤Ç¥ê¥¹¥È¥¢¥Ã¥×¤µ¤ì
¤Þ¤¹¡¥¤Û¤È¤ó¤É¤Î¥í¥«¡¼¥ë¤Ç@samp{2002-03-30 23:45}¤Î¤è¤¦¤Ê¥¿¥¤¥à¥¹¥¿¥ó
¥×¤¬»ÈÍÑ¤µ¤ì¤Þ¤¹¡¥¤·¤«¤·¡¤¥Ç¥Õ¥©¥ë¥È¤Î@acronym{POSIX}¥í¥«¡¼¥ë¤Ç¤Ï¡¤ÀÎ
¤Î¥¿¥¤¥à¥¹¥¿¥ó¥×¤ËÂÐ¤·@samp{Mar 30@ @ 2002}¤Î¤è¤¦¤ÊÆüÉÕ¤ò»ÈÍÑ¤·¡¤ºÇ¶á
¤Î¥¿¥¤¥à¥¹¥¿¥ó¥×¤ËÂÐ¤·¡¤@samp{Mar 30 23:45}¤Î¤è¤¦¤ËÇ¯¤¬Ìµ¤¤ÆüÉÕ¤È»þ´Ö
¤ò»ÈÍÑ¤·¤Þ¤¹¡¥

@c A timestamp is considered to be @dfn{recent} if it is less than six
@c months old, and is not dated in the future.  If a timestamp dated
@c today is not listed in recent form, the timestamp is in the future,
@c which means you probably have clock skew problems which may break
@c programs like @command{make} that rely on file timestamps.
@c 
¥¿¥¤¥à¥¹¥¿¥ó¥×¤Ï¡¤Ï»¥«·îÌ¤Ëþ¤Î¤â¤Î¤ò@dfn{ºÇ¶á¤Î¤â¤Î(recent)}¤È¹Í¤¨¡¤Ì¤
Íè¤Î¤â¤Î¤ÏÆüÉÕ¤¬¤Ä¤­¤Þ¤»¤ó¡¥¥¿¥¤¥à¥¹¥¿¥ó¥×¤¬º£Æü¤Î¾ì¹ç¤Ï¡¤ºÇ¶á¤Î¤â¤Î¤Î
·Á¼°¤Ç¥ê¥¹¥È¥¢¥Ã¥×¤µ¤ì¤º¡¤¥¿¥¤¥à¥¹¥¿¥ó¥×¤¬Ì¤Íè¤Î¤â¤Î¤Ï¡¤¤ª¤½¤é¤¯»þ´Ö¤Î
ÏÄ¤ß¤ÎÌäÂê¤¬¤¢¤ë¤³¤È¤ò°ÕÌ£¤·¡¤@command{make}¤Î¤è¤¦¤Ë¥Õ¥¡¥¤¥ë¤Î¥¿¥¤¥à¥¹
¥¿¥ó¥×¤Ë°ÍÂ¸¤·¤Æ¤¤¤ë¥×¥í¥°¥é¥à¤Ç¤ÏÌäÂê¤Ë¤Ê¤ë²ÄÇ½À­¤¬¤¢¤ê¤Þ¤¹¡¥

@c The following option changes how file timestamps are printed.
@c 
°Ê²¼¤Î¥ª¥×¥·¥ç¥ó¤Ç¡¤¥Õ¥¡¥¤¥ë¤Î¥¿¥¤¥à¥¹¥¿¥ó¥×¤ò½ÐÎÏ¤¹¤ëÊýË¡¤òÊÑ¹¹¤·¤Þ¤¹¡¥

@table @samp
@item --time-style=@var{style}
@opindex --time-style
@cindex time style
@c List timestamps in style @var{style}.  The @var{style} should
@c be one of the following:
@c 
¥¿¥¤¥à¥¹¥¿¥ó¥×¤ò@var{style}¤Î·Á¼°¤Ç¥ê¥¹¥È¥¢¥Ã¥×¤·¤Þ¤¹¡¥@var{style}¤Ï°Ê
²¼¤Î°ì¤Ä¤Ë¤·¤Þ¤¹¡¥

@table @samp
@item +@var{format}
@vindex LC_TIME
@c List timestamps using @var{format}, where @var{format} is interpreted
@c like the format argument of @command{date} (@pxref{date invocation}).
@c For example, @option{--time-style="+%Y-%m-%d %H:%M:%S"} causes
@c @command{ls} to list timestamps like @samp{2002-03-30 23:45:56}.  As
@c with @command{date}, @var{format}'s interpretation is affected by the
@c @env{LC_TIME} locale category.
@c 
@var{format}¤ò»ÈÍÑ¤·¤Æ¥¿¥¤¥à¥¹¥¿¥ó¥×¤ò¥ê¥¹¥È¥¢¥Ã¥×¤·¡¤@var{format}¤Ï
@command{date}¤Î½ñ¼°²½°ú¿ô¤Î¤è¤¦¤Ë²ò¼á¤µ¤ì¤Þ¤¹(@pxref{date
invocation})¡¥Îã¤¨¤Ð¡¤@option{--time-style="+%Y-%m-%d %H:%M:%S"}¤Ç
@command{ls}¤Ï@samp{2002-03-30 23:45:56}¤Î¤è¤¦¤Ë¥¿¥¤¥à¥¹¥¿¥ó¥×¤ò¥ê¥¹¥È
¥¢¥Ã¥×¤·¤Þ¤¹¡¥@command{date}Æ±ÍÍ¡¤@var{format}¤Î²ò¼á¤Ç¤Ï@env{LC_TIME} 
¥í¥«¡¼¥ë¥«¥Æ¥´¥ê¤Î±Æ¶Á¤ò¼õ¤±¤Þ¤¹¡¥

@c If @var{format} contains two format strings separated by a newline,
@c the former is used for non-recent files and the latter for recent
@c files; if you want output columns to line up, you may need to insert
@c spaces in one of the two formats.
@c 
@var{format}¤ËÆó¤Ä¤Î½ñ¼°²½Ê¸»úÎó¤¬¡¤²þ¹Ô¤ÇÊ¬¤±¤é¤ì¤ÆÂ¸ºß¤¹¤ë¾ì¹ç¡¤Á°¼Ô
¤ÏºÇ¶á¤Î¤â¤Î¤Ç¤Ï¤Ê¤¤¥Õ¥¡¥¤¥ë¤Ë»ÈÍÑ¤µ¤ì¡¤¸å¼Ô¤ÏºÇ¶á¤Î¥Õ¥¡¥¤¥ë¤Ë»ÈÍÑ¤µ¤ì
¤Þ¤¹¡¥½ÐÎÏÎó¤òÊÂ¤Ù¤¿¤¤¾ì¹ç¡¤Æó¤Ä¤Î½ñ¼°¤Î°ì¤Ä¤Ë¥¹¥Ú¡¼¥¹¤òÁÞÆþ¤¹¤ëÉ¬Í×¤¬
¤¢¤ë¤«¤â¤·¤ì¤Þ¤»¤ó¡¥

@item full-iso
@c List timestamps in full using @acronym{ISO} 8601 date, time, and time zone
@c format with nanosecond precision, e.g., @samp{2002-03-30
@c 23:45:56.477817180 -0700}.  This style is equivalent to
@c @samp{+%Y-%m-%d %H:%M:%S.%N %z}.
@c 
´°Á´¤Ê@acronym{ISO} 8601¤ÎÆüÉÕ¡¤»þ´Ö¡¤¥¿¥¤¥à¥¾¡¼¥ó¤ò¡¤¥Ê¥ÎÉÃ¤ÎÀºÅÙ¤ò»È
ÍÑ¤·¤Æ¥¿¥¤¥à¥¹¥¿¥ó¥×¤ò¥ê¥¹¥È¥¢¥Ã¥×¤·¡¤Îã¤¨¤Ð¡¤@samp{2002-03-30
23:45:56.477817180 -0700}¤Î¤è¤¦¤Ë¤·¤Þ¤¹¡¥¤³¤Î·Á¼°¤Ï@samp{+%Y-%m-%d
%H:%M:%S.%N %z}¤ÈÅù²Á¤Ç¤¹¡¥

@c This is useful because the time output includes all the information that
@c is available from the operating system.  For example, this can help
@c explain @command{make}'s behavior, since @acronym{GNU} @command{make}
@c uses the full timestamp to determine whether a file is out of date.
@c 
¥ª¥Ú¥ì¡¼¥Æ¥£¥ó¥°¥·¥¹¥Æ¥à¤ÇÍøÍÑ²ÄÇ½¤Ê¤¹¤Ù¤Æ¤Î¾ðÊó¤ò´Þ¤ó¤Ç¤¤¤ë»þ´Ö¤Î½ÐÎÏ
¤Ë¤Ê¤ë¤Î¤Ç¡¤¤³¤ì¤ÏÌò¤ËÎ©¤Á¤Þ¤¹¡¥Îã¤¨¤Ð¡¤¥Õ¥¡¥¤¥ë¤¬ºÇ¿·¤«¤É¤¦¤«¤ò·èÄê¤¹
¤ë¤¿¤á¡¤@acronym{GNU} @command{make}¤Ï´°Á´¤Ê¥¿¥¤¥à¥¹¥¿¥ó¥×¤ò»ÈÍÑ¤¹¤ë¤Î
¤Ç¡¤@command{make}¤ÎÆ°ºî¤ò²ò¼á¤¹¤ë½õ¤±¤È¤Ê¤ê¤Þ¤¹¡¥

@item long-iso
@c List @acronym{ISO} 8601 date and time in minutes, e.g.,
@c @samp{2002-03-30 23:45}.  These timestamps are shorter than
@c @samp{full-iso} timestamps, and are usually good enough for everyday
@c work.  This style is equivalent to @samp{%Y-%m-%d %H:%M}.
@c 
@acronym{ISO} 8601¤ÎÆüÉÕ¡¤Ê¬Ã±°Ì¤Î»þ´Ö¤Ç¥ê¥¹¥È¥¢¥Ã¥×¤·¡¤Îã¤¨¤Ð¡¤
@samp{2002-03-30 23:45}¤Î¤è¤¦¤Ë¤·¤Þ¤¹¡¥¤³¤ì¤é¤Î¥¿¥¤¥à¥¹¥¿¥ó¥×¤Ï¡¤
@samp{full-iso}¤Î¥¿¥¤¥à¥¹¥¿¥ó¥×¤è¤êÃ»¤¯¡¤ËèÆü¤Îºî¶È¤Ç¤ÏÄÌ¾ï½½Ê¬¤ËÍøÍÑ
¤Ç¤­¤ë¤â¤Î¤Ç¤¹¡¥¤³¤Î·Á¼°¤Ï@samp{%Y-%m-%d %H:%M}¤ÈÅù²Á¤Ç¤¹¡¥

@item iso
@c List @acronym{ISO} 8601 dates for non-recent timestamps (e.g.,
@c @samp{2002-03-30@ }), and @acronym{ISO} 8601 month, day, hour, and
@c minute for recent timestamps (e.g., @samp{03-30 23:45}).  These
@c timestamps are uglier than @samp{long-iso} timestamps, but they carry
@c nearly the same information in a smaller space and their brevity helps
@c @command{ls} output fit within traditional 80-column output lines.
@c The following two @command{ls} invocations are equivalent:
@c 
ºÇ¶á¤Î¤â¤Î¤Ç¤Ï¤Ê¤¤¥¿¥¤¥à¥¹¥¿¥ó¥×¤Ï@acronym{ISO} 8601(Îã¤¨¤Ð¡¤
@samp{2002-03-30@ })¤Ç¡¤ºÇ¶á¤Î¤â¤Î¤Ï¡¤·î¡¤Æü¡¤»þ´Ö¡¤¤½¤·¤ÆÊ¬¤Ç¥ê¥¹¥È¥¢¥Ã
¥×¤·¤Þ¤¹(Îã¤¨¤Ð¡¤@samp{03-30 23:45})¡¥¤³¤ì¤é¤Î¥¿¥¤¥à¥¹¥¿¥ó¥×¤Ï¡¤
@samp{long-iso}¤Î¥¿¥¤¥à¥¹¥¿¥ó¥×¤è¤ê°­¤¯¤Ê¤ê¤Þ¤¹¤¬¡¤¤è¤ê¾®¤µ¤Ê¥¹¥Ú¡¼¥¹
¤ÇÆ±¤¸¾ðÊó¤òÄó¶¡¤·¡¤¤Þ¤¿´Ê·é¤Ê¤Î¤Ç@command{ls}¤Î½ÐÎÏ¤ÏÅÁÅýÅª¤Ê80Îó¤Î½Ð
ÎÏ¹Ô¤ËÅ¬¤·¤Æ¤¤¤Þ¤¹¡¥°Ê²¼¤ÎÆó¤Ä¤Î@command{ls}¤Î¸Æ¤Ó½Ð¤·¤ÏÅù²Á¤Ç¤¹¡¥

@example
newline='
'
ls -l --time-style="+%Y-%m-%d $newline%m-%d %H:%M"
ls -l --time-style="iso"
@end example

@item locale
@vindex LC_TIME
@c List timestamps in a locale-dependent form.  For example, a Finnish
@c locale might list non-recent timestamps like @samp{maalis 30@ @ 2002}
@c and recent timestamps like @samp{maalis 30 23:45}.  Locale-dependent
@c timestamps typically consume more space than @samp{iso} timestamps and
@c are harder for programs to parse because locale conventions vary so
@c widely, but they are easier for many people to read.
@c 
¥¿¥¤¥à¥¹¥¿¥ó¥×¤ò¥í¥«¡¼¥ë°ÍÂ¸¤ÎÍÍ¼°¤Ç¥ê¥¹¥È¥¢¥Ã¥×¤·¤Þ¤¹¡¥Îã¤¨¤Ð¡¤¥Õ¥£¥ó
¥é¥ó¥É¤Î¥í¥«¡¼¥ë¤Ç¤Ï¡¤ºÇ¶á¤Î¤â¤Î¤Ç¤Ï¤Ê¤¤¥¿¥¤¥à¥¹¥¿¥ó¥×¤ò@samp{maalis
30@ @ 2002}¤Î¤è¤¦¤Ë¡¤¤½¤·¤ÆºÇ¶á¤Î¤â¤Î¤Î¥¿¥¤¥à¥¹¥¿¥ó¥×¤ò@samp{maalis 30
23:45}¤Î¤è¤¦¤Ë¥ê¥¹¥È¥¢¥Ã¥×¤¹¤ë¤Ç¤·¤ç¤¦¡¥¥í¥«¡¼¥ë°ÍÂ¸¤Î¥¿¥¤¥à¥¹¥¿¥ó¥×¤Ï¡¤
ÄÌ¾ï¡¤@samp{iso}¤Î¥¿¥¤¥à¥¹¥¿¥ó¥×¤è¤ê¥¹¥Ú¡¼¥¹¤ò»ÈÍÑ¤·¡¤¤Þ¤¿¡¤¥í¥«¡¼¥ë¤Î
´·½¬¤ÏÉý¹­¤¯¡¤¥×¥í¥°¥é¥à¤Ç¥Ñ¡¼¥¹¤¹¤ë¤Î¤Ï¤è¤êÆñ¤·¤¯¤Ê¤ê¤Þ¤¹¤¬¡¤Â¿¤¯¤Î¿Í¡¹
¤Ï¤½¤ì¤ÇÆÉ¤ß°×¤¯¤Ê¤ê¤Þ¤¹¡¥

@c The @env{LC_TIME} locale category specifies the timestamp format.  The
@c default @acronym{POSIX} locale uses timestamps like @samp{Mar 30@
@c @ 2002} and @samp{Mar 30 23:45}; in this locale, the following two
@c @command{ls} invocations are equivalent:
@c 
@env{LC_TIME}¥í¥«¡¼¥ë¥«¥Æ¥´¥ê¤Ï¥¿¥¤¥à¥¹¥¿¥ó¥×¤Î½ñ¼°¤ò»ØÄê¤·¤Þ¤¹¡¥¥Ç¥Õ¥©
¥ë¥È¤Î@acronym{POSIX}¥í¥«¡¼¥ë¤Ï¡¤@samp{Mar 30@ 2002}¤È@samp{Mar 30
23:45}¤Î¤è¤¦¤Ê¥¿¥¤¥à¥¹¥¿¥ó¥×¤ò»ÈÍÑ¤·¤Þ¤¹¡¥¤³¤Î¥í¥«¡¼¥ë¤Ç¤Ï¡¤°Ê²¼¤ÎÆó¤Ä
¤Î@command{ls}¤Î¸Æ¤Ó½Ð¤·¤ÏÅù²Á¤Ç¤¹¡¥

@example
newline='
'
ls -l --time-style="+%b %e  %Y$newline%b %e %H:%M"
ls -l --time-style="locale"
@end example

@c Other locales behave differently.  For example, in a German locale,
@c @option{--time-style="locale"} might be equivalent to
@c @option{--time-style="+%e. %b %Y $newline%e. %b %H:%M"}
@c and might generate timestamps like @samp{30. M@"ar 2002@ } and
@c @samp{30. M@"ar 23:45}.
@c 
¤½¤ì°Ê³°¤Î¥í¥«¡¼¥ë¤Ç¤ÏÆ°ºî¤Ï°Û¤Ê¤ê¤Þ¤¹¡¥Îã¤¨¤Ð¥É¥¤¥Ä¤Î¥í¥«¡¼¥ë¤Ç¤Ï¡¤
@option{--time-style="locale"}¤Ï@option{--time-style="+%e. %b %Y
$newline%e. %b %H:%M"}¤ÈÅù²Á¤Ç¡¤@samp{30. M@"ar 2002@ }¤È
@samp{30. M@"ar 23:45}¤Î¤è¤¦¤Ê¥¿¥¤¥à¥¹¥¿¥ó¥×¤òÀ¸À®¤¹¤ë¤Ç¤·¤ç¤¦¡¥

@item posix-@var{style}
@vindex LC_TIME
@c List @acronym{POSIX}-locale timestamps if the @env{LC_TIME} locale
@c category is @acronym{POSIX}, @var{style} timestamps otherwise.  For
@c example, the default style, which is @samp{posix-long-iso}, lists
@c timestamps like @samp{Mar 30@ @ 2002} and @samp{Mar 30 23:45} when in
@c the @acronym{POSIX} locale, and like @samp{2002-03-30 23:45} otherwise.
@c 
@env{LC_TIME}¥í¥«¡¼¥ë¤¬@acronym{POSIX}¤Î¾ì¹ç¡¤¥¿¥¤¥à¥¹¥¿¥ó¥×¤ò
@acronym{POSIX}¥í¥«¡¼¥ë¤Ç¡¤¤½¤ì°Ê³°¤Ç¤Ï@var{style}¤Î¥¿¥¤¥à¥¹¥¿¥ó¥×¤Ç¥ê
¥¹¥È¥¢¥Ã¥×¤·¤Þ¤¹¡¥Îã¤¨¤Ð¡¤¥Ç¥Õ¥©¥ë¥È¤Î¥¹¥¿¥¤¥ë@samp{posix-long-iso}¤Ç
¤Ï¡¤@acronym{POSIX}¥í¥«¡¼¥ë¤Î¤È¤­¤Ï¡¤@samp{Mar 30@ @ 2002}¤È@samp{Mar
30 23:45}¤Î¤è¤¦¤Ê¥¿¥¤¥à¥¹¥¿¥ó¥×¤Ç¡¤¤½¤ì°Ê³°¤Ç¤Ï@samp{2002-03-30 23:45} 
¤Î¤è¤¦¤Ê¥¿¥¤¥à¥¹¥¿¥ó¥×¤Ç¥ê¥¹¥È¥¢¥Ã¥×¤·¤Þ¤¹¡¥
@end table
@end table

@vindex TIME_STYLE
@c You can specify the default value of the @option{--time-style} option
@c with the environment variable @env{TIME_STYLE}; if @env{TIME_STYLE} is not set
@c the default style is @samp{posix-long-iso}.  @acronym{GNU} Emacs 21 and
@c later can parse @acronym{ISO} dates, but older Emacs versions do not, so if
@c you are using an older version of Emacs and specify a non-@acronym{POSIX}
@c locale, you may need to set @samp{TIME_STYLE="locale"}.
@c 
@option{--time-style}¥ª¥×¥·¥ç¥ó¤Î¥Ç¥Õ¥©¥ë¥ÈÃÍ¤ò¡¤´Ä¶­ÊÑ¿ô
@env{TIME_STYLE}¤òÍÑ¤¤¤Æ»ØÄê¤¹¤ë¤³¤È¤¬²ÄÇ½¤Ç¤¹¡¥@env{TIME_STYLE}¤¬ÀßÄê
¤µ¤ì¤Æ¤¤¤Ê¤¤¾ì¹ç¡¤¥Ç¥Õ¥©¥ë¥È¤Î¥¹¥¿¥¤¥ë¤Ï@samp{posix-long-iso}¤Ç¤¹¡¥
@acronym{GNU} Emacs 21¤È¤½¤ì°Ê¹ß¤Ç¤Ï¡¤@acronym{ISO}¤ÎÆüÉÕ¤ò¥Ñ¡¼¥¹¤¹¤ë
¤³¤È¤Ï²ÄÇ½¤Ç¤¹¤¬¡¤¤½¤ì¤è¤ê¸Å¤¤Emacs¤Î¥Ð¡¼¥¸¥ç¥ó¤Ç¤Ï¤½¤¦¤Ç¤Ï¤Ê¤¤¤Î¤Ç¡¤
¸Å¤¤¥Ð¡¼¥¸¥ç¥ó¤ÎEmacs¤ò»ÈÍÑ¤·¤Æ¤¤¤Æ¡¤@acronym{POSIX}°Ê³°¤Î¥í¥«¡¼¥ë¤ò»Ø
Äê¤·¤Æ¤¤¤ë¾ì¹ç¡¤@samp{TIME_STYLE="locale"}¤òÀßÄê¤¹¤ëÉ¬Í×¤¬¤¢¤ë¤«¤â¤·¤ì
¤Þ¤»¤ó¡¥


@node Formatting the file names
@c @subsection Formatting the file names
@subsection ¥Õ¥¡¥¤¥ëÌ¾¤Î½ñ¼°²½

@c These options change how file names themselves are printed.
@c 
¤³¤ì¤é¤Î¥ª¥×¥·¥ç¥ó¤Ï¡¤¥Õ¥¡¥¤¥ëÌ¾¼«¿È¤ò½ÐÎÏ¤¹¤ëÊýË¡¤òÊÑ¹¹¤·¤Þ¤¹¡¥

@table @samp

@item -b
@itemx --escape
@itemx --quoting-style=escape
@opindex -b
@opindex --escape
@opindex --quoting-style
@cindex backslash sequences for file names
@c Quote nongraphic characters in file names using alphabetic and octal
@c backslash sequences like those used in C.
@c 
¥Õ¥¡¥¤¥ëÌ¾¤ÎÉ½¼¨ÉÔ²ÄÇ½¤ÊÊ¸»ú¤ò¡¤C¤Ç»ÈÍÑ¤µ¤ì¤ë¤è¤¦¤Ê¡¤¥¢¥ë¥Õ¥¡¥Ù¥Ã¥È¤È
È¬¿Ê¿ô¤Î¥Ð¥Ã¥¯¥¹¥é¥Ã¥·¥å¥·¡¼¥±¥ó¥¹¤òÍÑ¤¤¤Æ°úÍÑÉä¤Ç°Ï¤ß¤Þ¤¹¡¥

@item -N
@itemx --literal
@itemx --quoting-style=literal
@opindex -N
@opindex --literal
@opindex --quoting-style
@c Do not quote file names.
@c 
¥Õ¥¡¥¤¥ëÌ¾¤ò°úÍÑÉä¤Ç°Ï¤ß¤Þ¤»¤ó¡¥

@item -q
@itemx --hide-control-chars
@opindex -q
@opindex --hide-control-chars
@c Print question marks instead of nongraphic characters in file names.
@c This is the default if the output is a terminal and the program is
@c @command{ls}.
@c 
¥Õ¥¡¥¤¥ëÌ¾¤ÎÉ½¼¨ÉÔÇ½¤ÊÊ¸»ú¤ÎÂå¤ï¤ê¤Ëµ¿ÌäÉä¤ò½ÐÎÏ¤·¤Þ¤¹¡¥½ÐÎÏ¤¬Ã¼Ëö¤Î¾ì
¹ç¤È¡¤¥×¥í¥°¥é¥à¤¬@command{ls}¤Î¾ì¹ç¡¤¤³¤ì¤Ï¥Ç¥Õ¥©¥ë¥È¤Ç¤¹¡¥

@item -Q
@itemx --quote-name
@itemx --quoting-style=c
@opindex -Q
@opindex --quote-name
@opindex --quoting-style
@c Enclose file names in double quotes and quote nongraphic characters as
@c in C.
@c 
Æó½Å°úÍÑÉä¤Ç¥Õ¥¡¥¤¥ëÌ¾¤ò°Ï¤ß¡¤É½¼¨ÉÔ²ÄÇ½¤ÊÊ¸»ú¤òC¤Î¤è¤¦¤Ë°úÍÑÉä¤Ç°Ï¤ß
¤Þ¤¹¡¥

@item --quoting-style=@var{word}
@opindex --quoting-style
@cindex quoting style
@c Use style @var{word} to quote file names and other strings that may
@c contain arbitrary characters.  The @var{word} should
@c be one of the following:
@c 
¥Õ¥¡¥¤¥ëÌ¾¤È¤½¤ÎÂ¾¤ÎÇ¤°Õ¤ÎÊ¸»ú¤ò´Þ¤àÊ¸»úÎó¤Î°úÍÑÉä¤Ë·Á¼°@var{word}¤ò»È
ÍÑ¤·¤Þ¤¹¡¥@var{word}¤Ï°Ê²¼¤Î°ì¤Ä¤Ë¤Ê¤ê¤Þ¤¹¡¥
@table @samp
@item literal
@c Output strings as-is; this is the same as the @option{-N} or
@c @option{--literal} option.
@c 
¤½¤Î¤Þ¤ÞÊ¸»úÎó¤ò½ÐÎÏ¤·¤Þ¤¹¡¥¤³¤ì¤Ï¡¤@option{-N}¤ä@option{--literal}¥ª
¥×¥·¥ç¥ó¤ÈÆ±¤¸¤Ç¤¹¡¥
@item shell
@c Quote strings for the shell if they contain shell metacharacters or would
@c cause ambiguous output.
@c The quoting is suitable for @acronym{POSIX}-compatible shells like
@c @command{bash}, but it does not always work for incompatible shells
@c like @command{csh}.
@c 
Ê¸»úÎó¤Ë¥·¥§¥ë¤Î¥á¥¿Ê¸»ú¤ò´Þ¤ó¤Ç¤¤¤¿¤ê¡¤ÉÔÌÀÎÆ¤Ê½ÐÎÏ¤òÀ¸¤¸¤ë¾ì¹ç¡¤°úÍÑ
Éä¤Ç°Ï¤ß¤Þ¤¹¡¥°úÍÑÉä¤Ç°Ï¤à¤³¤È¤Ï¡¤@command{bash}¤Î¤è¤¦¤Ê
@acronym{POSIX}¸ß´¹¤Î¥·¥§¥ë¤ËÂÐ¤·¤Æ¤ÏÅ¬ÀÚ¤Ç¤¹¤¬¡¤@command{csh}¤Î¤è¤¦¤Ë
¸ß´¹À­¤ÎÌµ¤¤¥·¥§¥ë¤Ç¾ï¤ËÆ°ºî¤¹¤ë¤ï¤±¤Ç¤Ï¤¢¤ê¤Þ¤»¤ó¡¥

@item shell-always
@c Quote strings for the shell, even if they would normally not require quoting.
@c 
¥·¥§¥ë¤ËÂÐ¤·¤Æ¡¤ÄÌ¾ï¤Ï°úÍÑÉä¤¬ÉÔÍ×¤Ê¾ì¹ç¤Ç¤âÊ¸»úÎó¤ò°úÍÑÉä¤Ç°Ï¤ß¤Þ¤¹¡¥
@item c
@c Quote strings as for C character string literals, including the
@c surrounding double-quote characters; this is the same as the
@c @option{-Q} or @option{--quote-name} option.
@c 
C¤ÎÊ¸»úÎó¥ê¥Æ¥é¥ë¤Î¤è¤¦¤ËÊ¸»úÎó¤ò°úÍÑÉä¤Ç°Ï¤ß¡¤¤½¤ì¤Ë¤Ï¼þ¤ê¤ÎÆó½Å°úÍÑ
Éä¤¬´Þ¤Þ¤ì¡¥¤³¤ì¤Ï@option{-Q}¤ä@option{--quote-name}¥ª¥×¥·¥ç¥ó¤ÈÆ±¤¸¤Ç
¤¹¡¥
@item escape
@c Quote strings as for C character string literals, except omit the
@c surrounding double-quote
@c characters; this is the same as the @option{-b} or @option{--escape} option.
@c 
C¤ÎÊ¸»úÎó¥ê¥Æ¥é¥ë¤Î¤è¤¦¤ËÊ¸»úÎó¤ò°úÍÑÉä¤Ç°Ï¤ß¤Þ¤¹¤¬¡¤¼þ¤ê¤ÎÆó½Å°úÍÑÉä
¤Ï¾ÊÎ¬¤·¤¿¤â¤Î¤Ë¤Ê¤ê¤Þ¤¹¡¥¤³¤ì¤Ï¡¤@option{-b}¤ä@option{--escape}¥ª¥×¥·¥ç
¥ó¤ÈÆ±¤¸¤Ç¤¹¡¥
@item clocale
@c Quote strings as for C character string literals, except use
@c surrounding quotation marks appropriate for the
@c locale.
@c 
C¤ÎÊ¸»úÎó¥ê¥Æ¥é¥ë¤Î¤è¤¦¤ËÊ¸»úÎó¤ò°úÍÑÉä¤Ç°Ï¤ß¤Þ¤¹¤¬¡¤¼þ¤ê¤Î°úÍÑÉä¤Ï¥í
¥«¡¼¥ë¤ËÅ¬¤·¤¿¤â¤Î¤Ë¤Ê¤ê¤Þ¤¹¡¥
@item locale
@c Use @t instead of @samp to avoid duplicate quoting in some output styles.
@c 
@c Quote strings as for C character string literals, except use
@c surrounding quotation marks appropriate for the locale, and quote
@c @t{`like this'} instead of @t{"like
@c this"} in the default C locale.  This looks nicer on many displays.
@c 
C¤ÎÊ¸»úÎó¥ê¥Æ¥é¥ë¤Î¤è¤¦¤ËÊ¸»úÎó¤ò°úÍÑÉä¤Ç°Ï¤ß¤Þ¤¹¤¬¡¤¼þ¤ê¤Î°úÍÑÉä¤Ï¥í
¥«¡¼¥ë¤ËÅ¬¤·¤¿¤â¤Î¤Ë¤Ê¤ê¡¤¥Ç¥Õ¥©¥ë¥È¤ÎC¥í¥«¡¼¥ë¤Ç¤Ï@t{"like this"}¤ÎÂå
¤ï¤ê¤Ë@t{`like this'}¤Î¤è¤¦¤Ë°úÍÑÉä¤Ç°Ï¤ß¤Þ¤¹¡¥¤³¤ì¤ÏÂ¿¤¯¤Î¥Ç¥£¥¹¥×¥ì
¥¤¤Ç¤è¤êÎÉ¤¯¸«¤¨¤Þ¤¹¡¥
@end table

@c You can specify the default value of the @option{--quoting-style} option
@c with the environment variable @env{QUOTING_STYLE}.  If that environment
@c variable is not set, the default value is @samp{literal}, but this
@c default may change to @samp{shell} in a future version of this package.
@c 
@option{--quoting-style}¥ª¥×¥·¥ç¥ó¤Î¥Ç¥Õ¥©¥ë¥ÈÃÍ¤ò¡¤´Ä¶­ÊÑ¿ô
@env{QUOTING_STYLE}¤Ç»ØÄê¤¹¤ë¤³¤È¤¬²ÄÇ½¤Ç¤¹¡¥´Ä¶­ÊÑ¿ô¤¬ÀßÄê¤µ¤ì¤Æ¤¤¤Ê
¤¤¾ì¹ç¡¤¥Ç¥Õ¥©¥ë¥ÈÃÍ¤Ï@samp{literal}¤Ç¤¹¤¬¡¤¤³¤Î¥Ç¥Õ¥©¥ë¥È¤Ï¡¤¤³¤Î¥Ñ¥Ã
¥±¡¼¥¸¤Î¾­Íè¤Î¥Ð¡¼¥¸¥ç¥ó¤Ç@samp{shell}¤ËÊÑ¹¹¤µ¤ì¤ë¤«¤â¤·¤ì¤Þ¤»¤ó¡¥

@item --show-control-chars
@opindex --show-control-chars
@c Print nongraphic characters as-is in file names.
@c This is the default unless the output is a terminal and the program is
@c @command{ls}.
@c 
¥Õ¥¡¥¤¥ëÌ¾¤Î½ÐÎÏÉÔ²ÄÇ½¤ÊÊ¸»ú¤ò¤½¤Î¤Þ¤Þ½ÐÎÏ¤·¤Þ¤¹¡¥½ÐÎÏ¤¬Ã¼Ëö¤Î¾ì¹ç¤ä¥×
¥í¥°¥é¥à¤¬@command{ls}¤Î¾ì¹ç°Ê³°¤Ç¤Ï¡¤¤³¤ì¤¬¥Ç¥Õ¥©¥ë¥È¤Ç¤¹¡¥

@end table


@node dir invocation
@c @section @command{dir}: Briefly list directory contents
@section @command{dir}: ¥Ç¥£¥ì¥¯¥È¥ê¤ÎÆâÍÆ¤ÎÃ»¤¤¥ê¥¹¥È

@pindex dir
@cindex directory listing, brief

@c @command{dir} (also installed as @command{d}) is equivalent to @code{ls -C
@c -b}; that is, by default files are listed in columns, sorted vertically,
@c and special characters are represented by backslash escape sequences.
@c 
@command{dir}(¤È@code{d}¤È¤·¤Æ¥¤¥ó¥¹¥È¡¼¥ë¤µ¤ì¤ë¤â¤Î)¤Ï¡¤@code{ls -C
-b}¤ÈÆ±¤¸¤Ç¤¹¡¥¤¹¤Ê¤ï¤Á¡¤¥Ç¥Õ¥©¥ë¥È¤Ç¥Õ¥¡¥¤¥ë¤ÏÎó¤Ë¥ê¥¹¥È¥¢¥Ã¥×¤µ¤ì¡¤
½ÄÊý¸þ¤ËÊÂ¤ÙÂØ¤¨¤µ¤ì¡¤¤½¤·¤ÆÆÃ¼ìÊ¸»ú¤Ï¥Ð¥Ã¥¯¥¹¥Ú¡¼¥¹¥¨¥¹¥±¡¼¥×¥·¡¼¥±¥ó
¥¹¤ÇºÆÉ½¸½¤µ¤ì¤Þ¤¹¡¥

@xref{ls invocation, @command{ls}}.


@node vdir invocation
@c @section @command{vdir}: Verbosely list directory contents
@section @command{vdir}: ¥Ç¥£¥ì¥¯¥È¥ê¤ÎÆâÍÆ¤Î¾éÄ¹¤Ê¥ê¥¹¥È

@pindex vdir
@cindex directory listing, verbose

@c @command{vdir} (also installed as @command{v}) is equivalent to @code{ls -l
@c -b}; that is, by default files are listed in long format and special
@c characters are represented by backslash escape sequences.
@c 
@command{vdir}¤Ï(@code{v}¤È¤·¤Æ¥¤¥ó¥¹¥È¡¼¥ë¤µ¤ì¤ë¤â¤Î¤â)¡¤@code{ls -l
-b}¤ÈÆ±¤¸¤Ç¤¹¡¥¤¹¤Ê¤ï¤Á¡¤¥Ç¥Õ¥©¥ë¥È¤Ç¥Õ¥¡¥¤¥ë¤ÏÄ¹¤¤½ñ¼°¤Ç¥ê¥¹¥È¥¢¥Ã¥×
¤µ¤ì¡¤ÆÃ¼ìÊ¸»ú¤Ï¥Ð¥Ã¥¯¥¹¥Ú¡¼¥¹¥¨¥¹¥±¡¼¥×¥·¡¼¥±¥ó¥¹¤ÇºÆÉ½¸½¤µ¤ì¤Þ¤¹¡¥

@node dircolors invocation
@c @section @command{dircolors}: Color setup for @command{ls}
@section @command{dircolors}: @command{ls}¤Î¿§¤ò¥»¥Ã¥È¥¢¥Ã¥×

@pindex dircolors
@cindex color setup
@cindex setup for color

@c @command{dircolors} outputs a sequence of shell commands to set up the
@c terminal for color output from @command{ls} (and @command{dir}, etc.).
@c Typical usage:
@c 
@command{dircolors}¤Ï¡¤@command{ls} (¤È@command{dir}Åù)¤«¤é½ÐÎÏ¤¹¤ë¿§
¤Î¤¿¤á¤ËÃ¼Ëö¤òÀßÄê¤¹¤ëÏ¢Â³¤·¤¿¥·¥§¥ë¥³¥Þ¥ó¥É¤ò½ÐÎÏ¤·¤Þ¤¹¡¥°ìÈÌÅª¤Ê»ÈÍÑ
ÊýË¡¤Ï°Ê²¼¤ÎÄÌ¤ê¤Ç¤¹¡¥

@example
eval `dircolors [@var{option}]@dots{} [@var{file}]`
@end example

@c If @var{file} is specified, @command{dircolors} reads it to determine which
@c colors to use for which file types and extensions.  Otherwise, a
@c precompiled database is used.  For details on the format of these files,
@c run @samp{dircolors --print-database}.
@c 
@var{file}¤¬»ØÄê¤µ¤ì¤Æ¤¤¤ë¾ì¹ç¡¤@command{dircolors}¤Ï¡¤¥Õ¥¡¥¤¥ë·Á¼°¤È
³ÈÄ¥»Ò¤ËÂÐ¤·¤Æ»ÈÍÑ¤¹¤ë¿§¤ò·èÄê¤¹¤ë¤¿¤á¤Ë¡¤¤½¤ì¤òÆÉ¤ß¹þ¤ß¤Þ¤¹¡¥¤½¤ì°Ê³°
¤Î¾ì¹ç¡¤Á°¤â¤Ã¤Æ¥³¥ó¥Ñ¥¤¥ë¤µ¤ì¤¿¥Ç¡¼¥¿¥Ù¡¼¥¹¤¬»ÈÍÑ¤µ¤ì¤Þ¤¹¡¥¤³¤ì¤é¤Î¥Õ¥¡
¥¤¥ë¤Î½ñ¼°¤Î¾ÜºÙ¤Î¤¿¤á¡¤@samp{dircolors --print-database}¤ò¼Â¹Ô¤·¤Æ¤¯
¤À¤µ¤¤¡¥

@vindex LS_COLORS
@vindex SHELL @r{environment variable, and color}
@c The output is a shell command to set the @env{LS_COLORS} environment
@c variable.  You can specify the shell syntax to use on the command line,
@c or @command{dircolors} will guess it from the value of the @env{SHELL}
@c environment variable.
@c 
½ÐÎÏ¤Ï¡¤@env{LS_COLORS}´Ä¶­ÊÑ¿ô¤òÀßÄê¤¹¤ë¤¿¤á¤Î¥·¥§¥ë¥³¥Þ¥ó¥É¤Ç¤¹¡¥¥³
¥Þ¥ó¥É¥é¥¤¥ó¤Ç»ÈÍÑ¤¹¤ë¥·¥§¥ë¹½Ê¸¤ò»ØÄê¤¹¤ë¤³¤È¤¬²ÄÇ½¤Ç¡¤¤½¤¦¤Ç¤Ê¤±¤ì¤Ð
@command{dircolors}¤Ï@code{SHELL}´Ä¶­ÊÑ¿ô¤ÎÃÍ¤«¤éÈ½ÊÌ¤·¤Þ¤¹¡¥

@c The program accepts the following options.  Also see @ref{Common options}.
@c 
¥×¥í¥°¥é¥à¤Ï°Ê²¼¤Î¥ª¥×¥·¥ç¥ó¤â¼õ¤±Æþ¤ì¤Þ¤¹¡¥@ref{Common options}¤â»²¾È
¤·¤Æ¤¯¤À¤µ¤¤¡¥

@table @samp
@item -b
@itemx --sh
@itemx --bourne-shell
@opindex -b
@opindex --sh
@opindex --bourne-shell
@cindex Bourne shell syntax for color setup
@cindex @command{sh} syntax for color setup
@c Output Bourne shell commands.  This is the default if the @env{SHELL}
@c environment variable is set and does not end with @samp{csh} or
@c @samp{tcsh}.
@c 
Bourne¥·¥§¥ë¥³¥Þ¥ó¥É¤ò½ÐÎÏ¤·¤Þ¤¹¡¥@env{SHELL}´Ä¶­ÊÑ¿ô¤¬ÀßÄê¤µ¤ì¤Æ¤¤¤Æ¡¤
@samp{csh}¤ä@samp{tcsh}¤Ç½ª¤ï¤é¤Ê¤¤¾ì¹ç¡¤¤³¤ì¤Ï¥Ç¥Õ¥©¥ë¥È¤Ç¤¹¡¥

@item -c
@itemx --csh
@itemx --c-shell
@opindex -c
@opindex --csh
@opindex --c-shell
@cindex C shell syntax for color setup
@cindex @command{csh} syntax for color setup
@c Output C shell commands.  This is the default if @code{SHELL} ends with
@c @command{csh} or @command{tcsh}.
@c 
C¥·¥§¥ë¥³¥Þ¥ó¥É¤ò½ÐÎÏ¤·¤Þ¤¹¡¥@env{SHELL}¤¬@samp{csh}¤ä@samp{tcsh}¤Ç½ª
¤ï¤ë¾ì¹ç¡¤¤³¤ì¤¬¥Ç¥Õ¥©¥ë¥È¤Ç¤¹¡¥

@item -p
@itemx --print-database
@opindex -p
@opindex --print-database
@cindex color database, printing
@cindex database for color setup, printing
@cindex printing color database
@c Print the (compiled-in) default color configuration database.  This
@c output is itself a valid configuration file, and is fairly descriptive
@c of the possibilities.
@c 
(ÁÈ¤ß¹þ¤ß¤Î)¥Ç¥Õ¥©¥ë¥È¥«¥é¡¼¤ÎÀßÄê¥Ç¡¼¥¿¥Ù¡¼¥¹¤ò½ÐÎÏ¤·¤Þ¤¹¡¥¤³¤Î½ÐÎÏ¤Ï¡¤
¤½¤ì¼«¿ÈÍ­¸ú¤ÊÀßÄê¥Õ¥¡¥¤¥ë¤Ç¡¤²ÄÇ½À­¤ò¤¹¤Ù¤Æµ­½Ò¤·¤Æ¤¤¤Þ¤¹¡¥

@end table

@exitstatus


@node Basic operations
@c @chapter Basic operations
@chapter ´ðËÜÅª¤Ê¥ª¥Ú¥ì¡¼¥·¥ç¥ó

@cindex manipulating files

@c This chapter describes the commands for basic file manipulation:
@c copying, moving (renaming), and deleting (removing).
@c 
¤³¤Î¾Ï¤Ï¡¤´ðËÜÅª¤Ê¥Õ¥¡¥¤¥ëÁàºî¤ËÂÐ¤¹¤ë¥³¥Þ¥ó¥É¤òµ­½Ò¤·¤Þ¤¹¡¥¥³¥Ô¡¼¡¤°Ü
Æ°(Ì¾Á°¤ÎÊÑ¹¹)¡¤¤½¤·¤Æºï½ü(¥ê¥à¡¼¥Ö)¤Ç¤¹¡¥

@menu
* cp invocation::               Copy files.
* dd invocation::               Convert and copy a file.
* install invocation::          Copy files and set attributes.
* mv invocation::               Move (rename) files.
* rm invocation::               Remove files or directories.
* shred invocation::            Remove files more securely.
@end menu


@node cp invocation
@c @section @command{cp}: Copy files and directories
@section @command{cp}: ¥Õ¥¡¥¤¥ë¤È¥Ç¥£¥ì¥¯¥È¥ê¤Î¥³¥Ô¡¼

@pindex cp
@cindex copying files and directories
@cindex files, copying
@cindex directories, copying

@c @command{cp} copies files (or, optionally, directories).  The copy is
@c completely independent of the original.  You can either copy one file to
@c another, or copy arbitrarily many files to a destination directory.
@c Synopsis:
@c 
@command{cp}¤Ï¡¤¥Õ¥¡¥¤¥ë(¤Þ¤¿¤Ï¡¤¥ª¥×¥·¥ç¥ó¤Ç¥Ç¥£¥ì¥¯¥È¥ê)¤ò¥³¥Ô¡¼¤·¤Þ
¤¹¡¥¥³¥Ô¡¼¤Ï¥ª¥ê¥¸¥Ê¥ë¤«¤é´°Á´¤ËÆÈÎ©¤·¤Æ¤¤¤Þ¤¹¡¥°ì¤Ä¤Î¥Õ¥¡¥¤¥ë¤ò¤â¤¦°ì
¤Ä¤Ë¥³¥Ô¡¼¤¹¤ë¡¤¤Þ¤¿¤Ï¡¤Ç¤°Õ¤ÎÂ¿¤¯¤Î¥Õ¥¡¥¤¥ë¤ò¥³¥Ô¡¼Àè¤Î¥Ç¥£¥ì¥¯¥È¥ê¤Ë
¥³¥Ô¡¼¤¹¤ë¤³¤È¤Î¤¤¤º¤ì¤«¤¬²ÄÇ½¤Ç¤¹¡¥³µÍ×¤Ç¤¹¡¥

@example
cp [@var{option}]@dots{} @var{source} @var{dest}
cp [@var{option}]@dots{} @var{source}@dots{} @var{directory}
@end example

@c If the last argument names an existing directory, @command{cp} copies each
@c @var{source} file into that directory (retaining the same name).
@c Otherwise, if only two files are given, it copies the first onto the
@c second.  It is an error if the last argument is not a directory and more
@c than two non-option arguments are given.
@c 
ºÇ¸å¤Î°ú¿ô¤¬´ûÂ¸¤Î¥Ç¥£¥ì¥¯¥È¥ê¤ò»Ø¤¹¾ì¹ç¡¤@command{cp}¤Ï¤½¤ì¤¾¤ì¤Î
@var{source}¥Õ¥¡¥¤¥ë¤ò¤½¤Î¥Ç¥£¥ì¥¯¥È¥ê¤Ë(Æ±¤¸Ì¾Á°¤Î¤Þ¤Þ¤Ç)¥³¥Ô¡¼¤·¤Þ¤¹¡¥
¤½¤ì°Ê³°¤Ç¡¤Æó¤Ä¤Î¥Õ¥¡¥¤¥ë¤¬Í¿¤¨¤é¤ì¤¿¾ì¹ç¡¤ºÇ½é¤Î¤â¤Î¤òÆóÈÖÌÜ¤Î¤â¤Î¤Ë
¥³¥Ô¡¼¤·¤Þ¤¹¡¥ºÇ¸å¤Î°ú¿ô¤¬¥Ç¥£¥ì¥¯¥È¥ê¤Ç¤Ê¤¯¡¤Æó¤Ä°Ê¾å¤Î¥ª¥×¥·¥ç¥ó¤Ç¤Ê
¤¤°ú¿ô¤¬Í¿¤¨¤é¤ì¤¿¾ì¹ç¥¨¥é¡¼¤È¤Ê¤ê¤Þ¤¹¡¥

@c Generally, files are written just as they are read.  For exceptions,
@c see the @option{--sparse} option below.
@c 
°ìÈÌÅª¤Ë¡¤¥Õ¥¡¥¤¥ë¤ÏÆÉ¤ß¹þ¤Þ¤ì¤¿¤È¤ª¤ê¤Ë½ñ¤­¹þ¤Þ¤ì¤Þ¤¹¡¥Îã³°¤Ï¡¤°Ê²¼¤Î
@option{--sparse}¥ª¥×¥·¥ç¥ó¤ò»²¾È¤·¤Æ¤¯¤À¤µ¤¤¡¥

@c By default, @command{cp} does not copy directories.  However, the
@c @option{-R}, @option{-a}, and @option{-r} options cause @command{cp} to
@c copy recursively by descending into source directories and copying files
@c to corresponding destination directories.
@c 
¥Ç¥Õ¥©¥ë¥È¤Ç¡¤@command{cp}¤Ï¥Ç¥£¥ì¥¯¥È¥ê¤ò¥³¥Ô¡¼¤·¤Þ¤»¤ó¡¥¤·¤«¤·¡¤
@option{-R}¡¤@option{-a}¡¤¤½¤·¤Æ@option{-r}¥ª¥×¥·¥ç¥ó¤Ç¤Ï¡¤
@command{cp}¤Ï¸µ¤Î¥Ç¥£¥ì¥¯¥È¥ê¤ò²¼¤ê¡¤ÂÐ±þ¤¹¤ë¥³¥Ô¡¼Àè¤Î¥Ç¥£¥ì¥¯¥È¥ê¤Ë
¥Õ¥¡¥¤¥ë¤ò¥³¥Ô¡¼¤¹¤ë¤³¤È¤Ç¡¤ºÆµ¢Åª¤Ë¥³¥Ô¡¼¤·¤Þ¤¹¡¥

@c By default, @command{cp} follows symbolic links only when not copying
@c recursively.  This default can be overridden with the
@c @option{--archive} (@option{-a}), @option{-d}, @option{--dereference}
@c (@option{-L}), @option{--no-dereference} (@option{-P}), and
@c @option{-H} options.  If more than one of these options is specified,
@c the last one silently overrides the others.
@c 
¥Ç¥Õ¥©¥ë¥È¤Ç¡¤@command{cp}¤ÏºÆµ¢Åª¤Ë¥³¥Ô¡¼¤·¤Ê¤¤¤È¤­¤Î¤ß¡¤¥·¥ó¥Ü¥ê¥Ã¥¯
¥ê¥ó¥¯¤ò¤¿¤É¤ê¤Þ¤¹¡¥¤³¤Î¥Ç¥Õ¥©¥ë¥È¤Ï¡¤@option{--no-dereference}
(@option{-d})¡¤@option{--dereference} (@option{-L})¡¤¤½¤·¤Æ@option{-H}
¥ª¥×¥·¥ç¥ó¤ÇÍ¥Àè¤¹¤ë¤³¤È¤¬²ÄÇ½¤Ç¤¹¡¥¤³¤ì¤é¤Î¥ª¥×¥·¥ç¥ó¤Î°ì¤Ä°Ê¾å¤¬»ØÄê
¤µ¤ì¤Æ¤¤¤ë¾ì¹ç¡¤ºÇ¸å¤Î¤â¤Î¤¬Â¾¤Î¤â¤Î¤ËÂÐ¤·¤Æ¡¤¤½¤Î¤Þ¤ÞÍ¥Àè¤·¤Þ¤¹¡¥

@c By default, @command{cp} copies the contents of special files only
@c when not copying recursively.  This default can be overridden with the
@c @option{--copy-contents} option.
@c 
¥Ç¥Õ¥©¥ë¥È¤Ç¡¤@command{cp}¤Ï¡¤ºÆµ¢Åª¤Ê¥³¥Ô¡¼¤Ç¤Ï¤Ê¤¤¤È¤­¤À¤±ÆÃ¼ì¥Õ¥¡¥¤
¥ë¤ÎÆâÍÆ¤ò¥³¥Ô¡¼¤·¤Þ¤¹¡¥¤³¤Î¥Ç¥Õ¥©¥ë¥È¤Ï¡¤@option{--copy-contents}¥ª¥×
¥·¥ç¥ó¤ÇÍ¥Àè¤µ¤»¤ë¤³¤È¤¬²ÄÇ½¤Ç¤¹¡¥

@cindex self-backups
@cindex backups, making only
@c @command{cp} generally refuses to copy a file onto itself, with the
@c following exception: if @option{--force --backup} is specified with
@c @var{source} and @var{dest} identical, and referring to a regular file,
@c @command{cp} will make a backup file, either regular or numbered, as
@c specified in the usual ways (@pxref{Backup options}).  This is useful when
@c you simply want to make a backup of an existing file before changing it.
@c 
@command{cp}¤Ï°ìÈÌÅª¤Ë¡¤°Ê²¼¤ÎÎã³°¤Ï¤¢¤ê¤Þ¤¹¤¬¡¤¥Õ¥¡¥¤¥ë¤Î¼«Ê¬¼«¿È¤Ø¤Î
¥³¥Ô¡¼¤òµñÀä¤·¤Þ¤¹¡¥@option{--force --backup}¤¬Æ±°ì¤Î@var{source}¤È
@var{dest}¤Ç»ØÄê¤µ¤ì¡¤ÄÌ¾ï¤Î¥Õ¥¡¥¤¥ë¤ò»²¾È¤·¤Æ¤¤¤ë¾ì¹ç¡¤@command{cp}¤Ï¡¤
ÄÌ¾ï¤ÎÊýË¡(@pxref{Backup options})¤Ç»ØÄê¤µ¤ì¤¿¤è¤¦¤Ë¡¤ÄÌ¾ï¤Þ¤¿¤ÏÈÖ¹æÉÕ
¤­¤Î¥Ð¥Ã¥¯¥¢¥Ã¥×¥Õ¥¡¥¤¥ë¤òºîÀ®¤·¤Þ¤¹¡¥¤³¤ì¤Ï¡¤ÊÑ¹¹Á°¤Ë´ûÂ¸¤Î¥Õ¥¡¥¤¥ë¤Î
¥Ð¥Ã¥¯¥¢¥Ã¥×¤òÃ±¤ËºîÀ®¤·¤¿¤¤¤È¤­Ìò¤ËÎ©¤Á¤Þ¤¹¡¥

@c The program accepts the following options.  Also see @ref{Common options}.
@c 
¥×¥í¥°¥é¥à¤Ï°Ê²¼¤Î¥ª¥×¥·¥ç¥ó¤â¼õ¤±Æþ¤ì¤Þ¤¹¡¥@ref{Common options}¤â»²¾È
¤·¤Æ¤¯¤À¤µ¤¤¡¥

@table @samp
@item -a
@itemx --archive
@opindex -a
@opindex --archive
@c Preserve as much as possible of the structure and attributes of the
@c original files in the copy (but do not attempt to preserve internal
@c directory structure; i.e., @samp{ls -U} may list the entries in a copied
@c directory in a different order).
@c Equivalent to @option{-dpPR}.
@c 
¥³¥Ô¡¼»þ¤Ë¡¤¸µ¤Î¥Õ¥¡¥¤¥ë¤Î¹½Â¤¤ÈÂ°À­¤ò²ÄÇ½¤Ê¸Â¤êÊÝ»ý¤·¤Þ¤¹(¤·¤«¤·¡¤¥Ç¥£
¥ì¥¯¥È¥ê¹½Â¤¤ÎÊÝ»ý¤Ï»î¤ß¤Þ¤»¤ó¡¥¤¹¤Ê¤ï¤Á¡¤@samp{ls -U}¤Ï¥³¥Ô¡¼¤µ¤ì¤Æ¤¤
¤ë¥Ç¥£¥ì¥¯¥È¥ê¤Î¹àÌÜ¤ò¡¤°Û¤Ê¤ë½ç½ø¤Ç¥ê¥¹¥È¥¢¥Ã¥×¤¹¤ë²ÄÇ½À­¤¬¤¢¤ê¤Þ¤¹)¡¥
@option{-dpR}¤ÈÆ±¤¸¤Ç¤¹¡¥

@item -b
@itemx @w{@kbd{--backup}[=@var{method}]}
@opindex -b
@opindex --backup
@vindex VERSION_CONTROL
@cindex backups, making
@c @xref{Backup options}.
@c Make a backup of each file that would otherwise be overwritten or removed.
@c As a special case, @command{cp} makes a backup of @var{source} when the force
@c and backup options are given and @var{source} and @var{dest} are the same
@c name for an existing, regular file.  One useful application of this
@c combination of options is this tiny Bourne shell script:
@c 
@xref{Backup options}.  ¾å½ñ¤­¤µ¤ì¤¿¤êºï½ü¤µ¤ì¤¿¤ê¤¹¤ë¤½¤ì¤¾¤ì¤Î¥Õ¥¡¥¤
¥ë¤Î¥Ð¥Ã¥¯¥¢¥Ã¥×¤òºîÀ®¤·¤Þ¤¹¡¥ÆÃ¼ì¤Ê¾ì¹ç¤È¤·¤Æ¡¤¶¯À©¤È¥Ð¥Ã¥¯¥¢¥Ã¥×¤Î¥ª
¥×¥·¥ç¥ó¤¬»ØÄê¤µ¤ì¡¤@var{source}¤È@var{dest}¤¬Æ±¤¸Ì¾Á°¤ÇÂ¸ºß¤·¤Æ¤¤¤ë¤È
¤­¡¤ÄÌ¾ï¤Î¥Õ¥¡¥¤¥ë¤È¤·¤Æ¡¤@command{cp}¤Ï@var{source}¤Î¥Ð¥Ã¥¯¥¢¥Ã¥×¤òºî
À®¤·¤Þ¤¹¡¥¤³¤Î¥ª¥×¥·¥ç¥ó¤ÎÁÈ¹ç¤ï¤»¤ÎÌò¤ËÎ©¤Ä±þÍÑ¤Î°ì¤Ä¤Ï¡¤°Ê²¼¤Î¾®¤µ¤Ê
Bourne¥·¥§¥ë¥¹¥¯¥ê¥×¥È¤Ç¤¹¡¥

@example
#!/bin/sh
# Usage: backup FILE...
# Create a @sc{gnu}-style backup of each listed FILE.
for i; do
  cp --backup --force "$i" "$i"
done
@end example

@item --copy-contents
@cindex directories, copying recursively
@cindex copying directories recursively
@cindex recursively copying directories
@cindex non-directories, copying as special files
@c If copying recursively, copy the contents of any special files (e.g.,
@c FIFOs and device files) as if they were regular files.  This means
@c trying to read the data in each source file and writing it to the
@c destination.  It is usually a mistake to use this option, as it
@c normally has undesirable effects on special files like FIFOs and the
@c ones typically found in the @file{/dev} directory.  In most cases,
@c @code{cp -R --copy-contents} will hang indefinitely trying to read
@c from FIFOs and special files like @file{/dev/console}, and it will
@c fill up your destination disk if you use it to copy @file{/dev/zero}.
@c This option has no effect unless copying recursively, and it does not
@c affect the copying of symbolic links.
@c 
ºÆµ¢Åª¤Ë¥³¥Ô¡¼¤ò¤·¤Æ¤¤¤ë¾ì¹ç¡¤ÆÃ¼ì¥Õ¥¡¥¤¥ë(Îã¤¨¤ÐFIFO¤È¥Ç¥Ð¥¤¥¹¥Õ¥¡¥¤
¥ë)¤ÎÆâÍÆ¤òÄÌ¾ï¤Î¥Õ¥¡¥¤¥ë¤Î¤è¤¦¤Ë¥³¥Ô¡¼¤·¤Þ¤¹¡¥¤³¤ì¤Ï¡¤¤½¤ì¤¾¤ì¤Î¥½¡¼
¥¹¥Õ¥¡¥¤¥ë¤«¤é¥Ç¡¼¥¿¤òÆÉ¤ß¹þ¤ß¡¤¤½¤ì¤ò¥³¥Ô¡¼Àè¤Ë½ñ¤­¹þ¤à¤³¤È¤ò°ÕÌ£¤·¤Þ
¤¹¡¥ÄÌ¾ï¤Ï¡¤FIFO¤È@file{/dev}¥Ç¥£¥ì¥¯¥È¥ê¤Ç¸«¤Ä¤«¤ë¤è¤¦¤ÊÆÃ¼ì¥Õ¥¡¥¤¥ë
¤Ç¤Ï¹¥¤Þ¤·¤¯¤Ê¤¤¸ú²Ì¤¬¤¢¤ë¤Î¤Ç¡¤¤³¤Î¥ª¥×¥·¥ç¥ó¤Î»È¤¤Êý¤Ï¤è¤¯¸í²ò¤µ¤ì¤Þ
¤¹¡¥¤Û¤È¤ó¤É¤Î¾õ¶·¤Ç¡¤FIFO¤È@file{/dev/console}¤Î¤è¤¦¤ÊÆÃ¼ì¥Õ¥¡¥¤¥ë¤ò
ÆÉ¤ß¹þ¤â¤¦¤È¤·¤Æ@code{cp -R --copy-contents}¤Ï¸Â¤ê¤Ê¤¯ÆÉ¤ß¹þ¤ßÂ³¤±¡¤
@file{/dev/zero}¤ò¥³¥Ô¡¼¤Ç»ÈÍÑ¤·¤Æ¤¤¤ë¾ì¹ç¡¤¥³¥Ô¡¼Àè¤Î¥Ç¥£¥¹¥¯¤Ï¤¤¤Ã¤Ñ
¤¤¤Ë¤Ê¤ë¤Ç¤·¤ç¤¦¡¥¤³¤Î¥ª¥×¥·¥ç¥ó¤Ï¡¤ºÆµ¢Åª¤Ë¥³¥Ô¡¼¤·¤Æ¤¤¤Ê¤¤¸Â¤ê¸ú²Ì¤¬
Ìµ¤¯¡¤¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯¤Î¥³¥Ô¡¼¤Ë¤â±Æ¶Á¤·¤Þ¤»¤ó¡¥

@item -d
@opindex -d
@cindex symbolic links, copying
@cindex hard links, preserving
@c Copy symbolic links as symbolic links rather than copying the files that
@c they point to, and preserve hard links between source files in the copies.
@c Equivalent to @option{--no-dereference --preserve=links}.
@c 
¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯¤ò¡¤¤½¤ì¤¬¼¨¤¹¥Õ¥¡¥¤¥ë¤ò¥³¥Ô¡¼¤¹¤ë¤Î¤Ç¤Ï¤Ê¤¯¡¤¥·¥ó¥Ü
¥ê¥Ã¥¯¥ê¥ó¥¯¤È¤·¤Æ¥³¥Ô¡¼¤·¡¤¥³¥Ô¡¼¤Î¥½¡¼¥¹¥Õ¥¡¥¤¥ë´Ö¤Î¥Ï¡¼¥É¥ê¥ó¥¯¤òÊÝ
»ý¤·¤Þ¤¹¡¥@option{--no-dereference --preserve=links}¤ÈÅù²Á¤Ç¤¹¡¥

@item -f
@itemx --force
@opindex -f
@opindex --force
@c When copying without this option and an existing destination file cannot
@c be opened for writing, the copy fails.  However, with @option{--force}),
@c when a destination file cannot be opened, @command{cp} then unlinks it and
@c tries to open it again.  Contrast this behavior with that enabled by
@c @option{--link} and @option{--symbolic-link}, whereby the destination file
@c is never opened but rather is unlinked unconditionally.  Also see the
@c description of @option{--remove-destination}.
@c 
¤³¤Î¥ª¥×¥·¥ç¥ó¤ò»ÈÍÑ¤»¤º¥³¥Ô¡¼¤·¡¤¥³¥Ô¡¼Àè¤Î¥Õ¥¡¥¤¥ë¤¬Â¸ºß¤·¡¤½ñ¤­¹þ¤ß
¤Ç³«¤¯¤³¤È¤¬¤Ç¤­¤Ê¤¤¤È¤­¡¤¥³¥Ô¡¼¤Ï¼ºÇÔ¤·¤Þ¤¹¡¥¤·¤«¤·¡¤@option{--force} 
¤òÍÑ¤¤¤¿¾ì¹ç¡¤¥³¥Ô¡¼Àè¤Î¥Õ¥¡¥¤¥ë¤¬³«¤±¤Ê¤¤¤È¤­¡¤@command{cp}¤Ï¤½¤ì¤ò¥¢
¥ó¥ê¥ó¥¯¤·¡¤¤â¤¦°ìÅÙ³«¤³¤¦¤È¤·¤Þ¤¹¡¥¤³¤ÎÆ°ºî¤Ï¡¤@option{--link}¤È
@option{--symbolic-link}¤Ç¤½¤ì¤ò²ÄÇ½¤Ë¤¹¤ë¤³¤È¤È¤Ï°Û¤Ê¤ê¡¤¤½¤ì¤Ë¤è¤Ã¤Æ
¥³¥Ô¡¼Àè¥Õ¥¡¥¤¥ë¤Ï³«¤«¤ì¤ë¤³¤È¤Ê¤¯¡¤Ìµ¾ò·ï¤Ë¥¢¥ó¥ê¥ó¥¯¤µ¤ì¤Þ¤¹¡¥
@option{--remove-destination}¤Îµ­½Ò¤â»²¾È¤·¤Æ¤¯¤À¤µ¤¤¡¥

@item -H
@opindex -H
@c If a command line argument specifies a symbolic link, then copy the
@c file it points to rather than the symbolic link itself.  However,
@c copy (preserving its nature) any symbolic link that is encountered
@c via recursive traversal.
@c 
¥³¥Þ¥ó¥É¥é¥¤¥ó°ú¿ô¤¬¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯¤ò»ØÄê¤·¤Æ¤¤¤ë¾ì¹ç¡¤¥·¥ó¥Ü¥ê¥Ã¥¯
¥ê¥ó¥¯¤Ç¤Ï¤Ê¤¯¡¤¥Õ¥¡¥¤¥ë¤ò¤½¤Î°ÌÃÖ¤Ë¥³¥Ô¡¼¤·¤Þ¤¹¡¥¤·¤«¤·¡¤ºÆµ¢Åª¤Ë¤¿¤É¤Ã
¤Æ¤¤¤Æ¸«¤Ä¤«¤Ã¤¿¤¹¤Ù¤Æ¤Î¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯¤ò(¤½¤Î¸µ¤òÊÝÂ¸¤·¤Æ)¥³¥Ô¡¼¤·
¤Þ¤¹¡¥

@item -i
@itemx --interactive
@opindex -i
@opindex --interactive
@c Prompt whether to overwrite existing regular destination files.
@c 
´ûÂ¸¤ÎÄÌ¾ï¤Î¥³¥Ô¡¼Àè¤Î¥Õ¥¡¥¤¥ë¤ò¾å½ñ¤­¤¹¤ë¤«¤É¤¦¤«¡¤¥×¥í¥ó¥×¥È¤òÉ½¼¨¤·
¤Þ¤¹¡¥

@item -l
@itemx --link
@opindex -l
@opindex --link
@c Make hard links instead of copies of non-directories.
@c 
¥Ç¥£¥ì¥¯¥È¥ê°Ê³°¤Ï¥³¥Ô¡¼¤ÎÂå¤ï¤ê¤Ë¥Ï¡¼¥É¥ê¥ó¥¯¤òºîÀ®¤·¤Þ¤¹¡¥

@item -L
@itemx --dereference
@opindex -L
@opindex --dereference
@c Always follow symbolic links.
@c 
¾ï¤Ë¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯¤ò¤¿¤É¤ê¤Þ¤¹¡¥

@item -P
@itemx --no-dereference
@opindex -P
@opindex --no-dereference
@cindex symbolic links, copying
@c Copy symbolic links as symbolic links rather than copying the files that
@c they point to.
@c 
¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯¤ò¡¤¤½¤ì¤¬¼¨¤¹¥Õ¥¡¥¤¥ë¤ò¥³¥Ô¡¼¤¹¤ë¤Î¤Ç¤Ï¤Ê¤¯¥·¥ó¥Ü¥ê¥Ã
¥¯¥ê¥ó¥¯¤È¤·¤Æ¥³¥Ô¡¼¤·¤Þ¤¹¡¥

@item -p
@itemx @w{@kbd{--preserve}[=@var{attribute_list}]}
@opindex -p
@opindex --preserve
@cindex file information, preserving
@c Preserve the specified attributes of the original files.
@c If specified, the @var{attribute_list} must be a comma-separated list
@c of one or more of the following strings:
@c 
»ØÄê¤µ¤ì¤Æ¤¤¤ë¸µ¤Î¥Õ¥¡¥¤¥ë¤ÎÂ°À­¤òÊÝ»ý¤·¤Þ¤¹¡¥»ØÄê¤¹¤ë¾ì¹ç¡¤
@var{attribute_list}¤Ï°Ê²¼¤ÎÊ¸»úÎó¤Î°ì¤Ä°Ê¾å¤ò¡¤¥«¥ó¥Þ¤ÇÊ¬Î¥¤µ¤ì¤¿¥ê¥¹
¥È¤Ë¤¹¤ëÉ¬Í×¤¬¤¢¤ê¤Þ¤¹¡¥

@table @samp
@itemx mode
@c Preserve the permission attributes.
@c 
µö²Ä¤ÎÂ°À­¤òÊÝ»ý¤·¤Þ¤¹¡¥
@itemx ownership
@c Preserve the owner and group.  On most modern systems,
@c only the super-user may change the owner of a file, and regular users
@c may preserve the group ownership of a file only if they happen to be
@c a member of the desired group.
@c 
½êÍ­¼Ô¤È¥°¥ë¡¼¥×¤ÎÂ°À­¤òÊÝ»ý¤·¤Þ¤¹¡¥ºÇ¶á¤Î¥·¥¹¥Æ¥à¤Ç¤Ï¡¤¥¹¡¼¥Ñ¡¼¥æ¡¼¥¶
¤Î¤ß¥Õ¥¡¥¤¥ë¤Î½êÍ­¼Ô¤òÊÑ¹¹¤¹¤ë¤³¤È¤¬²ÄÇ½¤Ç¡¤ÄÌ¾ï¤Î¥æ¡¼¥¶¤Ï¡¤Í×µá¤µ¤ì¤ë
¥°¥ë¡¼¥×¤Î¥á¥ó¥Ð¡¼¤Î¾ì¹ç¤Î¤ß¡¤¥Õ¥¡¥¤¥ë¤Î½êÍ­¼Ô¤Î¥°¥ë¡¼¥×¤òÊÝ»ý¤¹¤ë¤³¤È
¤¬²ÄÇ½¤Ç¤¹¡¥
@itemx timestamps
@c Preserve the times of last access and last modification.
@c 
ºÇ¸å¤Î¥¢¥¯¥»¥¹¤ÈºÇ¸å¤ÎÊÔ½¸¤Î¥¿¥¤¥à¥¹¥¿¥ó¥×¤òÊÝ»ý¤·¤Þ¤¹¡¥
@itemx links
@c Preserve in the destination files
@c any links between corresponding source files.
@c 
ÂÐ±þ¤¹¤ë¥½¡¼¥¹¥Õ¥¡¥¤¥ë´Ö¤Î¥ê¥ó¥¯¤ò¥³¥Ô¡¼Àè¤Î¥Õ¥¡¥¤¥ë¤ËÊÝ»ý¤·¤Þ¤¹¡¥
@c Give examples illustrating how hard links are preserved.
@c Also, show how soft links map to hard links with -L and -H.
@itemx all
@c Preserve all file attributes.
@c Equivalent to specifying all of the above.
@c 
¤¹¤Ù¤Æ¤Î¥Õ¥¡¥¤¥ëÂ°À­¤òÊÝ»ý¤·¤Þ¤¹¡¥¾åµ­¤Î¤¹¤Ù¤Æ¤ò»ØÄê¤·¤¿¤â¤Î¤ÈÅù²Á¤Ç¤¹¡¥
@c Mention ACLs here.
@end table

@c Using @option{--preserve} with no @var{attribute_list} is equivalent
@c to @option{--preserve=mode,ownership,timestamps}.
@c 
@var{attribute_list}¤òÍÑ¤¤¤º¤Ë@option{--preserve}¤ò»ÈÍÑ¤¹¤ë¤³¤È¤Ï¡¤
@option{--preserve=mode,ownership,timestamps}¤ÈÅù²Á¤Ç¤¹¡¥

@c In the absence of this option, each destination file is created with the
@c permissions of the corresponding source file, minus the bits set in the
@c umask and minus the set-user-id and set-group-id bits. @xref{File permissions}.
@c 
¤³¤Î¥ª¥×¥·¥ç¥ó¤¬¤Ê¤¤¤È¤­¡¤¤½¤ì¤¾¤ì¤Î¥³¥Ô¡¼Àè¤Î¥Õ¥¡¥¤¥ë¤Ï¡¤¸µ¤Î¥Õ¥¡¥¤¥ë
¤ËÂÐ±þ¤¹¤ë¥Ñ¡¼¥ß¥Ã¥·¥ç¥ó¤ÇºîÀ®¤µ¤ì¡¤umask¤ÇÀßÄê¤µ¤ì¤Æ¤¤¤ë¥Ó¥Ã¥È¤¬¤Ê¤¯
¤Ê¤ê¡¤¤½¤·¤Æ¡¤set-user-id¥Ó¥Ã¥È¤Èset-group-id¥Ó¥Ã¥È¤¬¤Ê¤¯¤Ê¤ê¤Þ¤¹¡¥
@xref{File permissions}.

@itemx @w{@kbd{--no-preserve}=@var{attribute_list}}
@cindex file information, preserving
@c Do not preserve the specified attributes.  The @var{attribute_list}
@c has the same form as for @option{--preserve}.
@c 
»ØÄê¤µ¤ì¤¿Â°À­¤òÊÝ»ý¤·¤Þ¤»¤ó¡¥@var{attribute_list}¤Ï
@option{--preserve}¤Î·Á¼°¤ÈÆ±¤¸¤Ç¤¹¡¥

@itemx --parents
@opindex --parents
@cindex parent directories and @command{cp}
@c Form the name of each destination file by appending to the target
@c directory a slash and the specified name of the source file.  The last
@c argument given to @command{cp} must be the name of an existing directory.
@c For example, the command:
@c 
¤½¤ì¤¾¤ì¤Î¥³¥Ô¡¼Àè¤Î¥Õ¥¡¥¤¥ëÌ¾¤ò¡¤¥¿¡¼¥²¥Ã¥È¥Ç¥£¥ì¥¯¥È¥ê¤Ë¥¹¥é¥Ã¥·¥å¤È
»ØÄê¤µ¤ì¤¿¥½¡¼¥¹¥Õ¥¡¥¤¥ë¤ÎÌ¾Á°¤òÄÉ²Ã¤·¤¿¤â¤Î¤È¤·¤ÆºîÀ®¤·¤Þ¤¹¡¥
@command{cp}¤ËÍ¿¤¨¤ëºÇ¸å¤Î°ú¿ô¤Ï¡¤´ûÂ¸¤Î¥Ç¥£¥ì¥¯¥È¥êÌ¾¤Ë¤¹¤ëÉ¬Í×¤¬¤¢¤ê
¤Þ¤¹¡¥Îã¤¨¤Ð¡¤°Ê²¼¤Î¤è¤¦¤Ê¥³¥Þ¥ó¥É¤òÆþÎÏ¤·¤Þ¤¹¡¥

@example
cp --parents a/b/c existing_dir
@end example

@noindent
@c copies the file @file{a/b/c} to @file{existing_dir/a/b/c}, creating
@c any missing intermediate directories.
@c 
¤³¤ì¤Ï¥Õ¥¡¥¤¥ë@file{a/b/c}¤ò@file{existing_dir/a/b/c}¤Ë¥³¥Ô¡¼¤·¡¤Â¸ºß
¤·¤Ê¤¤¤¢¤é¤æ¤ëÃæ´Ö¥Ç¥£¥ì¥¯¥È¥ê¤òºîÀ®¤·¤Þ¤¹¡¥

@itemx @w{@kbd{--reply}[=@var{how}]}
@opindex --reply
@cindex interactivity
@c Using @option{--reply=yes} makes @command{cp} act as if @samp{yes} were
@c given as a response to every prompt about a destination file.  That effectively
@c cancels any preceding @option{--interactive} or @option{-i} option.
@c Specify @option{--reply=no} to make @command{cp} act as if @samp{no} were
@c given as a response to every prompt about a destination file.
@c Specify @option{--reply=query} to make @command{cp} prompt the user
@c about each existing destination file.
@c 
@option{--reply=yes}¤ò»ÈÍÑ¤¹¤ë¤È¡¤¥³¥Ô¡¼Àè¤Î¥Õ¥¡¥¤¥ë¤Ë´Ø¤¹¤ë¤¹¤Ù¤Æ¤Î¥×
¥í¥ó¥×¥È¤ËÂÐ¤¹¤ë±þÅú¤È¤·¤Æ@samp{yes}¤¬Í¿¤¨¤é¤ì¤¿¤«¤Î¤è¤¦¤Ë@command{cp} 
¤¬Æ°ºî¤·¤Þ¤¹¡¥¤½¤ì¤Ï¡¤¤½¤ì¤Þ¤Ç¤Ë»ÈÍÑ¤µ¤ì¤Æ¤¤¤¿@option{--interactive}¤ä
@option{-i}¥ª¥×¥·¥ç¥ó¤ò¸ú²ÌÅª¤ËÄä»ß¤·¤Þ¤¹¡¥¥³¥Ô¡¼Àè¤Î¥Õ¥¡¥¤¥ë¤Ë´Ø¤¹¤ë
¤¹¤Ù¤Æ¤Î¥×¥í¥ó¥×¥È¤ËÂÐ¤¹¤ë±þÅú¤È¤·¤Æ@samp{no}¤¬Í¿¤¨¤é¤ì¤¿¤«¤Î¤è¤¦¤Ë
@command{cp}¤ËÆ°ºî¤µ¤»¤ë¤¿¤á¡¤@option{--reply=no}¤ò»ØÄê¤·¤Æ²¼¤µ¤¤¡¥¤½
¤ì¤¾¤ì´ûÂ¸¤Î¥³¥Ô¡¼Àè¤Î¥Õ¥¡¥¤¥ë¤Ë´Ø¤·¤Æ¡¤@command{cp}¤¬¥æ¡¼¥¶¤Ë¥×¥í¥ó¥×
¥È¤òÉ½¼¨¤¹¤ë¤è¤¦¤Ë¤¹¤ë¤¿¤á¡¤@option{--reply=query}¤ò»ØÄê¤·¤Æ²¼¤µ¤¤¡¥

@item -R
@itemx -r
@itemx --recursive
@opindex -R
@opindex -r
@opindex --recursive
@cindex directories, copying recursively
@cindex copying directories recursively
@cindex recursively copying directories
@cindex non-directories, copying as special files
@c Copy directories recursively.  Symbolic links are not followed by
@c default; see the @option{--archive} (@option{-a}), @option{-d},
@c @option{--dereference} (@option{-L}), @option{--no-dereference}
@c (@option{-P}), and @option{-H} options.  Special files are copied by
@c creating a destination file of the same type as the source; see the
@c @option{--copy-contents} option.  It is not portable to use
@c @option{-r} to copy symbolic links or special files.  On some
@c non-@sc{gnu} systems, @option{-r} implies the equivalent of
@c @option{-L} and @option{--copy-contents} for historical reasons.
@c Also, it is not portable to use @option{-R} to copy symbolic links
@c unless you also specify @option{-P}, as @acronym{POSIX} allows
@c implementations that dereference symbolic links by default.
@c 
ºÆµ¢Åª¤Ë¥Ç¥£¥ì¥¯¥È¥ê¤ò¥³¥Ô¡¼¤·¤Þ¤¹¡¥¥Ç¥Õ¥©¥ë¥È¤Ç¤Ï¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯¤ò
¤¿¤É¤ê¤Þ¤»¤ó¡¥@option{--archive} (@option{-a})¡¤@option{-d}¡¤
@option{--dereference} (@option{-L})¡¤@option{--no-dereference}
(@option{-P})¡¤¤½¤·¤Æ@option{-H}¥ª¥×¥·¥ç¥ó¤ò»²¾È¤·¤Æ²¼¤µ¤¤¡¥ÆÃ¼ì¥Õ¥¡¥¤
¥ë¤Ï¡¤¸µ¤È¤Ê¤ë¥Õ¥¡¥¤¥ë¤ÈÆ±¤¸·Á¼°¤Ç¥³¥Ô¡¼Àè¤Î¥Õ¥¡¥¤¥ë¤òºîÀ®¤¹¤ë¤³¤È¤Ç¥³
¥Ô¡¼¤·¤Þ¤¹¡¥@option{--copy-contents}¥ª¥×¥·¥ç¥ó¤ò»²¾È¤·¤Æ²¼¤µ¤¤¡¥¥·¥ó¥Ü
¥ê¥Ã¥¯¥ê¥ó¥¯¤äÆÃ¼ì¥Õ¥¡¥¤¥ë¤ò¥³¥Ô¡¼¤¹¤ë¤¿¤á¤Ë@option{-r}¤ò»ÈÍÑ¤¹¤ë¤³¤È
¤Ë¤Ï°Ü¿¢À­¤¬¤¢¤ê¤Þ¤»¤ó¡¥@sc{gnu}°Ê³°¤Î¥·¥¹¥Æ¥à¤Ë¤Ï¡¤Îò»ËÅª¤ÊÍýÍ³¤«¤é
@option{-r}¤Ç@option{-L}¤È@option{--copy-contents}¤ÎÅù²ÁÊª¤ò°ÅÌÛ¤Ë»ØÄê
¤¹¤ë¤â¤Î¤â¤¢¤ê¤Þ¤¹¡¥¤Þ¤¿¡¤¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯¤ò¥³¥Ô¡¼¤¹¤ë¤¿¤á
@option{-R}¤ò»ÈÍÑ¤¹¤ë¤³¤È¤Ï¡¤@option{-P}¤â»ØÄê¤·¤Ê¤¤¸Â¤ê°Ü¿¢À­¤¬Ìµ¤¯¡¤
¤½¤ì¤Ï¡¤¥Ç¥Õ¥©¥ë¥È¤Ç¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯¤Î´ÖÀÜ»²¾È¤ò¹Ô¤Ê¤¦¼ÂÁõ¤¬
@acronym{POSIX}¤Çµö²Ä¤µ¤ì¤Æ¤¤¤ë¤¿¤á¤Ç¤¹¡¥

@item --remove-destination
@opindex --remove-destination
@c Remove each existing destination file before attempting to open it
@c (contrast with @option{-f} above).
@c 
¤½¤ì¤¾¤ì¤Î´ûÂ¸¤Î¥³¥Ô¡¼Àè¥Õ¥¡¥¤¥ë¤ò¡¤¤½¤ì¤ò³«¤¯Á°¤Ëºï½ü¤·¤Þ¤¹(¾åµ­¤Î
@option{-f}¤È¤Ï°Û¤Ê¤ê¤Þ¤¹)¡¥

@item --sparse=@var{when}
@opindex --sparse=@var{when}
@cindex sparse files, copying
@cindex holes, copying files with
@findex read @r{system call, and holes}
@c A @dfn{sparse file} contains @dfn{holes}---a sequence of zero bytes that
@c does not occupy any physical disk blocks; the @samp{read} system call
@c reads these as zeroes.  This can both save considerable disk space and
@c increase speed, since many binary files contain lots of consecutive zero
@c bytes.  By default, @command{cp} detects holes in input source files via a crude
@c heuristic and makes the corresponding output file sparse as well.
@c Only regular files may be sparse.
@c 
@dfn{¤Þ¤Ð¤é¤Ê¥Õ¥¡¥¤¥ë(sparse file)}¤Ï@dfn{·ê(holes)} --- ÊªÍýÅª¤Ê¥Ç¥£
¥¹¥¯¥Ö¥í¥Ã¥¯¤Ë¤ÏÈ¯À¸¤·¤Ê¤¤¥¼¥í¥Ð¥¤¥È¤ÎÎó --- ¤ò´Þ¤ß¤Þ¤¹¡¥@samp{read}¥·
¥¹¥Æ¥à¥³¡¼¥ë¤Ï¤³¤ì¤é¤ò¥¼¥í¤È¤·¤ÆÆÉ¤ß¹þ¤ß¤Þ¤¹¡¥¥Ð¥¤¥Ê¥ê¥Õ¥¡¥¤¥ë¤Ë¤ÏÏ¢Â³
¤¹¤ë¥¼¥í¥Ð¥¤¥È¤ò´Þ¤à¤³¤È¤¬Â¿¤¤¤Î¤Ç¡¤¤³¤ì¤Ç¥Ç¥£¥¹¥¯¥¹¥Ú¡¼¥¹¤ÎÀáÌó¤ÈÂ®ÅÙ
¤ÎÁý²Ã¤ÎÎ¾Êý¤òÃ£À®¤¹¤ë¤³¤È¤¬²ÄÇ½¤Ç¤¹¡¥¥Ç¥Õ¥©¥ë¥È¤Ç¤Ï¡¤@command{cp}¤ÏÈ¯
¸«Åª¼êË¡¤òÍÑ¤¤¤ÆÆþÎÏ¤µ¤ì¤¿¸µ¥Õ¥¡¥¤¥ë¤Î·ê¤ò¸«ÉÕ¤±¡¤ÂÐ±þ¤¹¤ë½ÐÎÏ¥Õ¥¡¥¤¥ë
¤ËÆ±ÍÍ¤Ë¤Þ¤Ð¤é¤Ë¤·¤Þ¤¹¡¥ÄÌ¾ï¤Î¥Õ¥¡¥¤¥ë¤À¤±¤¬¤Þ¤Ð¤é¤Ë¤Ê¤ê¤Þ¤¹¡¥

@c The @var{when} value can be one of the following:
@c 
@var{when}¤ÎÃÍ¤Ï°Ê²¼¤Î°ì¤Ä¤Ë¤Ê¤ê¤Þ¤¹¡¥
@table @samp
@item auto
@c The default behavior: if the input file is sparse, attempt to make
@c the output file sparse, too.  However, if an output file exists but
@c refers to a non-regular file, then do not attempt to make it sparse.
@c 
¥Ç¥Õ¥©¥ë¥È¤ÎÆ°ºî¤Ç¤¹¡§ÆþÎÏ¥Õ¥¡¥¤¥ë¤¬¤Þ¤Ð¤é¤Î¾ì¹ç¡¤½ÐÎÏ¥Õ¥¡¥¤¥ë¤â¤Þ¤Ð¤é
¤Ë¤¹¤ë¤è¤¦¤Ë»î¤ß¤Þ¤¹¡¥¤·¤«¤·¡¤½ÐÎÏ¥Õ¥¡¥¤¥ë¤¬Â¸ºß¤·¡¤ÄÌ¾ï¤Î¥Õ¥¡¥¤¥ë¤Ç¤Ï
¤Ê¤¤¤â¤Î¤ò»²¾È¤·¤Æ¤¤¤ë¾ì¹ç¡¤¤Þ¤Ð¤é¤Ë¤¹¤ë»î¤ß¤Ï¹Ô¤Ê¤¤¤Þ¤»¤ó¡¥

@item always
@c For each sufficiently long sequence of zero bytes in the input file,
@c attempt to create a corresponding hole in the output file, even if the
@c input file does not appear to be sparse.
@c This is useful when the input file resides on a filesystem
@c that does not support sparse files
@c (for example,  @samp{efs} filesystems in SGI IRIX 5.3 and earlier),
@c but the output file is on a type of filesystem that does support them.
@c Holes may be created only in regular files, so if the destination file
@c is of some other type, @command{cp} does not even try to make it sparse.
@c 
ÆþÎÏ¥Õ¥¡¥¤¥ë¤Î½½Ê¬¤ËÄ¹¤¤¥¼¥í¥Ð¥¤¥È¤ÎÏ¢Â³¤ËÂÐ¤·¡¤ÆþÎÏ¥Õ¥¡¥¤¥ë¤¬¤Þ¤Ð¤é¤Ç
¤Ê¤¤¾ì¹ç¤Ç¤â¡¤½ÐÎÏ¥Õ¥¡¥¤¥ë¤ËÂÐ±þ¤¹¤ë·ê(Ï¢Â³¤·¤¿¥¼¥í¥Ð¥¤¥È)¤ÎºîÀ®¤ò»î¤ß
¤Þ¤¹¡¥¤³¤ì¤Ï¡¤ÆþÎÏ¥Õ¥¡¥¤¥ë¤¬¤Þ¤Ð¤é¤Ê¥Õ¥¡¥¤¥ë¤ò¥µ¥Ý¡¼¥È¤·¤Æ¤¤¤Ê¤¤¥Õ¥¡¥¤
¥ë¥·¥¹¥Æ¥à(Îã¤¨¤Ð¡¤SGI IRIX 5.3¤È¤½¤ì°ÊÁ°¤Î@samp{efs}¥Õ¥¡¥¤¥ë¥·¥¹¥Æ¥à) 
¤ËÂ¸ºß¤·¤Æ¤¤¤Æ¡¤½ÐÎÏ¥Õ¥¡¥¤¥ë¤¬¥µ¥Ý¡¼¥È¤·¤Æ¤¤¤ë¥Õ¥¡¥¤¥ë¥·¥¹¥Æ¥à¤Î¤È¤­Ìò
¤ËÎ©¤Á¤Þ¤¹¡¥·ê(Ï¢Â³¤·¤¿¥¼¥í¥Ð¥¤¥È)¤ÏÄÌ¾ï¤Î¥Õ¥¡¥¤¥ë¤Ë¤À¤±ºîÀ®¤µ¤ì¤ë¤Î¤Ç¡¤
¥³¥Ô¡¼Àè¤Î¥Õ¥¡¥¤¥ë¤¬ÄÌ¾ï¤Î¥Õ¥¡¥¤¥ë¤Ç¤Ï¤Ê¤¤¾ì¹ç¡¤@command{cp}¤Ï¤Þ¤Ð¤é¤Ë
¤·¤è¤¦¤È¤Ï¤·¤Þ¤»¤ó¡¥

@item never
@c Never make the output file sparse.
@c This is useful in creating a file for use with the @command{mkswap} command,
@c since such a file must not have any holes.
@c 
½ÐÎÏ¥Õ¥¡¥¤¥ë¤ò¤Þ¤Ð¤é¤Ë¤·¤Þ¤»¤ó¡¥@command{mkswap}¥³¥Þ¥ó¥É¤òÍÑ¤¤¤Æ¥Õ¥¡¥¤
¥ë¤òºîÀ®¤¹¤ë¤È¤­¡¤¤½¤Î¤è¤¦¤Ê¥Õ¥¡¥¤¥ë¤Ë¤Ï·ê¤¬¤¢¤Ã¤Æ¤Ï¤Ê¤é¤Ê¤¤¤Î¤Ç¡¤¤³¤ì
¤¬Ìò¤ËÎ©¤Á¤Þ¤¹¡¥
@end table

@optStripTrailingSlashes

@item -s
@itemx --symbolic-link
@opindex -s
@opindex --symbolic-link
@cindex symbolic links, copying with
@c Make symbolic links instead of copies of non-directories.  All source
@c file names must be absolute (starting with @samp{/}) unless the
@c destination files are in the current directory.  This option merely
@c results in an error message on systems that do not support symbolic links.
@c 
¥Ç¥£¥ì¥¯¥È¥ê¤Ç¤Ê¤¤¤â¤Î¤ò¥³¥Ô¡¼¤¹¤ëÂå¤ï¤ê¤Ë¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯¤òºîÀ®¤·¤Þ
¤¹¡¥¤¹¤Ù¤Æ¤Î¸µ¥Õ¥¡¥¤¥ëÌ¾¤Ï¡¤¥ê¥ó¥¯Àè¤Î¥Õ¥¡¥¤¥ë¤¬¸½ºß¤Î¥Ç¥£¥ì¥¯¥È¥ê¤Ë¤¢
¤ë¾ì¹ç°Ê³°¡¤ÀäÂÐÅª¤Ç¤¢¤ë(@samp{/}¤Ç»Ï¤Þ¤ë)É¬Í×¤¬¤¢¤ê¤Þ¤¹¡¥¥·¥ó¥Ü¥ê¥Ã¥¯
¥ê¥ó¥¯¤ò¥µ¥Ý¡¼¥È¤·¤Ê¤¤¥·¥¹¥Æ¥à¤Ç¤Ï¡¤¤³¤Î¥ª¥×¥·¥ç¥ó¤Ï·ë²Ì¤È¤·¤Æ¥¨¥é¡¼¥á¥Ã
¥»¡¼¥¸¤òÊÖ¤¹¤À¤±¤Ç¤¹¡¥

@optBackupSuffix

@optTargetDirectory

@item -v
@itemx --verbose
@opindex -v
@opindex --verbose
@c Print the name of each file before copying it.
@c 
¥³¥Ô¡¼¤¹¤ëÁ°¤Ë¤½¤ì¤¾¤ì¤Î¥Õ¥¡¥¤¥ëÌ¾¤ò½ÐÎÏ¤·¤Þ¤¹¡¥

@optVersionControl

@item -x
@itemx --one-file-system
@opindex -x
@opindex --one-file-system
@cindex filesystems, omitting copying to different
@c Skip subdirectories that are on different filesystems from the one that
@c the copy started on.
@c However, mount point directories @emph{are} copied.
@c 
¥³¥Ô¡¼¤ò³«»Ï¤·¤¿¥Õ¥¡¥¤¥ë¥·¥¹¥Æ¥à¤È°Û¤Ê¤ë¥µ¥Ö¥Ç¥£¥ì¥¯¥È¥ê¤ò¾ÊÎ¬¤·¤Þ¤¹¡¥
¤·¤«¤·¡¤¥Þ¥¦¥ó¥È¥Ý¥¤¥ó¥È¤Î¥Ç¥£¥ì¥¯¥È¥ê¤Ï¥³¥Ô¡¼@emph{¤µ¤ì¤Þ¤¹}¡¥

@end table

@exitstatus


@node dd invocation
@c @section @command{dd}: Convert and copy a file
@section @command{dd}: ¥Õ¥¡¥¤¥ë¤ÎÊÑ´¹¤È¥³¥Ô¡¼

@pindex dd
@cindex converting while copying a file

@c @command{dd} copies a file (from standard input to standard output, by
@c default) with a changeable I/O block size, while optionally performing
@c conversions on it.  Synopsis:
@c 
@command{dd}¤Ï¡¤ÊÑ¹¹²ÄÇ½¤ÊI/O¥Ö¥í¥Ã¥¯¥µ¥¤¥º¤òÍÑ¤¤¤Æ¡¤(¥Ç¥Õ¥©¥ë¥È¤Ç¡¤É¸
½àÆþÎÏ¤«¤éÉ¸½à½ÐÎÏ¤Ë)¥Õ¥¡¥¤¥ë¤ò¥³¥Ô¡¼¤·¡¤¥ª¥×¥·¥ç¥ó¤ÎÆ°ºî¤Ç¤½¤ì¤òÊÑ¹¹
¤·¤Þ¤¹¡¥³µÍ×¤Ç¤¹¡¥

@example
dd [@var{option}]@dots{}
@end example

@c The program accepts the following options.  Also see @ref{Common options}.
@c 
¥×¥í¥°¥é¥à¤Ï¡¤°Ê²¼¤Î¥ª¥×¥·¥ç¥ó¤â¼õ¤±Æþ¤ì¤Þ¤¹¡¥@ref{Common options}¤â»²
¾È¤·¤Æ¤¯¤À¤µ¤¤¡¥

@cindex multipliers after numbers
@c The numeric-valued options below (@var{bytes} and @var{blocks}) can be
@c followed by a multiplier: @samp{b}=512, @samp{c}=1,
@c @samp{w}=2, @samp{x@var{m}}=@var{m}, or any of the
@c standard block size suffixes like @samp{k}=1024 (@pxref{Block size}).
@c 
°Ê²¼¤Î(@var{bytes}¤È@var{blocks})¿ôÃÍÅª¤ÊÃÍ¤Î¥ª¥×¥·¥ç¥ó¤òÂ³¤±¤ÆÇÜ¿ô¤Ë
¤¹¤ë¤³¤È¤¬²ÄÇ½¤Ç¤¹¡¥¤½¤ì¤Ï¡¤@samp{b}=512¡¤@samp{c}=1¡¤@samp{w}=2¡¤
@samp{x@var{m}}=@var{m}¡¤¤Þ¤¿¤Ï@samp{k}=1024¤Î¤è¤¦¤Ê¤¢¤é¤æ¤ë¥Ö¥í¥Ã¥¯¥µ
¥¤¥ºÀÜÈø»Ò¤Ç¤¹(@pxref{Block size})¡¥

@c Use different @command{dd} invocations to use different block sizes for
@c skipping and I/O.  For example, the following shell commands copy data
@c in 512 KiB blocks between a disk and a tape, but do not save or restore a
@c 4 KiB label at the start of the disk:
@c 
¥¹¥­¥Ã¥×¤ÈI/O¤ËÂÐ¤·°Û¤Ê¤ë¥Ö¥í¥Ã¥¯¥µ¥¤¥º¤ò»ÈÍÑ¤¹¤ë¤¿¤á¤Ï¡¤@command{dd} 
¤Î¸Æ¤Ó½Ð¤·¤òÊÌ¡¹¤Ë¹Ô¤Ê¤Ã¤Æ¤¯¤À¤µ¤¤¡¥Îã¤¨¤Ð¡¤°Ê²¼¤Î¥·¥§¥ë¥³¥Þ¥ó¥É¤Ç¤Ï¡¤
¥Ç¥£¥¹¥¯¤È¥Æ¡¼¥×¤Î´Ö¤Ç512kB¥Ö¥í¥Ã¥¯¤Ç¥Ç¡¼¥¿¤ò¥³¥Ô¡¼¤·¤Þ¤¹¤¬¡¤¥Ç¥£¥¹¥¯
¤ÎºÇ½é¤Î4kB¤Î¥é¥Ù¥ë¤Ï¡¤ÊÝÂ¸¤µ¤ì¤¿¤êÉü¸µ¤µ¤ì¤¿¤ê¤·¤Þ¤»¤ó¡¥

@example
disk=/dev/rdsk/c0t1d0s2
tape=/dev/rmt/0

# Copy all but the label from disk to tape.
(dd bs=4k skip=1 count=0 && dd bs=512k) <$disk >$tape

# Copy from tape back to disk, but leave the disk label alone.
(dd bs=4k seek=1 count=0 && dd bs=512k) <$tape >$disk
@end example

@c Note that sending a @samp{SIGUSR1} signal to a running @command{dd}
@c process makes it print to standard error the number of records read
@c and written so far, then to resume copying.  In the example below,
@c @command{dd} is run in the background to copy 10 million blocks.
@c The @command{kill} command makes it output the first pair of
@c intermediate record counts,
@c and when @command{dd} completes, it outputs the final pair.
@c 
@samp{SIGUSR1}¥·¥°¥Ê¥ë¤ò¼Â¹ÔÃæ¤Î@command{dd}¤ËÁ÷¤ë¤³¤È¤Ç¡¤É¸½à¥¨¥é¡¼½Ð
ÎÏ¤Ë¥ì¥³¡¼¥ÉÈÖ¹æ¤ò½ÐÎÏ¤·¡¤¤½¤Î¤Þ¤ÞÂ³¤±¤Æ½ñ¤­¹þ¤ß¡¤¥³¥Ô¡¼¤òºÆ³«¤·¤Þ¤¹¡¥
°Ê²¼¤ÎÎã¤Ç¤Ï¡¤@command{dd}¤ò10M¥Ö¥í¥Ã¥¯¤ò¥³¥Ô¡¼¤¹¤ë½èÍý¤ò¥Ð¥Ã¥¯¥°¥é¥ó
¥É¤Ç¼Â¹Ô¤·¤Æ¤¤¤Þ¤¹¡¥@command{kill}¥³¥Þ¥ó¥É¤Ç¡¤Ä¾Á°¤Î¥ì¥³¡¼¥É¿ô¤ÎºÇ½é¤Î
ÁÈ¤ò½ÐÎÏ¤·¡¤@command{dd}¤¬½ªÎ»¤·¤¿¤È¤­ºÇ¸å¤ÎÁÈ¤ò½ÐÎÏ¤·¤Þ¤¹¡¥

@example
$ dd if=/dev/zero of=/dev/null count=10M & pid=$!
$ kill -USR1 $pid; sleep 99
5403604+0 records in
5403604+0 records out
10485760+0 records in
10485760+0 records out
@end example


@table @samp

@item if=@var{file}
@opindex if
@c Read from @var{file} instead of standard input.
@c 
É¸½àÆþÎÏ¤ÎÂå¤ï¤ê¤Ë@var{file}¤«¤éÆÉ¤ß¹þ¤ß¤Þ¤¹¡¥

@item of=@var{file}
@opindex of
@c Write to @var{file} instead of standard output.  Unless
@c @samp{conv=notrunc} is given, @command{dd} truncates @var{file} to zero
@c bytes (or the size specified with @samp{seek=}).
@c 
É¸½à½ÐÎÏ¤ÎÂå¤ï¤ê¤Ë@var{file}¤Ë½ñ¤­½Ð¤·¤Þ¤¹¡¥@samp{conv=notrunc}¤¬Í¿¤¨
¤é¤ì¤Æ¤¤¤Ê¤¤¾ì¹ç¡¤@command{dd}¤Ï@var{file}¤ò¥¼¥í¥Ð¥¤¥È(¤Þ¤¿¤Ï¡¤
@samp{seek=}¤Ç»ØÄê¤µ¤ì¤¿¥µ¥¤¥º)¤ËÀÚ¤êµÍ¤á¤Þ¤¹¡¥

@item ibs=@var{bytes}
@opindex ibs
@cindex block size of input
@cindex input block size
@c Read @var{bytes} bytes at a time.
@c 
°ìÅÙ¤Ë@var{bytes}¥Ð¥¤¥ÈÆÉ¤ß¹þ¤ß¤Þ¤¹¡¥

@item obs=@var{bytes}
@opindex obs
@cindex block size of output
@cindex output block size
@c Write @var{bytes} bytes at a time.
@c 
°ìÅÙ¤Ë@var{bytes}¥Ð¥¤¥È½ñ¤­½Ð¤·¤Þ¤¹¡¥

@item bs=@var{bytes}
@opindex bs
@cindex block size
@c Both read and write @var{bytes} bytes at a time.  This overrides
@c @samp{ibs} and @samp{obs}.
@c 
°ìÅÙ¤Ë@var{bytes}¥Ð¥¤¥ÈÆÉ¤ß½ñ¤­¤·¤Þ¤¹¡¥¤³¤ì¤Ï@samp{ibs}¤È@samp{obs}¤Ë
Í¥Àè¤·¤Þ¤¹¡¥

@item cbs=@var{bytes}
@opindex cbs
@cindex block size of conversion
@cindex conversion block size
@c Convert @var{bytes} bytes at a time.
@c 
°ìÅÙ¤Ë@var{bytes}¥Ð¥¤¥ÈÊÑ´¹¤·¤Þ¤¹¡¥

@item skip=@var{blocks}
@opindex skip
@c Skip @var{blocks} @samp{ibs}-byte blocks in the input file before copying.
@c 
¥³¥Ô¡¼¤¹¤ëÁ°¤ËÆþÎÏ¥Õ¥¡¥¤¥ë¤Ç¡¤@var{blocks} @samp{ibs}¥Ð¥¤¥È¥Ö¥í¥Ã¥¯¤ò
ÆÉ¤ßÈô¤Ð¤·¤Þ¤¹¡¥

@item seek=@var{blocks}
@opindex seek
@c Skip @var{blocks} @samp{obs}-byte blocks in the output file before copying.
@c 
¥³¥Ô¡¼¤¹¤ëÁ°¤Ë½ÐÎÏ¥Õ¥¡¥¤¥ë¤Ç¡¤@var{blocks} @samp{ibs}¥Ð¥¤¥È¥Ö¥í¥Ã¥¯¤ò
ÆÉ¤ßÈô¤Ð¤·¤Þ¤¹¡¥

@item count=@var{blocks}
@opindex count
@c Copy @var{blocks} @samp{ibs}-byte blocks from the input file, instead
@c of everything until the end of the file.
@c 
¥Õ¥¡¥¤¥ë¤Î½ª¤ê¤Þ¤Ç¤Î¤¹¤Ù¤Æ¤Ç¤Ï¤Ê¤¯¡¤ÆþÎÏ¥Õ¥¡¥¤¥ë¤«¤é@var{blocks}
@samp{ibs}¥Ð¥¤¥È¥Ö¥í¥Ã¥¯¥³¥Ô¡¼¤·¤Þ¤¹¡¥

@item conv=@var{conversion}[,@var{conversion}]@dots{}
@opindex conv
@c Convert the file as specified by the @var{conversion} argument(s).
@c (No spaces around any comma(s).)
@c 
@var{conversion}°ú¿ô¤Ç»ØÄê¤µ¤ì¤¿¤è¤¦¤Ë¥Õ¥¡¥¤¥ë¤òÊÑ´¹¤·¤Þ¤¹¡¥(¥«¥ó¥Þ¤Î
²ó¤ê¤Ë¥¹¥Ú¡¼¥¹¤Ï¤¢¤ê¤Þ¤»¤ó¡¥)

@c Conversions:
@c 
°Ê²¼¤ÎÊÑ´¹¤Ç¤¹¡¥

@table @samp

@item ascii
@opindex ascii@r{, converting to}
@c Convert @acronym{EBCDIC} to @acronym{ASCII}.
@c 
@acronym{EBCDIC}¤ò@acronym{ASCII}¤ËÊÑ´¹¤·¤Þ¤¹¡¥

@item ebcdic
@opindex ebcdic@r{, converting to}
@c Convert @acronym{ASCII} to @acronym{EBCDIC}.
@c 
@acronym{ASCII}¤ò@acronym{EBCDIC}¤ËÊÑ´¹¤·¤Þ¤¹¡¥

@item ibm
@opindex alternate ebcdic@r{, converting to}
@c Convert @acronym{ASCII} to alternate @acronym{EBCDIC}.
@c 
@acronym{ASCII}¤òÊÌ¤Î@acronym{EBCDIC}¤ËÊÑ´¹¤·¤Þ¤¹¡¥

@item block
@opindex block @r{(space-padding)}
@c For each line in the input, output @samp{cbs} bytes, replacing the
@c input newline with a space and padding with spaces as necessary.
@c 
ÆþÎÏ¤Î¤½¤ì¤¾¤ì¤Î¹Ô¤ËÂÐ¤·¡¤ÆþÎÏ¤Î²þ¹Ô¤ò¥¹¥Ú¡¼¥¹¤ËÃÖ´¹¤·¡¤É¬Í×¤Ê¥¹¥Ú¡¼¥¹
¤òËä¤á¹þ¤ß¤Ê¤¬¤é¡¤@samp{cbs}¥Ð¥¤¥È½ÐÎÏ¤·¤Þ¤¹¡¥

@item unblock
@opindex unblock
@c Replace trailing spaces in each @samp{cbs}-sized input block with a
@c newline.
@c 
¤½¤ì¤¾¤ì¤Î@samp{cbs}¤ÎÂç¤­¤µ¤ÎÆþÎÏ¥Ö¥í¥Ã¥¯¤Ç¡¤ËöÈø¤Î¥¹¥Ú¡¼¥¹¤ò²þ¹Ô¤ËÃÖ
´¹¤·¤Þ¤¹¡¥

@item lcase
@opindex lcase@r{, converting to}
@c Change uppercase letters to lowercase.
@c 
ÂçÊ¸»ú¤ò¾®Ê¸»ú¤ËÊÑ´¹¤·¤Þ¤¹¡¥

@item ucase
@opindex ucase@r{, converting to}
@c Change lowercase letters to uppercase.
@c 
¾®Ê¸»ú¤òÂçÊ¸»ú¤ËÊÑ´¹¤·¤Þ¤¹¡¥

@item swab
@opindex swab @r{(byte-swapping)}
@cindex byte-swapping
@c Swap every pair of input bytes.  @sc{gnu} @command{dd}, unlike others, works
@c when an odd number of bytes are read---the last byte is simply copied
@c (since there is nothing to swap it with).
@c 
ÆþÎÏ¥Ð¥¤¥È¤Î¤¹¤Ù¤Æ¤ÎÁÈ¤òÆþ¤ìÂØ¤¨¤Þ¤¹¡¥@sc{gnu} @command{dd}¤ÏÂ¾¤È°Û¤Ê
¤ê¡¤¶ö¿ô¥Ð¥¤¥È¤òÆÉ¤ß¹þ¤ó¤À¤È¤­Æ°ºî¤·¤Þ¤¹ --- ºÇ¸å¤Î¥Ð¥¤¥È¤Ï¡¤Ã±¤Ë¥³¥Ô¡¼
¤µ¤ì¤Þ¤¹¡¥(Æþ¤ìÂØ¤¨¤ë¥Ð¥¤¥È¤¬¤Ê¤¤¤«¤é¤Ç¤¹)¡¥

@item noerror
@opindex noerror
@cindex read errors, ignoring
@c Continue after read errors.
@c 
ÆÉ¤ß¹þ¤ß¥¨¥é¡¼¸å¤âÂ³¤±¤Þ¤¹¡¥

@item notrunc
@opindex notrunc
@cindex truncating output file, avoiding
@c Do not truncate the output file.
@c 
½ÐÎÏ¥Õ¥¡¥¤¥ë¤òÀÚ¤êµÍ¤á¤Þ¤»¤ó¡¥

@item sync
@opindex sync @r{(padding with nulls)}
@c Pad every input block to size of @samp{ibs} with trailing zero bytes.
@c When used with @samp{block} or @samp{unblock}, pad with spaces instead of
@c zero bytes.
@c 
¤¹¤Ù¤Æ¤ÎÆþÎÏ¥Ö¥í¥Ã¥¯¤ò¡¤¸åÃÖ¤¹¤ë¥¼¥í¥Ð¥¤¥È¤òËä¤á¹þ¤ß@samp{ibs}¥µ¥¤¥º¤Ë
¤·¤Þ¤¹¡¥@samp{block}¤ä@samp{unblock}¤ò»ÈÍÑ¤¹¤ë¤È¤­¡¤¥¼¥í¥Ð¥¤¥È¤ÎÂå¤ï¤ê
¤Ë¥¹¥Ú¡¼¥¹¤ÇËä¤á¹þ¤ß¤Þ¤¹¡¥
@end table

@end table

@exitstatus


@node install invocation
@c @section @command{install}: Copy files and set attributes
@section @command{install}: ¥Õ¥¡¥¤¥ë¤Î¥³¥Ô¡¼¤ÈÂ°À­¤ÎÀßÄê

@pindex install
@cindex copying files and setting attributes

@c @command{install} copies files while setting their permission modes and, if
@c possible, their owner and group.  Synopses:
@c 
@command{install}¤Ï¡¤µö²Ä¥â¡¼¥É¤È¡¤²ÄÇ½¤Ê¾ì¹ç¤Ï½êÍ­¼Ô¤È¥°¥ë¡¼¥×ÀßÄê¤·
¤Ê¤¬¤é¥Õ¥¡¥¤¥ë¤ò¥³¥Ô¡¼¤·¤Þ¤¹¡¥³µÍ×¤Ç¤¹¡¥

@example
install [@var{option}]@dots{} @var{source} @var{dest}
install [@var{option}]@dots{} @var{source}@dots{} @var{directory}
install -d [@var{option}]@dots{} @var{directory}@dots{}
@end example

@c In the first of these, the @var{source} file is copied to the @var{dest}
@c target file.  In the second, each of the @var{source} files are copied
@c to the destination @var{directory}.  In the last, each @var{directory}
@c (and any missing parent directories) is created.
@c 
¤³¤ì¤é¤ÎºÇ½é¤Î¤â¤Î¤Ï¡¤@var{source}¥Õ¥¡¥¤¥ë¤Ï@var{dest}¥¿¡¼¥²¥Ã¥È¥Õ¥¡¥¤
¥ë¤Ë¥³¥Ô¡¼¤µ¤ì¤Þ¤¹¡¥ÆóÈÖÌÜ¤Ç¤Ï¡¤¤½¤ì¤¾¤ì¤Î@var{source}¥Õ¥¡¥¤¥ë¤Ï¥³¥Ô¡¼
Àè¤Î@var{directory}¤Ë¥³¥Ô¡¼¤µ¤ì¤Þ¤¹¡¥ºÇ¸å¤Ç¤Ï¡¤¤½¤ì¤¾¤ì¤Î
@var{directory}(¤ÈÂ­¤ê¤Ê¤¤¿Æ¥Ç¥£¥ì¥¯¥È¥ê)¤¬¥³¥Ô¡¼¤µ¤ì¤Þ¤¹¡¥

@cindex Makefiles, installing programs in
@c @command{install} is similar to @command{cp}, but allows you to control the
@c attributes of destination files.  It is typically used in Makefiles to
@c copy programs into their destination directories.  It refuses to copy
@c files onto themselves.
@c 
@command{install}¤Ï@command{cp}¤Ë»÷¤Æ¤¤¤Þ¤¹¤¬¡¤¥³¥Ô¡¼Àè¤Î¥Õ¥¡¥¤¥ë¤ÎÂ°
À­¤òÀ©¸æ¤¹¤ë¤³¤È¤¬²ÄÇ½¤Ë¤Ê¤Ã¤Æ¤¤¤Þ¤¹¡¥¤½¤ì¤ÏMakefile¤Ç°ìÈÌÅª¤Ë»ÈÍÑ¤µ¤ì¡¤
¥×¥í¥°¥é¥à¤ò¥³¥Ô¡¼Àè¤Î¥Ç¥£¥ì¥¯¥È¥ê¤Ë¥³¥Ô¡¼¤·¤Þ¤¹¡¥¼«Ê¬¼«¿È¤Ë¥Õ¥¡¥¤¥ë¤ò
¥³¥Ô¡¼¤¹¤ë¤³¤È¤ÏµñÈÝ¤µ¤ì¤Þ¤¹¡¥

@c The program accepts the following options.  Also see @ref{Common options}.
@c 
¥×¥í¥°¥é¥à¤Ï¡¤°Ê²¼¤Î¥ª¥×¥·¥ç¥ó¤â¼õ¤±Æþ¤ì¤Þ¤¹¡¥@ref{Common options}¤â»²
¾È¤·¤Æ¤¯¤À¤µ¤¤¡¥

@table @samp

@optBackup

@item -c
@opindex -c
@c Ignored; for compatibility with old Unix versions of @command{install}.
@c 
Ìµ»ë¤µ¤ì¤Þ¤¹¡¥¸Å¤¤Unix¥Ð¡¼¥¸¥ç¥ó¤Î@command{install}¤Î¸ß´¹À­¤Î¤¿¤á¤Ç¤¹¡¥

@item -d
@itemx --directory
@opindex -d
@opindex --directory
@cindex directories, creating with given attributes
@cindex parent directories, creating missing
@cindex leading directories, creating missing
@c Create each given directory and any missing parent directories, setting
@c the owner, group and mode as given on the command line or to the
@c defaults.  It also gives any parent directories it creates those
@c attributes.  (This is different from the SunOS 4.x @command{install}, which
@c gives directories that it creates the default attributes.)
@c 
Í¿¤¨¤é¤ì¤¿¤½¤ì¤¾¤ì¤Î¥Ç¥£¥ì¥¯¥È¥ê¤ÈÂ­¤ê¤Ê¤¤¿Æ¥Ç¥£¥ì¥¯¥È¥ê¤ò¡¤¥³¥Þ¥ó¥É¥é
¥¤¥ó¤ÇÍ¿¤¨¤é¤ì¤¿¤ä¥Ç¥Õ¥©¥ë¥È¤Î½êÍ­¼Ô¡¤¥°¥ë¡¼¥×¤È¥â¡¼¥É¤ËÀßÄê¤·¤Ê¤¬¤éºî
À®¤·¤Þ¤¹¡¥¿Æ¥Ç¥£¥ì¥¯¥È¥ê¤âÍ¿¤¨¤é¤ì¤¿Â°À­¤ÇºîÀ®¤µ¤ì¤Þ¤¹¡¥(¤³¤ì¤ÏSunOS
4.x @command{install}¤È°Û¤Ê¤ê¡¤¤½¤³¤Ç¤Ï¥Ç¥£¥ì¥¯¥È¥ê¤Ï¥Ç¥Õ¥©¥ë¥È¤ÎÂ°À­
¤¬Í¿¤¨¤é¤ì¤Þ¤¹¡¥)

@item -g @var{group}
@itemx --group=@var{group}
@opindex -g
@opindex --group
@cindex group ownership of installed files, setting
@c Set the group ownership of installed files or directories to
@c @var{group}. The default is the process' current group.  @var{group}
@c may be either a group name or a numeric group id.
@c 
¥¤¥ó¥¹¥È¡¼¥ë¤µ¤ì¤ë¥Õ¥¡¥¤¥ë¤ä¥Ç¥£¥ì¥¯¥È¥ê¤Î¥°¥ë¡¼¥×½êÍ­¸¢¤ò¡¤
@var{group} ¤ËÀßÄê¤·¤Þ¤¹¡¥¥Ç¥Õ¥©¥ë¥È¤Ï¡¤¥×¥í¥»¥¹¤Î¸½ºß¤Î¥°¥ë¡¼¥×¤Ç¤¹¡¥
@var{group}¤Ï¡¤¥°¥ë¡¼¥×Ì¾¤ä¿ôÃÍÅª¤Ê¥°¥ë¡¼¥×ID¤¬²ÄÇ½¤Ç¤¹¡¥

@item -m @var{mode}
@itemx --mode=@var{mode}
@opindex -m
@opindex --mode
@cindex permissions of installed files, setting
@c Set the permissions for the installed file or directory to @var{mode},
@c which can be either an octal number, or a symbolic mode as in
@c @command{chmod}, with 0 as the point of departure (@pxref{File
@c permissions}).  The default mode is @samp{u=rwx,go=rx}---read, write,
@c and execute for the owner, and read and execute for group and other.
@c 
¥¤¥ó¥¹¥È¡¼¥ë¤µ¤ì¤ë¥Õ¥¡¥¤¥ë¤ä¥Ç¥£¥ì¥¯¥È¥ê¤Îµö²Ä¤ò@var{mode}¤ËÀßÄê¤·¡¤¤½
¤ì¤ÏÈ¬¿Ê¿ô¤ä@command{chmod}¤Î¾ÝÄ§Åª¤Ê¥â¡¼¥É¤¬²ÄÇ½¤Ç¡¤0¤¬½ÐÈ¯ÅÀ¤È¤Ê¤ê¤Þ
¤¹(@pxref{File permissions})¡¥¥Ç¥Õ¥©¥ë¥È¥â¡¼¥É¤Ï@samp{u=rwx,go=rx}¤Ç¤¹ 
--- ½êÍ­¼Ô¤ÎÆÉ¤ß½ñ¤­¼Â¹Ô¡¤¥°¥ë¡¼¥×¤È¤½¤ì°Ê³°¤ÏÆÉ¤ß¹þ¤ß¤È¼Â¹Ô¤Ç¤¹¡¥

@item -o @var{owner}
@itemx --owner=@var{owner}
@opindex -o
@opindex --owner
@cindex ownership of installed files, setting
@cindex appropriate privileges
@vindex root @r{as default owner}
@c If @command{install} has appropriate privileges (is run as root), set the
@c ownership of installed files or directories to @var{owner}. The default
@c is @code{root}.  @var{owner} may be either a user name or a numeric user
@c ID.
@c 
@command{install}¤¬Å¬ÀÚ¤ÊÆÃ¸¢(¥ë¡¼¥È¤È¤·¤Æ¼Â¹Ô)¤ò»ý¤Ä¾ì¹ç¡¤¥¤¥ó¥¹¥È¡¼
¥ë¤µ¤ì¤ë¥Õ¥¡¥¤¥ë¤ä¥Ç¥£¥ì¥¯¥È¥ê¤Î½êÍ­¸¢¤Ï@var{owner}¤ËÀßÄê¤µ¤ì¤Þ¤¹¡¥¥Ç
¥Õ¥©¥ë¥È¤Ï@code{root}¤Ç¤¹¡¥@var{owner}¤Ï¡¤¥æ¡¼¥¶Ì¾¤Þ¤¿¤Ï¡¤¿ôÃÍ¤Î¥æ¡¼¥¶
ID¤¬²ÄÇ½¤Ç¤¹¡¥

@item -p
@itemx --preserve-timestamps
@opindex -p
@opindex --preserve-timestamps
@cindex timestamps of installed files, preserving
@c Set the time of last access and the time of last modification of each
@c installed file to match those of each corresponding original file.
@c When a file is installed without this option, its last access and
@c last modification times are both set to the time of installation.
@c This option is useful if you want to use the last modification times
@c of installed files to keep track of when they were last built as opposed
@c to when they were last installed.
@c 
¥¤¥ó¥¹¥È¡¼¥ë¤µ¤ì¤¿¤½¤ì¤¾¤ì¤Î¥Õ¥¡¥¤¥ë¤Î¡¤ºÇ¸å¤Ë¥¢¥¯¥»¥¹¤·¤¿»þ´Ö¤ÈºÇ¸å¤Ë
ÊÔ½¸¤·¤¿»þ´Ö¤ò¡¤ÂÐ±þ¤¹¤ë¤½¤ì¤¾¤ì¤Î¸µ¥Õ¥¡¥¤¥ë¤Ë¥Þ¥Ã¥Á¤µ¤»¤Þ¤¹¡¥¤³¤Î¥ª¥×
¥·¥ç¥óÌµ¤·¤Ç¥Õ¥¡¥¤¥ë¤¬¥¤¥ó¥¹¥È¡¼¥ë¤µ¤ì¤¿¤È¤­¡¤ºÇ¸å¤Ë¥¢¥¯¥»¥¹¤·¤¿»þ´Ö¤È
ºÇ¸å¤ËÊÔ½¸¤·¤¿»þ´Ö¤Ï¡¤¤É¤Á¤é¤â¥¤¥ó¥¹¥È¡¼¥ë¤µ¤ì¤¿»þ´Ö¤ËÀßÄê¤µ¤ì¤Þ¤¹¡¥¤³
¤Î¥ª¥×¥·¥ç¥ó¤Ï¡¤ºÇ¸å¤Ë¥¤¥ó¥¹¥È¡¼¥ë¤µ¤ì¤¿»þ¤Ç¤Ï¤Ê¤¯¡¤ºÇ¸å¤Ë¥Ó¥ë¥É¤µ¤ì¤¿
»þ¤òÄÉÀ×¤·Â³¤±¤ë¤¿¤á¡¤¥¤¥ó¥¹¥È¡¼¥ë¤µ¤ì¤¿¥Õ¥¡¥¤¥ë¤ÎºÇ¸å¤ËÊÔ½¸¤µ¤ì¤¿»þ´Ö
¤ò»ÈÍÑ¤¹¤ë¾ì¹ç¡¤Ìò¤ËÎ©¤Á¤Þ¤¹¡¥

@item -s
@itemx --strip
@opindex -s
@opindex --strip
@cindex symbol table information, stripping
@cindex stripping symbol table information
@c Strip the symbol tables from installed binary executables.
@c 
¥¤¥ó¥¹¥È¡¼¥ë¤µ¤ì¤¿¥Ð¥¤¥Ê¥ê¼Â¹Ô·Á¼°¤«¤é¡¤¥·¥ó¥Ü¥ë¥Æ¡¼¥Ö¥ë¤ò¼è¤ê½ü¤­¤Þ¤¹¡¥

@optBackupSuffix

@optTargetDirectory

@item -v
@itemx --verbose
@opindex -v
@opindex --verbose
@c Print the name of each file before copying it.
@c 
¥³¥Ô¡¼¤¹¤ëÁ°¤Ë¡¤¤½¤ì¤¾¤ì¤Î¥Õ¥¡¥¤¥ëÌ¾¤ò½ÐÎÏ¤·¤Þ¤¹¡¥

@optVersionControl

@end table

@exitstatus


@node mv invocation
@c @section @command{mv}: Move (rename) files
@section @command{mv}: ¥Õ¥¡¥¤¥ë¤Î°ÜÆ°(Ì¾Á°¤ÎÊÑ¹¹)

@pindex mv

@c @command{mv} moves or renames files (or directories).  Synopsis:
@c 
@command{mv}¤Ï¡¤¥Õ¥¡¥¤¥ë(¤ä¥Ç¥£¥ì¥¯¥È¥ê)¤ò°ÜÆ°¤·¤¿¤êÌ¾Á°¤òÊÑ¹¹¤·¤¿¤ê¤·
¤Þ¤¹¡¥³µÍ×¤Ç¤¹¡¥

@example
mv [@var{option}]@dots{} @var{source} @var{dest}
mv [@var{option}]@dots{} @var{source}@dots{} @var{directory}
@end example

@c If the last argument names an existing directory, @command{mv} moves each
@c other given file into a file with the same name in that directory.
@c Otherwise, if only two files are given, it renames the first as
@c the second.  It is an error if the last argument is not a directory
@c and more than two files are given.
@c 
ºÇ¸å¤Î°ú¿ô¤¬¡¤´ûÂ¸¤Î¥Ç¥£¥ì¥¯¥È¥ê¤ò¼¨¤¹¾ì¹ç¡¤@command{mv}¤Ï¡¤¤½¤ì°Ê³°¤Î
Í¿¤¨¤é¤ì¤¿¤½¤ì¤¾¤ì¤Î¥Õ¥¡¥¤¥ë¤ò¡¤Æ±¤¸¥Õ¥¡¥¤¥ëÌ¾¤Ç¡¤¤½¤Î¥Ç¥£¥ì¥¯¥È¥ê¤Ë°Ü
Æ°¤·¤Þ¤¹¡¥¤½¤ì°Ê³°¤Ç¤Ï¡¤Æó¤Ä¤Î¥Õ¥¡¥¤¥ë¤¬Í¿¤¨¤é¤ì¤¿¾ì¹ç¡¤°ìÈÖÌÜ¤ÎÌ¾Á°¤ò
ÆóÈÖÌÜ¤ËÊÑ¹¹¤·¤Þ¤¹¡¥ºÇ¸å¤Î°ú¿ô¤¬¥Ç¥£¥ì¥¯¥È¥ê¤Ç¤Ï¤Ê¤¯¡¤Æó¤Ä°Ê¾å¤Î¥Õ¥¡¥¤
¥ë¤¬Í¿¤¨¤é¤ì¤¿¾ì¹ç¡¤¥¨¥é¡¼¤È¤Ê¤ê¤Þ¤¹¡¥

@c @command{mv} can move any type of file from one filesystem to another.
@c Prior to version @code{4.0} of the fileutils,
@c @command{mv} could move only regular files between filesystems.
@c For example, now @command{mv} can move an entire directory hierarchy
@c including special device files from one partition to another.  It first
@c uses some of the same code that's used by @code{cp -a} to copy the
@c requested directories and files, then (assuming the copy succeeded)
@c it removes the originals.  If the copy fails, then the part that was
@c copied to the destination partition is removed.  If you were to copy
@c three directories from one partition to another and the copy of the first
@c directory succeeded, but the second didn't, the first would be left on
@c the destination partition and the second and third would be left on the
@c original partition.
@c 
@command{mv}¤Ï¡¤°ì¤Ä¤Î¥Õ¥¡¥¤¥ë¥·¥¹¥Æ¥à¤«¤éÊÌ¤Î¤â¤Î¤Ø¡¤¤¢¤é¤æ¤ë·Á¼°¤Î¥Õ¥¡
¥¤¥ë°ÜÆ°¤¬²ÄÇ½¤Ç¤¹¡¥fileutils¤Î¥Ð¡¼¥¸¥ç¥ó@code{4.0}°ÊÁ°¤Ç¤Ï¡¤
@command{mv}¤ÏÄÌ¾ï¤Î¥Õ¥¡¥¤¥ë¤Î¤ß¥Õ¥¡¥¤¥ë¥·¥¹¥Æ¥à´Ö¤Ç¤Î°ÜÆ°¤¬²ÄÇ½¤Ç¤·¤¿¡¥
Îã¤¨¤Ð¡¤¸½ºß¤Î@command{mv}¤Ï¡¤°ì¤Ä¤Î¥Ñ¡¼¥Æ¥£¥·¥ç¥ó¤«¤éÊÌ¤Î¤â¤Î¤Ø¡¤ÆÃ¼ì
¤Ê¥Ç¥Ð¥¤¥¹¥Õ¥¡¥¤¥ë¤ò´Þ¤à¥Ç¥£¥ì¥¯¥È¥ê³¬ÁØÁ´ÂÎ¤ò°ÜÆ°¤¹¤ë¤³¤È¤¬²ÄÇ½¤Ç¤¹¡¥
¤½¤ì¤ÏºÇ½é¤Ë¡¤Í×µá¤µ¤ì¤¿¥Ç¥£¥ì¥¯¥È¥ê¤È¥Õ¥¡¥¤¥ë¤ò¥³¥Ô¡¼¤¹¤ë@code{cp -a} 
¤Ç»ÈÍÑ¤µ¤ì¤Æ¤¤¤ë¤â¤Î¤ÈÆ±¤¸¥³¡¼¥É¤ò»ÈÍÑ¤·¡¤¤½¤ì¤«¤é(¥³¥Ô¡¼¤¬À®¸ù¤·¤¿¤È
²¾Äê¤·¤Æ)¸µ¤òºï½ü¤·¤Þ¤¹¡¥¥³¥Ô¡¼¤¬¼ºÇÔ¤·¤¿¾ì¹ç¡¤°ÜÆ°Àè¤Î¥Ñ¡¼¥Æ¥£¥·¥ç¥ó
¤Ë¥³¥Ô¡¼¤µ¤ì¤¿ÉôÊ¬¤¬ºï½ü¤µ¤ì¤Þ¤¹¡¥°ì¤Ä¤Î¥Ñ¡¼¥Æ¥£¥·¥ç¥ó¤«¤é»°¤Ä¤Î¥Ç¥£¥ì
¥¯¥È¥ê¤òÊÌ¤Î¤â¤Î¤Ë¥³¥Ô¡¼¤·¤Æ¤¤¤Æ¡¤ºÇ½é¤Î¥Ç¥£¥ì¥¯¥È¥ê¤¬À®¸ù¤·¡¤ÆóÈÖÌÜ¤¬
¼ºÇÔ¤·¤¿¾ì¹ç¡¤ºÇ½é¤Î¤â¤Î¤Ï°ÜÆ°Àè¤Î¥Ñ¡¼¥Æ¥£¥·¥ç¥ó¤Ë»Ä¤ê¡¤ÆóÈÖÌÜ¤È»°ÈÖÌÜ
¤Ï¸µ¤Î¥Ñ¡¼¥Æ¥£¥·¥ç¥ó¤Ë»Ä¤ê¤Þ¤¹¡¥

@cindex prompting, and @command{mv}
@c If a destination file exists but is normally unwritable, standard input
@c is a terminal, and the @option{-f} or @option{--force} option is not given,
@c @command{mv} prompts the user for whether to replace the file.  (You might
@c own the file, or have write permission on its directory.)  If the
@c response does not begin with @samp{y} or @samp{Y}, the file is skipped.
@c 
°ÜÆ°Àè¤Î¥Õ¥¡¥¤¥ë¤¬Â¸ºß¤·ÄÌ¾ï¤Î½ñ¤­¹þ¤ß¤¬ÉÔ²Ä¤Ç¡¤É¸½àÆþÎÏ¤¬Ã¼Ëö¤Ç¡¤
@option{-f}¤ä@option{--force}¥ª¥×¥·¥ç¥ó¤¬Í¿¤¨¤é¤ì¤Æ¤¤¤Ê¤¤¾ì¹ç¡¤
@command{mv}¤Ï¥Õ¥¡¥¤¥ë¤òÃÖ´¹¤¹¤ë¤«¤É¤¦¤«¡¤¥æ¡¼¥¶¤Ë¥×¥í¥ó¥×¥È¤òÉ½¼¨¤·¤Þ
¤¹¡¥(¼«Ê¬¤¬½êÍ­¤¹¤ë¥Õ¥¡¥¤¥ë¡¤¤Þ¤¿¤Ï¡¤¤½¤Î¥Ç¥£¥ì¥¯¥È¥ê¤Ë½ñ¤­¹þ¤ßµö²Ä¤¬
¤¢¤ëÉ¬Í×¤¬¤¢¤ê¤Þ¤¹¡¥)±þÅú¤¬@samp{y}¤Þ¤¿¤Ï@samp{Y}¤Ç»Ï¤Þ¤é¤Ê¤¤¾ì¹ç¡¤¥Õ¥¡
¥¤¥ë¤Ï¥¹¥­¥Ã¥×¤µ¤ì¤Þ¤¹¡¥

@c @emph{Warning}: If you try to move a symlink that points to a directory,
@c and you specify the symlink with a trailing slash, then @command{mv}
@c doesn't move the symlink but instead moves the directory referenced
@c by the symlink.  @xref{Trailing slashes}.
@c 
@emph{·Ù¹ð}¡§¥Ç¥£¥ì¥¯¥È¥ê¤ò¼¨¤¹¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯¤ò°ÜÆ°¤·¤è¤¦¤È¤·¡¤¥¹
¥é¥Ã¥·¥å¤ò¸åÃÖ¤·¤¿¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯¤ò»ØÄê¤·¤¿¾ì¹ç¡¤@command{mv}¤Ï¥·¥ó
¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯¤ò°ÜÆ°¤·¤Þ¤»¤ó¤¬¡¤¤½¤ÎÂå¤ï¤ê¤Ë¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯¤¬»²¾È¤¹
¤ë¥Ç¥£¥ì¥¯¥È¥ê¤ò°ÜÆ°¤·¤Þ¤¹¡¥@xref{Trailing slashes}.

@c The program accepts the following options.  Also see @ref{Common options}.
@c 
¥×¥í¥°¥é¥à¤Ï°Ê²¼¤Î¥ª¥×¥·¥ç¥ó¤â¼õ¤±Æþ¤ì¤Þ¤¹¡¥@ref{Common options}¤â»²¾È
¤·¤Æ¤¯¤À¤µ¤¤¡¥

@table @samp

@optBackup

@item -f
@itemx --force
@opindex -f
@opindex --force
@cindex prompts, omitting
@c Do not prompt the user before removing a destination file.
@c 
°ÜÆ°Àè¤Î¥Õ¥¡¥¤¥ë¤òºï½ü¤·¤¿¤ê¾å½ñ¤­¤·¤¿¤ê¤¹¤ëÁ°¤Ë¡¤¥æ¡¼¥¶¤Ë¥×¥í¥ó¥×¥È¤ò
É½¼¨¤·¤Þ¤»¤ó¡¥

@item -i
@itemx --interactive
@opindex -i
@opindex --interactive
@cindex prompts, forcing
@c Prompt whether to overwrite each existing destination file, regardless
@c of its permissions.  If the response does not begin with @samp{y} or
@c @samp{Y}, the file is skipped.
@c 
¥Õ¥¡¥¤¥ë¤Îµö²Ä¤Ë°ÍÂ¸¤»¤º¡¤¤½¤ì¤¾¤ì¤Î´ûÂ¸¤Î°ÜÆ°Àè¤Î¥Õ¥¡¥¤¥ë¤ò¾å½ñ¤­¤¹
¤ë¤«¤É¤¦¤«¥×¥í¥ó¥×¥È¤òÉ½¼¨¤·¤Þ¤¹¡¥@samp{y}¤ä@samp{Y}¤Ç»Ï¤Þ¤é¤Ê¤¤ÊÖÅú¤Î
¾ì¹ç¡¤¥Õ¥¡¥¤¥ë¤Ï¥¹¥­¥Ã¥×¤µ¤ì¤Þ¤¹¡¥

@itemx @w{@kbd{--reply}[=@var{how}]}
@opindex --reply
@cindex interactivity
@c Specifying @option{--reply=yes} is equivalent to using @option{--force}.
@c Specify @option{--reply=no} to make @command{mv} act as if @samp{no} were
@c given as a response to every prompt about a destination file.
@c Specify @option{--reply=query} to make @command{mv} prompt the user
@c about each existing destination file.
@c 
@option{--reply=yes}¤Î»ØÄê¤Ï¡¤@option{--force}¤Î»ÈÍÑ¤ÈÅù²Á¤Ç¤¹¡¥
@command{mv}¤¬°ÜÆ°Àè¤Î¥Õ¥¡¥¤¥ë¤Ë´Ø¤¹¤ë¥×¥í¥ó¥×¥È¤ËÂÐ¤·@samp{no}¤¬Í¿¤¨
¤é¤ì¤Æ¤¤¤ë¤«¤Î¤è¤¦¤ËÆ°ºî¤µ¤»¤ë¤¿¤á¡¤@option{--reply=no}¤ò»ØÄê¤·¤Æ²¼¤µ
¤¤¡¥°ÜÆ°Àè¤Î¥Õ¥¡¥¤¥ë¤¬Â¸ºß¤¹¤ë¤È¤­@command{mv}¤¬¥æ¡¼¥¶¤Ë¥×¥í¥ó¥×¥È¤òÉ½
¼¨¤¹¤ë¤è¤¦¤Ë¤¹¤ë¤¿¤á¡¤@option{--reply=query}¤ò»ØÄê¤·¤Æ²¼¤µ¤¤¡¥

@item -u
@itemx --update
@opindex -u
@opindex --update
@cindex newer files, moving only
@c Do not move a non-directory that has an existing destination with the
@c same or newer modification time.
@c 
Æ±¤¸¤Þ¤¿¤Ï¿·¤·¤¤ÊÔ½¸»þ´Ö¤ò»ý¤Ä´ûÂ¸¤Î°ÜÆ°Àè¤Ë¥Ç¥£¥ì¥¯¥È¥ê°Ê³°¤Î¤â¤Î¤ò°Ü
Æ°¤·¤Þ¤»¤ó¡¥

@item -v
@itemx --verbose
@opindex -v
@opindex --verbose
@c Print the name of each file before moving it.
@c 
°ÜÆ°¤¹¤ëÁ°¤Ë¤½¤ì¤¾¤ì¤Î¥Õ¥¡¥¤¥ëÌ¾¤ò½ÐÎÏ¤·¤Þ¤¹¡¥

@optStripTrailingSlashes

@optBackupSuffix

@optTargetDirectory

@optVersionControl

@end table

@exitstatus


@node rm invocation
@c @section @command{rm}: Remove files or directories
@section @command{rm}: ¥Õ¥¡¥¤¥ë¤ä¥Ç¥£¥ì¥¯¥È¥ê¤Îºï½ü

@pindex rm
@cindex removing files or directories

@c @command{rm} removes each given @var{file}.  By default, it does not remove
@c directories.  Synopsis:
@c 
@command{rm}¤ÏÍ¿¤¨¤é¤ì¤¿@var{file}¤òºï½ü¤·¤Þ¤¹¡¥¥Ç¥Õ¥©¥ë¥È¤Ç¤Ï¥Ç¥£¥ì¥¯
¥È¥ê¤òºï½ü¤·¤Þ¤»¤ó¡¥³µÍ×¤Ç¤¹¡¥

@example
rm [@var{option}]@dots{} [@var{file}]@dots{}
@end example

@cindex prompting, and @command{rm}
@c If a file is unwritable, standard input is a terminal, and the @option{-f}
@c or @option{--force} option is not given, or the @option{-i} or
@c @option{--interactive} option @emph{is} given, @command{rm} prompts the user
@c for whether to remove the file.  If the response does not begin with
@c @samp{y} or @samp{Y}, the file is skipped.
@c 
¥Õ¥¡¥¤¥ë¤Ë½ñ¤­¹þ¤ß¤¬¤Ç¤­¤Ê¤¤¡¤É¸½àÆþÎÏ¤¬Ã¼Ëö¡¤¤½¤·¤Æ¡¤@option{-f}¤Þ¤¿
¤Ï@option{--force}¥ª¥×¥·¥ç¥ó¤¬Í¿¤¨¤é¤ì¤Æ¤¤¤Ê¤¤¾ì¹ç¡¤¤Þ¤¿¤Ï¡¤
@option{-i}¤Þ¤¿¤Ï@option{--interactive}¥ª¥×¥·¥ç¥ó¤¬Í¿¤¨¤é¤ì¤Æ@emph{¤¤
¤ë}¾ì¹ç¡¤@command{rm}¤Ï¥æ¡¼¥¶¤Ë¥Õ¥¡¥¤¥ë¤òºï½ü¤¹¤ë¤«¤É¤¦¤«¤òÂ¥¤¹¥×¥í¥ó
¥×¥È¤òÉ½¼¨¤·¤Þ¤¹¡¥@samp{y} ¤ä@samp{Y}¤Ç»Ï¤Þ¤é¤Ê¤¤ÊÖÅú¤Î¾ì¹ç¡¤¥Õ¥¡¥¤¥ë
¤Ï¾ÊÎ¬¤µ¤ì¤Þ¤¹¡¥

@c @emph{Warning}: If you use @command{rm} to remove a file, it is usually
@c possible to recover the contents of that file.  If you want more assurance
@c that the contents are truly unrecoverable, consider using @command{shred}.
@c 
@emph{·Ù¹ð}¡§¥Õ¥¡¥¤¥ë¤òºï½ü¤¹¤ë¤¿¤á¤Ë@command{rm}¤ò»ÈÍÑ¤¹¤ë¾ì¹ç¡¤ÄÌ¾ï
¤Ï¥Õ¥¡¥¤¥ë¤ÎÆâÍÆ¤òÉü³è¤µ¤»¤ë¤³¤È¤¬²ÄÇ½¤Ç¤¹¡¥¤è¤ê³Î¼Â¤Ë¥Õ¥¡¥¤¥ë¤ÎÆâÍÆ¤ò
ËÜÅö¤ËÉü³è¤µ¤»¤Ê¤¤¤è¤¦¤Ë¤·¤¿¤¤¾ì¹ç¡¤@command{shred}¤Î»ÈÍÑ¤ò¸¡Æ¤¤·¤Æ²¼
¤µ¤¤¡¥

@c The program accepts the following options.  Also see @ref{Common options}.
@c 
¥×¥í¥°¥é¥à¤Ï°Ê²¼¤Î¥ª¥×¥·¥ç¥ó¤â¼õ¤±Æþ¤ì¤Þ¤¹¡¥@ref{Common options}¤â»²¾È
¤·¤Æ¤¯¤À¤µ¤¤¡¥

@table @samp

@item -d
@itemx --directory
@opindex -d
@opindex --directory
@cindex directories, removing with @code{unlink}
@findex unlink
@pindex fsck
@c Attempt to remove directories using the @code{unlink} function rather than
@c the @code{rmdir} function, and
@c don't require a directory to be empty before trying to unlink it.  This works
@c only if you have appropriate privileges and if your operating system supports
@c @code{unlink} for directories.  Because unlinking a directory causes any files
@c in the deleted directory to become unreferenced, it is wise to @command{fsck}
@c the filesystem after doing this.
@c 
@code{rmdir}¤ÎÂå¤ï¤ê¤Ë@code{unlink}¤òÍÑ¤¤¤Æ¥Ç¥£¥ì¥¯¥È¥ê¤Îºï½ü¤ò»î¤ß¡¤
¤½¤·¤Æ¥¢¥ó¥ê¥ó¥¯¤ò»î¤ß¤ëÁ°¤Ë¥Ç¥£¥ì¥¯¥È¥ê¤¬¶õ¤Ç¤¢¤ëÉ¬Í×¤Ï¤¢¤ê¤Þ¤»¤ó¡¥Å¬
ÀÚ¤ÊÆÃ¸¢¤ò»ý¤Á¡¤¥ª¥Ú¥ì¡¼¥Æ¥£¥ó¥°¥·¥¹¥Æ¥à¤¬¥Ç¥£¥ì¥¯¥È¥ê¤ËÂÐ¤¹¤ë
@code{unlink}¤ò¥µ¥Ý¡¼¥È¤·¤Æ¤¤¤ë¾ì¹ç¤Î¤ß¡¤¤³¤ì¤ÏÆ°ºî¤·¤Þ¤¹¡¥¥Ç¥£¥ì¥¯¥È
¥ê¤Î¥¢¥ó¥ê¥ó¥¯¤Ï¥Ç¥£¥ì¥¯¥È¥êÆâ¤Î¤¹¤Ù¤Æ¤Î¥Õ¥¡¥¤¥ë¤ò»²¾È¤Ç¤­¤Ê¤¯¤Ê¤ë¤Î¤Ç¡¤
¤³¤Î¸å¤Ç¥Õ¥¡¥¤¥ë¥·¥¹¥Æ¥à¤Ë@code{fsck}¤·¤¿Êý¤¬¸­ÌÀ¤Ç¤¹¡¥

@item -f
@itemx --force
@opindex -f
@opindex --force
@c Ignore nonexistent files and never prompt the user.
@c Ignore any previous @option{--interactive} (@option{-i}) option.
@c 
Â¸ºß¤·¤Ê¤¤¥Õ¥¡¥¤¥ë¤òÌµ»ë¤·¡¤¥æ¡¼¥¶¤Ë¥×¥í¥ó¥×¥È¤òÉ½¼¨¤·¤Þ¤»¤ó¡¥Á°¤Ë¤¢¤ë
@option{--interactive} (@option{-i})¥ª¥×¥·¥ç¥ó¤òÌµ»ë¤·¤Þ¤¹¡¥

@item -i
@itemx --interactive
@opindex -i
@opindex --interactive
@c Prompt whether to remove each file.  If the response does not begin
@c with @samp{y} or @samp{Y}, the file is skipped.
@c Ignore any previous @option{--force} (@option{-f}) option.
@c 
¤½¤ì¤¾¤ì¤Î¥Õ¥¡¥¤¥ë¤òºï½ü¤¹¤ë¤«¤É¤¦¤«¥×¥í¥ó¥×¥È¤òÉ½¼¨¤·¤Þ¤¹¡¥@samp{y}¤ä
@samp{Y}¤Ç»Ï¤Þ¤é¤Ê¤¤ÊÖÅú¤Î¾ì¹ç¡¤¥Õ¥¡¥¤¥ë¤Ï¥¹¥­¥Ã¥×¤µ¤ì¤Þ¤¹¡¥Á°¤Ë¤¢¤ë
@option{--force} (@option{-f})¥ª¥×¥·¥ç¥ó¤òÌµ»ë¤·¤Þ¤¹¡¥

@itemx --preserve-root
@opindex --preserve-root
@cindex root directory, disallow recursive destruction
@c Fail upon any attempt to remove the filesystem root, @file{/},
@c when used with the @option{--recursive} option.
@c Without @option{--recursive}, this option has no effect.
@c @xref{Treating / specially}.
@c 
@option{--recursive}¥ª¥×¥·¥ç¥ó¤ò»ÈÍÑ¤·¤Æ¤¤¤ë¤È¤­¡¤¥Õ¥¡¥¤¥ë¥·¥¹¥Æ¥à¤Î¥ë¡¼
¥È¡¤@file{/}¤Î°ÜÆ°¤¹¤ë»î¤ß¤ò¼ºÇÔ¤µ¤»¤Þ¤¹¡¥@option{--recursive}¤òÍÑ¤¤¤Æ
¤¤¤Ê¤¤¾ì¹ç¡¤¤³¤Î¥ª¥×¥·¥ç¥ó¤Ï¸ú²Ì¤¬¤¢¤ê¤Þ¤»¤ó¡¥@xref{Treating / specially}.

@itemx --no-preserve-root
@opindex --no-preserve-root
@cindex root directory, allow recursive destruction
@c Cancel the effect of any preceding @option{--preserve-root} option.
@c @xref{Treating / specially}.
@c 
¤½¤ì°ÊÁ°¤Î@option{--preserve-root}¥ª¥×¥·¥ç¥ó¤Î¸ú²Ì¤ò¼è¤ê¾Ã¤·¤Þ¤¹¡¥
@xref{Treating / specially}.

@item -r
@itemx -R
@itemx --recursive
@opindex -r
@opindex -R
@opindex --recursive
@cindex directories, removing (recursively)
@c Remove the contents of directories recursively.
@c 
¥Ç¥£¥ì¥¯¥È¥ê¤ÎÆâÍÆ¤òºÆµ¢Åª¤Ëºï½ü¤·¤Þ¤¹¡¥

@item -v
@itemx --verbose
@opindex -v
@opindex --verbose
@c Print the name of each file before removing it.
@c 
ºï½ü¤¹¤ëÁ°¤Ë¤½¤ì¤¾¤ì¤Î¥Õ¥¡¥¤¥ëÌ¾¤ò½ÐÎÏ¤·¤Þ¤¹¡¥

@end table

@cindex files beginning with @samp{-}, removing
@cindex @samp{-}, removing files beginning with
@c One common question is how to remove files whose names begin with a
@c @samp{-}.  @sc{gnu} @command{rm}, like every program that uses the @code{getopt}
@c function to parse its arguments, lets you use the @samp{--} option to
@c indicate that all following arguments are non-options.  To remove a file
@c called @file{-f} in the current directory, you could type either:
@c 
¤è¤¯¤¢¤ëÌäÂê¤Î°ì¤Ä¤Ï¡¤@samp{-}¤Ç»Ï¤Þ¤ëÌ¾Á°¤ò»ý¤Ä¥Õ¥¡¥¤¥ë¤Îºï½ü¤ÎÊýË¡¤Ç
¤¹¡¥@sc{gnu} @command{rm}¤Ç¤Ï¡¤°ú¿ô¤ò²òÀÏ¤¹¤ë@code{getopt}´Ø¿ô¤ò»ÈÍÑ¤¹
¤ë¤¹¤Ù¤Æ¤Î¥×¥í¥°¥é¥à¤Ë»÷¤Æ¤¤¤Æ¡¤°Ê²¼¤Î¤¹¤Ù¤Æ¤Î°ú¿ô¤¬¥ª¥×¥·¥ç¥ó¤Ç¤Ê¤¤¤³
¤È¤ò¼¨¤¹@samp{--}¥ª¥×¥·¥ç¥ó¤ò»ÈÍÑ¤·¤Þ¤¹¡¥¸½ºß¤Î¥Ç¥£¥ì¥¯¥È¥ê¤Î@file{-f} 
¤È¤¤¤¦¥Õ¥¡¥¤¥ëÌ¾¤òºï½ü¤¹¤ë¤¿¤á¡¤°Ê²¼¤Î¤É¤Á¤é¤«¤ÎÆþÎÏ¤Ç²ÄÇ½¤Ë¤Ê¤ê¤Þ¤¹¡¥

@example
rm -- -f
@end example

@noindent
@c or:
@c 
¤Þ¤¿¤Ï°Ê²¼¤Î¤è¤¦¤Ë¤·¤Þ¤¹¡¥

@example
rm ./-f
@end example

@opindex - @r{and Unix @command{rm}}
@c The Unix @command{rm} program's use of a single @samp{-} for this purpose
@c predates the development of the getopt standard syntax.
@c 
¤³¤ÎÌÜÅª¤ËÂÐ¤¹¤ë¡¤Unix @command{rm}¥×¥í¥°¥é¥à¤ÎÃ±°ì¤Î@samp{-}¤Î»ÈÍÑ¤Ï¡¤
getopt¤ÎÉ¸½à¹½Ê¸¤Î³«È¯°ÊÁ°¤Î¤â¤Î¤Ç¤¹¡¥

@exitstatus


@node shred invocation
@c @section @command{shred}: Remove files more securely
@section @command{shred}: ¤è¤ê°ÂÁ´¤Ê¥Õ¥¡¥¤¥ë¤Îºï½ü

@pindex shred
@cindex data, erasing
@cindex erasing data

@c @command{shred} overwrites devices or files, to help prevent even
@c very expensive hardware from recovering the data.
@c 
@command{shred}¤Ï¡¤Èó¾ï¤Ë¹â²Á¤Ê¥Ï¡¼¥É¥¦¥§¥¢¤òÍÑ¤¤¤Æ¤â¥Ç¡¼¥¿¤ÎÉü³è¤òË¸
¤²¤ë¤è¤¦¤Ë¡¤¥Ç¥Ð¥¤¥¹¤ä¥Õ¥¡¥¤¥ë¤ò¾å½ñ¤­¤·¤Þ¤¹¡¥

@c Ordinarily when you remove a file (@pxref{rm invocation}), the data is
@c not actually destroyed.  Only the index listing where the file is
@c stored is destroyed, and the storage is made available for reuse.
@c There are undelete utilities that will attempt to reconstruct the index
@c and can bring the file back if the parts were not reused.
@c 
ÄÌ¾ï¡¤¥Õ¥¡¥¤¥ë¤òºï½ü¤¹¤ë¤È¤­(@pxref{rm invocation})¡¤¥Ç¡¼¥¿¤Ï¼ÂºÝ¤Ë¤Ï
ÇË²õ¤µ¤ì¤Þ¤»¤ó¡¥¥Õ¥¡¥¤¥ë¤¬ÊÝÂ¸¤µ¤ì¤Æ¤¤¤ë¾ì½ê¤ò¥ê¥¹¥È¥¢¥Ã¥×¤·¤Æ¤¤¤ëº÷°ú
¤Î¤ßÇË²õ¤·¡¤µ­²±ÁõÃÖ¤ÏºÆÍøÍÑ²ÄÇ½¤Ë¤Ê¤ê¤Þ¤¹¡¥º÷°ú¤ÎºÆ¹½ÃÛ¤ò»î¤ß¡¤¤½¤ÎÉô
Ê¬¤¬ºÆÍøÍÑ¤µ¤ì¤Æ¤¤¤Ê¤¤¾ì¹ç¡¤¥Õ¥¡¥¤¥ë¤ò¸µ¤ËÌá¤¹¤³¤È¤¬²ÄÇ½¤Ê¥¢¥ó¥Ç¥ê¡¼¥È
¥æ¡¼¥Æ¥£¥ê¥Æ¥£¤¬¤¢¤ê¤Þ¤¹¡¥

@c On a busy system with a nearly-full drive, space can get reused in a few
@c seconds.  But there is no way to know for sure.  If you have sensitive
@c data, you may want to be sure that recovery is not possible by actually
@c overwriting the file with non-sensitive data.
@c 
¤Û¤È¤ó¤ÉËþ¥¿¥ó¤Î¥É¥é¥¤¥Ö¤ò»ÈÍÑ¤·¤Æ¤¤¤ëË»¤·¤¤¥·¥¹¥Æ¥à¤Ç¤Ï¡¤¥¹¥Ú¡¼¥¹¤Ï¿ô
ÉÃ¤ÇºÆÍøÍÑ²ÄÇ½¤Ë¤Ê¤ê¤Þ¤¹¡¥¤·¤«¤·¡¤¤½¤ì¤¬³Î¼Â¤Ç¤¢¤ë¤³¤È¤òÃÎ¤ëÊýË¡¤Ï¤¢¤ê
¤Þ¤»¤ó¡¥µ¡Ì©¥Ç¡¼¥¿¤¬¤¢¤ê¡¤µ¡Ì©¤Ç¤Ê¤¤¥Ç¡¼¥¿¤Ç¥Õ¥¡¥¤¥ë¤ò¼ÂºÝ¤Ë¾å½ñ¤­¤¹¤ë
¤³¤È¤Ç¥ê¥«¥Ð¥ê¤¬ÉÔ²ÄÇ½¤À¤È¤¤¤¦¤³¤È¤ò³Î¤«¤á¤¿¤¤¤«¤â¤·¤ì¤Þ¤»¤ó¡¥

@c However, even after doing that, it is possible to take the disk back
@c to a laboratory and use a lot of sensitive (and expensive) equipment
@c to look for the faint ``echoes'' of the original data underneath the
@c overwritten data.  If the data has only been overwritten once, it's not
@c even that hard.
@c 
¤·¤«¤·¡¤¤½¤¦¤·¤¿¸å¤Ç¤â¡¤¸¦µæ½ê¤Ø¥Ç¥£¥¹¥¯¤ò»ý¤Ã¤Æ¤¤¤­¡¤¾å½ñ¤­¤µ¤ì¤¿¥Ç¡¼
¥¿¤Î²¼¤Î¸µ¥Ç¡¼¥¿¤Î¤«¤¹¤«¤Ê``»Ä¶Á''¤òÃµ¤¹¤¿¤á¤Ë´¶ÅÙ¤Î¹â¤¤(¤½¤·¤Æ¹â²Á¤Ê)
Â¿¤¯¤Îµ¡´ï¤ò»ÈÍÑ¤¹¤ë¤³¤È¤¬²ÄÇ½¤Ç¤¹¡¥¥Ç¡¼¥¿¤¬°ìÅÙ¾å½ñ¤­¤µ¤ì¤¿¤À¤±¤Ç¤Ï¡¤
¤½¤ì¤Ï¤µ¤Û¤ÉÆñ¤·¤¯¤¢¤ê¤Þ¤»¤ó¡¥

@c The best way to remove something irretrievably is to destroy the media
@c it's on with acid, melt it down, or the like.  For cheap removable media
@c like floppy disks, this is the preferred method.  However, hard drives
@c are expensive and hard to melt, so the @command{shred} utility tries
@c to achieve a similar effect non-destructively.
@c 
¼è¤êÊÖ¤·¤¬¤Ç¤­¤Ê¤¤¤è¤¦¤Ë²¿¤«¤òºï½ü¤¹¤ëºÇÁ°¤ÎÊýË¡¤Ï¡¤¥á¥Ç¥£¥¢¤Ë»À¤ò¤«¤±
¤ÆÇË²õ¤¹¤ë¡¤ÍÏ¤«¤·¤Æ¤·¤Þ¤¦¡¤¤Þ¤¿¤Ï¤½¤ì¤Ë»÷¤¿¤³¤È¤ò¤¹¤ë¤³¤È¤Ç¤¹¡¥¥Õ¥í¥Ã
¥Ô¡¼¥Ç¥£¥¹¥¯¤Î¤è¤¦¤Ê¡¤°Â¤¤ÃåÃ¦²ÄÇ½¤Ê¥á¥Ç¥£¥¢¤ËÂÐ¤·¤Æ¤Ï¡¤¤³¤ì¤Ï¹¥¤Þ¤·¤¤
ÊýË¡¤Ç¤¹¡¥¤·¤«¤·¡¤¥Ï¡¼¥É¥É¥é¥¤¥Ö¤Ï¹â²Á¤Ç¡¤ÍÏ¤«¤¹¤Î¤¬Æñ¤·¤¤¤¿¤á¡¤
@command{shred}¥æ¡¼¥Æ¥£¥ê¥Æ¥£¤Ç¤ÏÇË²õ¤¹¤ë¤³¤È¤Ê¤¯Îà»÷¤Î¸ú²Ì¤òÃ£À®¤·¤è
¤¦¤È¤·¤Þ¤¹¡¥

@c This uses many overwrite passes, with the data patterns chosen to
@c maximize the damage they do to the old data.  While this will work on
@c floppies, the patterns are designed for best effect on hard drives.
@c For more details, see the source code and Peter Gutmann's paper
@c @cite{Secure Deletion of Data from Magnetic and Solid-State Memory},
@c from the proceedings of the Sixth USENIX Security Symposium (San Jose,
@c California, 22--25 July, 1996).  The paper is also available online
@c @url{http://www.cs.auckland.ac.nz/~pgut001/pubs/secure_del.html}.
@c 
¤³¤ì¤Ï¡¤¸Å¤¤¥Ç¡¼¥¿¤ËÂÐ¤¹¤ë¥À¥á¡¼¥¸¤òºÇÂç¤Ë¤¹¤ë¤è¤¦¤ËÁª¤Ð¤ì¤¿¥Ç¡¼¥¿¥Ñ¥¿¡¼
¥ó¤Ç¡¤¾å½ñ¤­Æ°ºî¤ò²¿²ó¤â»ÈÍÑ¤·¤Þ¤¹¡¥¤³¤ì¤¬¥Õ¥í¥Ã¥Ô¡¼¥Ç¥£¥¹¥¯¤ÇÆ°ºî¤·¤Æ
¤¤¤Æ¤â¡¤¥Ñ¥¿¡¼¥ó¤Ï¥Ï¡¼¥É¥É¥é¥¤¥Ö¤ÇºÇÅ¬¤Ê¸ú²Ì¤¬¤¢¤ë¤è¤¦¤ËÀß·×¤µ¤ì¤Æ¤¤¤ë
¤â¤Î¤Ë¤Ê¤ê¤Þ¤¹¡¥¾ÜºÙ¤Ï¡¤¥½¡¼¥¹¥³¡¼¥É¤È¡¤Sixth USENIX Security
Symposium (San Jose, California, 22--25 July, 1996)¤ÎÍ½¹Æ¤«¤é¡¤Peter
Gutmann¤ÎÏÀÊ¸@cite{Secure Deletion of Data from Magnetic and
Solid-State Memory}¤ò»²¾È¤·¤Æ¤¯¤À¤µ¤¤¡¥ÏÀÊ¸¤Ï
@url{http://www.cs.auckland.ac.nz/~pgut001/pubs/secure_del.html}¤Ç¡¤¥ª
¥ó¥é¥¤¥ó¤Ç¤âÍøÍÑ²ÄÇ½¤Ç¤¹¡¥

@c @strong{Please note} that @command{shred} relies on a very important assumption:
@c that the filesystem overwrites data in place.  This is the traditional
@c way to do things, but many modern filesystem designs do not satisfy this
@c assumption.  Exceptions include:
@c 
@command{shred}¤ÏÈó¾ï¤Ë½ÅÍ×¤Ê²¾Äê¤Ë°ÍÂ¸¤·¤Æ¤¤¤ë¤³¤È¤Ë@strong{Ãí°Õ¤·¤Æ
¤¯¤À¤µ¤¤}¡¥¤½¤ì¤Ï¡¤¥Õ¥¡¥¤¥ë¥·¥¹¥Æ¥à¤¬¤½¤Î¾ì½ê¤Î¥Ç¡¼¥¿¤ò¾å½ñ¤­¤¹¤ë¤È¤¤
¤¦¤³¤È¤Ç¤¹¡¥¤³¤ì¤ÏÅÁÅýÅª¤ÊÊýË¡¤Ç¤¹¤¬¡¤¸½Âå¤ÎÂ¿¤¯¤Î¥Õ¥¡¥¤¥ë¥·¥¹¥Æ¥à¤Ï¤³
¤Î²¾Äê¤òËþÂ­¤¹¤ë¤è¤¦¤ËÀß·×¤µ¤ì¤Æ¤¤¤Þ¤»¤ó¡¥Îã³°¤Ï°Ê²¼¤ò´Þ¤ß¤Þ¤¹¡¥

@itemize @bullet

@item
@c Log-structured or journaled filesystems, such as those supplied with
@c AIX and Solaris, and JFS, ReiserFS, XFS, Ext3, etc.
@c 
AIX¤ÈSolaris¤¬Äó¶¡¤¹¤ë¤è¤¦¤Ê¡¤Log-structure¤Þ¤¿¤Ïjournal¥Õ¥¡¥¤¥ë¥·¥¹¥Æ
¥à¡¥

@item
@c Filesystems that write redundant data and carry on even if some writes
@c fail, such as RAID-based filesystems.
@c 
RAID¥Ù¡¼¥¹¤Î¥Õ¥¡¥¤¥ë¥·¥¹¥Æ¥à¤Î¤è¤¦¤Ë¡¤½ÅÊ£¤·¤¿¥Ç¡¼¥¿¤ò½ñ¤­¹þ¤ß¡¤½ñ¤­¹þ
¤ß¤Ç¼ºÇÔ¤·¤¿¾ì¹ç¤Ç¤âÂ³¤±¤ë¥Õ¥¡¥¤¥ë¥·¥¹¥Æ¥à¡¥

@item
@c Filesystems that make snapshots, such as Network Appliance's NFS server.
@c 
Network Appliance¤ÎNFS¥µ¡¼¥Ð¤Î¤è¤¦¤Ê¡¤¥¹¥Ê¥Ã¥×¥·¥ç¥Ã¥È¤òºîÀ®¤¹¤ë¥Õ¥¡¥¤
¥ë¥·¥¹¥Æ¥à¡¥

@item
@c Filesystems that cache in temporary locations, such as NFS version 3
@c clients.
@c 
NFS¤Î¥Ð¡¼¥¸¥ç¥ó3¤Î¥¯¥é¥¤¥¢¥ó¥È¤Î¤è¤¦¤Ê¡¤°ì»þÅª¤Ê°ÌÃÖ¤Ë¥­¥ã¥Ã¥·¥å¤òºîÀ®
¤¹¤ë¥Õ¥¡¥¤¥ë¥·¥¹¥Æ¥à¡¥

@item
@c Compressed filesystems.
@c 
°µ½Ì¤µ¤ì¤Æ¤¤¤ë¥Õ¥¡¥¤¥ë¥·¥¹¥Æ¥à¡¥
@end itemize

@c If you are not sure how your filesystem operates, then you should assume
@c that it does not overwrite data in place, which means that shred cannot
@c reliably operate on regular files in your filesystem.
@c 
¥Õ¥¡¥¤¥ë¥·¥¹¥Æ¥à¤¬¤É¤Î¤è¤¦¤ËÆ°ºî¤·¤Æ¤¤¤ë¤«¤è¤¯Ê¬¤«¤é¤Ê¤¤¾ì¹ç¡¤¤½¤Î¾ì½ê
¤Ë¾å½ñ¤­¤µ¤ì¤Ê¤¤¤È²¾Äê¤¹¤Ù¤­¤Ç¡¤¤½¤ì¤Ï¡¤¤½¤Î¥Õ¥¡¥¤¥ë¥·¥¹¥Æ¥à¤ÎÄÌ¾ï¤Î¥Õ¥¡
¥¤¥ë¤Ç¡¤@command{shred}¤¬¿®Íê¤Ç¤­¤ëÆ°ºî¤ò¹Ô¤¦¤³¤È¤¬¤Ç¤­¤Ê¤¤¤³¤È¤ò°ÕÌ£
¤·¤Þ¤¹¡¥

@c Generally speaking, it is more reliable to shred a device than a file,
@c since this bypasses the problem of filesystem design mentioned above.
@c However, even shredding devices is not always completely reliable.  For
@c example, most disks map out bad sectors invisibly to the application; if
@c the bad sectors contain sensitive data, @command{shred} won't be able to
@c destroy it.
@c 
°ìÈÌÅª¤Ë¸À¤Ã¤Æ¡¤¾åµ­¤Î¼êË¡¤ÇÀß·×¤µ¤ì¤¿¥Õ¥¡¥¤¥ë¥·¥¹¥Æ¥à¤ÎÌäÂê¤ò¥Ð¥¤¥Ñ¥¹
¤¹¤ë¤¿¤á¡¤¥Õ¥¡¥¤¥ë¤Ç¤Ï¤Ê¤¯¥Ç¥Ð¥¤¥¹¤Ë@command{shred}¤¹¤ë¤È¤è¤ê¿®Íê¤Ç¤­
¤Þ¤¹¡¥¤·¤«¤·¡¤¥Ç¥Ð¥¤¥¹¤ò@command{shred}¤·¤Æ¤µ¤¨¡¤¾ï¤Ë´°Á´¤Ë¿®Íê¤¹¤ë¤³
¤È¤Ï¤Ç¤­¤Þ¤»¤ó¡¥Îã¤¨¤Ð¡¤¤Û¤È¤ó¤É¤Î¥Ç¥£¥¹¥¯¤Ï¡¤ÉÔÎÉ¥»¥¯¥¿¤¬¥¢¥×¥ê¥±¡¼¥·¥ç
¥ó¤Ë¸«¤¨¤Ê¤¤¤è¤¦¤Ë¤ò¥Þ¥Ã¥Ô¥ó¥°¤·¤Þ¤¹¡¥ÉÔÎÉ¥»¥¯¥¿¤¬µ¡Ì©¥Ç¡¼¥¿¤ò´Þ¤à¾ì¹ç¡¤
@command{shred}¤Ç¤Ï¤½¤ì¤òÇË²õ¤¹¤ë¤³¤È¤ÏÉÔ²ÄÇ½¤Ç¤¹¡¥

@c @command{shred} makes no attempt to detect or report this problem, just as
@c it makes no attempt to do anything about backups.  However, since it is
@c more reliable to shred devices than files, @command{shred} by default does
@c not truncate or remove the output file.  This default is more suitable
@c for devices, which typically cannot be truncated and should not be
@c removed.
@c 
@command{shred}¤Ï¡¤¥Ð¥Ã¥¯¥¢¥Ã¥×¤Ë¤Ä¤¤¤Æ²¿¤â¤·¤Ê¤¤¤è¤¦¤Ë¡¤¤³¤ì¤é¤ÎÌäÂê
¤Î¸¡½Ð¤âÊó¹ð¤â»î¤ß¤Þ¤»¤ó¡¥¤·¤«¤·¡¤¥Õ¥¡¥¤¥ë¤Ç¤Ï¤Ê¤¯¥Ç¥Ð¥¤¥¹¤Ë
@command{shred}¤¹¤ëÊý¤¬¤è¤ê¿®Íê¤Ç¤­¤ë¤Î¤Ç¡¤@command{shred}¤Ï¥Ç¥Õ¥©¥ë¥È
¤Ç½ÐÎÏ¥Õ¥¡¥¤¥ë¤òÀÚ¤êµÍ¤á¤¿¤êºï½ü¤·¤¿¤ê¤·¤Þ¤»¤ó¡¥¤³¤Î¥Ç¥Õ¥©¥ë¥È¤Ï¥Ç¥Ð¥¤
¥¹¤ËÂÐ¤·¤è¤êÅ¬¤·¤Æ¤¤¤Æ¡¤¤½¤ì¤ÏÄÌ¾ïÀÚ¤êµÍ¤á¤â¤Ç¤­¤Þ¤»¤ó¤·¡¤ºï½ü¤â¤¹¤Ù¤­
¤Ç¤Ï¤¢¤ê¤Þ¤»¤ó¡¥

@c Finally, consider the risk of backups and mirrors.
@c File system backups and remote mirrors may contain copies of the
@c file that cannot be removed, and that will allow a shredded file
@c to be recovered later.  So if you keep any data you may later want
@c to destroy using @command{shred}, be sure that it is not backed up or mirrored.
@c 
ºÇ¸å¤Ë¡¤¥Ð¥Ã¥¯¥¢¥Ã¥×¤È¥ß¥é¡¼¤Î´í¸±À­¤ò¸¡Æ¤¤·¤Þ¤¹¡¥¥Õ¥¡¥¤¥ë¥·¥¹¥Æ¥à¤Î¥Ð¥Ã
¥¯¥¢¥Ã¥×¤È¥ê¥â¡¼¥È¤Î¥ß¥é¡¼¤Ë¤Ï¡¤ºï½üÉÔ²ÄÇ½¤Ê¥Õ¥¡¥¤¥ë¤Î¥³¥Ô¡¼¤¬´Þ¤Þ¤ì¡¤
¤½¤ì¤Ç@command{shred}¤·¤¿¥Õ¥¡¥¤¥ë¤ò¸å¤ËÉü³è¤µ¤»¤ë¤³¤È¤¬²ÄÇ½¤Ç¤¹¡¥¤½¤Î
¤¿¤á¡¤¤½¤Î¸å@command{shred}¤ò»ÈÍÑ¤·¤ÆÇË²õ¤·¤¿¤¤¥Ç¡¼¥¿¤òÊÝ»ý¤·¤Æ¤¤¤ë¾ì
¹ç¡¤¥Ð¥Ã¥¯¥¢¥Ã¥×¤ä¥ß¥é¡¼¤¬Ìµ¤¤¤³¤È¤ò³Î¤«¤á¤Æ²¼¤µ¤¤¡¥

@example
shred [@var{option}]@dots{} @var{file}[@dots{}]
@end example

@c The program accepts the following options.  Also see @ref{Common options}.
@c 
¥×¥í¥°¥é¥à¤Ï°Ê²¼¤Î¥ª¥×¥·¥ç¥ó¤â¼õ¤±Æþ¤ì¤Þ¤¹¡¥@ref{Common options}¤â»²¾È
¤·¤Æ¤¯¤À¤µ¤¤¡¥

@table @samp

@item -f
@itemx --force
@opindex -f
@opindex --force
@cindex force deletion
@c Override file permissions if necessary to allow overwriting.
@c 
¾å½ñ¤­²ÄÇ½¤¬É¬Í×¤Ê¾ì¹ç¡¤¥Õ¥¡¥¤¥ë¤Îµö²Ä¤ËÍ¥Àè¤µ¤»¤Þ¤¹¡¥

@item -@var{NUMBER}
@itemx -n @var{NUMBER}
@itemx --iterations=@var{NUMBER}
@opindex -n @var{NUMBER}
@opindex --iterations=@var{NUMBER}
@cindex iterations, selecting the number of
@c By default, @command{shred} uses 25 passes of overwrite.  This is enough
@c for all of the useful overwrite patterns to be used at least once.
@c You can reduce this to save time, or increase it if you have a lot of
@c time to waste.
@c 
¥Ç¥Õ¥©¥ë¥È¤Ç¡¤@command{shred}¤Ï25²ó¤Î¾å½ñ¤­¤ò»ÈÍÑ¤·¤Þ¤¹¡¥¤³¤ì¤Ç¡¤¾¯¤Ê
¤¯¤È¤â°ì²ó¤Î»ÈÍÑ¤Ç»ÈÍÑ¤µ¤ì¤ëÍ­ÍÑ¤Ê¾å½ñ¤­¥Ñ¥¿¡¼¥ó¤ÎÁ´¤Æ¤ËÂÐ¤·¤Æ½½Ê¬¤Ë¤Ê
¤ê¤Þ¤¹¡¥»þ´Ö¤ÎÀáÌó¤Î¤¿¤á¸º¤é¤·¤¿¤ê¡¤»þ´Ö¤ÎÌµÂÌ¸¯¤¤¤ò¤¹¤ë¾ì¹ç¤ËÁý¤ä¤¹¤³
¤È¤¬²ÄÇ½¤Ç¤¹¡¥

@item -s @var{BYTES}
@itemx --size=@var{BYTES}
@opindex -s @var{BYTES}
@opindex --size=@var{BYTES}
@cindex size of file to shred
@c Shred the first @var{BYTES} bytes of the file. The default is to shred
@c the whole file.  @var{BYTES} can be followed by a size specification like
@c @samp{K}, @samp{M}, or @samp{G} to specify a multiple. @xref{Block size}.
@c 
¥Õ¥¡¥¤¥ë¤ÎºÇ½é¤Î@var{BYTES}¥Ð¥¤¥È¤ò@command{shred}¤·¤Þ¤¹¡¥¥Ç¥Õ¥©¥ë¥È¤Ï
¥Õ¥¡¥¤¥ëÁ´ÂÎ¤ò@command{shred}¤·¤Þ¤¹¡¥@var{BYTES}¤Ï¾è¿ô¤ò»ØÄê¤¹¤ë¤¿¤á¤Ë¡¤
@samp{k}¡¤@samp{M}¡¤¤Þ¤¿¤Ï@samp{G}¤Î¤è¤¦¤Ê¥µ¥¤¥º»ØÄê¤òÂ³¤±¤ë¤³¤È¤¬¤Ç¤­
¤Þ¤¹¡¥@xref{Block size}.

@item -u
@itemx --remove
@opindex -u
@opindex --remove
@cindex removing files after shredding
@c After shredding a file, truncate it (if possible) and then remove it.
@c If a file has multiple links, only the named links will be removed.
@c 
¥Õ¥¡¥¤¥ë¤ò@command{shred}¤·¤¿¸å¡¤(²ÄÇ½¤Ê¾ì¹ç¤Ï)¤½¤ì¤òÀÚ¤êµÍ¤á¡¤¤½¤·¤Æ
ºï½ü¤·¤Þ¤¹¡¥¥Õ¥¡¥¤¥ë¤¬Ê£¿ô¤Î¥ê¥ó¥¯¤ò»ý¤Ä¾ì¹ç¡¤»ØÌ¾¤µ¤ì¤¿¥ê¥ó¥¯¤Î¤ßºï½ü
¤µ¤ì¤Þ¤¹¡¥

@item -v
@itemx --verbose
@opindex -v
@opindex --verbose
@c Display status updates as sterilization proceeds.
@c 
¥Ð¥¤¶Ý¤ÎÁý¿£¤Î¤è¤¦¤Ë¥¹¥Æ¡¼¥¿¥¹¤ÎÉ½¼¨¤ò¹¹¿·¤·¤Þ¤¹¡¥

@item -x
@itemx --exact
@opindex -x
@opindex --exact
@c By default, @command{shred} rounds the size of a regular file up to the next
@c multiple of the filesystem block size to fully erase the last block of the file.
@c Use @option{--exact} to suppress that behavior.
@c Thus, by default if you shred a 10-byte regular file on a system with 512-byte
@c blocks, the resulting file will be 512 bytes long.  With this option,
@c shred does not increase the apparent size of the file.
@c 
¥Ç¥Õ¥©¥ë¥È¤Ç¡¤@command{shred}¤Ï¡¤¥Õ¥¡¥¤¥ë¤ÎºÇ¸å¤Î¥Ö¥í¥Ã¥¯¤Þ¤Ç´°Á´¤Ë¾Ã
µî¤¹¤ë¤¿¤á¡¤ÄÌ¾ï¤Î¥Õ¥¡¥¤¥ë¤Î¥µ¥¤¥º¤ò¥Õ¥¡¥¤¥ë¥·¥¹¥Æ¥à¤Î¥Ö¥í¥Ã¥¯¥µ¥¤¥º¤Î
¼¡¤Î¾è¿ô¤Þ¤ÇÀÚ¤ê¾å¤²¤Þ¤¹¡¥¤½¤ÎÆ°ºî¤òÍÞÀ©¤¹¤ë¤¿¤á¡¤@option{--exact}¤ò»È
ÍÑ¤·¤Æ²¼¤µ¤¤¡¥¤³¤Î¤¿¤á¡¤¥Ç¥Õ¥©¥ë¥È¤Ç¤Ï¡¤512¥Ð¥¤¥È¤Î¥Ö¥í¥Ã¥¯¤ò»ý¤Ä¥Õ¥¡
¥¤¥ë¥·¥¹¥Æ¥à¾å¤Î¡¤10¥Ð¥¤¥È¤ÎÄÌ¾ï¤Î¥Õ¥¡¥¤¥ë¤ò@command{shred}¤¹¤ë¾ì¹ç¡¤
·ë²Ì¤È¤·¤Æ¥Õ¥¡¥¤¥ë¤Ï512¥Ð¥¤¥È¤Ë¤Ê¤ê¤Þ¤¹¡¥¤³¤Î¥ª¥×¥·¥ç¥ó¤òÍÑ¤¤¤ë¤È¡¤
@command{shred}¤Ï¥Õ¥¡¥¤¥ë¤Î¥µ¥¤¥º¤òÁý²Ã¤µ¤»¤Þ¤»¤ó¡¥

@item -z
@itemx --zero
@opindex -z
@opindex --zero
@c Normally, the last pass that @command{shred} writes is made up of
@c random data.  If this would be conspicuous on your hard drive (for
@c example, because it looks like encrypted data), or you just think
@c it's tidier, the @option{--zero} option adds an additional overwrite pass with
@c all zero bits.  This is in addition to the number of passes specified
@c by the @option{--iterations} option.
@c 
ÄÌ¾ï¡¤@command{shred}¤Î½ñ¤­¹þ¤ß¤ÎºÇ½ªÆ°ºî¤Ï¡¤¥é¥ó¥À¥à¥Ç¡¼¥¿¤ÎºîÀ®¤Ç¤¹¡¥
¤³¤ì¤¬(Îã¤¨¤Ð¡¤°Å¹æ²½¤µ¤ì¤¿¥Ç¡¼¥¿¤Î¤è¤¦¤Ë¸«¤¨¤ë¤¿¤á)¥Ï¡¼¥É¥Ç¥£¥¹¥¯¾å¤Ç
ÌÜÎ©¤Ä¾ì¹ç¤ä¡¤¤è¤êÀ°Á³¤È¤µ¤»¤¿¤¤¤È¹Í¤¨¤ë¾ì¹ç¡¤@option{--zero}¥ª¥×¥·¥ç
¥ó¤ÇÁ´¤Æ¤ò¥¼¥í¥Ó¥Ã¥È¤òÍÑ¤¤¤Æ¾å½ñ¤­¤¹¤ëÆ°ºî¤òÄÉ²Ã¤·¤Þ¤¹¡¥¤³¤ì¤Ï¡¤
@option{--iterations}¥ª¥×¥·¥ç¥ó¤Ç»ØÄê¤·¤¿Æ°ºî¿ô¤ËÄÉ²Ã¤µ¤ì¤Þ¤¹¡¥

@item -
@opindex -
@c Shred standard output.
@c 
É¸½à½ÐÎÏ¤ò@command{shred}¤·¤Þ¤¹¡¥

@c This argument is considered an option.  If the common @samp{--} option has
@c been used to indicate the end of options on the command line, then @samp{-}
@c will be interpreted as an ordinary file name.
@c 
¤³¤Î°ú¿ô¤Ï¥ª¥×¥·¥ç¥ó¤È¸«¤Ê¤µ¤ì¤Þ¤¹¡¥°ìÈÌÅª¤Ê@samp{--}¥ª¥×¥·¥ç¥ó¤Ï¥³¥Þ
¥ó¥É¥é¥¤¥ó¤Î¥ª¥×¥·¥ç¥ó¤Î½ª¤ê¤ò¼¨¤¹¤¿¤á¤Ë»ÈÍÑ¤µ¤ì¤Þ¤¹¤¬¡¤@samp{-}¤ÏÉáÄÌ
¤Î¥Õ¥¡¥¤¥ë¤È¤·¤Æ²ò¼á¤µ¤ì¤Þ¤¹¡¥

@c The intended use of this is to shred a removed temporary file.
@c For example
@c 
¤³¤Î»ÈÍÑÌÜÅª¤Ï¡¤ºï½ü¤µ¤ì¤¿°ì»þ¥Õ¥¡¥¤¥ë¤ò@command{shred}¤¹¤ë¤³¤È¤Ç¤¹¡¥
Îã¤Ç¤¹¡¥

@example
i=`tempfile -m 0600`
exec 3<>"$i"
rm -- "$i"
echo "Hello, world" >&3
shred - >&3
exec 3>-
@end example

@c Note that the shell command @samp{shred - >file} does not shred the
@c contents of @var{file}, since it truncates @var{file} before invoking
@c @command{shred}.  Use the command @samp{shred file} or (if using a
@c Bourne-compatible shell) the command @samp{shred - 1<>file} instead.
@c 
¥·¥§¥ë¥³¥Þ¥ó¥É@samp{shred - >file}¤Ï¡¤@command{shred}¤Î¸Æ¤Ó½Ð¤·¤ÎÁ°¤Ë¡¤
¤½¤ì¤¬@var{file}¤òÀÚ¤êµÍ¤á¤ë¤¿¤á¡¤@var{file}¤ÎÆâÍÆ¤ò@samp{shred}¤·¤Ê¤¤
¤³¤È¤ËÃí°Õ¤·¤Æ¤¯¤À¤µ¤¤¡¥¥³¥Þ¥ó¥É@samp{shred file}¡¤¤Þ¤¿¤Ï(Bourne¸ß´¹¥·¥§
¥ë¤ò»ÈÍÑ¤·¤Æ¤¤¤ë¾ì¹ç¤Ï)¥³¥Þ¥ó¥É@samp{shred - 1<>file}¤òÂå¤ï¤ê¤Ë»ÈÍÑ¤·
¤Æ¤¯¤À¤µ¤¤¡¥

@end table

@c You might use the following command to erase all trace of the
@c filesystem you'd created on the floppy disk in your first drive.
@c That command takes about 20 minutes to erase a ``1.44MB'' (actually
@c 1440 KiB) floppy.
@c 
ºÇ½é¤Î¥É¥é¥¤¥Ö¤Î¥Õ¥í¥Ã¥Ô¡¼¥Ç¥£¥¹¥¯¤ËºîÀ®¤µ¤ì¤¿¥Õ¥¡¥¤¥ë¥·¥¹¥Æ¥à¤Î¡¤Á´¤Æ
¤Îµ­Ï¿¤ò¾Ãµî¤¹¤ë¤¿¤á¤Ë¡¤°Ê²¼¤Î¥³¥Þ¥ó¥É¤ò»ÈÍÑ¤¹¤ë¤«¤â¤·¤ì¤Þ¤»¤ó¡¥¤½¤Î¥³
¥Þ¥ó¥É¤Ï¡¤1.44MB¥Õ¥í¥Ã¥Ô¡¼¤ò¾Ãµî¤¹¤ë¤¿¤á¤ËÌó20Ê¬¤«¤«¤ê¤Þ¤¹¡¥

@example
shred --verbose /dev/fd0
@end example

@c Similarly, to erase all data on a selected partition of
@c your hard disk, you could give a command like this:
@c 
Æ±ÍÍ¤Ë¡¤¥Ï¡¼¥É¥Ç¥£¥¹¥¯¤ÎÁªÂò¤µ¤ì¤¿¥Ñ¡¼¥Æ¥£¥·¥ç¥ó¤ÎÁ´¤Æ¤Î¥Ç¡¼¥¿¤ò¾Ãµî¤¹
¤ë¤¿¤á¤Ë¡¤°Ê²¼¤Î¤è¤¦¤Ê¥³¥Þ¥ó¥É¤òÍ¿¤¨¤ë¤³¤È¤¬²ÄÇ½¤Ç¤¹¡¥

@example
shred --verbose /dev/sda5
@end example

@exitstatus


@node Special file types
@c @chapter Special file types
@chapter ÆÃ¼ì¥Õ¥¡¥¤¥ë¤Î·Á¼°

@cindex special file types
@cindex file types, special

@c This chapter describes commands which create special types of files (and
@c @command{rmdir}, which removes directories, one special file type).
@c 
¤³¤Î¾Ï¤Ï¡¤ÆÃ¼ì¤Ê·Á¼°¤Î¥Õ¥¡¥¤¥ë¤òºîÀ®¤¹¤ëÊýË¡(¤½¤·¤Æ¡¤ÆÃ¼ì¤Ê¥Õ¥¡¥¤¥ë·Á
¼°¤Î°ì¤Ä¤Î¥Ç¥£¥ì¥¯¥È¥ê¤òºï½ü¤¹¤ë@command{rmdir}ÊýË¡)¤òµ­½Ò¤·¤Þ¤¹¡¥

@cindex special file types
@cindex file types
@c Although Unix-like operating systems have markedly fewer special file
@c types than others, not @emph{everything} can be treated only as the
@c undifferentiated byte stream of @dfn{normal files}.  For example, when a
@c file is created or removed, the system must record this information,
@c which it does in a @dfn{directory}---a special type of file.  Although
@c you can read directories as normal files, if you're curious, in order
@c for the system to do its job it must impose a structure, a certain
@c order, on the bytes of the file.  Thus it is a ``special'' type of file.
@c 
Unix¤Î¤è¤¦¤Ê¥ª¥Ú¥ì¡¼¥Æ¥£¥ó¥°¥·¥¹¥Æ¥à¤Ç¤Ï¡¤Â¾¤Î¤â¤Î¤è¤êÆÃ¼ì¤Ê¥Õ¥¡¥¤¥ë·Á
¼°¤ÏÃø¤·¤¯¾¯¤Ê¤¤¤Î¤Ç¤¹¤¬¡¤@emph{¤¹¤Ù¤Æ}¤Î¤â¤Î¤ò@dfn{ÄÌ¾ï¤Î¥Õ¥¡¥¤¥ë
(normal files)}¤Èº¹°Û¤ÎÌµ¤¤¥Ð¥¤¥È¥¹¥È¥ê¡¼¥à¤È¤·¤Æ°·¤¦¤³¤È¤¬²ÄÇ½¤À¤È¤¤
¤¦¤ï¤±¤Ç¤Ï¤¢¤ê¤Þ¤»¤ó¡¥Îã¤¨¤Ð¡¤¥Õ¥¡¥¤¥ë¤òºîÀ®¤·¤¿¤êºï½ü¤·¤¿¤ê¤¹¤ë¤È¤­¡¤
¥·¥¹¥Æ¥à¤Ï¤³¤Î¾ðÊó¤òµ­Ï¿¤¹¤ëÉ¬Í×¤¬¤¢¤ê¡¤¤½¤ì¤Ï@dfn{¥Ç¥£¥ì¥¯¥È¥ê
(directory)} --- ÆÃ¼ì¤Ê·Á¼°¤Î¥Õ¥¡¥¤¥ë --- ¤Ç¹Ô¤¤¤Þ¤¹¡¥¶½Ì£¤¬¤¢¤ì¤Ð¡¤¥Ç¥£
¥ì¥¯¥È¥ê¤òÄÌ¾ï¤Î¥Õ¥¡¥¤¥ë¤È¤·¤ÆÆÉ¤ß¹þ¤à¤³¤È¤â²ÄÇ½¤Ç¤¹¤¬¡¤¥·¥¹¥Æ¥à¤Ë¤½¤Î
ºî¶È¤ò¤µ¤»¤ë¤¿¤á¤Ë¡¤¥Õ¥¡¥¤¥ë¤Î¥Ð¥¤¥È¾å¤Ç¡¤ÆÃÄê¤Î½ç½ø¤Ë¤Ê¤ë¤è¤¦¡¤¶¯À©¤Æ
¤­¤Ê¹½Â¤¤Ë¤¹¤ëÉ¬Í×¤¬¤¢¤ê¤Þ¤¹¡¥¤³¤Î¤¿¤á¤½¤ì¤Ï``ÆÃ¼ì¤Ê''·Á¼°¤Î¥Õ¥¡¥¤¥ë¤È
¤Ê¤ê¤Þ¤¹¡¥

@c Besides directories, other special file types include named pipes
@c (FIFOs), symbolic links, sockets, and so-called @dfn{special files}.
@c 
¥Ç¥£¥ì¥¯¥È¥ê°Ê³°¤Ç¤Ï¡¤ÆÃ¼ì¤Ê¥Õ¥¡¥¤¥ë·Á¼°¤Ï¡¤Ì¾Á°ÉÕ¤­¥Ñ¥¤¥×(FIFO)¡¤¥·¥ó
¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯¡¤¥½¥±¥Ã¥È¡¤¤½¤·¤Æ@dfn{ÆÃ¼ì¥Õ¥¡¥¤¥ë(special files)}¤È¸Æ
¤Ð¤ì¤ë¤â¤Î¤ò´Þ¤ß¤Þ¤¹¡¥

@menu
* link invocation::             Make a hard link via the link syscall
* ln invocation::               Make links between files.
* mkdir invocation::            Make directories.
* mkfifo invocation::           Make FIFOs (named pipes).
* mknod invocation::            Make block or character special files.
* readlink invocation::         Print the referent of a symbolic link.
* rmdir invocation::            Remove empty directories.
* unlink invocation::           Remove files via the unlink syscall
@end menu


@node link invocation
@c @section @command{link}: Make a hard link via the link syscall
@section @command{link}: link¥·¥¹¥Æ¥à¥³¡¼¥ë¤Ç¥Ï¡¼¥É¥ê¥ó¥¯¤òºîÀ®¤¹¤ë

@pindex link
@cindex links, creating
@cindex hard links, creating
@cindex creating links (hard only)

@c @command{link} creates a single hard link at a time.
@c It is a minimalist interface to the system-provided
@c @code{link} function.  @xref{Hard Links, , , libc,
@c The GNU C Library Reference Manual}.
@c Synopsis:
@c 
@command{link}¤ÏÃ±°ì¤Î¥Ï¡¼¥É¥ê¥ó¥¯¤ò°ìÅÙ¤ËºîÀ®¤·¤Þ¤¹¡¥¤½¤ì¤Ï¡¤¥·¥¹¥Æ¥à
¤¬Äó¶¡¤¹¤ë@code{link}´Ø¿ô¤Ø¤ÎºÇ¾®¤Î¥¤¥ó¥¿¡¼¥Õ¥§¡¼¥¹¤Ç¤¹¡¥@xref{Hard
Links, , , libc, The GNU C Library Reference Manual}.  ³µÍ×¤Ç¤¹¡¥

@example
link @var{filename} @var{linkname}
@end example

@c @var{filename} must specify an existing file, and @var{linkname}
@c must specify a nonexistent entry in an existing directory.
@c @command{link} simply calls @code{link (@var{filename}, @var{linkname})}
@c to create the link.
@c 
@var{filename}¤Ï´ûÂ¸¤Î¥Õ¥¡¥¤¥ë¤Ë¤¹¤ëÉ¬Í×¤¬¤¢¤ê¡¤@var{linkname}´ûÂ¸¤Î¥Ç¥£
¥ì¥¯¥È¥ê¤ËÂ¸ºß¤·¤Ê¤¤¤â¤Î¤ò»ØÄê¤¹¤ëÉ¬Í×¤¬¤¢¤ê¤Þ¤¹¡¥@command{link}¤Ï¥ê¥ó
¥¯¤òºîÀ®¤¹¤ë¤¿¤á¤Ë¡¤Ã±½ã¤Ë@code{link (@var{filename}, @var{linkname})} 
¤ò¸Æ¤Ó½Ð¤·¤Þ¤¹¡¥

@exitstatus


@node ln invocation
@c @section @command{ln}: Make links between files
@section @command{ln}: ¥Õ¥¡¥¤¥ë´Ö¤Ë¥ê¥ó¥¯¤òºîÀ®

@pindex ln
@cindex links, creating
@cindex hard links, creating
@cindex symbolic (soft) links, creating
@cindex creating links (hard or soft)

@cindex filesystems and hard links
@c @command{ln} makes links between files.  By default, it makes hard links;
@c with the @option{-s} option, it makes symbolic (or @dfn{soft}) links.
@c Synopses:
@c 
@command{ln}¤Ï¡¤¥Õ¥¡¥¤¥ë´Ö¤Î¥ê¥ó¥¯¤òºîÀ®¤·¤Þ¤¹¡¥¥Ç¥Õ¥©¥ë¥È¤Ç¡¤¤½¤ì¤Ï¥Ï¡¼
¥É¥ê¥ó¥¯¤òºîÀ®¤·¤Þ¤¹¡¥@option{-s}¤òÍÑ¤¤¤ë¤È¡¤¥·¥ó¥Ü¥ê¥Ã¥¯(¤Þ¤¿¤Ï
@dfn{¥½¥Õ¥È(soft)})¥ê¥ó¥¯¤òºîÀ®¤·¤Þ¤¹¡¥³µÍ×¤Ç¤¹¡¥

@example
ln [@var{option}]@dots{} @var{target} [@var{linkname}]
ln [@var{option}]@dots{} @var{target}@dots{} @var{directory}
@end example

@itemize @bullet

@c @item If the last argument names an existing directory, @command{ln} creates a
@c link to each @var{target} file in that directory, using the
@c @var{target}s' names.  (But see the description of the
@c @option{--no-dereference} option below.)
@c 
@item
ºÇ¸å¤Î°ú¿ô¤¬´ûÂ¸¤Î¥Ç¥£¥ì¥¯¥È¥ê¤ò¼¨¤¹¾ì¹ç¡¤@command{ln}¤Ï¤½¤Î¥Ç¥£¥ì¥¯¥È
¥êÆâ¤Î¤½¤ì¤¾¤ì¤Î@var{target}¥Õ¥¡¥¤¥ë¤Ë¡¤@var{target}¤ÎÌ¾Á°¤ò»ÈÍÑ¤·¤Ê¤¬
¤é¥ê¥ó¥¯¤òºîÀ®¤·¤Þ¤¹¡¥(¤·¤«¤·¡¤°Ê²¼¤Î@option{--no-dereference}¥ª¥×¥·¥ç
¥ó¤Îµ­½Ò¤ò»²¾È¤·¤Æ¤¯¤À¤µ¤¤¡¥)

@c @item If two filenames are given, @command{ln} creates a link from the
@c second to the first.
@c 
@item
Æó¤Ä¤Î¥Õ¥¡¥¤¥ëÌ¾¤¬Í¿¤¨¤é¤ì¤¿¾ì¹ç¡¤@command{ln}¤ÏÆóÈÖÌÜ¤«¤é°ìÈÖÌÜ¤Ø¤Î¥ê
¥ó¥¯¤òºîÀ®¤·¤Þ¤¹¡¥

@c @item If one @var{target} is given, @command{ln} creates a link to that
@c file in the current directory.
@c 
@item
°ì¤Ä¤Î@var{target}¤¬Í¿¤¨¤é¤ì¤¿¾ì¹ç¡¤@command{ln}¤Ï¡¤¸½ºß¤Î¥Ç¥£¥ì¥¯¥È¥ê
¤Î¤½¤Î¥Õ¥¡¥¤¥ë¤Ë¥ê¥ó¥¯¤òºîÀ®¤·¤Þ¤¹¡¥

@c @item It is an error if the last argument is not a directory and more
@c than two files are given.  Without @option{-f} or @option{-i} (see below),
@c @command{ln} will not remove an existing file.  Use the @option{--backup}
@c option to make @command{ln} rename existing files.
@c 
@item
ºÇ¸å¤Î°ú¿ô¤¬¥Ç¥£¥ì¥¯¥È¥ê¤Ç¤Ê¤¯¡¤Æó¤Ä°Ê¾å¤Î¥Õ¥¡¥¤¥ë¤¬Í¿¤¨¤é¤ì¤¿¾ì¹ç¤Ï¥¨
¥é¡¼¤È¤Ê¤ê¤Þ¤¹¡¥@option{-f}¤ä@option{-i} (°Ê²¼¤ò»²¾È)¤òÍÑ¤¤¤Ê¤¤¾ì¹ç,
@command{ln}¤Ï´ûÂ¸¤Î¥Õ¥¡¥¤¥ë¤òºï½ü¤·¤Þ¤»¤ó¡¥@command{ln}¤Ë´ûÂ¸¤Î¥Õ¥¡¥¤
¥ë¤ÎÌ¾Á°¤òÊÑ¤¨¤µ¤»¤ë¤¿¤á¤Ë¡¤@option{--backup}¥ª¥×¥·¥ç¥ó¤ò»ÈÍÑ¤·¤Æ¤¯¤À
¤µ¤¤¡¥

@end itemize

@cindex hard link, defined
@cindex inode, and hard links
@c A @dfn{hard link} is another name for an existing file; the link and the
@c original are indistinguishable.  Technically speaking, they share the
@c same inode, and the inode contains all the information about a
@c file---indeed, it is not incorrect to say that the inode @emph{is} the
@c file.  On all existing implementations, you cannot make a hard link to
@c a directory, and hard links cannot cross filesystem boundaries.  (These
@c restrictions are not mandated by @acronym{POSIX}, however.)
@c 
@dfn{¥Ï¡¼¥É¥ê¥ó¥¯(hard link)}¤Ï¡¤´ûÂ¸¤Î¥Õ¥¡¥¤¥ë¤ÎÊÌÌ¾¤Ç¤¹¡¥¥ê¥ó¥¯¤È¥ª
¥ê¥¸¥Ê¥ë¤Ï¶èÊÌ¤Ç¤­¤Þ¤»¤ó¡¥µ»½ÑÅª¤Ë¤Ï¡¤¤½¤ì¤é¤ÏÆ±¤¸inode¤ò¶¦Í­¤·¡¤inode 
¤Ï¥Õ¥¡¥¤¥ë¤Ë´Ø¤¹¤ëÉ¬Í×¤Ê¾ðÊó¤ò¤¹¤Ù¤Æ´Þ¤ó¤Ç¤¤¤Þ¤¹ --- ¼ÂºÝ¡¤inode¤¬¥Õ¥¡
¥¤¥ë@emph{¤Ç¤¢¤ë}¤È¸À¤Ã¤Æ¤â´Ö°ã¤¤¤Ç¤Ï¤¢¤ê¤Þ¤»¤ó¡¥´ûÂ¸¤Î¤¹¤Ù¤Æ¤Î¼ÂÁõ¤Ç
¤Ï¡¤¥Ç¥£¥ì¥¯¥È¥ê¤Ë¥Ï¡¼¥É¥ê¥ó¥¯¤òºîÀ®¤Ç¤­¤º¡¤¥Ï¡¼¥É¥ê¥ó¥¯¤Ï¥Õ¥¡¥¤¥ë¥·¥¹
¥Æ¥à´Ö¤ò¤Þ¤¿¤°¤³¤È¤¬¤Ç¤­¤Þ¤»¤ó¡¥(¤·¤«¤·¤Ê¤¬¤é¡¤¤³¤ì¤é¤ÎÀ©¸Â¤Ï
@acronym{POSIX}¤È¥Þ¥Ã¥Á¤·¤Þ¤»¤ó¡¥)

@cindex dereferencing symbolic links
@cindex symbolic link, defined
@c @dfn{Symbolic links} (@dfn{symlinks} for short), on the other hand, are
@c a special file type (which not all kernels support: System V release 3
@c (and older) systems lack symlinks) in which the link file actually
@c refers to a different file, by name.  When most operations (opening,
@c reading, writing, and so on) are passed the symbolic link file, the
@c kernel automatically @dfn{dereferences} the link and operates on the
@c target of the link.  But some operations (e.g., removing) work on the
@c link file itself, rather than on its target.  @xref{Symbolic Links,,,
@c libc, The GNU C Library Reference Manual}.
@c 
°ìÊý¡¤@dfn{¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯(Symbolic links)} (Ã»¤¯¸À¤¦¤È
@dfn{symlinks})¤Ï¡¤¥ê¥ó¥¯¥Õ¥¡¥¤¥ë¤¬¼ÂºÝ¤Ë¤ÏÌ¾Á°¤Î°Û¤Ê¤ë¥Õ¥¡¥¤¥ë¤ò»²¾È
¤¹¤ëÆÃ¼ì¤Ê¥Õ¥¡¥¤¥ë·Á¼°¤Ç¤¹(¤¹¤Ù¤Æ¤Î¥«¡¼¥Í¥ë¤¬¥µ¥Ý¡¼¥È¤·¤Æ¤¤¤ë¤ï¤±¤Ç¤Ï
¤¢¤ê¤Þ¤»¤ó¡¥System V release 3(¤È¤½¤ì¤è¤ê¸Å¤¤¤â¤Î)¤Ïsymlink¤¬¤¢¤ê¤Þ¤»
¤ó)¡¥¤Û¤È¤ó¤É¤Î½èÍý(³«¤¯¡¤ÆÉ¤ß¹þ¤à¡¤½ñ¤­½Ð¤¹Åù)¤Ï¡¤¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯
¤òÄÌ¤¸¤Æ¹Ô¤ï¤ì¡¤¥«¡¼¥Í¥ë¤Ï¼«Æ°Åª¤Ë¥ê¥ó¥¯¤ò@dfn{dereferences}¤·¡¤¥ê¥ó¥¯
Àè¤ò½èÍý¤·¤Þ¤¹¡¥¤·¤«¤·¡¤¥ê¥ó¥¯Àè¤Ç¤Ï¤Ê¤¯¥ê¥ó¥¯¥Õ¥¡¥¤¥ë¼«¿È¤ËºîÍÑ¤¹¤ë
(Îã¤¨¤Ðºï½ü)½èÍý¤â¤¢¤ê¤Þ¤¹¡¥@xref{Symbolic Links,,, library, The GNU C
Library Reference Manual}.

@c The program accepts the following options.  Also see @ref{Common options}.
@c 
¥×¥í¥°¥é¥à¤Ï°Ê²¼¤Î¥ª¥×¥·¥ç¥ó¤â¼õ¤±Æþ¤ì¤Þ¤¹¡¥@ref{Common options}¤â»²¾È
¤·¤Æ¤¯¤À¤µ¤¤¡¥

@table @samp

@optBackup

@item -d
@itemx -F
@itemx --directory
@opindex -d
@opindex -F
@opindex --directory
@cindex hard links to directories
@c Allow the super-user to attempt to make hard links to directories.
@c However, note that this will probably fail due to
@c system restrictions, even for the super-user.
@c 
¥¹¡¼¥Ñ¡¼¥æ¡¼¥¶¤Ë¤è¤ë¥Ç¥£¥ì¥¯¥È¥ê¤Î¥Ï¡¼¥É¥ê¥ó¥¯ºîÀ®¤Î»î¤ß¤¬¤Ç¤­¤ë¤è¤¦¤Ë
¤·¤Þ¤¹¡¥¤·¤«¤·¡¤¥¹¡¼¥Ñ¡¼¥æ¡¼¥¶¤Ç¤â¥·¥¹¥Æ¥à¤ÎÀ©¸Â¤Î¤¿¤á¡¤¼ºÇÔ¤¹¤ë²ÄÇ½À­
¤¬¤¢¤ë¤³¤È¤ËÃí°Õ¤·¤Æ²¼¤µ¤¤¡¥

@item -f
@itemx --force
@opindex -f
@opindex --force
@c Remove existing destination files.
@c 
´ûÂ¸¤Î¥ê¥ó¥¯Àè¥Õ¥¡¥¤¥ë¤òºï½ü¤·¤Þ¤¹¡¥

@item -i
@itemx --interactive
@opindex -i
@opindex --interactive
@cindex prompting, and @command{ln}
@c Prompt whether to remove existing destination files.
@c 
´ûÂ¸¥ê¥ó¥¯Àè¥Õ¥¡¥¤¥ë¤òºï½ü¤¹¤ë¤«¤É¤¦¤«¡¤¥×¥í¥ó¥×¥È¤òÉ½¼¨¤·¤Þ¤¹¡¥

@item -n
@itemx --no-dereference
@opindex -n
@opindex --no-dereference
@c When given an explicit destination that is a symlink to a directory,
@c treat that destination as if it were a normal file.
@c 
ÌÀ¼¨Åª¤Ê¡¤¥Ç¥£¥ì¥¯¥È¥ê¤Ø¤Î¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯¤È¤Ê¤ë¥ê¥ó¥¯Àè¤¬Í¿¤¨¤é¤ì¤¿
¤È¤­¡¤¥ê¥ó¥¯Àè¤òÄÌ¾ï¤Î¥Õ¥¡¥¤¥ë¤È¤·¤Æ°·¤¤¤Þ¤¹¡¥

@c When the destination is an actual directory (not a symlink to one),
@c there is no ambiguity.  The link is created in that directory.
@c But when the specified destination is a symlink to a directory,
@c there are two ways to treat the user's request.  @command{ln} can
@c treat the destination just as it would a normal directory and create
@c the link in it.  On the other hand, the destination can be viewed as a
@c non-directory---as the symlink itself.  In that case, @command{ln}
@c must delete or backup that symlink before creating the new link.
@c The default is to treat a destination that is a symlink to a directory
@c just like a directory.
@c 
¥ê¥ó¥¯Àè¤¬(¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯¤Ç¤Ï¤Ê¤¤)¼ÂºÝ¤Î¥Ç¥£¥ì¥¯¥È¥ê¤Î¤È¤­¡¤ÉÔÌÀÎÆ
¤Ê¤³¤È¤Ï¤¢¤ê¤Þ¤»¤ó¡¥¤·¤«¤·¡¤»ØÄê¤µ¤ì¤¿¥ê¥ó¥¯Àè¤¬¥Ç¥£¥ì¥¯¥È¥ê¤Ø¤Î¥·¥ó¥Ü
¥ê¥Ã¥¯¥ê¥ó¥¯¤Î»þ¡¤¥æ¡¼¥¶¤ÎÍ×µá¤Î°·¤¤Êý¤Ï¡¤ÆóÄÌ¤ê¤¢¤ê¤Þ¤¹¡¥@command{ln} 
¤Ï¡¤¥ê¥ó¥¯Àè¤òÄÌ¾ï¤Î¥Ç¥£¥ì¥¯¥È¥ê¤È¤·¤Æ°·¤¤¡¤¤½¤ì¤ËÂÐ¤¹¤ë¥ê¥ó¥¯¤òºîÀ®¤¹
¤ë¤³¤È¤¬¤Ç¤­¤Þ¤¹¡¥°ìÊý¡¤¥ê¥ó¥¯Àè¤òÈó¥Ç¥£¥ì¥¯¥È¥ê --- ¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó
¥¯ --- ¤È¤·¤Æ¸«¤ë¤³¤È¤â¤Ç¤­¤Þ¤¹¡¥¤½¤Î¾ì¹ç¡¤@command{ln}¤Ï¡¤¿·¤·¤¤¥ê¥ó
¥¯¤òºîÀ®¤¹¤ëÁ°¤Ë¡¤¤½¤Î¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯¤òºï½ü¤Þ¤¿¤Ï¥Ð¥Ã¥¯¥¢¥Ã¥×¤¹¤ëÉ¬
Í×¤¬¤¢¤ê¤Þ¤¹¡¥¥Ç¥Õ¥©¥ë¥È¤Ç¤Ï¡¤¥Ç¥£¥ì¥¯¥È¥ê¤Ø¤Î¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯¤Ç¤¢¤ë
¥ê¥ó¥¯Àè¤ò¡¤¥Ç¥£¥ì¥¯¥È¥ê¤ÈÆ±ÍÍ¤Ë°·¤¤¤Þ¤¹¡¥

@item -s
@itemx --symbolic
@opindex -s
@opindex --symbolic
@c Make symbolic links instead of hard links.  This option merely produces
@c an error message on systems that do not support symbolic links.
@c 
¥Ï¡¼¥É¥ê¥ó¥¯¤ÎÂå¤ï¤ê¤Ë¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯¤òºîÀ®¤·¤Þ¤¹¡¥¤³¤Î¥ª¥×¥·¥ç¥ó¤Ï¡¤
¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯¤ò¥µ¥Ý¡¼¥È¤·¤Æ¤¤¤Ê¤¤¥·¥¹¥Æ¥à¤Ç¤Ï¡¤Ã±¤Ë¥¨¥é¡¼¥á¥Ã¥»¡¼
¥¸¤òÀ¸À®¤·¤Þ¤¹¡¥

@optBackupSuffix

@optTargetDirectory

@item -v
@itemx --verbose
@opindex -v
@opindex --verbose
@c Print the name of each file before linking it.
@c 
¥ê¥ó¥¯¤¹¤ëÁ°¤Ë¤½¤ì¤¾¤ì¤Î¥Õ¥¡¥¤¥ëÌ¾¤ò½ÐÎÏ¤·¤Þ¤¹¡¥

@optVersionControl

@end table

@c Examples:
@c 
°Ê²¼¤ÏÎã¤Ç¤¹¡¥

@smallexample
ln -s /some/name  # creates link ./name pointing to /some/name
ln -s /some/name myname  # creates link ./myname pointing to /some/name
ln -s a b ..      # creates links ../a and ../b pointing to ./a and ./b
@end smallexample

@exitstatus


@node mkdir invocation
@c @section @command{mkdir}: Make directories
@section @command{mkdir}: ¥Ç¥£¥ì¥¯¥È¥ê¤ÎºîÀ®

@pindex mkdir
@cindex directories, creating
@cindex creating directories

@c @command{mkdir} creates directories with the specified names.  Synopsis:
@c 
@command{mkdir}¤Ï»ØÄê¤µ¤ì¤¿Ì¾Á°¤Ç¥Ç¥£¥ì¥¯¥È¥ê¤òºîÀ®¤·¤Þ¤¹¡¥³µÍ×¤Ç¤¹¡¥

@example
mkdir [@var{option}]@dots{} @var{name}@dots{}
@end example

@c If a @var{name} is an existing file but not a directory, @command{mkdir} prints
@c a warning message on stderr and will exit with a status of 1 after
@c processing any remaining @var{name}s.  The same is done when a @var{name} is an
@c existing directory and the -p option is not given.  If a @var{name} is an
@c existing directory and the -p option is given, @command{mkdir} will ignore it.
@c That is, @command{mkdir} will not print a warning, raise an error, or change
@c the mode of the directory (even if the -m option is given), and will
@c move on to processing any remaining @var{name}s.
@c 
@var{name}¤¬´ûÂ¸¤Î¥Õ¥¡¥¤¥ë¤Ç¥Ç¥£¥ì¥¯¥È¥ê¤Ç¤Ï¤Ê¤¤¾ì¹ç¡¤@command{mkdir} 
¤ÏÉ¸½à¥¨¥é¡¼½ÐÎÏ¤Ë·Ù¹ð¥á¥Ã¥»¡¼¥¸¤ò½ÐÎÏ¤·¡¤»Ä¤Ã¤Æ¤¤¤ë@var{name}¤ò½èÍý¤·
¤¿¸å¡¤1¤Î¥¹¥Æ¡¼¥¿¥¹¤Ç½ªÎ»¤·¤Þ¤¹¡¥@var{name}¤¬´ûÂ¸¤Î¥Ç¥£¥ì¥¯¥È¥ê¤Ç¡¤
@samp{-p}¥ª¥×¥·¥ç¥ó¤¬Í¿¤¨¤é¤ì¤Æ¤¤¤Ê¤¤¤È¤­¤âÆ±¤¸¤Ç¤¹¡¥@var{name}¤¬´ûÂ¸
¤Î¥Ç¥£¥ì¥¯¥È¥ê¤Ç¡¤@samp{-p}¥ª¥×¥·¥ç¥ó¤¬Í¿¤¨¤é¤ì¤Æ¤¤¤ë¾ì¹ç¡¤
@command{mkdir}¤Ï¤½¤ì¤òÌµ»ë¤·¤Þ¤¹¡¥¤¹¤Ê¤ï¤Á¡¤@command{mkdir}¤Ï·Ù¹ð¤Î½Ð
ÎÏ¤â¡¤¥¨¥é¡¼¤ÎÈ¯À¸¤â¡¤(@samp{-m}¥ª¥×¥·¥ç¥ó¤¬Í¿¤¨¤é¤ì¤Æ¤¤¤Æ¤â)¥Ç¥£¥ì¥¯
¥È¥ê¤Î¥â¡¼¥É¤ÎÊÑ¹¹¤â¤»¤º¡¤»Ä¤ê¤Î@var{name}¤Î½èÍý¤òÂ³¤±¤Þ¤¹¡¥

@c The program accepts the following options.  Also see @ref{Common options}.
@c 
¥×¥í¥°¥é¥à¤Ï°Ê²¼¤Î¥ª¥×¥·¥ç¥ó¤â¼õ¤±Æþ¤ì¤Þ¤¹¡¥@ref{Common options}¤â»²¾È
¤·¤Æ¤¯¤À¤µ¤¤¡¥

@table @samp

@item -m @var{mode}
@itemx --mode=@var{mode}
@opindex -m
@opindex --mode
@cindex modes of created directories, setting
@c Set the mode of created directories to @var{mode}, which is symbolic as
@c in @command{chmod} and uses @samp{a=rwx} (read, write and execute allowed for
@c everyone) minus the bits set in the umask for the point of the
@c departure.  @xref{File permissions}.
@c 
ºîÀ®¤µ¤ì¤ë¥Ç¥£¥ì¥¯¥È¥ê¤Î¥â¡¼¥É¤ò@var{mode}¤ÇÀßÄê¤·¡¤¤½¤ì¤Ï
@command{chmod}¤ÇÀßÄê¤¹¤ëÃê¾ÝÅª¤Ê¤â¤Î¤Ç¡¤(ÆÉ¤ß½ñ¤­¤È¼Â¹Ô¤òÁ´°÷¤Ëµö²Ä¤¹
¤ë)@samp{a=rwx}¤«¤éÌÜÅª¤Î¥Ý¥¤¥ó¥È¤Î¤¿¤á¤Ëumask¤Î¥Ó¥Ã¥È¥»¥Ã¥È¤ò°ú¤¤¤¿¤â
¤Î¤ò»ÈÍÑ¤·¤Þ¤¹¡¥@xref{File permissions}.

@item -p
@itemx --parents
@opindex -p
@opindex --parents
@cindex parent directories, creating
@c Make any missing parent directories for each argument.  The mode for parent
@c directories is set to the umask modified by @samp{u+wx}.
@c Ignore arguments corresponding to existing directories.
@c 
¤½¤ì¤¾¤ì¤Î°ú¿ô¤ËÂÐ¤·¡¤Â­¤ê¤Ê¤¤¿Æ¥Ç¥£¥ì¥¯¥È¥ê¤òºîÀ®¤·¤Þ¤¹¡¥¿Æ¥Ç¥£¥ì¥¯¥È
¥ê¤Î¥â¡¼¥É¤Ï@samp{u+wx}¤ÇÊÔ½¸¤µ¤ì¤¿umask¤ËÀßÄê¤·¤Þ¤¹¡¥´ûÂ¸¤Î¥Ç¥£¥ì¥¯¥È
¥ê¤ËÂÐ¤¹¤ë°ú¿ô¤ÏÌµ»ë¤·¤Þ¤¹¡¥

@item -v
@item --verbose
@opindex -v
@opindex --verbose
@c Print a message for each created directory.  This is most useful with
@c @option{--parents}.
@c 
ºîÀ®¤µ¤ì¤ë¤½¤ì¤¾¤ì¤Î¥Ç¥£¥ì¥¯¥È¥ê¤ËÂÐ¤·¥á¥Ã¥»¡¼¥¸¤ò½ÐÎÏ¤·¤Þ¤¹¡¥¤³¤ì¤Ï
@option{--parents}¤È¤È¤â¤ËÍÑ¤¤¤ë¤ÈºÇ¤âÊØÍø¤Ç¤¹¡¥
@end table

@exitstatus


@node mkfifo invocation
@c @section @command{mkfifo}: Make FIFOs (named pipes)
@section @command{mkfifo}: FIFO(Ì¾Á°ÉÕ¤­¥Ñ¥¤¥×)¤ÎºîÀ®

@pindex mkfifo
@cindex FIFOs, creating
@cindex named pipes, creating
@cindex creating FIFOs (named pipes)

@c @command{mkfifo} creates FIFOs (also called @dfn{named pipes}) with the
@c specified names.  Synopsis:
@c 
@command{mkfifo}¤ÏFIFO(@dfn{Ì¾Á°ÉÕ¤­¥Ñ¥¤¥×(named pipes)}¤È¤â¸Æ¤Ð¤ì¤ë)
¤ò»ØÄê¤µ¤ì¤¿Ì¾Á°¤ÇºîÀ®¤·¤Þ¤¹¡¥³µÍ×¤Ç¤¹¡¥

@example
mkfifo [@var{option}] @var{name}@dots{}
@end example

@c A @dfn{FIFO} is a special file type that permits independent processes
@c to communicate.  One process opens the FIFO file for writing, and
@c another for reading, after which data can flow as with the usual
@c anonymous pipe in shells or elsewhere.
@c 
@dfn{FIFO}¤Ï¡¤¸ÄÊÌ¤Î¥×¥í¥»¥¹´Ö¤ÎÄÌ¿®¤ò²ÄÇ½¤Ë¤¹¤ëÆÃ¼ì¤Ê¥Õ¥¡¥¤¥ë·Á¼°¤Ç¤¹¡¥
°ì¤Ä¤Î¥×¥í¥»¥¹¤Ï½ñ¤­¹þ¤ß¤Ç¡¤¤â¤¦°ì¤Ä¤ÏÆÉ¤ß¹þ¤ß¤ÇFIFO¤ò³«¤­¡¤¥Ç¡¼¥¿¤Ï¡¤
¥·¥§¥ë¤ä¤½¤ÎÂ¾¤ÎÄÌ¾ï¤ÎÌ¾Á°Ìµ¤·¥Ñ¥¤¥×¤Î¤è¤¦¤ËÎ®¤ì¤Þ¤¹¡¥

@c The program accepts the following option.  Also see @ref{Common options}.
@c 
¥×¥í¥°¥é¥à¤Ï°Ê²¼¤Î¥ª¥×¥·¥ç¥ó¤â¼õ¤±Æþ¤ì¤Þ¤¹¡¥@ref{Common options}¤â»²¾È
¤·¤Æ¤¯¤À¤µ¤¤¡¥

@table @samp

@item -m @var{mode}
@itemx --mode=@var{mode}
@opindex -m
@opindex --mode
@cindex modes of created FIFOs, setting
@c Set the mode of created FIFOs to @var{mode}, which is symbolic as in
@c @command{chmod} and uses @samp{a=rw} (read and write allowed for everyone) minus
@c the bits set in the umask for the point of departure.  @xref{File permissions}.
@c 
ºîÀ®¤µ¤ì¤ëFIFO¤Î¥â¡¼¥É¤ò@var{mode}¤ËÀßÄê¤·¡¤¤½¤ì¤Ï@command{chmod}¤ÇÀß
Äê¤¹¤ëÃê¾ÝÅª¤Ê¤â¤Î¤Ç¡¤(ÆÉ¤ß¹þ¤ß¤È½ñ¤­½Ð¤·¤òÁ´°÷¤Ëµö²Ä¤¹¤ë)@samp{a=rw}
¤«¤éÌÜÅª¤Î¥Ý¥¤¥ó¥È¤Î¤¿¤á¤Ëumask¤Î¥Ó¥Ã¥È¥»¥Ã¥È¤ò°ú¤¤¤¿¤â¤Î¤ò»ÈÍÑ¤·¤Þ¤¹¡¥
@xref{File permissions}.

@end table

@exitstatus


@node mknod invocation
@c @section @command{mknod}: Make block or character special files
@section @command{mknod}: ¥Ö¥í¥Ã¥¯¤ä¥­¥ã¥é¥¯¥¿ÆÃ¼ì¥Õ¥¡¥¤¥ë¤ÎºîÀ®

@pindex mknod
@cindex block special files, creating
@cindex character special files, creating

@c @command{mknod} creates a FIFO, character special file, or block special
@c file with the specified name.  Synopsis:
@c 
@command{mknod}¤Ï¡¤FIFO¡¤¥­¥ã¥é¥¯¥¿ÆÃ¼ì¥Õ¥¡¥¤¥ë¤ä¡¤¥Ö¥í¥Ã¥¯ÆÃ¼ì¥Õ¥¡¥¤
¥ë¤ò»ØÄê¤µ¤ì¤¿Ì¾Á°¤ÇºîÀ®¤·¤Þ¤¹¡¥³µÍ×¤Ç¤¹¡¥

@example
mknod [@var{option}]@dots{} @var{name} @var{type} [@var{major} @var{minor}]
@end example

@cindex special files
@cindex block special files
@cindex character special files
@c Unlike the phrase ``special file type'' above, the term @dfn{special
@c file} has a technical meaning on Unix: something that can generate or
@c receive data.  Usually this corresponds to a physical piece of hardware,
@c e.g., a printer or a disk.  (These files are typically created at
@c system-configuration time.)  The @command{mknod} command is what creates
@c files of this type.  Such devices can be read either a character at a
@c time or a ``block'' (many characters) at a time, hence we say there are
@c @dfn{block special} files and @dfn{character special} files.
@c 
¾åµ­¤Î``ÆÃ¼ì¥Õ¥¡¥¤¥ë·Á¼°''¤È°Û¤Ê¤ê¡¤@dfn{ÆÃ¼ì¥Õ¥¡¥¤¥ë(special file)}¤È
¤¤¤¦ÍÑ¸ì¤Ï¡¤Unix¾å¤Çµ»½ÑÅª¤Ê°ÕÌ£¤¬¤¢¤ê¤Þ¤¹¡¥¤½¤ì¤Ï¥Ç¡¼¥¿¤òÀ¸À®¤Þ¤¿¤Ï¼õ
¿®¤¹¤ë¤â¤Î¤Ç¤¹¡¥¤³¤ì¤ÏÄÌ¾ï¡¤¥Ï¡¼¥É¥¦¥§¥¢¤ÎÊªÍýÅª¤ÊÉôÊ¬¤ËÂÐ±þ¤·¤Þ¤¹¡¥
(¤³¤ì¤é¤Î¥Õ¥¡¥¤¥ë¤Ï¡¤ÄÌ¾ï¡¤¥·¥¹¥Æ¥àÀßÄê»þ¤ËºîÀ®¤µ¤ì¤Þ¤¹¡¥)
@command{mknod}¥³¥Þ¥ó¥É¤Ï¡¤¤³¤Î·Á¼°¤Î¥Õ¥¡¥¤¥ë¤òºîÀ®¤¹¤ë¤â¤Î¤Ç¤¹¡¥¤½¤Î
¤è¤¦¤Ê¥Ç¥Ð¥¤¥¹¤Ï¡¤°ìÅÙ¤Ë°ìÊ¸»ú¤Þ¤¿¤Ï°ìÅÙ¤Ë°ì``¥Ö¥í¥Ã¥¯''(Â¿¤¯¤ÎÊ¸»ú)ÆÉ
¤ß¹þ¤à¤³¤È¤¬²ÄÇ½¤Ç¡¤¤½¤Î¤¿¤á¡¤@dfn{¥Ö¥í¥Ã¥¯ÆÃ¼ì(block special)}¥Õ¥¡¥¤
¥ë¤È@dfn{¥­¥ã¥é¥¯¥¿ÆÃ¼ì(character special)}¥Õ¥¡¥¤¥ë¤¬¤¢¤ë¤È²æ¡¹¤Ï½Ò¤Ù
¤Æ¤¤¤Þ¤¹¡¥

@c The arguments after @var{name} specify the type of file to make:
@c 
@var{name}¤Î¸å¤Î°ú¿ô¤ÏºîÀ®¤¹¤ë¥Õ¥¡¥¤¥ë¤Î·Á¼°¤ò»ØÄê¤·¤Þ¤¹¡¥

@table @samp

@item p
@opindex p @r{for FIFO file}
@c for a FIFO
@c 
FIFO¤ËÂÐ±þ¤·¤Þ¤¹¡¥

@item b
@opindex b @r{for block special file}
@c for a block special file
@c 
¥Ö¥í¥Ã¥¯ÆÃ¼ì¥Õ¥¡¥¤¥ë¤ËÂÐ±þ¤·¤Þ¤¹¡¥

@item c
@c Don't document the `u' option -- it's just a synonym for `c'.
@c Do *any* versions of mknod still use it?
@c @itemx u
@opindex c @r{for character special file}
@c @opindex u @r{for character special file}
@c for a character special file
@c 
¥­¥ã¥é¥¯¥¿ÆÃ¼ì¥Õ¥¡¥¤¥ë¤ËÂÐ±þ¤·¤Þ¤¹¡¥

@end table

@c When making a block or character special file, the major and minor
@c device numbers must be given after the file type.
@c If a major or minor device number begins with @samp{0x} or @samp{0X},
@c it is interpreted as hexadecimal; otherwise, if it begins with @samp{0},
@c as octal; otherwise, as decimal.
@c 
¥Ö¥í¥Ã¥¯¤ä¥­¥ã¥é¥¯¥¿ÆÃ¼ì¥Õ¥¡¥¤¥ë¤òºîÀ®¤·¤Æ¤¤¤ë¤È¤­¡¤¥á¥¸¥ã¡¼¤È¥Þ¥¤¥Ê¡¼
¥Ç¥Ð¥¤¥¹ÈÖ¹æ¤ò¥Õ¥¡¥¤¥ë·Á¼°¤Î¸å¤ËÍ¿¤¨¤ëÉ¬Í×¤¬¤¢¤ê¤Þ¤¹¡¥¥á¥¸¥ã¡¼¤Þ¤¿¤Ï¥Þ
¥¤¥Ê¡¼¤Î¥Ç¥Ð¥¤¥¹ÈÖ¹æ¤¬@samp{0x}¤ä@samp{0X}¤Ç»Ï¤Þ¤ë¾ì¹ç¡¤¤½¤ì¤Ï16¿Ê¿ô¤È
¤·¤Æ²ò¼á¤µ¤ì¤Þ¤¹¡¥¤½¤ì°Ê³°¤Ç@samp{0}¤Ç»Ï¤Þ¤ë¾ì¹ç¤ÏÈ¬¿Ê¿ô¡¤¤½¤ì°Ê³°¤Ç¤Ï
½½¿Ê¿ô¤Ç¤¹¡¥

@c The program accepts the following option.  Also see @ref{Common options}.
@c 
¥×¥í¥°¥é¥à¤Ï°Ê²¼¤Î¥ª¥×¥·¥ç¥ó¤â¼õ¤±Æþ¤ì¤Þ¤¹¡¥@ref{Common options}¤â»²¾È
¤·¤Æ¤¯¤À¤µ¤¤¡¥

@table @samp

@item -m @var{mode}
@itemx --mode=@var{mode}
@opindex -m
@opindex --mode
@c Set the mode of created files to @var{mode}, which is symbolic as in
@c @command{chmod} and uses @samp{a=rw} minus the bits set in the umask as the point
@c of departure.  @xref{File permissions}.
@c 
ºîÀ®¤µ¤ì¤ë¥Õ¥¡¥¤¥ë¤Î¥â¡¼¥É¤ò@var{mode}¤ËÀßÄê¤·¡¤¤½¤ì¤Ï@command{chmod}
¤ÇÀßÄê¤¹¤ëÃê¾ÝÅª¤Ê¤â¤Î¤Ç¡¤@samp{a=rw}¤«¤éÌÜÅª¤Î¥Ý¥¤¥ó¥È¤Î¤¿¤á¤Ëumask¤Î
¥Ó¥Ã¥È¥»¥Ã¥È¤ò°ú¤¤¤¿¤â¤Î¤ò»ÈÍÑ¤·¤Þ¤¹¡¥@xref{File permissions}.

@end table

@exitstatus


@node readlink invocation
@c @section @command{readlink}: Print the referent of a symbolic link
@section @command{readlink}: ¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯¤ÎÂÐ¾Ý¤ò½ÐÎÏ

@pindex readlink
@cindex displaying value of a symbolic link

@c @command{readlink} may work in one of two supported modes:
@c 
@command{readlink}¤Ï¡¤¥µ¥Ý¡¼¥È¤µ¤ì¤Æ¤¤¤ëÆó¤Ä¤Î¥â¡¼¥É¤Î°ì¤Ä¤ÇÆ°ºî¤·¤Þ¤¹¡¥

@table @samp

@c @item Readlink mode
@item readlink¥â¡¼¥É

@c @command{readlink} outputs the value of the given symbolic link.
@c If @command{readlink} is invoked with an argument other than the pathname
@c of a symbolic link, it produces no output and exits with a nonzero exit code.
@c 
@command{readlink}¤Ï¡¤Í¿¤¨¤é¤ì¤¿¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯¤ÎÃÍ¤ò½ÐÎÏ¤·¤Þ¤¹¡¥
@command{readlink}¤¬¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯¤Î¥Ñ¥¹Ì¾°Ê³°¤Î°ú¿ô¤Ç¸Æ¤Ó½Ð¤µ¤ì¤ë
¾ì¹ç¡¤½ÐÎÏ¤òÀ¸À®¤»¤º¡¤¥¼¥í°Ê³°¤Î½ªÎ»¥³¡¼¥É¤Ç½ªÎ»¤·¤Þ¤¹¡¥

@c @item Canonicalize mode
@item canonicalize¥â¡¼¥É

@c @command{readlink} outputs the absolute name of the given file which contains
@c no `.', `..' components nor any repeated path separators (`/') or symlinks.
@c If any path component is missing or unavailable,
@c it produces no output and exits with a nonzero exit code.
@c 
@command{readlink}¤Ï¡¤`.'¡¤`..' ¤â¡¤·«ÊÖ¤µ¤ì¤ë¥Ñ¥¹Ê¬Î¥»Ò(`/')¤â¥·¥ó¥Ü
¥ê¥Ã¥¯¥ê¥ó¥¯¤â´Þ¤á¤º¡¤Í¿¤¨¤é¤ì¤¿ÀäÂÐÅª¤Ê¥Õ¥¡¥¤¥ëÌ¾¤ò½ÐÎÏ¤·¤Þ¤¹¡¥¹½À®Í×
ÁÇ¤¬Â­¤ê¤Ê¤¤¡¤¤Þ¤¿¤ÏÍøÍÑÉÔ²ÄÇ½¤Ê¥Ñ¥¹¤Ç¤Ï¡¤½ÐÎÏ¤òÀ¸À®¤»¤º¥¼¥í°Ê³°¤Î½ªÎ»
¥³¡¼¥É¤Ç½ªÎ»¤·¤Þ¤¹¡¥

@end table

@example
readlink [@var{option}] @var{file}
@end example

@c By default, @command{readlink} operates in readlink mode.
@c 
¥Ç¥Õ¥©¥ë¥È¤Ç¡¤@command{readlink}¤Ïreadlink¥â¡¼¥É¤Ç½èÍý¤·¤Þ¤¹¡¥

@c The program accepts the following options.  Also see @ref{Common options}.
@c 
¥×¥í¥°¥é¥à¤Ï°Ê²¼¤Î¥ª¥×¥·¥ç¥ó¤ò¼õ¤±Æþ¤ì¤Þ¤¹¡¥@ref{Common options}¤â»²¾È
¤·¤Æ²¼¤µ¤¤¡¥

@table @samp

@item -f
@itemx --canonicalize
@opindex -f
@opindex --canonicalize
@c Activate canonicalize mode.
@c 
canonicalize¥â¡¼¥É¤Ç¼Â¹Ô¤·¤Þ¤¹¡¥

@item -n
@itemx --no-newline
@opindex -n
@opindex --no-newline
@c Do not output the trailing newline.
@c 
¸åÃÖ¤µ¤ì¤ë²þ¹Ô¤ò½ÐÎÏ¤·¤Þ¤»¤ó¡¥

@item -s
@itemx -q
@itemx --silent
@itemx --quiet
@opindex -s
@opindex -q
@opindex --silent
@opindex --quiet
@c Suppress most error messages.
@c 
¤Û¤È¤ó¤É¤Î¥¨¥é¡¼¥á¥Ã¥»¡¼¥¸¤òÍÞÀ©¤·¤Þ¤¹¡¥

@item -v
@itemx --verbose
@opindex -v
@opindex --verbose
@c Report error messages.
@c 
¥¨¥é¡¼¥á¥Ã¥»¡¼¥¸¤òÊó¹ð¤·¤Þ¤¹¡¥

@end table

@c The @command{readlink} utility first appeared in OpenBSD 2.1.
@c 
@command{readlink}¤Ï¡¤OpenBSD 2.1¤ÇºÇ½é¤Ë½ñ¤«¤ì¤Þ¤·¤¿¡¥

@exitstatus


@node rmdir invocation
@c @section @command{rmdir}: Remove empty directories
@section @command{rmdir}: ¶õ¤Î¥Ç¥£¥ì¥¯¥È¥ê¤Îºï½ü

@pindex rmdir
@cindex removing empty directories
@cindex directories, removing empty

@c @command{rmdir} removes empty directories.  Synopsis:
@c 
@command{rmdir}¤Ï¶õ¤Î¥Ç¥£¥ì¥¯¥È¥ê¤òºï½ü¤·¤Þ¤¹¡¥³µÍ×¤Ç¤¹¡¥

@example
rmdir [@var{option}]@dots{} @var{directory}@dots{}
@end example

@c If any @var{directory} argument does not refer to an existing empty
@c directory, it is an error.
@c 
@var{directory}°ú¿ô¤¬´ûÂ¸¤Î¶õ¤Î¥Ç¥£¥ì¥¯¥È¥ê¤ò»²¾È¤·¤Æ¤¤¤Ê¤¤¾ì¹ç¡¤¥¨¥é¡¼
¤È¤Ê¤ê¤Þ¤¹¡¥

@c The program accepts the following option.  Also see @ref{Common options}.
@c 
¥×¥í¥°¥é¥à¤Ï°Ê²¼¤Î¥ª¥×¥·¥ç¥ó¤â¼õ¤±Æþ¤ì¤Þ¤¹¡¥@ref{Common options}¤â»²¾È
¤·¤Æ¤¯¤À¤µ¤¤¡¥

@table @samp

@item --ignore-fail-on-non-empty
@opindex --ignore-fail-on-non-empty
@cindex directory deletion, ignoring failures
@c Ignore each failure to remove a directory that is solely because
@c the directory is non-empty.
@c 
¥Ç¥£¥ì¥¯¥È¥ê¤¬¶õ¤Ç¤Ê¤¤¤¿¤á¡¤¤½¤ì¤¾¤ìÃ±ÆÈ¤Ç¤¢¤ë¥Ç¥£¥ì¥¯¥È¥êºï½ü¤Î¼ºÇÔ¤ò
Ìµ»ë¤·¤Þ¤¹¡¥

@item -p
@itemx --parents
@opindex -p
@opindex --parents
@cindex parent directories, removing
@c Remove @var{directory}, then try to remove each component of @var{directory}.
@c So, for example, @samp{rmdir -p a/b/c} is similar to @samp{rmdir a/b/c a/b a}.
@c As such, it fails if any of those directories turns out not to be empty.
@c Use the @option{--ignore-fail-on-non-empty} option to make it so such
@c a failure does not evoke a diagnostic and does not cause @command{rmdir} to
@c exit unsuccessfully.
@c 
@var{directory}¤òºï½ü¤·¡¤¤½¤ì¤¾¤ì¤Î@var{directory}¤Î¹½À®Í×ÁÇ¤Îºï½ü¤ò»î
¤ß¤Þ¤¹¡¥¤½¤Î¤¿¤á¡¤Îã¤¨¤Ð¡¤@samp{rmdir -p a/b/c}¤Ï@samp{rmdir a/b/c a/b
a}¤Ë»÷¤Æ¤¤¤Þ¤¹¡¥Æ±ÍÍ¤Ë¡¤¤³¤ì¤é¤Î¥Ç¥£¥ì¥¯¥È¥ê¤¬¶õ¤Ç¤Ê¤¤¤ÈÈ½ÌÀ¤·¤¿¾ì¹ç¤Ï
¼ºÇÔ¤·¤Þ¤¹¡¥¤½¤Î¤è¤¦¤Ê¼ºÇÔ¤Ç¡¤¿ÇÃÇ¤ò°ú¤­µ¯¤³¤·¡¤@command{rmdir}¤ò¼ºÇÔ
¤Ç½ªÎ»¤µ¤»¤Ê¤¤¤¿¤á¡¤@option{--ignore-fail-on-non-empty}¥ª¥×¥·¥ç¥ó¤ò»È
ÍÑ¤·¤Æ¤¯¤À¤µ¤¤¡¥

@item -v
@item --verbose
@opindex -v
@opindex --verbose
@cindex directory deletion, reporting
@c Give a diagnostic for each successful removal.
@c @var{directory} is removed.
@c 
ºï½ü¤ËÀ®¸ù¤·¤¿¤½¤ì¤¾¤ì¤Î¿ÇÃÇ¤òÄó¾§¤·¤Þ¤¹¡¥@var{directory}¤Ïºï½ü¤µ¤ì¤Þ
¤¹¡¥

@end table

@c @xref{rm invocation}, for how to remove non-empty directories (recursively).
@c 
¶õ¤Ç¤Ê¤¤¥Ç¥£¥ì¥¯¥È¥ê¤Î(ºÆµ¢Åª¤Ê)ºï½üÊýË¡¤Ï¡¤@xref{rm invocation}.

@exitstatus


@node unlink invocation
@c @section @command{unlink}: Remove files via the unlink syscall
@section @command{unlink}: unlink¥·¥¹¥Æ¥à¥³¡¼¥ë¤Ç¥Õ¥¡¥¤¥ë¤òºï½ü

@pindex unlink
@cindex removing files or directories (via the unlink syscall)

@c @command{unlink} deletes a single specified file name.
@c It is a minimalist interface to the system-provided
@c @code{unlink} function.  @xref{Deleting Files, , , libc,
@c The GNU C Library Reference Manual}.  Synopsis:
@c 
@command{unlink}¤Ï¡¤Ã±°ì¤Î»ØÄê¤µ¤ì¤¿¥Õ¥¡¥¤¥ëÌ¾¤òºï½ü¤·¤Þ¤¹¡¥¤½¤ì¤Ï¡¤¥·
¥¹¥Æ¥à¤¬Äó¶¡¤¹¤ë@code{unlink}´Ø¿ô¤ÎºÇ¾®¤Î¥¤¥ó¥¿¡¼¥Õ¥§¡¼¥¹¤Ç¤¹¡¥
@xref{Deleting Files, , , libc, The GNU C Library Reference
Manual}. ³µÍ×¤Ç¤¹¡¥

@example
unlink @var{filename}
@end example

@c On some systems @code{unlink} can be used to delete the name of a
@c directory.  On others, it can be used that way only by a privileged user.
@c In the GNU system @code{unlink} can never delete the name of a directory.
@c 
¥·¥¹¥Æ¥à¤Ë¤Ï¡¤@code{unlink}¤òºï½ü¤¹¤ë¥Ç¥£¥ì¥¯¥È¥êÌ¾¤È¤·¤Æ»ÈÍÑ²ÄÇ½¤Ê¤â
¤Î¤â¤¢¤ê¤Þ¤¹¡¥¤½¤ÎÂ¾¤Ë¡¤ÆÃ¸¢¥æ¡¼¥¶¤À¤±¤¬¤½¤¦¤¹¤ë¤³¤È¤¬²ÄÇ½¤Ê¤â¤Î¤â¤¢¤ê
¤Þ¤¹¡¥GNU¥·¥¹¥Æ¥à¤Ç¤Ï¡¤@code{unlink}¤Ç¥Ç¥£¥ì¥¯¥È¥êÌ¾¤òºï½ü¤¹¤ë¤³¤È¤Ï¤¢
¤ê¤Þ¤»¤ó¡¥

@c By default, @command{unlink} honors the @option{--help} and @option{--version}
@c options.  That makes it a little harder to remove files named
@c @option{--help} and @option{--version}, so when the environment variable
@c @env{POSIXLY_CORRECT} is set, @command{unlink} treats such a command line
@c arguments not as an option, but as an operand.
@c 
¥Ç¥Õ¥©¥ë¥È¤Ç¡¤@command{unlink}¤Ï@option{--help}¤È@option{--version}¥ª
¥×¥·¥ç¥ó¤òÂº½Å¤·¤Þ¤¹¡¥¤½¤ì¤Ë¤è¤Ã¤Æ¡¤@option{--help}¤ä
@option{--version}¤ÈÌ¿Ì¾¤µ¤ì¤¿¥Õ¥¡¥¤¥ë¤Îºï½ü¤¬¤Á¤ç¤Ã¤ÈÆñ¤·¤¯¤Ê¤ë¤Î¤Ç¡¤
´Ä¶­ÊÑ¿ô@env{POSIXLY_CORRECT}¤¬ÀßÄê¤µ¤ì¤Æ¤¤¤ë¤È¤­¤Ï¡¤@command{unlink}
¤Ï¤½¤Î¤è¤¦¤Ê¥³¥Þ¥ó¥É¥é¥¤¥ó°ú¿ô¤ò¥ª¥×¥·¥ç¥ó¤Ç¤Ï¤Ê¤¯¥ª¥Ú¥é¥ó¥É¤È¤·¤Æ°·¤¤
¤Þ¤¹¡¥

@exitstatus


@node Changing file attributes
@c @chapter Changing file attributes
@chapter ¥Õ¥¡¥¤¥ëÂ°À­¤ÎÊÑ¹¹

@cindex changing file attributes
@cindex file attributes, changing
@cindex attributes, file

@c A file is not merely its contents, a name, and a file type
@c (@pxref{Special file types}).  A file also has an owner (a userid), a
@c group (a group id), permissions (what the owner can do with the file,
@c what people in the group can do, and what everyone else can do), various
@c timestamps, and other information.  Collectively, we call these a file's
@c @dfn{attributes}.
@c 
¥Õ¥¡¥¤¥ë¤È¤Ï¡¤¤½¤ÎÆâÍÆ¡¤Ì¾Á°¡¤¤½¤·¤Æ¥Õ¥¡¥¤¥ë·Á¼°(@pxref{Special file
types})¤À¤±¤ÎÂ¸ºß¤Ç¤Ï¤¢¤ê¤Þ¤»¤ó¡¥¥Õ¥¡¥¤¥ë¤Ë¤Ï¡¤½êÍ­¼Ô(¥æ¡¼¥¶ID)¡¤¥°¥ë¡¼
¥×(¥°¥ë¡¼¥×ID)¡¤µö²Ä(½êÍ­¼Ô¤¬¥Õ¥¡¥¤¥ë¤Ë¹Ô¤¨¤ë¤³¤È¡¤¥°¥ë¡¼¥×¤Î¿Í¤¬¤Ç¤­
¤ë¤³¤È¡¤¤½¤·¤Æ¡¤¤½¤ÎÂ¾Ã¯¤Ç¤â²ÄÇ½¤Ç¤¢¤ë¤³¤È)¡¤ÍÍ¡¹¤Ê¥¿¥¤¥à¥¹¥¿¥ó¥×¡¤¤½
¤·¤Æ¤½¤ÎÂ¾¤Î¾ðÊó¤¬¤¢¤ê¤Þ¤¹¡¥¤Þ¤È¤á¤Æ¡¤¤³¤ì¤é¤ò¥Õ¥¡¥¤¥ë¤Î@dfn{Â°À­
(attributes)}¤È¸Æ¤Ó¤Þ¤¹¡¥

@c These commands change file attributes.
@c 
¤³¤ì¤é¤Î¥³¥Þ¥ó¥É¤Ï¥Õ¥¡¥¤¥ë¤ÎÂ°À­¤òÊÑ¹¹¤·¤Þ¤¹¡¥

@menu
* chgrp invocation::            Change file groups.
* chmod invocation::            Change access permissions.
* chown invocation::            Change file owners and groups.
* touch invocation::            Change file timestamps.
@end menu


@node chown invocation
@c @section @command{chown}: Change file owner and group
@section @command{chown}: ¥Õ¥¡¥¤¥ë¤Î½êÍ­¼Ô¤È¥°¥ë¡¼¥×¤ÎÊÑ¹¹

@pindex chown
@cindex file ownership, changing
@cindex group ownership, changing
@cindex changing file ownership
@cindex changing group ownership

@c @command{chown} changes the user and/or group ownership of each given @var{file}
@c to @var{new-owner} or to the user and group of an existing reference file.
@c Synopsis:
@c 
@command{chown}¤Ï¡¤Í¿¤¨¤é¤ì¤¿¤½¤ì¤¾¤ì¤Î@var{file}¤Î¥æ¡¼¥¶¤È/¤Þ¤¿¤Ï¥°¥ë¡¼
¥×¤Î½êÍ­¸¢¤ò¡¤@var{new-owner}¤ä¡¤´ûÂ¸¤Î»²¾È¥Õ¥¡¥¤¥ë¤Î¥æ¡¼¥¶¤È¥°¥ë¡¼¥×
¤ËÊÑ¹¹¤·¤Þ¤¹¡¥³µÍ×¤Ç¤¹¡¥

@example
chown [@var{option}]@dots{} @{@var{new-owner} | --reference=@var{ref_file}@} @var{file}@dots{}
@end example

@c If used, @var{new-owner} specifies the new owner and/or group as follows
@c (with no embedded white space):
@c 
@var{new-owner}¤¬»ÈÍÑ¤µ¤ì¤¿¾ì¹ç¡¤¿·¤·¤¤½êÍ­¼Ô¤È/¤Þ¤¿¤Ï¥°¥ë¡¼¥×¤ò°Ê²¼¤Î
¤è¤¦¤Ë»ØÄê¤·¤Þ¤¹(¶õÇò¤Ï´Þ¤ß¤Þ¤»¤ó)¡¥

@example
[@var{owner}] [ [:] [@var{group}] ]
@end example

@c Specifically:
@c 
¶ñÂÎÎã¤Ç¤¹¡¥

@table @var
@item owner
@c If only an @var{owner} (a user name or numeric user id) is given, that
@c user is made the owner of each given file, and the files' group is not
@c changed.
@c 
@var{owner} (¥æ¡¼¥¶Ì¾¤Þ¤¿¤Ï¿ôÃÍÅª¤Ê¥æ¡¼¥¶ID)¤Î¤ßÍ¿¤¨¤é¤ì¤¿¾ì¹ç¡¤¤½¤Î¥æ¡¼
¥¶¤¬Í¿¤¨¤é¤ì¤¿¤½¤ì¤¾¤ì¤Î¥Õ¥¡¥¤¥ë¤Î½êÍ­¼Ô¤Ë¤Ê¤ê¡¤¥Õ¥¡¥¤¥ë¤Î¥°¥ë¡¼¥×¤ÏÊÑ
¹¹¤µ¤ì¤Þ¤»¤ó¡¥

@itemx owner@samp{:}group
@c If the @var{owner} is followed by a colon and a @var{group} (a
@c group name or numeric group id), with no spaces between them, the group
@c ownership of the files is changed as well (to @var{group}).
@c 
@var{owner}¤Ë¥³¥í¥ó¤È@var{group} (¥°¥ë¡¼¥×Ì¾¤Þ¤¿¤Ï¿ôÃÍÅª¤Ê¥°¥ë¡¼¥×ID) 
¤¬¡¤¤½¤ì¤é´Ö¤Ë¥¹¥Ú¡¼¥¹¤òÃÖ¤«¤º¤ËÂ³¤¤¤Æ¤¤¤ë¾ì¹ç¡¤¥Õ¥¡¥¤¥ë¤Î¥°¥ë¡¼¥×½êÍ­
¸¢¤ò(@var{group}¤Ë)Æ±ÍÍ¤ËÊÑ¹¹¤·¤Þ¤¹¡¥

@itemx owner@samp{:}
@c If a colon but no group name follows @var{owner}, that user is
@c made the owner of the files and the group of the files is changed to
@c @var{owner}'s login group.
@c 
¥³¥í¥ó¤Ï¤¢¤ë¤¬¡¤¥°¥ë¡¼¥×Ì¾¤¬@var{owner}¤ËÂ³¤«¤Ê¤¤¾ì¹ç¡¤¥æ¡¼¥¶¤¬¥Õ¥¡¥¤
¥ë¤Î½êÍ­¼Ô¤Ë¤Ê¤ê¡¤¥Õ¥¡¥¤¥ë¤Î¥°¥ë¡¼¥×¤Ï@var{owner}¤Î¥í¥°¥¤¥ó¥°¥ë¡¼¥×¤Ë
ÊÑ¹¹¤µ¤ì¤Þ¤¹¡¥

@itemx @samp{:}group
@c If the colon and following @var{group} are given, but the owner
@c is omitted, only the group of the files is changed; in this case,
@c @command{chown} performs the same function as @command{chgrp}.
@c 
¥³¥í¥ó¤È¤½¤ì¤ËÂ³¤¯@var{group}¤¬Í¿¤¨¤é¤ì¤Æ¤¤¤ë¤¬½êÍ­¼Ô¤¬¾ÊÎ¬¤µ¤ì¤Æ¤¤¤ë
¾ì¹ç¡¤¥Õ¥¡¥¤¥ë¤Î¥°¥ë¡¼¥×¤Î¤ßÊÑ¹¹¤µ¤ì¤Þ¤¹¡¥¤³¤Î¾ì¹ç¡¤@command{chown}¤Ï
@command{chgrp} ¤ÈÆ±¤¸µ¡Ç½¤ò²Ì¤¿¤·¤Þ¤¹¡¥

@end table

@c Some older scripts may still use @samp{.} in place of the @samp{:} separator.
@c @acronym{POSIX} 1003.1-2001 (@pxref{Standards conformance}) does not
@c require support for that, but for backward compatibility @acronym{GNU}
@c @command{chown} supports @samp{.} so long as no ambiguity results.
@c New scripts should avoid the use of @samp{.} because it is not
@c portable, and because it has undesirable results if the entire
@c @var{owner@samp{.}group} happens to identify a user whose name
@c contains @samp{.}.
@c 
¸Å¤¤¥¹¥¯¥ê¥×¥È¤Ç¤Ï¡¤@samp{:}¥»¥Ñ¥ì¡¼¥¿¤Î¾ì½ê¤Ë@samp{.}¤ò»ÈÍÑ¤·¤Æ¤¤¤ë²Ä
Ç½À­¤¬¤¢¤ê¤Þ¤¹¡¥@acronym{POSIX} 1003.1-2001 (@pxref{Standards
conformance})¤Ç¤Ï¡¤¤½¤ì¤ò¥µ¥Ý¡¼¥È¤¹¤ë¤³¤È¤òÍ×µá¤·¤Æ¤¤¤Þ¤»¤ó¤¬¡¤¸åÊý¸ß
´¹À­¤Î¤¿¤á¡¤@acronym{GNU} @command{chown}¤ÏÛ£Ëæ¤Ê·ë²Ì¤Ë¤Ê¤é¤Ê¤¤¸Â¤ê
@samp{.}¤ò¥µ¥Ý¡¼¥È¤·¤Þ¤¹¡¥¸ß´¹À­¤Î¤¿¤á¡¤¤½¤·¤Æ¡¤
@var{owner@samp{.}group}¤Ç@samp{.}¤ò´Þ¤àÌ¾Á°¤Î¥æ¡¼¥¶¤ò¼±ÊÌ¤·¤Æ¤·¤Þ¤¦¤È
¹¥¤Þ¤·¤¯¤Ê¤¤·ë²Ì¤Ë¤Ê¤ë¤Î¤Ç¡¤¿·¤·¤¤¥¹¥¯¥ê¥×¥È¤Ç¤Ï@samp{.}¤Î»ÈÍÑ¤òÈò¤±¤ë
¤Ù¤­¤Ç¤¹¡¥

@c Warning: The @command{chown} command may clear the set-user-ID or
@c set-group-ID bits on some systems.  The @command{chown} command is
@c dependent upon the policy and functionality of the underlying system
@c which may make system-dependent file mode modifications outside the
@c control of the @command{chown} command.  On some systems (e.g., Linux)
@c the @command{chown} command clears the set-UID and set-GID bits because
@c the underlying, system @code{chown} function clears them.  On other
@c systems (e.g., HP-UX and Solaris) the @command{chown} command does not
@c affect those bits when operated as the superuser.  On systems which allow
@c non-privileged use of chown those bits are always cleared by the system.
@c When in doubt, check the underlying system behavior.
@c 
·Ù¹ð¡§@command{chown}¥³¥Þ¥ó¥É¤Ï¡¤¥·¥¹¥Æ¥à¤Ë¤è¤Ã¤Æ¤Ï¥»¥Ã¥È¥æ¡¼¥¶ID¤ä¥»¥Ã
¥È¥°¥ë¡¼¥×ID¥Ó¥Ã¥È¤¬¥¯¥ê¥¢¤µ¤ì¤Æ¤¤¤ë¤«¤â¤·¤ì¤Þ¤»¤ó¡¥@command{chown}¥³
¥Þ¥ó¥É¤Ï¡¤@command{chown}¥³¥Þ¥ó¥É¤ÎÀ©¸æ²¼¤Ë¤Ê¤¤¥·¥¹¥Æ¥à°ÍÂ¸¤Î¥Õ¥¡¥¤¥ë
¤Î¥â¡¼¥ÉÊÑ¹¹¤¹¤ë¡¤´ðÁÃÅª¤Ê¥·¥¹¥Æ¥à¤Î¥Ý¥ê¥·¡¼¤Èµ¡Ç½¤Ë°ÍÂ¸¤·¤Þ¤¹¡¥¥·¥¹¥Æ
¥à¤Ë¤è¤Ã¤Æ¤Ï(Îã¤¨¤ÐLinux)¡¤´ðÁÃÅª¤Ê¥·¥¹¥Æ¥à¤Î@code{chown}´Ø¿ô¤¬¥¯¥ê¥¢
¤·¤Æ¤¤¤ë¤Î¤Ç¡¤@command{chown}¥³¥Þ¥ó¥É¤Î¥»¥Ã¥È¥æ¡¼¥¶ID¤ä¥»¥Ã¥È¥°¥ë¡¼¥×
ID¥Ó¥Ã¥È¤Ï¥¯¥ê¥¢¤µ¤ì¤Æ¤Þ¤¹¡¥¤½¤ì°Ê³°¤Î¥·¥¹¥Æ¥à(Îã¤¨¤ÐHP-UX¤ÈSolaris)¤Ç
¤Ï¡¤¥¹¡¼¥Ñ¡¼¥æ¡¼¥¶¤È¤·¤Æ½èÍý¤µ¤ì¤ë¤È¤­¡¤@command{chown}¥³¥Þ¥ó¥É¤Ï¤³¤ì
¤é¤Î¥Ó¥Ã¥È¤Ë±Æ¶Á¤·¤Þ¤»¤ó¡¥@command{chown}¤ÎÍøÍÑ¤¬ÆÃ¸¢¥æ¡¼¥¶°Ê³°¤Ëµö²Ä
¤µ¤ì¤Æ¤¤¤ë¥·¥¹¥Æ¥à¤Ç¤Ï¡¤¤³¤ì¤é¤Î¥Ó¥Ã¥È¤Ï¾ï¤Ë¥·¥¹¥Æ¥à¤Ë¤è¤Ã¤Æ¥¯¥ê¥¢¤µ¤ì
¤Æ¤¤¤Þ¤¹¡¥¤½¤¦¤Ç¤Ê¤¤¤È¤­¡¤´ðÁÃÅª¤Ê¥·¥¹¥Æ¥à¤ÎÆ°ºî¤òÄ´ºº¤·¤Æ²¼¤µ¤¤¡¥

@c The program accepts the following options.  Also see @ref{Common options}.
@c 
¥×¥í¥°¥é¥à¤Ï°Ê²¼¤Î¥ª¥×¥·¥ç¥ó¤â¼õ¤±Æþ¤ì¤Þ¤¹¡¥@ref{Common options}¤â»²¾È
¤·¤Æ¤¯¤À¤µ¤¤¡¥

@table @samp

@item -c
@itemx --changes
@opindex -c
@opindex --changes
@cindex changed owners, verbosely describing
@c Verbosely describe the action for each @var{file} whose ownership
@c actually changes.
@c 
½êÍ­¸¢¤¬¼ÂºÝ¤ËÊÑ¹¹¤µ¤ì¤ë¤½¤ì¤¾¤ì¤Î@var{file}¤ËÂÐ¤¹¤ëÆ°ºî¤ò¡¤¾éÄ¹¤Ëµ­½Ò
¤·¤Þ¤¹¡¥

@item -f
@itemx --silent
@itemx --quiet
@opindex -f
@opindex --silent
@opindex --quiet
@cindex error messages, omitting
@c Do not print error messages about files whose ownership cannot be
@c changed.
@c 
½êÍ­¸¢¤òÊÑ¹¹¤Ç¤­¤Ê¤¤¥Õ¥¡¥¤¥ë¤Ë¤Ä¤¤¤Æ¤Î¥¨¥é¡¼¥á¥Ã¥»¡¼¥¸¤ò½ÐÎÏ¤·¤Þ¤»¤ó¡¥

@itemx @w{@kbd{--from}=@var{old-owner}}
@opindex --from
@cindex symbolic links, changing owner
@c Change a @var{file}'s ownership only if it has current attributes specified
@c by @var{old-owner}.  @var{old-owner} has the same form as @var{new-owner}
@c described above.
@c This option is useful primarily from a security standpoint in that
@c it narrows considerably the window of potential abuse.
@c For example, to reflect a UID numbering change for one user's files
@c without an option like this, @code{root} might run
@c 
@var{old-owner}¤Ç»ØÄê¤µ¤ì¤Æ¤¤¤ë¸½ºß¤ÎÂ°À­¤¬¤¢¤ë¾ì¹ç¡¤@var{file}¤Î½êÍ­
¸¢¤òÊÑ¹¹¤·¤Þ¤¹¡¥@var{old-owner}¤Ï¡¤¾åµ­¤Î@var{new-owner}¤Îµ­½Ò¤ÈÆ±¤¸·Á
¼°¤Ç¤¹¡¥¤³¤Î¥ª¥×¥·¥ç¥ó¤Ï¡¤ÀøºßÅª¤Ê°­½¬¤ÎÁë¤ò¤«¤Ê¤ê¶¹¤á¤ë¤È¤¤¤¦ÅÀ¤Ç¡¤¥»
¥­¥å¥ê¥Æ¥£¤ÎÎ©¾ì¤«¤é¼ç¤ËÌò¤ËÎ©¤Á¤Þ¤¹¡¥Îã¤¨¤Ð¡¤°Ê²¼¤Î¤è¤¦¤Ë¡¤¤³¤Î¥ª¥×¥·¥ç
¥ó¤ò»ÈÍÑ¤·¤Ê¤¤¤Ç¡¤¥æ¡¼¥¶¤Î¥Õ¥¡¥¤¥ë¤ËÂÐ¤·¤ÆUID¤ÎÊÑ¹¹¤òÈ¿±Ç¤µ¤»¤ë¤¿¤á¤Ë¡¤
@code{root}¤¬¼Â¹Ô¤·¤¿¤È¤·¤Þ¤¹¡¥

@smallexample
find / -owner OLDUSER -print0 | xargs -0 chown NEWUSER
@end smallexample

@c But that is dangerous because the interval between when the @command{find}
@c tests the existing file's owner and when the @command{chown} is actually run
@c may be quite large.
@c One way to narrow the gap would be to invoke chown for each file
@c as it is found:
@c 
¤·¤«¤·¡¤@command{find}¤¬´ûÂ¸¤Î¥Õ¥¡¥¤¥ë¤Î½êÍ­¼Ô¤ò¥Æ¥¹¥È¤·¤¿¤È¤­¤È¡¤
@command{chown}¤¬¼ÂºÝ¤Ë¼Â¹Ô¤·¤¿¤È¤­¤Î´Ö¤¬Èó¾ï¤ËÄ¹¤¤²ÄÇ½À­¤¬¤¢¤ë¤Î¤Ç¡¤
¤½¤ì¤Ï´í¸±¤Ç¤¹¡¥¥®¥ã¥Ã¥×¤ò¾®¤µ¤¯¤¹¤ë¤Ò¤È¤Ä¤ÎÊýË¡¤Ï¡¤¤½¤ì¤¾¤ì¤Î¥Õ¥¡¥¤¥ë
¤ËÂÐ¤·¸«¤Ä¤«¤Ã¤¿¤È¤­¤Ë@command{chown}¤ò¸Æ¤Ó½Ð¤¹¤³¤È¤Ç¤¹¡¥

@example
find / -owner OLDUSER -exec chown NEWUSER @{@} \;
@end example

@c But that is very slow if there are many affected files.
@c With this option, it is safer (the gap is narrower still)
@c though still not perfect:
@c 
¤·¤«¤·¡¤±Æ¶Á¤µ¤ì¤ë¥Õ¥¡¥¤¥ë¤¬Â¿¤¤¾ì¹ç¤Ï¡¤¤½¤ì¤ÏÈó¾ï¤ËÃÙ¤¯¤Ê¤ê¤Þ¤¹¡¥¤³¤Î
¥ª¥×¥·¥ç¥ó¤òÍÑ¤¤¤ë¤È¡¤(¥®¥ã¥Ã¥×¤ò¶¹¤á¤¿¤Þ¤Þ¤Ç)´°Á´¤Ç¤Ï¤¢¤ê¤Þ¤»¤ó¤¬¡¤¤½
¤ì¤Ï°ÂÁ´¤Ë¤Ê¤ê¤Þ¤¹¡¥

@example
chown -R --from=OLDUSER NEWUSER /
@end example

@item --dereference
@opindex --dereference
@cindex symbolic links, changing owner
@findex lchown
@c Do not act on symbolic links themselves but rather on what they point to.
@c 
¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯¼«¿È¤ËÆ°ºî¤»¤º¡¤¤½¤ì¤¬¼¨¤¹¤â¤Î¤ËÆ°ºî¤·¤Þ¤¹¡¥

@item -h
@itemx --no-dereference
@opindex -h
@opindex --no-dereference
@cindex symbolic links, changing owner
@findex lchown
@c Act on symbolic links themselves instead of what they point to.
@c This is the default.
@c This mode relies on the @code{lchown} system call.
@c On systems that do not provide the @code{lchown} system call,
@c @command{chown} fails when a file specified on the command line
@c is a symbolic link.
@c By default, no diagnostic is issued for symbolic links encountered
@c during a recursive traversal, but see @option{--verbose}.
@c 
¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯¤¬¼¨¤¹¤â¤Î¤Ç¤Ï¤Ê¤¯¡¤¤½¤ì¼«¿È¤ËÆ°ºî¤·¤Þ¤¹¡¥¤³¤ì¤Ï¥Ç¥Õ¥©
¥ë¥È¤Ç¤¹¡¥¤³¤Î¥â¡¼¥É¤Ï@code{lchown}¥·¥¹¥Æ¥à¥³¡¼¥ë¤Ë°ÍÂ¸¤·¤Þ¤¹¡¥
@code{lchown}¥·¥¹¥Æ¥à¥³¡¼¥ë¤¬Äó¶¡¤µ¤ì¤Æ¤¤¤Ê¤¤¥·¥¹¥Æ¥à¤Ç¤Ï¡¤¥³¥Þ¥ó¥É¥é
¥¤¥ó¤Ç»ØÄê¤µ¤ì¤ë¥Õ¥¡¥¤¥ë¤¬¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯¤Î»þ¡¤@command{chown}¤Ï¼º
ÇÔ¤·¤Þ¤¹¡¥¥Ç¥Õ¥©¥ë¥È¤Ç¡¤ºÆµ¢Åª¤Ê½èÍý¤Î´Ö¤ËÈ¯¸«¤µ¤ì¤ë¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯
¤ËÂÐ¤¹¤ë¿ÇÃÇ·ë²Ì¤ÏÉ½¼¨¤µ¤ì¤Þ¤»¤ó¤¬¡¤¤½¤ì¤Ë¤Ä¤¤¤Æ¤Ï@option{--verbose}¤Ï
»²¾È¤·¤Æ¤¯¤À¤µ¤¤¡¥

@itemx --preserve-root
@opindex --preserve-root
@cindex root directory, disallow recursive modification
@c Fail upon any attempt to recursively change the filesystem root, @file{/}.
@c Without @option{--recursive}, this option has no effect.
@c @xref{Treating / specially}.
@c 
@option{--recursive}¥ª¥×¥·¥ç¥ó¤ò»ÈÍÑ¤·¤Æ¤¤¤ë¤È¤­¡¤¥Õ¥¡¥¤¥ë¥·¥¹¥Æ¥à¤Î¥ë¡¼
¥È¡¤@file{/}¤Î°ÜÆ°¤¹¤ë»î¤ß¤ò¼ºÇÔ¤µ¤»¤Þ¤¹¡¥@option{--recursive}¤òÍÑ¤¤¤Æ
¤¤¤Ê¤¤¾ì¹ç¡¤¤³¤Î¥ª¥×¥·¥ç¥ó¤Ï¸ú²Ì¤¬¤¢¤ê¤Þ¤»¤ó¡¥@xref{Treating / specially}.

@itemx --no-preserve-root
@opindex --no-preserve-root
@cindex root directory, allow recursive modification
@c Cancel the effect of any preceding @option{--preserve-root} option.
@c @xref{Treating / specially}.
@c 
¤½¤ì°ÊÁ°¤Î@option{--preserve-root}¥ª¥×¥·¥ç¥ó¤Î¸ú²Ì¤ò¼è¤ê¾Ã¤·¤Þ¤¹¡¥
@xref{Treating / specially}.

@item --reference=@var{ref_file}
@opindex --reference
@c Change the user and group of each @var{file} to be the same as those of
@c @var{ref_file}.  If @var{ref_file} is a symbolic link, do not use the
@c user and group of the symbolic link, but rather those of the file it
@c refers to.
@c 
¤½¤ì¤¾¤ì¤Î@var{file}¤Î¥æ¡¼¥¶¤È¥°¥ë¡¼¥×¤ò¡¤@var{ref_file}¤ÈÆ±¤¸¤Ë¤Ê¤ë¤è
¤¦¤ËÊÑ¹¹¤·¤Þ¤¹¡¥@var{ref_file}¤¬¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯¤Î¾ì¹ç¡¤¥·¥ó¥Ü¥ê¥Ã¥¯
¥ê¥ó¥¯¤Î¥æ¡¼¥¶¤È¥°¥ë¡¼¥×¤Ç¤Ï¤Ê¤¯¡¤¤½¤ì¤¬»²¾È¤¹¤ë¥Õ¥¡¥¤¥ë¤Î¤â¤Î¤ò»ÈÍÑ¤·
¤Þ¤¹¡¥

@item -v
@itemx --verbose
@opindex -v
@opindex --verbose
@c Output a diagnostic for every file processed.
@c If a symbolic link is encountered during a recursive traversal
@c on a system without the @code{lchown} system call, and @option{--no-dereference}
@c is in effect, then issue a diagnostic saying neither the symbolic link nor
@c its referent is being changed.
@c 
½èÍý¤µ¤ì¤¿Á´¤Æ¤Î¥Õ¥¡¥¤¥ë¤ËÂÐ¤·¡¤¿ÇÃÇ·ë²Ì¤ò½ÐÎÏ¤·¤Þ¤¹¡¥@code{lchown}¥·
¥¹¥Æ¥à¥³¡¼¥ë¤¬¤Ê¤¤¥·¥¹¥Æ¥à¤Ç¡¤ºÆµ¢Åª¤Ê½èÍý¤Î´Ö¤Ë¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯¤¬¸«
¤Ä¤«¤ê¡¤@option{--no-dereference}¤Î±Æ¶Á¤¬¤¢¤ë¾ì¹ç¡¤¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯
¤â¤½¤Î»²¾ÈÀè¤âÊÑ¹¹¤µ¤ì¤Ê¤¤¤³¤È¤ò¹ð¤²¤ë¿ÇÃÇ·ë²Ì¤òÉ½¼¨¤·¤Þ¤¹¡¥

@item -R
@itemx --recursive
@opindex -R
@opindex --recursive
@cindex recursively changing file ownership
@c Recursively change ownership of directories and their contents.
@c 
¥Ç¥£¥ì¥¯¥È¥ê¤È¤½¤ÎÆâÍÆ¤Î½êÍ­¸¢¤òºÆµ¢Åª¤ËÊÑ¹¹¤·¤Þ¤¹¡¥

@choptH
@xref{Traversing symlinks}.

@choptL
@xref{Traversing symlinks}.

@choptP
@xref{Traversing symlinks}.

@end table

@exitstatus


@node chgrp invocation
@c @section @command{chgrp}: Change group ownership
@section @command{chgrp}: ¥°¥ë¡¼¥×¤Î½êÍ­¸¢¤ÎÊÑ¹¹

@pindex chgrp
@cindex group ownership, changing
@cindex changing group ownership

@c @command{chgrp} changes the group ownership of each given @var{file}
@c to @var{group} (which can be either a group name or a numeric group id)
@c or to the group of an existing reference file.  Synopsis:
@c 
@command{chgrp}¤Ï¡¤¤½¤ì¤¾¤ì¤ÎÍ¿¤¨¤é¤ì¤¿@var{file}¤Î¥°¥ë¡¼¥×½êÍ­¸¢¤ò
@var{group}(¥°¥ë¡¼¥×Ì¾¤Þ¤¿¤Ï¥°¥ë¡¼¥×ID¤Î¤É¤Á¤é¤«¤ÇÍ¿¤¨¤é¤ì¤ë¤Ï¤º¤Ç¤¹)¡¤
¤Þ¤¿¤Ï¡¤´ûÂ¸¤Î»²¾È¥Õ¥¡¥¤¥ë¤Î¥°¥ë¡¼¥×¤ËÊÑ¹¹¤·¤Þ¤¹¡¥³µÍ×¤Ç¤¹¡¥

@example
chgrp [@var{option}]@dots{} @{@var{group} | --reference=@var{ref_file}@} @var{file}@dots{}
@end example

@c The program accepts the following options.  Also see @ref{Common options}.
@c 
¥×¥í¥°¥é¥à¤Ï°Ê²¼¤Î¥ª¥×¥·¥ç¥ó¤â¼õ¤±Æþ¤ì¤Þ¤¹¡¥@ref{Common options}¤â»²¾È
¤·¤Æ¤¯¤À¤µ¤¤¡¥

@table @samp

@item -c
@itemx --changes
@opindex -c
@opindex --changes
@cindex changed files, verbosely describing
@c Verbosely describe the action for each @var{file} whose group actually
@c changes.
@c 
¥°¥ë¡¼¥×¤¬¼ÂºÝ¤ËÊÑ¹¹¤µ¤ì¤Æ¤¤¤ë¤½¤ì¤¾¤ì¤Î@var{file}¤ËÂÐ¤·¡¤Æ°ºî¤ò¾éÄ¹¤Ë
µ­½Ò¤·¤Þ¤¹¡¥

@item -f
@itemx --silent
@itemx --quiet
@opindex -f
@opindex --silent
@opindex --quiet
@cindex error messages, omitting
@c Do not print error messages about files whose group cannot be
@c changed.
@c 
¥°¥ë¡¼¥×¤òÊÑ¹¹¤Ç¤­¤Ê¤«¤Ã¤¿¥Õ¥¡¥¤¥ë¤Ë´Ø¤¹¤ë¥¨¥é¡¼¥á¥Ã¥»¡¼¥¸¤ò½ÐÎÏ¤·¤Þ¤»
¤ó¡¥

@item --dereference
@opindex --dereference
@cindex symbolic links, changing owner
@findex lchown
@c Do not act on symbolic links themselves but rather on what they point to.
@c 
¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯¼«¿È¤ËºîÍÑ¤¹¤ë¤Î¤Ç¤Ï¤Ê¤¯¡¤¤½¤ì¤¬»Ø¤·¼¨¤¹¤â¤Î¤ËºîÍÑ¤·
¤Þ¤¹¡¥

@item -h
@itemx --no-dereference
@opindex -h
@opindex --no-dereference
@cindex symbolic links, changing group
@findex lchown
@c Act on symbolic links themselves instead of what they point to.
@c This is the default.
@c This mode relies on the @code{lchown} system call.
@c On systems that do not provide the @code{lchown} system call,
@c @command{chgrp} fails when a file specified on the command line
@c is a symbolic link.
@c By default, no diagnostic is issued for symbolic links encountered
@c during a recursive traversal, but see @option{--verbose}.
@c 
¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯¤ò¡¤¤½¤ì¤¬»Ø¤·¼¨¤¹¤â¤Î¤ÎÂå¤ï¤ê¤Ë¤½¤ì¼«¿È¤ËÆ°ºî¤·¤Þ¤¹¡¥
¤³¤ì¤Ï¥Ç¥Õ¥©¥ë¥È¤Ç¤¹¡¥¤³¤Î¥â¡¼¥É¤Ï@code{lchown}¥·¥¹¥Æ¥à¥³¡¼¥ë¤Ë°ÍÂ¸¤·
¤Þ¤¹¡¥¥³¥Þ¥ó¥É¥é¥¤¥ó¤Ç»ØÄê¤µ¤ì¤Æ¤¤¤ë¥Õ¥¡¥¤¥ë¤¬¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯¤Î»þ¡¤
@command{chgrp}¤Ï¼ºÇÔ¤·¤Þ¤¹¡¥¥Ç¥Õ¥©¥ë¥È¤Ç¡¤ºÆµ¢Åª¤ÊÊÑ´¹¤Î´Ö¤Ë¸«¤Ä¤«¤Ã
¤¿¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯¤ËÂÐ¤·¿ÇÃÇ·ë²Ì¤ÏÉ½¼¨¤µ¤ì¤Þ¤»¤ó¤¬¡¤¤½¤ì¤Ë¤Ä¤¤¤Æ¤Ï
@option{--verbose}¤ò»²¾È¤·¤Æ¤¯¤À¤µ¤¤¡¥

@itemx --preserve-root
@opindex --preserve-root
@cindex root directory, disallow recursive modification
@c Fail upon any attempt to recursively change the filesystem root, @file{/}.
@c Without @option{--recursive}, this option has no effect.
@c @xref{Treating / specially}.
@c 
@option{--recursive}¥ª¥×¥·¥ç¥ó¤ò»ÈÍÑ¤·¤Æ¤¤¤ë¤È¤­¡¤¥Õ¥¡¥¤¥ë¥·¥¹¥Æ¥à¤Î¥ë¡¼
¥È¡¤@file{/}¤Î°ÜÆ°¤¹¤ë»î¤ß¤ò¼ºÇÔ¤µ¤»¤Þ¤¹¡¥@option{--recursive}¤òÍÑ¤¤¤Æ
¤¤¤Ê¤¤¾ì¹ç¡¤¤³¤Î¥ª¥×¥·¥ç¥ó¤Ï¸ú²Ì¤¬¤¢¤ê¤Þ¤»¤ó¡¥@xref{Treating / specially}.

@itemx --no-preserve-root
@opindex --no-preserve-root
@cindex root directory, allow recursive modification
@c Cancel the effect of any preceding @option{--preserve-root} option.
@c @xref{Treating / specially}.
@c 
¤½¤ì°ÊÁ°¤Î@option{--preserve-root}¥ª¥×¥·¥ç¥ó¤Î¸ú²Ì¤ò¼è¤ê¾Ã¤·¤Þ¤¹¡¥
@xref{Treating / specially}.

@item --reference=@var{ref_file}
@opindex --reference
@c Change the group of each @var{file} to be the same as that of
@c @var{ref_file}.  If @var{ref_file} is a symbolic link, do not use the
@c group of the symbolic link, but rather that of the file it refers to.
@c 
¤½¤ì¤¾¤ì¤Î@var{file}¤Î¥°¥ë¡¼¥×¤ò¡¤@var{ref_file}¤ÈÆ±¤¸¤Ë¤Ê¤ë¤è¤¦¤ËÊÑ¹¹
¤·¤Þ¤¹¡¥@var{ref_file}¤¬¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯¤Î¾ì¹ç¡¤¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯¤Î
¥°¥ë¡¼¥×¤Ç¤Ï¤Ê¤¯¡¤¤½¤ì¤¬»²¾È¤¹¤ë¥Õ¥¡¥¤¥ë¤Î¤â¤Î¤ò»ÈÍÑ¤·¤Þ¤¹¡¥

@item -v
@itemx --verbose
@opindex -v
@opindex --verbose
@c Output a diagnostic for every file processed.
@c If a symbolic link is encountered during a recursive traversal
@c on a system without the @code{lchown} system call, and @option{--no-dereference}
@c is in effect, then issue a diagnostic saying neither the symbolic link nor
@c its referent is being changed.
@c 
½èÍý¤·¤¿Á´¤Æ¤Î¥Õ¥¡¥¤¥ë¤ËÂÐ¤·¡¤¿ÇÃÇ·ë²Ì¤ò½ÐÎÏ¤·¤Þ¤¹¡¥@code{lchown}¥·¥¹
¥Æ¥à¥³¡¼¥ë¤¬¤Ê¤¤¥·¥¹¥Æ¥à¤Ç¡¤ºÆµ¢Åª¤ÊÊÑ´¹¤Î´Ö¤Ë¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯¤¬¸«¤Ä
¤«¤ê¡¤@option{--no-dereference}¤¬Í­¸ú¤Ç¤Ê¤¤¾ì¹ç¡¤¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯¤â
»²¾È¤¹¤ë¤â¤Î¤âÊÑ¹¹¤µ¤ì¤Ê¤¤¤³¤È¤ò¹ð¤²¤ë¿ÇÃÇ·ë²Ì¤òÉ½¼¨¤·¤Þ¤¹¡¥

@item -R
@itemx --recursive
@opindex -R
@opindex --recursive
@cindex recursively changing group ownership
@c Recursively change the group ownership of directories and their contents.
@c 
¥Ç¥£¥ì¥¯¥È¥ê¤È¤½¤ÎÆâÍÆ¤Î¥°¥ë¡¼¥×½êÍ­¸¢¤òºÆµ¢Åª¤ËÊÑ¹¹¤·¤Þ¤¹¡¥

@choptH
@xref{Traversing symlinks}.

@choptL
@xref{Traversing symlinks}.

@choptP
@xref{Traversing symlinks}.

@end table

@exitstatus


@node chmod invocation
@c @section @command{chmod}: Change access permissions
@section @command{chmod}: ¥¢¥¯¥»¥¹µö²Ä¤ÎÊÑ¹¹

@pindex chmod
@cindex changing access permissions
@cindex access permissions, changing
@cindex permissions, changing access

@c @command{chmod} changes the access permissions of the named files.  Synopsis:
@c 
@command{chmod}¤Ï»ØÌ¾¤µ¤ì¤¿¥Õ¥¡¥¤¥ë¤Î¥¢¥¯¥»¥¹µö²Ä¤òÊÑ¹¹¤·¤Þ¤¹¡¥³µÍ×¤Ç
¤¹¡¥

@example
chmod [@var{option}]@dots{} @{@var{mode} | --reference=@var{ref_file}@} @var{file}@dots{}
@end example

@cindex symbolic links, permissions of
@c @command{chmod} never changes the permissions of symbolic links, since
@c the @command{chmod} system call cannot change their permissions.
@c This is not a problem since the permissions of symbolic links are
@c never used.  However, for each symbolic link listed on the command
@c line, @command{chmod} changes the permissions of the pointed-to file.
@c In contrast, @command{chmod} ignores symbolic links encountered during
@c recursive directory traversals.
@c 
@command{chmod}¥·¥¹¥Æ¥à¥³¡¼¥ë¤Ï¡¤¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯¤Îµö²Ä¤òÊÑ¹¹¤Ç¤­¤Ê
¤¤¤¿¤á¡¤@command{chmod}¤Ï¤½¤ì¤é¤Î¤Îµö²Ä¤ò·è¤·¤ÆÊÑ¹¹¤·¤Þ¤»¤ó¡¥¥·¥ó¥Ü¥ê¥Ã
¥¯¥ê¥ó¥¯¤Îµö²Ä¤Ï·è¤·¤Æ»ÈÍÑ¤µ¤ì¤Ê¤¤¤Î¤Ç¡¤¤³¤ì¤ÏÌäÂê¤Ç¤Ï¤¢¤ê¤Þ¤»¤ó¡¥¤·¤«
¤·¡¤¥³¥Þ¥ó¥É¥é¥¤¥ó¤Ç¥ê¥¹¥È¥¢¥Ã¥×¤µ¤ì¤¿¤½¤ì¤¾¤ì¤Î¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯¤ËÂÐ
¤·¡¤@command{chmod}¤Ï»Ø¤·¼¨¤µ¤ì¤¿¥Õ¥¡¥¤¥ë¤Îµö²Ä¤òÊÑ¹¹¤·¤Þ¤¹¡¥¤½¤ÎÂå¤ï
¤ê¡¤ºÆµ¢Åª¤Ë¥Ç¥£¥ì¥¯¥È¥ê¤ò²£ÃÇ¤·¤Æ¤¤¤ë´Ö¡¤@command{chmod}¤Ï¡¤Áø¶ø¤·¤¿
¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯¤òÌµ»ë¤·¤Þ¤¹¡¥

@c If used, @var{mode} specifies the new permissions.
@c For details, see the section on @ref{File permissions}.
@c 
@var{mode}¤¬»ÈÍÑ¤µ¤ì¤Æ¤¤¤ë¾ì¹ç¡¤¤½¤ì¤Ï¿·¤·¤¤µö²Ä¤ò»ØÄê¤·¤Þ¤¹¡¥¾ÜºÙ¤Ï
@ref{File permissions}¤Î¥»¥¯¥·¥ç¥ó¤ò»²¾È¤·¤Æ¤¯¤À¤µ¤¤¡¥

@c The program accepts the following options.  Also see @ref{Common options}.
@c 
¥×¥í¥°¥é¥à¤Ï°Ê²¼¤Î¥ª¥×¥·¥ç¥ó¤â¼õ¤±Æþ¤ì¤Þ¤¹¡¥@ref{Common options}¤â»²¾È
¤·¤Æ¤¯¤À¤µ¤¤¡¥

@table @samp

@item -c
@itemx --changes
@opindex -c
@opindex --changes
@c Verbosely describe the action for each @var{file} whose permissions
@c actually changes.
@c 
µö²Ä¤¬¼ÂºÝ¤ËÊÑ¹¹¤µ¤ì¤Æ¤¤¤ë¤½¤ì¤¾¤ì¤Î@var{file}¤ËÂÐ¤·¡¤Æ°ºî¤ò¾éÄ¹¤Ëµ­½Ò
¤·¤Þ¤¹¡¥

@item -f
@itemx --silent
@itemx --quiet
@opindex -f
@opindex --silent
@opindex --quiet
@cindex error messages, omitting
@c Do not print error messages about files whose permissions cannot be
@c changed.
@c 
µö²Ä¤òÊÑ¹¹¤Ç¤­¤Ê¤«¤Ã¤¿¥Õ¥¡¥¤¥ë¤Ë´Ø¤¹¤ë¥¨¥é¡¼¥á¥Ã¥»¡¼¥¸¤ò½ÐÎÏ¤·¤Þ¤»¤ó¡¥

@itemx --preserve-root
@opindex --preserve-root
@cindex root directory, disallow recursive modification
@c Fail upon any attempt to recursively change the filesystem root, @file{/}.
@c Without @option{--recursive}, this option has no effect.
@c @xref{Treating / specially}.
@c 
ºÆµ¢Åª¤Ë¥Õ¥¡¥¤¥ë¥·¥¹¥Æ¥à¤Î¥ë¡¼¥È¡¤@file{/}¤òÊÑ¹¹¤¹¤ë»î¤ß¤ò¼ºÇÔ¤µ¤»¤Þ¤¹¡¥
@option{--recursive}¤òÍÑ¤¤¤Æ¤¤¤Ê¤¤¾ì¹ç¡¤¤³¤Î¥ª¥×¥·¥ç¥ó¤Ï¸ú²Ì¤¬¤¢¤ê¤Þ¤»
¤ó¡¥@xref{Treating / specially}.

@itemx --no-preserve-root
@opindex --no-preserve-root
@cindex root directory, allow recursive modification
@c Cancel the effect of any preceding @option{--preserve-root} option.
@c @xref{Treating / specially}.
@c 
¤½¤ì°ÊÁ°¤Î@option{--preserve-root}¥ª¥×¥·¥ç¥ó¤Î¸ú²Ì¤ò¼è¤ê¾Ã¤·¤Þ¤¹¡¥
@xref{Treating / specially}.

@item -v
@itemx --verbose
@opindex -v
@opindex --verbose
@c Verbosely describe the action or non-action taken for every @var{file}.
@c 
Í¿¤¨¤é¤ì¤¿¤¹¤Ù¤Æ¤Î@var{file}¤ËÂÐ¤·¡¤Æ°ºî¡¤ÈóÆ°ºî¤Î¾éÄ¹¤Êµ­½Ò¤ò¹Ô¤¤¤Þ¤¹¡¥

@item --reference=@var{ref_file}
@opindex --reference
@c Change the mode of each @var{file} to be the same as that of @var{ref_file}.
@c @xref{File permissions}.
@c If @var{ref_file} is a symbolic link, do not use the mode
@c of the symbolic link, but rather that of the file it refers to.
@c 
¤½¤ì¤¾¤ì¤Î@var{file}¤Î¥â¡¼¥É¤ò¡¤@var{ref_file}¤ÈÆ±¤¸¤Ë¤Ê¤ë¤è¤¦¤ËÊÑ¹¹¤·
¤Þ¤¹¡¥@xref{File permissions}.  @var{ref_file}¤¬¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯¤Î¾ì
¹ç¡¤¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯¤Î¥â¡¼¥É¤Ç¤Ï¤Ê¤¯¡¤¤½¤ì¤¬»²¾È¤¹¤ë¥Õ¥¡¥¤¥ë¤Î¤â¤Î¤ò
»ÈÍÑ¤·¤Þ¤¹¡¥

@item -R
@itemx --recursive
@opindex -R
@opindex --recursive
@cindex recursively changing access permissions
@c Recursively change permissions of directories and their contents.
@c 
¥Ç¥£¥ì¥¯¥È¥ê¤È¤½¤ÎÆâÍÆ¤Îµö²Ä¤òºÆµ¢Åª¤ËÊÑ¹¹¤·¤Þ¤¹¡¥

@end table

@exitstatus


@node touch invocation
@c @section @command{touch}: Change file timestamps
@section @command{touch}: ¥Õ¥¡¥¤¥ë¤Î¥¿¥¤¥×¥¹¥¿¥ó¥×¤ÎÊÑ¹¹

@pindex touch
@cindex changing file timestamps
@cindex file timestamps, changing
@cindex timestamps, changing file

@c @command{touch} changes the access and/or modification times of the
@c specified files.  Synopsis:
@c 
@command{touch}¤Ï¡¤»ØÄê¤µ¤ì¤¿¥Õ¥¡¥¤¥ë¤Î¥¢¥¯¥»¥¹¤È/¤äÊÔ½¸¤µ¤ì¤¿»þ´Ö¤òÊÑ
¹¹¤·¤Þ¤¹¡¥³µÍ×¤Ç¤¹¡¥

@example
touch [@var{option}]@dots{} @var{file}@dots{}
@end example

@c On older systems, @command{touch} supports an obsolete syntax, as follows.
@c If the first @var{file} would be a valid argument to the @option{-t}
@c option and no timestamp is given with any of the @option{-d}, @option{-r},
@c or @option{-t} options and the @samp{--} argument is not given, that
@c argument is interpreted as the time for the other files instead of
@c as a file name.  @acronym{POSIX} 1003.1-2001 (@pxref{Standards conformance})
@c does not allow this; use @option{-t} instead.
@c 
¸Å¤¤¥·¥¹¥Æ¥à¤Ç¤Ï¡¤@command{touch}¤Ï°Ê²¼¤Î¤è¤¦¤Ê»þÂåÃÙ¤ì¤Î¹½Ê¸¤ò¤ò¥µ¥Ý¡¼
¥È¤·¤Æ¤¤¤Þ¤¹¡¥ºÇ½é¤Î@var{file}¤¬@option{-t}¥ª¥×¥·¥ç¥ó¤ÎÍ­¸ú¤Ê°ú¿ô¤Ç¡¤
¥¿¥¤¥à¥¹¥¿¥ó¥×¤¬@option{-d}¡¤@option{-r}¡¤¤Þ¤¿¤Ï@option{-t}¥ª¥×¥·¥ç¥ó
¤ÇÁ´¤¯Í¿¤¨¤é¤ì¤Æ¤ª¤é¤º¡¤@samp{--}°ú¿ô¤¬Í¿¤¨¤é¤ì¤Æ¤¤¤Ê¤¤¾ì¹ç¡¤¤½¤Î°ú¿ô
¤Ï¥Õ¥¡¥¤¥ëÌ¾¤È¤·¤Æ¤Ç¤Ï¤Ê¤¯¡¤¤½¤ÎÂ¾¤Î¥Õ¥¡¥¤¥ë¤ËÂÐ¤¹¤ë»þ´Ö¤È¤·¤Æ²ò¼á¤µ¤ì
¤Þ¤¹¡¥@acronym{POSIX} 1003.1-2001 (@pxref{Standards conformance})¤Ç¤Ï¡¤
¤³¤ì¤òµö²Ä¤·¤Æ¤¤¤Þ¤»¤ó¡¥Âå¤ï¤ê¤Ë@option{-t}¤ò»ÈÍÑ¤·¤Æ¤¯¤À¤µ¤¤¡¥

@cindex empty files, creating
@c Any @var{file} that does not exist is created empty.
@c 
Â¸ºß¤·¤Ê¤¤@var{file}¤Ï¤¹¤Ù¤Æ¶õ¤È¤·¤ÆºîÀ®¤µ¤ì¤Þ¤¹¡¥

@cindex permissions, for changing file timestamps
@c If changing both the access and modification times to the current
@c time, @command{touch} can change the timestamps for files that the user
@c running it does not own but has write permission for.  Otherwise, the
@c user must own the files.
@c 
¥¢¥¯¥»¥¹¤ÈÊÔ½¸¤Î»þ´Ö¤ÎÎ¾Êý¤ò¸½ºß¤Î»þ´Ö¤ËÊÑ¹¹¤¹¤ë¤È¤­¡¤@command{touch}
¤Ï¼Â¹Ô¤·¤Æ¤¤¤ë¥æ¡¼¥¶¤¬¥Õ¥¡¥¤¥ë¤Î½êÍ­¼Ô¤ÇÌµ¤¤¤¬¡¤½ñ¤­¹þ¤ßµö²Ä¤¬¤¢¤ë¤â¤Î
¤Î¥¿¥¤¥à¥¹¥¿¥ó¥×¤òÊÑ¹¹¤¹¤ë¤³¤È¤¬¤Ç¤­¤Þ¤¹¡¥¤½¤ì°Ê³°¤Ç¤Ï¡¤¥æ¡¼¥¶¤Ï¤½¤Î¥Õ¥¡
¥¤¥ë¤Î½êÍ­¼Ô¤Ç¤¢¤ëÉ¬Í×¤¬¤¢¤ê¤Þ¤¹¡¥

@c Although @command{touch} provides options for changing two of the times --
@c the times of last access and modification -- of a file, there is actually
@c a third one as well: the inode change time.  This is often referred to
@c as a file's @code{ctime}.
@c The inode change time represents the time when the file's meta-information
@c last changed.  One common example of this is when the permissions of a
@c file change.  Changing the permissions doesn't access the file, so
@c the atime doesn't change, nor does it modify the file, so the mtime
@c doesn't change.  Yet, something about the file itself has changed,
@c and this must be noted somewhere.  This is the job of the ctime field.
@c This is necessary, so that, for example, a backup program can make a
@c fresh copy of the file, including the new permissions value.
@c Another operation that modifies a file's ctime without affecting
@c the others is renaming.  In any case, it is not possible, in normal
@c operations, for a user to change the ctime field to a user-specified value.
@c 
@command{touch}¤Ï¡¤¥Õ¥¡¥¤¥ë¤ÎÆó¤Ä¤Î»þ´Ö -- ºÇ¸å¤Î¥¢¥¯¥»¥¹¤ÈÊÔ½¸ -- ¤ò
ÊÑ¹¹¤¹¤ë¥ª¥×¥·¥ç¥ó¤òÄó¶¡¤·¤Þ¤¹¤¬¡¤¼ÂºÝ¤Ë¤Ï»°ÈÖÌÜ¤Îinode¤ÎÊÑ¹¹»þ´Ö¤âÆ±
¤¸¤Ç¤¹¡¥¤³¤ì¤Ï¥Õ¥¡¥¤¥ë¤Î@code{ctime}¤È¤·¤Æ¤è¤¯»²¾È¤µ¤ì¤Þ¤¹¡¥inode¤ÎÊÑ
¹¹»þ´Ö¤Ï¡¤¥Õ¥¡¥¤¥ë¤Î¥á¥¿¾ðÊó¤¬ºÇ¸å¤ËÊÑ¹¹¤µ¤ì¤¿»þ´Ö¤òÉ½¸½¤·¤Þ¤¹¡¥°ìÈÌÅª
¤ÊÎã¤Î°ì¤Ä¤Ï¡¤¥Õ¥¡¥¤¥ë¤Îµö²Ä¤òÊÑ¹¹¤·¤¿¤È¤­¤Ç¤¹¡¥µö²Ä¤ÎÊÑ¹¹¤Ï¡¤¥Õ¥¡¥¤¥ë
¤Ë¥¢¥¯¥»¥¹¤·¤Ê¤¤¤Î¤Çatime¤òÊÑ¹¹¤·¤Þ¤»¤ó¤·¡¤¥Õ¥¡¥¤¥ë¤ÎÊÔ½¸¤â¤·¤Ê¤¤¤Î¤Ç
mtime¤âÊÑ¹¹¤·¤Þ¤»¤ó¡¥¤·¤«¤·¡¤¥Õ¥¡¥¤¥ë¼«¿È¤Î²¿¤«¤ÏÊÑ¤Ã¤Æ¤¤¤Þ¤Æ¡¤¤³¤ì¤Ï
¤É¤³¤«¤Ëµ­Ï¿¤¹¤ëÉ¬Í×¤¬¤¢¤ê¤Þ¤¹¡¥¤³¤ì¤Ïctime¥Õ¥£¡¼¥ë¥É¤Î»Å»ö¤Ç¤¹¡¥Îã¤¨
¤Ð¡¤¥Ð¥Ã¥¯¥¢¥Ã¥×¥×¥í¥°¥é¥à¤¬¿·¤·¤¤µö²ÄÃÍ¤Þ¤Ç´Þ¤á¤Æ¥Õ¥¡¥¤¥ë¤Î¿·¤·¤¤¥³¥Ô¡¼
¤òºîÀ®¤¹¤ë¤³¤È¤ò²ÄÇ½¤Ë¤¹¤ë¤¿¤á¤Ë¡¤¤³¤ì¤¬É¬Í×¤Ë¤Ê¤ê¤Þ¤¹¡¥Â¾¤Ë±Æ¶Á¤·¤Ê¤¤
¤è¤¦¤Ë¥Õ¥¡¥¤¥ë¤Îctime¤òÊÔ½¸¤¹¤ë¤â¤¦°ì¤Ä¤Î½èÍý¤ÏÌ¾Á°¤ÎÊÑ¹¹¤Ç¤¹¡¥ÄÌ¾ï¤Î
½èÍý¤Ç¤Ï¡¤¥æ¡¼¥¶¤¬ctime¥Õ¥£¡¼¥ë¥É¤ò¥æ¡¼¥¶¤¬»ØÄê¤·¤¿ÃÍ¤ËÊÑ¹¹¤¹¤ë¤³¤È¤Ï¡¤
¤¤¤«¤Ê¤ë¾ì¹ç¤Ç¤âÉÔ²ÄÇ½¤Ç¤¹¡¥

@c The program accepts the following options.  Also see @ref{Common options}.
@c 
¥×¥í¥°¥é¥à¤Ï°Ê²¼¤Î¥ª¥×¥·¥ç¥ó¤â¼õ¤±Æþ¤ì¤Þ¤¹¡¥@ref{Common options}¤â»²¾È
¤·¤Æ²¼¤µ¤¤¡¥

@table @samp

@item -a
@itemx --time=atime
@itemx --time=access
@itemx --time=use
@opindex -a
@opindex --time
@opindex atime@r{, changing}
@opindex access @r{time, changing}
@opindex use @r{time, changing}
@c Change the access time only.
@c 
¥¢¥¯¥»¥¹»þ´Ö¤À¤±ÊÑ¹¹¤·¤Þ¤¹¡¥

@item -c
@itemx --no-create
@opindex -c
@opindex --no-create
@c Do not create files that do not exist.
@c 
Â¸ºß¤·¤Æ¤¤¤Ê¤¤¥Õ¥¡¥¤¥ë¤òºîÀ®¤·¤Þ¤»¤ó¡¥

@item -d
@itemx --date=time
@opindex -d
@opindex --date
@opindex time
@c Use @var{time} instead of the current time.  It can contain month names,
@c time zones, @samp{am} and @samp{pm}, etc.  @xref{Date input formats}.
@c 
¸½ºß¤Î»þ´Ö¤ÎÂå¤ï¤ê¤Ë@var{time}¤ò»ØÄê¤·¤Þ¤¹¡¥¤½¤ì¤Ï¡¤·îÌ¾¡¤¥¿¥¤¥à¥¾¡¼¥ó¡¤
@samp{am}¤È@samp{pm}Åù¤ò´Þ¤á¤ë¤³¤È¤¬²ÄÇ½¤Ç¤¹¡¥@xref{Date input
formats}.

@item -f
@opindex -f
@cindex BSD @command{touch} compatibility
@c Ignored; for compatibility with BSD versions of @command{touch}.
@c 
Ìµ»ë¤µ¤ì¤Þ¤¹¡¥BSDÈÇ¤Î@command{touch}¤Î¸ß´¹À­¤Î¤¿¤á¤Ç¤¹¡¥

@item -m
@itemx --time=mtime
@itemx --time=modify
@opindex -m
@opindex --time
@opindex mtime@r{, changing}
@opindex modify @r{time, changing}
@c Change the modification time only.
@c 
ÊÔ½¸»þ´Ö¤À¤±ÊÑ¹¹¤·¤Þ¤¹¡¥

@item -r @var{file}
@itemx --reference=@var{file}
@opindex -r
@opindex --reference
@c Use the times of the reference @var{file} instead of the current time.
@c If this option is combined with the @option{--date=@var{time}}
@c (@option{-d @var{time}}) option, the reference @var{file}'s time is
@c the origin for any relative @var{time}s given, but is otherwise ignored.
@c For example, @samp{-r foo -d '-5 seconds'} specifies a time stamp
@c equal to five seconds before the corresponding time stamp for @file{foo}.
@c 
¸½ºß¤Î»þ´Ö¤ÎÂå¤ï¤ê¤Ë»²¾È@var{file}¤Î»þ´Ö¤ò»ÈÍÑ¤·¤Þ¤¹¡¥¤³¤Î¥ª¥×¥·¥ç¥ó¤¬
@option{--date=@var{time}} (@option{-d @var{time}})¥ª¥×¥·¥ç¥ó¤ÈÁÈ¤ß¹ç
¤ï¤µ¤ì¤Æ¤¤¤ë¾ì¹ç¡¤»²¾È¤¹¤ë@var{file}¤Î»þ´Ö¤Ï¡¤Í¿¤¨¤é¤ì¤¿¤â¤Î¤Î
@var{time}¤«¤éÁêÂÐÅª¤Ê¤â¤Î¤Ë¤Ê¤ê¤Þ¤¹¤¬¡¤¤½¤ì°Ê³°¤Ç¤ÏÌµ»ë¤µ¤ì¤Þ¤¹¡¥Îã¤¨
¤Ð¡¤@samp{-r foo -d '-5 seconds'}¤Ï¡¤@file{foo}¤ÎÂÐ±þ¤¹¤ë¥¿¥¤¥à¥¹¥¿¥ó
¥×¤Î¸ÞÉÃÁ°¤ÈÆ±¤¸¥¿¥¤¥à¥¹¥¿¥ó¥×¤ò»ØÄê¤·¤Þ¤¹¡¥

@item -t [[CC]YY]MMDDhhmm[.ss]
@c Use the argument (optional four-digit or two-digit years, months,
@c days, hours, minutes, optional seconds) instead of the current time.
@c If the year is specified with only two digits, then @var{CC}
@c is 20 for years in the range 0 @dots{} 68, and 19 for years in
@c 69 @dots{} 99.  If no digits of the year are specified,
@c the argument is interpreted as a date in the current year.
@c 
¸½ºß¤Î»þ´Ö¤ÎÂå¤ï¤ê¤Ë°ú¿ô(¥ª¥×¥·¥ç¥ó¤Î»Í·å¤Þ¤¿¤ÏÆó·å¤ÎÇ¯¡¤·î¡¤Æü¡¤»þ´Ö¡¤
Ê¬¡¤¥ª¥×¥·¥ç¥ó¤ÎÉÃ)¤ò»ÈÍÑ¤·¤Þ¤¹¡¥Ç¯¤¬Æó·å¤Î¤ß¤Ç»ØÄê¤µ¤ì¤¿¾ì¹ç¡¤
@var{CC}¤Ï¡¤0 @dots{} 68¤ËÂÐ¤·20¡¤69 @dots{} 99¤ËÂÐ¤·19¤Ë¤Ê¤ê¤Þ¤¹¡¥Ç¯
¤Î¿ô»ú¤¬»ØÄê¤µ¤ì¤Ê¤¤¾ì¹ç¡¤º£Ç¯¤ÎÆüÉÕ¤È¤·¤Æ²ò¼á¤µ¤ì¤Þ¤¹¡¥

@end table

@exitstatus


@node Disk usage
@c @chapter Disk usage
@chapter ¥Ç¥£¥¯¥¹¤Î»ÈÍÑ

@cindex disk usage

@c No disk can hold an infinite amount of data.  These commands report on
@c how much disk storage is in use or available.  (This has nothing much to
@c do with how much @emph{main memory}, i.e., RAM, a program is using when
@c it runs; for that, you want @command{ps} or @command{pstat} or @command{swap}
@c or some such command.)
@c 
Ìµ¸Â¤ÎÎÌ¤Î¥Ç¡¼¥¿¤òÊÝ¤Æ¤ë¥Ç¥£¥¹¥¯¤Ï¤¢¤ê¤Þ¤»¤ó¡¥¤³¤ì¤é¤Î¥³¥Þ¥ó¥É¤Ï¡¤¥Ç¥£
¥¹¥¯¥¹¥È¥ì¡¼¥¸¤Î»ÈÍÑ¤äÍøÍÑ²ÄÇ½¤ÊÎÌ¤òÊó¹ð¤·¤Þ¤¹¡¥(¤³¤ì¤Ï@emph{¥á¥¤¥ó¥á
¥â¥ê}¡¤¤¹¤Ê¤ï¤Á¡¤¥×¥í¥°¥é¥à¤¬¼Â¹Ô»þ¤Ë»ÈÍÑ¤¹¤ëRAM¤ÎÎÌ¤ËÂÐ¤·¤Æ¤Ï½ÅÍ×¤Ê¤³
¤È¤Ï¤·¤Þ¤»¤ó¡¥¤½¤Î¤¿¤á¡¤@code{ps}¤ä@code{pstat}¤ä@code{swap}¤ä¤½¤Î¤è¤¦
¤Ê¥³¥Þ¥ó¥É¤¬É¬Í×¤Ç¤¹¡¥)

@menu
* df invocation::               Report filesystem disk space usage.
* du invocation::               Estimate file space usage.
* stat invocation::		Report file or filesystem status.
* sync invocation::             Synchronize memory and disk.
@end menu


@node df invocation
@c @section @command{df}: Report filesystem disk space usage
@section @command{df}: ¥Õ¥¡¥¤¥ë¥·¥¹¥Æ¥à¤Î¥Ç¥£¥¹¥¯¥¹¥Ú¡¼¥¹¤Î»ÈÍÑ¤ÎÊó¹ð

@pindex df
@cindex filesystem disk usage
@cindex disk usage by filesystem

@c @command{df} reports the amount of disk space used and available on
@c filesystems.  Synopsis:
@c 
@command{df}¤Ï¡¤¥Õ¥¡¥¤¥ë¥·¥¹¥Æ¥à¤Î»ÈÍÑ¤µ¤ì¤Æ¤¤¤ë¥Ç¥£¥¹¥¯¥¹¥Ú¡¼¥¹¤ÈÍøÍÑ
²ÄÇ½¤Ê¥Ç¥£¥¹¥¯¥¹¥Ú¡¼¥¹¤ÎÎÌ¤òÊó¹ð¤·¤Þ¤¹¡¥³µÍ×¤Ç¤¹¡¥

@example
df [@var{option}]@dots{} [@var{file}]@dots{}
@end example

@c With no arguments, @command{df} reports the space used and available on all
@c currently mounted filesystems (of all types).  Otherwise, @command{df}
@c reports on the filesystem containing each argument @var{file}.
@c 
°ú¿ô¤òÍÑ¤¤¤Ê¤¤¾ì¹ç¡¤@command{df}¤Ï¸½ºß¥Þ¥¦¥ó¥È¤µ¤ì¤Æ¤¤¤ë(¤¹¤Ù¤Æ¤Î·Á¼°
¤Î)¤¹¤Ù¤Æ¤Î¥Õ¥¡¥¤¥ë¥·¥¹¥Æ¥à¤Î»ÈÍÑ¤µ¤ì¤Æ¤¤¤ë¡¤¤½¤·¤ÆÍøÍÑ²ÄÇ½¤Ê¶õ´Ö¤òÊó
¹ð¤·¤Þ¤¹¡¥¤½¤ì°Ê³°¤Ç¤Ï¡¤@command{df}¤Ï¤½¤ì¤¾¤ì¤Î°ú¿ô¤Î@var{file}¤ò´Þ¤à
¥Õ¥¡¥¤¥ë¥·¥¹¥Æ¥à¾å¤ÎÆâÍÆ¤òÊó¹ð¤·¤Þ¤¹¡¥

@c Normally the disk space is printed in units of
@c 1024 bytes, but this can be overridden (@pxref{Block size}).
@c Non-integer quantities are rounded up to the next higher unit.
@c 
ÄÌ¾ï¥Ç¥£¥¹¥¯¥¹¥Ú¡¼¥¹¤Ï1024¥Ð¥¤¥ÈÃ±°Ì¤Ç½ÐÎÏ¤µ¤ì¤Þ¤¹¤¬¡¤¤³¤ì¤ËÍ¥Àè¤¹¤ë¤³
¤È¤â²ÄÇ½¤Ç¤¹(@pxref{Block size})¡¥À°¿ô¤Ç¤Ï¤Ê¤¤ÎÌ¤Ï¡¤¼¡¤ÎÃ±°Ì¤Þ¤ÇÀÚ¤ê¾å
¤²¤é¤ì¤Þ¤¹¡¥

@cindex disk device file
@cindex device file, disk
@c If an argument @var{file} is a disk device file containing a mounted
@c filesystem, @command{df} shows the space available on that filesystem
@c rather than on the filesystem containing the device node (i.e., the root
@c filesystem).  @sc{gnu} @command{df} does not attempt to determine the disk usage
@c on unmounted filesystems, because on most kinds of systems doing so
@c requires extremely nonportable intimate knowledge of filesystem
@c structures.
@c 
°ú¿ô¤Î@var{file}¤¬¥Þ¥¦¥ó¥È¤µ¤ì¤Æ¤¤¤ë¥Õ¥¡¥¤¥ë¥·¥¹¥Æ¥à¤ò´Þ¤à¥Ç¥£¥¹¥¯¥Ç¥Ð
¥¤¥¹¥Õ¥¡¥¤¥ë¤Î¾ì¹ç¡¤@command{df}¤Ï¥Ç¥Ð¥¤¥¹¥Î¡¼¥É¤ò´Þ¤à¥Õ¥¡¥¤¥ë¥·¥¹¥Æ¥à
(¤¹¤Ê¤ï¤Á¥ë¡¼¥È¥Õ¥¡¥¤¥ë¥·¥¹¥Æ¥à)¤Ç¤Ï¤Ê¤¯¡¤¤½¤Î¥Õ¥¡¥¤¥ë¥·¥¹¥Æ¥à¤ÎÍøÍÑ²Ä
Ç½¤Ê¶õ´Ö¤òÉ½¼¨¤·¤Þ¤¹¡¥@sc{gnu} @command{df}¤Ç¤Ï¡¤¥Þ¥¦¥ó¥È¤·¤Æ¤¤¤Ê¤¤¥Õ¥¡
¥¤¥ë¥·¥¹¥Æ¥à¤Î¥Ç¥£¥¹¥¯¤Î»ÈÍÑ¤ò·èÄê¤¹¤ë¤³¤È¤Ï¡¤¥Õ¥¡¥¤¥ë¥·¥¹¥Æ¥à¹½Â¤¤Î¤Û
¤È¤ó¤É¤Î¥·¥¹¥Æ¥à´Ö¤Ç¤Î¶Ë¤á¤Æ°Ü¿¢À­¤Î¤Ê¤¤åÌÌ©¤ÊÃÎ¼±¤¬É¬Í×¤Ë¤Ê¤ë¤Î¤Ç¡¤¤½
¤¦¤·¤è¤¦¤È¤·¤Þ¤»¤ó¡¥

@c The program accepts the following options.  Also see @ref{Common options}.
@c 
¥×¥í¥°¥é¥à¤Ï°Ê²¼¤Î¥ª¥×¥·¥ç¥ó¤â¼õ¤±Æþ¤ì¤Þ¤¹¡¥@ref{Common options}¤â»²¾È
¤·¤Æ¤¯¤À¤µ¤¤¡¥

@table @samp

@item -a
@itemx --all
@opindex -a
@opindex --all
@cindex automounter filesystems
@cindex ignore filesystems
@c Include in the listing filesystems that have a size of 0 blocks, which
@c are omitted by default.  Such filesystems are typically special-purpose
@c pseudo-filesystems, such as automounter entries.  Also, filesystems of
@c type ``ignore'' or ``auto'', supported by some operating systems, are
@c only included if this option is specified.
@c 
0¥Ö¥í¥Ã¥¯¤ÎÂç¤­¤µ¤Î¥Õ¥¡¥¤¥ë¥·¥¹¥Æ¥à¤ò¥ê¥¹¥È¤Ë´Þ¤á¡¤¤½¤ì¤Ï¥Ç¥Õ¥©¥ë¥È¤Ç
¤Ï¾ÊÎ¬¤µ¤ì¤Þ¤¹¡¥¤½¤Î¤è¤¦¤Ê¥Õ¥¡¥¤¥ë¥·¥¹¥Æ¥à¤Ï¡¤ÄÌ¾ï¤Ï¥ª¡¼¥È¥Þ¥¦¥ó¥È¥¨¥ó
¥È¥ê¡¼¤Î¤è¤¦¤Ê¡¤ÆÃÄê¤ÎÌÜÅª¤Îµ¿»÷¥Õ¥¡¥¤¥ë¥·¥¹¥Æ¥à¤Ç¤¹¡¥¤Þ¤¿¡¤¥µ¥Ý¡¼¥È¤µ
¤ì¤Æ¤¤¤ë¥·¥¹¥Æ¥à¤â¤¢¤ë``ignore''¤ä``auto''·Á¼°¤Î¥Õ¥¡¥¤¥ë¥·¥¹¥Æ¥à¤Ï¡¤¤³
¤Î¥ª¥×¥·¥ç¥ó¤¬»ØÄê¤µ¤ì¤¿¤È¤­¤À¤±´Þ¤Þ¤ì¤Þ¤¹¡¥

@item -B @var{size}
@itemx --block-size=@var{size}
@opindex -B
@opindex --block-size
@cindex filesystem sizes
@c Scale sizes by @var{size} before printing them (@pxref{Block size}).
@c For example, @option{-BG} prints sizes in units of 1,073,741,824 bytes.
@c 
É½¼¨¤¹¤ëÁ°¤Ë¡¤@var{size}¤ÇÂç¤­¤µ¤ò·×¤ê¤Þ¤¹(@pxref{Block size})¡¥Îã¤¨¤Ð¡¤
@option{-BG}¤Ç¤Ï¡¤1,073,741,824¥Ð¥¤¥ÈÃ±°Ì¤ÇÂç¤­¤µ¤òÉ½¼¨¤·¤Þ¤¹¡¥

@optHumanReadable

@item -H
@opindex -H
@c Equivalent to @option{--si}.
@c 
@option{--si}¤ÈÅù²Á¤Ç¤¹¡¥

@item -i
@itemx --inodes
@opindex -i
@opindex --inodes
@cindex inode usage
@c List inode usage information instead of block usage.  An inode (short
@c for index node) contains information about a file such as its owner,
@c permissions, timestamps, and location on the disk.
@c 
¥Ö¥í¥Ã¥¯¤Î»ÈÍÑ¤ÎÂå¤ï¤ê¤Ë¡¤inode»ÈÍÑ¤Î¾ðÊó¤ò¥ê¥¹¥È¥¢¥Ã¥×¤·¤Þ¤¹¡¥
inode(index node¤Î¾ÊÎ¬)¤Ï¡¤¥Õ¥¡¥¤¥ë¤Ë´Ø¤¹¤ë¡¤½êÍ­¼Ô¡¤µö²Ä¡¤¥¿¥¤¥à¥¹¥¿
¥ó¥×¡¤¤½¤·¤Æ¥Ç¥£¥¹¥¯¤Î°ÌÃÖ¤Î¤è¤¦¤Ê¾ðÊó¤ò´Þ¤ß¤Þ¤¹¡¥

@item -k
@opindex -k
@cindex kibibytes for filesystem sizes
@c Print sizes in 1024-byte blocks, overriding the default block size
@c (@pxref{Block size}).
@c This option is equivalent to @option{--block-size=1K}.
@c 
1024¥Ð¥¤¥È¥Ö¥í¥Ã¥¯¤Ç½ÐÎÏ¤·¡¤¥Ç¥Õ¥©¥ë¥È¤Î¥Ö¥í¥Ã¥¯¥µ¥¤¥º¤ËÍ¥Àè¤·¤Þ¤¹
(@pxref{Block size})¡¥¤³¤Î¥ª¥×¥·¥ç¥ó¤Ï¡¤@option{--block-size=1K}¤ÈÅù²Á
¤Ç¤¹¡¥

@item -l
@itemx --local
@opindex -l
@opindex --local
@cindex filesystem types, limiting output to certain
@c Limit the listing to local filesystems.  By default, remote filesystems
@c are also listed.
@c 
¥í¡¼¥«¥ë¥Õ¥¡¥¤¥ë¥·¥¹¥Æ¥à¤Î¥ê¥¹¥È¤À¤±¤ËÀ©¸Â¤·¤Þ¤¹¡¥¥Ç¥Õ¥©¥ë¥È¤Ç¤Ï¥ê¥â¡¼
¥È¥Õ¥¡¥¤¥ë¥·¥¹¥Æ¥à¤â¥ê¥¹¥È¥¢¥Ã¥×¤µ¤ì¤Þ¤¹¡¥

@item --no-sync
@opindex --no-sync
@cindex filesystem space, retrieving old data more quickly
@c Do not invoke the @code{sync} system call before getting any usage data.
@c This may make @command{df} run significantly faster on systems with many
@c disks, but on some systems (notably SunOS) the results may be slightly
@c out of date.  This is the default.
@c 
»ÈÍÑ¥Ç¡¼¥¿¤ò¼èÆÀ¤¹¤ëÁ°¤Ë@code{sync}¥·¥¹¥Æ¥à¥³¡¼¥ë¤ò¸Æ¤Ó½Ð¤·¤Þ¤»¤ó¡¥¤³
¤ì¤ÏÂ¿¤¯¤Î¥Ç¥£¥¹¥¯¤ò»ý¤Ä¥·¥¹¥Æ¥à¾å¤Ç@command{df}¤Î¼Â¹Ô¤ò¤«¤Ê¤êÂ®¤¯¤¹¤ë
¤«¤â¤·¤ì¤Þ¤»¤ó¤¬¡¤¥·¥¹¥Æ¥à(ÆÃ¤ËSunOS)¤Ë¤è¤Ã¤Æ¤Ï¡¤·ë²Ì¤¬¼ã´³¸Å¤¤¤â¤Î¤Ë
¤Ê¤ë¤«¤â¤·¤ì¤Þ¤»¤ó¡¥¤³¤ì¤Ï¥Ç¥Õ¥©¥ë¥È¤Ç¤¹¡¥

@item -P
@itemx --portability
@opindex -P
@opindex --portability
@cindex one-line output format
@cindex @acronym{POSIX} output format
@cindex portable output format
@cindex output format, portable
@c Use the @acronym{POSIX} output format.  This is like the default format except
@c for the following:
@c 
@acronym{POSIX}½ÐÎÏ·Á¼°¤ò»ÈÍÑ¤·¤Þ¤¹¡¥¤³¤ì¤Ï¡¤°Ê²¼¤ò½ü¤¤¤Æ¥Ç¥Õ¥©¥ë¥È¤Î
½ñ¼°¤Ë»÷¤Æ¤¤¤Þ¤¹¡¥

@enumerate
@item
@c The information about each filesystem is always printed on exactly
@c one line; a mount device is never put on a line by itself.  This means
@c that if the mount device name is more than 20 characters long (e.g., for
@c some network mounts), the columns are misaligned.
@c 
¤½¤ì¤¾¤ì¤Î¥Õ¥¡¥¤¥ë¥·¥¹¥Æ¥à¤Î¾ðÊó¤Ï¾ï¤ËÀµ³Î¤Ë°ì¹Ô¤Ç½ÐÎÏ¤µ¤ì¤Þ¤¹¡¥¥Þ¥¦¥ó
¥È¥Ç¥Ð¥¤¥¹¤Ï¤½¤Î¹Ô¤Ë½ñ¤«¤ì¤Þ¤»¤ó¡¥¤³¤ì¤Ï¥Þ¥¦¥ó¥È¥Ç¥Ð¥¤¥¹¤ÎÌ¾Á°¤¬20Ê¸»ú
°Ê¾å(Îã¤¨¤Ð¡¤¤¤¤¯¤Ä¤«¤Î¥Í¥Ã¥È¥ï¡¼¥¯¥Þ¥¦¥ó¥È)¤Î¾ì¹ç¡¤Îó¤¬¤­¤Á¤ó¤ÈÊÂ¤Ð¤Ê
¤¤¤³¤È¤ò°ÕÌ£¤·¤Þ¤¹¡¥

@item
@c The labels in the header output line are changed to conform to @acronym{POSIX}.
@c 
¥Ø¥Ã¥À½ÐÎÏ¹Ô¤Î¥é¥Ù¥ë¤Ï¡¤@acronym{POSIX}¤Ë½¾¤¤ÊÑ¹¹¤µ¤ì¤Þ¤¹¡¥
@end enumerate

@optSi

@item --sync
@opindex --sync
@cindex filesystem space, retrieving current data more slowly
@c Invoke the @code{sync} system call before getting any usage data.  On
@c some systems (notably SunOS), doing this yields more up to date results,
@c but in general this option makes @command{df} much slower, especially when
@c there are many or very busy filesystems.
@c 
¤¢¤é¤æ¤ë»ÈÍÑ¥Ç¡¼¥¿¤Î¼èÆÀÁ°¤Ë@code{sync}¥·¥¹¥Æ¥à¥³¡¼¥ë¤ò¸Æ¤Ó½Ð¤·¤Þ¤¹¡¥
¥·¥¹¥Æ¥à(ÆÃ¤ËSunOS)¤Ë¤è¤Ã¤Æ¤Ï¤³¤¦¤¹¤ë¤³¤È¤Ç·ë²Ì¤¬¤è¤ê¿·¤·¤¤¤â¤Î¤Ë¤Ê¤ê
¤Þ¤¹¤¬¡¤°ìÈÌÅª¤Ë¸À¤Ã¤Æ¡¤ÆÃ¤ËÂ¿¤¯¤Î¡¤¤Þ¤¿¤ÏÈó¾ï¤ËË»¤·¤¤¥Õ¥¡¥¤¥ë¥·¥¹¥Æ¥à
¤¬¤¢¤ë¤È¤­¡¤¤³¤Î¥ª¥×¥·¥ç¥ó¤Ç@command{df}¤Ï¤«¤Ê¤êÃÙ¤¯¤Ê¤ê¤Þ¤¹¡¥

@item -t @var{fstype}
@itemx --type=@var{fstype}
@opindex -t
@opindex --type
@cindex filesystem types, limiting output to certain
@c Limit the listing to filesystems of type @var{fstype}.  Multiple
@c filesystem types can be specified by giving multiple @option{-t} options.
@c By default, nothing is omitted.
@c 
@var{fstype}·Á¼°¤Î¥Õ¥¡¥¤¥ë¥·¥¹¥Æ¥à¤Î¥ê¥¹¥È¤Ë¤À¤±À©¸Â¤·¤Þ¤¹¡¥Ê£¿ô¤Î¥Õ¥¡
¥¤¥ë¥·¥¹¥Æ¥à·Á¼°¤Ï¡¤Ê£¿ô¤Î@option{-t}¥ª¥×¥·¥ç¥ó¤òÍ¿¤¨¤ë¤³¤È¤Ç»ØÄê¤¹¤ë
¤³¤È¤¬²ÄÇ½¤Ç¤¹¡¥¥Ç¥Õ¥©¥ë¥È¤Ç¤Ï²¿¤â¾ÊÎ¬¤µ¤ì¤Þ¤»¤ó¡¥

@item -T
@itemx --print-type
@opindex -T
@opindex --print-type
@cindex filesystem types, printing
@c Print each filesystem's type.  The types printed here are the same ones
@c you can include or exclude with @option{-t} and @option{-x}.  The particular
@c types printed are whatever is supported by the system.  Here are some of
@c the common names (this list is certainly not exhaustive):
@c 
¤½¤ì¤¾¤ì¤Î¥Õ¥¡¥¤¥ë¥·¥¹¥Æ¥à¤Î·Á¼°¤ò½ÐÎÏ¤·¤Þ¤¹¡¥¤³¤³¤Ç½ÐÎÏ¤µ¤ì¤ë·Á¼°¤Ï¡¤
@option{-t}¤È@option{-x}¥ª¥×¥·¥ç¥ó¤Ç´Þ¤á¤¿¤ê½ü³°¤·¤¿¤ê¤¹¤ë¤³¤È¤¬²ÄÇ½¤Ê
¤â¤Î¤ÈÆ±¤¸¤Ç¤¹¡¥½ÐÎÏ¤µ¤ì¤ëÆÃÄê¤Î·Á¼°¤Ï¡¤¥·¥¹¥Æ¥à¤Ç¥µ¥Ý¡¼¥È¤·¤Æ¤¤¤ë¤â¤Î
¤¹¤Ù¤Æ¤Ç¤¹¡¥¤³¤³¤Ë¶¦ÄÌ¤ÎÌ¾Á°¤¬¤¤¤¯¤Ä¤«¤¢¤ê¤Þ¤¹(¤³¤Î¥ê¥¹¥È¤Ï¤â¤Á¤í¤óÌÖ
ÍåÅª¤Ê¤â¤Î¤Ç¤Ï¤¢¤ê¤Þ¤»¤ó)¡¥

@table @samp

@item nfs
@cindex NFS filesystem type
@c An NFS filesystem, i.e., one mounted over a network from another
@c machine.  This is the one type name which seems to be used uniformly by
@c all systems.
@c |£°!|
NFS¥Õ¥¡¥¤¥ë¥·¥¹¥Æ¥à¡¤¤¹¤Ê¤ï¤Á¡¤Â¾¤Î¥Þ¥·¥ó¤«¤é¥Í¥Ã¥È¥ï¡¼¥¯¤Ç¥Þ¥¦¥ó¥È¤µ
¤ì¤¿¤â¤Î¤Ç¤¹¡¥¤³¤ì¤Ï¡¤¤¹¤Ù¤Æ¤Î¥·¥¹¥Æ¥à¤ÇÆ±¤¸¤è¤¦¤Ë»ÈÍÑ¤µ¤ì¤ë¤È»×¤ï¤ì¤ë¡¤
°ì¤Ä¤Î·Á¼°¤ÎÌ¾Á°¤Ç¤¹¡¥

@item 4.2@r{, }ufs@r{, }efs@dots{}
@cindex Linux filesystem types
@cindex local filesystem types
@opindex 4.2 @r{filesystem type}
@opindex ufs @r{filesystem type}
@opindex efs @r{filesystem type}
@c A filesystem on a locally-mounted hard disk.  (The system might even
@c support more than one type here; Linux does.)
@c 
¥í¡¼¥«¥ë¤Ë¥Þ¥¦¥ó¥È¤µ¤ì¤¿¥Ï¡¼¥É¥Ç¥£¥¹¥¯¤Î¥Õ¥¡¥¤¥ë¥·¥¹¥Æ¥à¤Ç¤¹¡¥(¥·¥¹¥Æ
¥à¤Ï¤³¤ì¤é¤Î°ì¤Ä°Ê¾å¤Î¤â¤Î¤ò¥µ¥Ý¡¼¥È¤¹¤ë¤«¤â¤·¤ì¤Þ¤»¤ó¡¥Linux¤Ï¤½¤¦¤Ç
¤¹¡¥)

@item hsfs@r{, }cdfs
@cindex CD-ROM filesystem type
@cindex High Sierra filesystem
@opindex hsfs @r{filesystem type}
@opindex cdfs @r{filesystem type}
@c A filesystem on a CD-ROM drive.  HP-UX uses @samp{cdfs}, most other
@c systems use @samp{hsfs} (@samp{hs} for ``High Sierra'').
@c 
CD-ROM¥É¥é¥¤¥Ö¤Î¥Õ¥¡¥¤¥ë¥·¥¹¥Æ¥à¤Ç¤¹¡¥HP-UX¤Ï@samp{cdfs}¤ò»ÈÍÑ¤·¡¤¤½¤Î
Â¾¤Î¤Û¤È¤ó¤É¤Î¥·¥¹¥Æ¥à¤Ï@samp{hsfs} (@samp{hs}¤Ï``High Sierra''¤Ç¤¹)¤ò
»ÈÍÑ¤·¤Þ¤¹¡¥

@item pcfs
@cindex PC filesystem
@cindex DOS filesystem
@cindex MS-DOS filesystem
@cindex diskette filesystem
@opindex pcfs
@c An MS-DOS filesystem, usually on a diskette.
@c 
MS-DOS¤Î¥Õ¥¡¥¤¥ë¥·¥¹¥Æ¥à¤Ç¡¤ÄÌ¾ï¥Ç¥£¥¹¥±¥Ã¥È¾å¤Ç¤¹¡¥

@end table

@item -x @var{fstype}
@itemx --exclude-type=@var{fstype}
@opindex -x
@opindex --exclude-type
@c Limit the listing to filesystems not of type @var{fstype}.
@c Multiple filesystem types can be eliminated by giving multiple
@c @option{-x} options.  By default, no filesystem types are omitted.
@c 
@var{fstype}·Á¼°¤Ç¤Ê¤¤¥Õ¥¡¥¤¥ë¥·¥¹¥Æ¥à¤Ë¥ê¥¹¥È¤òÀ©¸Â¤·¤Þ¤¹¡¥Ê£¿ô¤Î¥Õ¥¡
¥¤¥ë¥·¥¹¥Æ¥à¤Î·Á¼°¤Ï¡¤Ê£¿ô¤Î@option{-x}¥ª¥×¥·¥ç¥ó¤ò»ÈÍÑ¤¹¤ë¤³¤È¤ÇÇÓ½ü
¤¹¤ë¤³¤È¤¬²ÄÇ½¤Ç¤¹¡¥¥Ç¥Õ¥©¥ë¥È¤Ç¤Ï¾ÊÎ¬¤µ¤ì¤ë¥Õ¥¡¥¤¥ë¥·¥¹¥Æ¥à·Á¼°¤Ï¤¢¤ê
¤Þ¤»¤ó¡¥

@item -v
@c Ignored; for compatibility with System V versions of @command{df}.
@c 
Ìµ»ë¤µ¤ì¤Þ¤¹¡¥System VÈÇ¤Î@command{df}¤Ø¤Î¸ß´¹À­¤Î¤¿¤á¤Ç¤¹¡¥

@end table

@exitstatus


@node du invocation
@c @section @command{du}: Estimate file space usage
@section @command{du}: ¥Õ¥¡¥¤¥ë¥¹¥Ú¡¼¥¹¤Î»ÈÍÑ¤ò¿äÄê

@pindex du
@cindex file space usage
@cindex disk usage for files

@c @command{du} reports the amount of disk space used by the specified files
@c and for each subdirectory (of directory arguments).  Synopsis:
@c 
@command{du}¤Ï¡¤»ØÄê¤µ¤ì¤Æ¤¤¤ë¥Õ¥¡¥¤¥ë¤È¤½¤ì¤¾¤ì¤Î(¥Ç¥£¥ì¥¯¥È¥ê°ú¿ô¤Î)
¥µ¥Ö¥Ç¥£¥ì¥¯¥È¥ê¤¬»ÈÍÑ¤·¤Æ¤¤¤ë¥Ç¥£¥¹¥¯¥¹¥Ú¡¼¥¹¤ÎÎÌ¤òÊó¹ð¤·¤Þ¤¹¡¥³µÍ×¤Ç
¤¹¡¥

@example
du [@var{option}]@dots{} [@var{file}]@dots{}
@end example

@c With no arguments, @command{du} reports the disk space for the current
@c directory.  Normally the disk space is printed in units of
@c 1024 bytes, but this can be overridden (@pxref{Block size}).
@c Non-integer quantities are rounded up to the next higher unit.
@c 
°ú¿ô¤òÍÑ¤¤¤Ê¤¤¾ì¹ç¡¤@command{du}¤Ï¸½ºß¤Î¥Ç¥£¥ì¥¯¥È¥ê¤Î¥Ç¥£¥¹¥¯¥¹¥Ú¡¼¥¹
¤òÊó¹ð¤·¤Þ¤¹¡¥ÄÌ¾ï¡¤¥Ç¥£¥¹¥¯¥¹¥Ú¡¼¥¹¤Ï1024¥Ð¥¤¥ÈÃ±°Ì¤Ç½ÐÎÏ¤µ¤ì¤Þ¤¹¤¬¡¤
¤³¤ì¤ËÍ¥Àè¤¹¤ë¤³¤È¤â²ÄÇ½¤Ç¤¹(@pxref{Block size})¡¥À°¿ô¤Ç¤Ï¤Ê¤¤ÎÌ¤Ï¡¤¼¡
¤ËÂç¤­¤ÊÃ±°Ì¤ËÀÚ¤ê¾å¤²¤é¤ì¤Þ¤¹¡¥

@c The program accepts the following options.  Also see @ref{Common options}.
@c 
¥×¥í¥°¥é¥à¤Ï°Ê²¼¤Î¥ª¥×¥·¥ç¥ó¤â¼õ¤±Æþ¤ì¤Þ¤¹¡¥@ref{Common options}¤â»²¾È
¤·¤Æ¤¯¤À¤µ¤¤¡¥

@table @samp

@item -a
@itemx --all
@opindex -a
@opindex --all
@c Show counts for all files, not just directories.
@c 
¥Ç¥£¥ì¥¯¥È¥ê¤À¤±¤Ç¤Ê¤¯¡¤¤¹¤Ù¤Æ¤Î¥Õ¥¡¥¤¥ë¤ò¿ô¤¨¤¿¤â¤Î¤òÉ½¼¨¤·¤Þ¤¹¡¥

@itemx --apparent-size
@opindex --apparent-size
@c Print apparent sizes, rather than disk usage.  The apparent size of a
@c file is the number of bytes reported by @code{wc -c} on regular files,
@c or more generally, @code{ls -l --block-size=1} or @code{stat --format=%s}.
@c For example, a file containing the word @samp{zoo} with no newline would,
@c of course, have an apparent size of 3.  Such a small file may require
@c anywhere from zero to 16 or more kilobytes of disk space, depending on
@c the type and configuration of the file system on which the file resides.
@c However, a sparse file created with this command
@c 
¥Ç¥£¥¹¥¯¤ò»ÈÍÑ¤·¤Æ¤¤¤ëÂç¤­¤µ¤Ç¤Ï¤Ê¤¯¸«¤«¤±¾å¤ÎÂç¤­¤µ¤ò½ÐÎÏ¤·¤Þ¤¹¡¥¥Õ¥¡
¥¤¥ë¤Î¸«¤«¤±¾å¤ÎÂç¤­¤µ¤Ï¡¤ÄÌ¾ï¤Î¥Õ¥¡¥¤¥ë¤ËÂÐ¤·@code{wc -c}¡¤¤Þ¤¿¤Ï¤è¤ê
°ìÈÌÅª¤Ë¡¤@code{ls -l --block-size=1}¤ä@code{stat --format=%s}¤ÇÊó¹ð¤µ
¤ì¤ë¥Ð¥¤¥È¿ô¤Ç¤¹¡¥Îã¤¨¤Ð¡¤²þ¹Ô¤¬Ìµ¤¤Ã±¸ì@samp{zoo}¤ò´Þ¤ó¤Ç¤¤¤ë¥Õ¥¡¥¤¥ë
¤Ï¤â¤Á¤í¤ó¡¤¸«¤«¤±¾å¤ÎÂç¤­¤µ¤Ï3¤Ë¤Ê¤ê¤Þ¤¹¡¥¤½¤Î¤è¤¦¤Ê¾®¤µ¤Ê¥Õ¥¡¥¤¥ë¤Ç
¤â¡¤¥Õ¥¡¥¤¥ë¤¬Â¸ºß¤¹¤ë¥Õ¥¡¥¤¥ë¥·¥¹¥Æ¥à¤Î·Á¼°¤äÀßÄê¤Ë¤è¤Ã¤Æ¤Ï¡¤¥¼¥í¤«¤é
16¥Ð¥¤¥È¡¤¤Þ¤¿¤Ï¤è¤êÂç¤­¤Ê¥­¥í¥Ð¥¤¥È¤Î¥Ç¥£¥¹¥¯ÎÎ°è¤¬É¬Í×¤«¤â¤·¤ì¤Þ¤»¤ó¡¥
¤·¤«¤·¡¤°Ê²¼¤Î¥³¥Þ¥ó¥É¤ÇºîÀ®¤µ¤ì¤ëÁÂ¤é¤Ê¥Õ¥¡¥¤¥ë¤ò¹Í¤¨¤Æ¤ß¤Þ¤¹¡¥
@example
: | dd bs=1 seek=`echo '2^31'|bc` of=big
@end example
@c has an apparent size of 2 gigabytes, yet on most modern
@c systems, it actually uses almost no disk space.
@c 
¤³¤ì¤Ï¡¤¸«¤«¤±¾å2¥®¥¬¥Ð¥¤¥È¤Ç¤¹¤¬¡¤ºÇ¶á¤Î¤Û¤È¤ó¤É¤Î¥·¥¹¥Æ¥à¤Ç¤Ï¡¤¼ÂºÝ
¤Ë¤Ï¤Û¤È¤ó¤É¥Ç¥£¥¹¥¯ÎÎ°è¤ò»ÈÍÑ¤·¤Þ¤»¤ó¡¥

@item -b
@itemx --bytes
@opindex -b
@opindex --bytes
@c Equivalent to @code{--apparent-size --block-size=1}.
@c 
@code{--apparent-size --block-size=1}¤ÈÆ±¤¸¤Ç¤¹¡¥

@item -B @var{size}
@itemx --block-size=@var{size}
@opindex -B
@opindex --block-size
@cindex file sizes
@c Scale sizes by @var{size} before printing them (@pxref{Block size}).
@c For example, @option{-BG} prints sizes in units of 1,073,741,824 bytes.
@c 
Âç¤­¤µ¤ò½ÐÎÏ¤¹¤ëÁ°¤Ë@var{size}¤Ç·×Â¬¤·¤Þ¤¹(@pxref{Block size})¡¥Îã¤¨¤Ð¡¤
@option{-BG}¤Ç¤Ï1,073,741,824¥Ð¥¤¥ÈÃ±°Ì¤Ç½ÐÎÏ¤·¤Þ¤¹¡¥

@item -c
@itemx --total
@opindex -c
@opindex --total
@cindex grand total of disk space
@c Print a grand total of all arguments after all arguments have
@c been processed.  This can be used to find out the total disk usage of
@c a given set of files or directories.
@c 
¤¹¤Ù¤Æ¤Î°ú¿ô¤ò½èÍý¤·¤¿¸å¡¤¤¹¤Ù¤Æ¤Î°ú¿ô¤Î¹ç·×¤ò½ÐÎÏ¤·¤Þ¤¹¡¥¤³¤ì¤Ï¡¤Í¿¤¨
¤é¤ì¤¿¥Õ¥¡¥¤¥ë¤ä¥Ç¥£¥ì¥¯¥È¥ê¤Î½¸¹ç¤Î¡¤¥Ç¥£¥¹¥¯»ÈÍÑ¤Î¹ç·×¤òÃÎ¤ë¤¿¤á¤Ë»È
ÍÑ¤¹¤ë¤³¤È¤¬²ÄÇ½¤Ç¤¹¡¥

@item -D
@itemx --dereference-args
@opindex -D
@opindex --dereference-args
@c Dereference symbolic links that are command line arguments.
@c Does not affect other symbolic links.  This is helpful for finding
@c out the disk usage of directories, such as @file{/usr/tmp}, which
@c are often symbolic links.
@c 
¥³¥Þ¥ó¥É¥é¥¤¥ó°ú¿ô¤Î¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯¤ò´ÖÀÜ»²¾È¤·¤Þ¤¹¡¥¤½¤ÎÂ¾¤Î¥·¥ó¥Ü
¥ê¥Ã¥¯¥ê¥ó¥¯¤Ë¤Ï±Æ¶Á¤·¤Þ¤»¤ó¡¥¤³¤ì¤Ï¡¤@file{/usr/tmp}¤Î¤è¤¦¤Ë¡¤¥·¥ó¥Ü
¥ê¥Ã¥¯¥ê¥ó¥¯¤Ë¤µ¤ì¤ë¤³¤È¤¬Â¿¤¤¥Ç¥£¥ì¥¯¥È¥ê¤Î¥Ç¥£¥¹¥¯¤Î»ÈÍÑ¾õ¶·¤òÃÎ¤ê¤¿
¤¤¤È¤­Ìò¤ËÎ©¤Á¤Þ¤¹¡¥

@optHumanReadable

@item -H
@opindex -H
@c Currently, @option{-H} is the same as @option{--si},
@c except that @option{-H} evokes a warning.
@c This option will be changed to be equivalent to
@c @option{--dereference-args} (@option{-D}).
@c 
¸½ºß¤Ï¡¤@option{-H}¤Ç·Ù¹ð¤µ¤ì¤ë°Ê³°¤Ï@option{-H}¤Ï@option{--si}¤ÈÆ±¤¸
¤Ç¤¹¡¥¤³¤Î¥ª¥×¥·¥ç¥ó¤ÏÊÑ¹¹¤µ¤ì¡¤@option{--dereference-args}
(@option{-D})¤ÈÅù²Á¤Ë¤Ê¤Ã¤Æ¤¤¤Þ¤¹¡¥

@item -k
@opindex -k
@cindex kibibytes for file sizes
@c Print sizes in 1024-byte blocks, overriding the default block size
@c (@pxref{Block size}).
@c This option is equivalent to @option{--block-size=1K}.
@c 
1024¥Ð¥¤¥È¥Ö¥í¥Ã¥¯¤Ç½ÐÎÏ¤·¡¤¥Ç¥Õ¥©¥ë¥È¤Î¥Ö¥í¥Ã¥¯¥µ¥¤¥º¤ËÍ¥Àè¤·¤Þ¤¹
(@pxref{Block size})¡¥¤³¤Î¥ª¥×¥·¥ç¥ó¤Ï¡¤@option{--block-size=1K}¤ÈÅù²Á
¤Ç¤¹¡¥

@item -l
@itemx --count-links
@opindex -l
@opindex --count-links
@cindex hard links, counting in @command{du}
@c Count the size of all files, even if they have appeared already (as a
@c hard link).
@c 
¤¹¤Ç¤Ë(¥Ï¡¼¥É¥ê¥ó¥¯¤È¤·¤Æ)¸½¤ì¤Æ¤¤¤ë¾ì¹ç¤Ç¤â¡¤¤¹¤Ù¤Æ¤Î¥Õ¥¡¥¤¥ë¤Î¥µ¥¤¥º
¤ò·×»»¤·¤Þ¤¹¡¥

@item -L
@itemx --dereference
@opindex -L
@opindex --dereference
@cindex symbolic links, dereferencing in @command{du}
@c Dereference symbolic links (show the disk space used by the file
@c or directory that the link points to instead of the space used by
@c the link).
@c 
¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯¤ò´ÖÀÜ»²¾È¤·¤Þ¤¹(¥ê¥ó¥¯¤Ç»ÈÍÑ¤·¤Æ¤¤¤ë¥¹¥Ú¡¼¥¹¤ÎÂå¤ï
¤ê¤Ë¡¤¥ê¥ó¥¯¤¬¼¨¤¹¥Õ¥¡¥¤¥ë¤ä¥Ç¥£¥ì¥¯¥È¥ê¤¬»ÈÍÑ¤·¤Æ¤¤¤ë¥Ç¥£¥¹¥¯¥¹¥Ú¡¼¥¹
¤òÉ½¼¨¤·¤Þ¤¹)¡¥

@item -P
@itemx --no-dereference
@opindex -P
@opindex --no-dereference
@cindex symbolic links, dereferencing in @command{du}
@c For each symbolic links encountered by @command{du},
@c consider the disk space used by the symbolic link.
@c 
@command{du}¤¬¸«¤Ä¤±¤¿¤½¤ì¤¾¤ì¤Î¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯¤ò¡¤¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó
¥¯¤¬»ÈÍÑ¤·¤Æ¤¤¤ë¥Ç¥£¥¹¥¯¥¹¥Ú¡¼¥¹¤È¹Í¤¨¤Þ¤¹¡¥

@item --max-depth=@var{DEPTH}
@opindex --max-depth=@var{DEPTH}
@cindex limiting output of @command{du}
@c Show the total for each directory (and file if --all) that is at
@c most MAX_DEPTH levels down from the root of the hierarchy.  The root
@c is at level 0, so @code{du --max-depth=0} is equivalent to @code{du -s}.
@c 
³¬ÁØ¤Î¥ë¡¼¥È¤«¤éºÇÂçMAX_DEPTH¥ì¥Ù¥ë¤Þ¤Ç¹ß¤ê¤Æ¡¤¤½¤ì¤¾¤ì¤Î¥Ç¥£¥ì¥¯¥È¥ê
(¤½¤·¤Æ@samp{--all}¤Î¾ì¹ç¤Ï¥Õ¥¡¥¤¥ë)¤Î¹ç·×¤òÉ½¼¨¤·¤Þ¤¹¡¥¥ë¡¼¥È¤Ï¥ì¥Ù¥ë
0¤Ê¤Î¤Ç¡¤@code{du --max-depth=0}¤Ï@code{du -s}¤ÈÆ±¤¸¤Ç¤¹¡¥

@item -0
@opindex -0
@itemx --null
@opindex --null
@cindex output NUL-terminated lines
@c Output the zero byte (@kbd{NUL}) at the end of each line, rather than a newline.
@c This option enables other programs to parse the output of @command{du}
@c even when that output would contain file names with embedded newlines.
@c 
¤½¤ì¤¾¤ì¤Î¹Ô¤Î½ª¤ê¤Ë¡¤²þ¹Ô¤Ç¤Ï¤Ê¤¯¥¼¥í¥Ð¥¤¥È(@kbd{NUL})¤ò½ÐÎÏ¤·¤Þ¤¹¡¥
¤³¤Î¥ª¥×¥·¥ç¥ó¤Ç¡¤½ÐÎÏ¤Ë²þ¹Ô¤¬´Þ¤Þ¤ì¤Æ¤¤¤ë¥Õ¥¡¥¤¥ëÌ¾¤¬´Þ¤Þ¤ì¤Æ¤¤¤ë¤È¤­
¤Ç¤â¡¤Â¾¤Î¥×¥í¥°¥é¥à¤¬@command{du}¤Î½ÐÎÏ¤ò¹½Ê¸²òÀÏ¤¹¤ë¤³¤È¤¬²ÄÇ½¤Ë¤Ê¤ê
¤Þ¤¹¡¥

@itemx --si
@opindex --si
@cindex SI output
@c Append an SI-style abbreviation to each size, such as @samp{MB} for
@c megabytes.  Powers of 1000 are used, not 1024; @samp{MB} stands for
@c 1,000,000 bytes.  Use the @option{-h} or @option{--human-readable} option if
@c you prefer powers of 1024.
@c 
¥á¥¬¥Ð¥¤¥È¤ËÂÐ¤¹¤ë@samp{MB}¤Î¤è¤¦¤Ê¡¤SI·Á¼°¤Î¥µ¥¤¥º¤ÎÎ¬¸ì¤òÄÉ²Ã¤·¤Þ¤¹¡¥
1024ÇÜ¤Ç¤Ï¤Ê¤¯1000ÇÜ¤¬»ÈÍÑ¤µ¤ì¤Þ¤¹¡¥@samp{MB}¤Ï1,000,000¥Ð¥¤¥È¤ò°ÕÌ£¤·
¤Þ¤¹¡¥1024ÇÜ¤òË¾¤à¾ì¹ç¡¤@option{-h}¤Þ¤¿¤Ï@option{--human-readable}¥ª¥×
¥·¥ç¥ó¤ò»ÈÍÑ¤·¤Æ¤¯¤À¤µ¤¤¡¥

@item -s
@itemx --summarize
@opindex -s
@opindex --summarize
@c Display only a total for each argument.
@c 
¤½¤ì¤¾¤ì¤Î°ú¿ô¤Î¹ç·×¤Î¤ßÉ½¼¨¤·¤Þ¤¹¡¥

@item -S
@itemx --separate-dirs
@opindex -S
@opindex --separate-dirs
@c Report the size of each directory separately, not including the sizes
@c of subdirectories.
@c 
¥µ¥Ö¥Ç¥£¥ì¥¯¥È¥ê¤Î¥µ¥¤¥º¤ò´Þ¤á¤º¡¤¤½¤ì¤¾¤ì¤Î¥Ç¥£¥ì¥¯¥È¥ê¤Î¥µ¥¤¥º¤òÊÌ¡¹
¤ËÊó¹ð¤·¤Þ¤¹¡¥

@item -x
@itemx --one-file-system
@opindex -x
@opindex --one-file-system
@cindex one filesystem, restricting @command{du} to
@c Skip directories that are on different filesystems from the one that
@c the argument being processed is on.
@c 
½èÍý¤ò³«»Ï¤·¤¿°ú¿ô¤Î¥Ç¥£¥ì¥¯¥È¥ê¤È°Û¤Ê¤ë¥Õ¥¡¥¤¥ë¥·¥¹¥Æ¥à¤ò¾ÊÎ¬¤·¤Þ¤¹¡¥

@item --exclude=@var{PATTERN}
@opindex --exclude=@var{PATTERN}
@cindex excluding files from @command{du}
@c When recursing, skip subdirectories or files matching @var{PATTERN}.
@c For example, @code{du --exclude='*.o'} excludes files whose names
@c end in @samp{.o}.
@c 
ºÆµ¢Åª¤Ê¤È¤­¡¤@var{PATTERN}¤Ë¥Þ¥Ã¥Á¤¹¤ë¥µ¥Ö¥Ç¥£¥ì¥¯¥È¥ê¤ä¥Õ¥¡¥¤¥ë¤ò¾Ê
Î¬¤·¤Þ¤¹¡¥Îã¤¨¤Ð¡¤@code{du --exclude='*.o'}¤Ï@samp{.o}¤Ç½ª¤ï¤ëÌ¾Á°¤Î¥Õ¥¡
¥¤¥ë¤ò½ü³°¤·¤Þ¤¹¡¥

@item -X @var{FILE}
@itemx --exclude-from=@var{FILE}
@opindex -X @var{FILE}
@opindex --exclude-from=@var{FILE}
@cindex excluding files from @command{du}
@c Like @option{--exclude}, except take the patterns to exclude from @var{FILE},
@c one per line.  If @var{FILE} is @samp{-}, take the patterns from standard
@c input.
@c 
½ü³°¤¹¤ë¥Ñ¥¿¡¼¥ó¤ò@var{FILE}¤«¤é¼õ¤±¼è¤ë°Ê³°¡¤@option{--exclude}¤Ë»÷¤Æ
¤¤¤Þ¤¹¡¥@var{FILE}¤¬@samp{-}¤Î¾ì¹ç¡¤É¸½àÆþÎÏ¤«¤é¥Ñ¥¿¡¼¥ó¤ò¼õ¤±¼è¤ê¤Þ¤¹¡¥

@end table

@cindex NFS mounts from BSD to HP-UX
@c On BSD systems, @command{du} reports sizes that are half the correct
@c values for files that are NFS-mounted from HP-UX systems.  On HP-UX
@c systems, it reports sizes that are twice the correct values for
@c files that are NFS-mounted from BSD systems.  This is due to a flaw
@c in HP-UX; it also affects the HP-UX @command{du} program.
@c 
BSD¥·¥¹¥Æ¥à¤Ç¤Ï¡¤HP-UX¥·¥¹¥Æ¥à¤«¤é¤ÎNFS¥Þ¥¦¥ó¥È¤µ¤ì¤Æ¤¤¤ë¥Õ¥¡¥¤¥ë¤ÎÀµ
¤·¤¤ÃÍ¤ÎÈ¾Ê¬¤Î¥µ¥¤¥º¤ò¡¤@command{du}¤ÏÊó¹ð¤·¤Þ¤¹¡¥HP-UX¥·¥¹¥Æ¥à¤Ç¤Ï¡¤
BSD¥·¥¹¥Æ¥à¤«¤é¤ÎNFS¥Þ¥¦¥ó¥È¤µ¤ì¤Æ¤¤¤ë¥Õ¥¡¥¤¥ë¤ÎÀµ¤·¤¤ÃÍ¤ÎÆóÇÜ¤Î¥µ¥¤¥º
¤òÊó¹ð¤·¤Þ¤¹¡¥¤³¤ì¤ÏHP-UX¤Î·ç´Ù¤Ç¤¹¡¥¤½¤ì¤ÏHP-UX @command{du}¥×¥í¥°¥é
¥à¤Ë¤â±Æ¶Á¤·¤Þ¤¹¡¥

@exitstatus


@node stat invocation
@c @section @command{stat}: Report file or filesystem status
@section @command{stat}: ¥Õ¥¡¥¤¥ë¤ä¥Õ¥¡¥¤¥ë¥·¥¹¥Æ¥à¤Î¥¹¥Æ¡¼¥¿¥¹¤òÊó¹ð

@pindex stat
@cindex file status
@cindex filesystem status

@c @command{stat} displays information about the specified file(s).  Synopsis:
@c 
@command{stat}¤Ï¡¤»ØÄê¤·¤¿¥Õ¥¡¥¤¥ë¤Î¾ðÊó¤òÉ½¼¨¤·¤Þ¤¹¡¥³µÍ×¤Ç¤¹¡¥

@example
stat [@var{option}]@dots{} [@var{file}]@dots{}
@end example

@c With no option, @command{stat} reports all information about the given files.
@c But it also can be used to report the information of the filesystems the
@c given files are located on. If the files are links, @command{stat} can
@c also give information about the files the links point to.
@c 
¥ª¥×¥·¥ç¥ó¤òÍÑ¤¤¤Æ¤¤¤Ê¤¤¾ì¹ç¡¤@command{stat}¤ÏÍ¿¤¨¤é¤ì¤¿¥Õ¥¡¥¤¥ë¤Î¤¹¤Ù
¤Æ¤Î¾ðÊó¤òÊó¹ð¤·¤Þ¤¹¡¥¤·¤«¤·¡¤Í¿¤¨¤é¤ì¤¿¥Õ¥¡¥¤¥ë¤¬Â¸ºß¤¹¤ë¥Õ¥¡¥¤¥ë¥·¥¹
¥Æ¥à¤Î¾ðÊó¤À¤±¤òÊó¹ð¤¹¤ë¤¿¤á¤Ë»ÈÍÑ¤¹¤ë¤³¤È¤â²ÄÇ½¤Ç¤¹¡¥¥Õ¥¡¥¤¥ë¤¬¥ê¥ó¥¯
¤Î¾ì¹ç¡¤@command{stat}¤Ï¥ê¥ó¥¯Àè¤Î¥Õ¥¡¥¤¥ë¤Î¾ðÊó¤âÍ¿¤¨¤Æ¤¯¤ì¤Þ¤¹¡¥

@table @samp

@item -f
@itemx --filesystem
@opindex -f
@opindex --filesystem
@cindex filesystems
@c Report information about the filesystems where the given files are located
@c instead of information about the files themselves.
@c 
Í¿¤¨¤é¤ì¤¿¥Õ¥¡¥¤¥ë¼«¿È¤Î¾ðÊó¤Ç¤Ï¤Ê¤¯¡¤¥Õ¥¡¥¤¥ë¤¬Â¸ºß¤·¤Æ¤¤¤ë¥Õ¥¡¥¤¥ë¥·
¥¹¥Æ¥à¤Î¾ðÊó¤òÊó¹ð¤·¤Þ¤¹¡¥

@item -L
@itemx --dereference
@opindex -L
@opindex --dereference
@cindex symbolic links, dereferencing in @command{stat}
@c Change how @command{stat} treats symbolic links.
@c With this option, @command{stat} acts on the file referenced
@c by each symbolic link argument.
@c Without it, @command{stat} acts on any symbolic link argument directly.
@c 
@command{stat}¤Î¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯¤Î½èÍýÊýË¡¤òÊÑ¹¹¤·¤Þ¤¹¡¥¤³¤Î¥ª¥×¥·¥ç
¥ó¤òÍÑ¤¤¤ë¤È¡¤@command{stat}¤Ï¤½¤ì¤¾¤ì¤Î¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯°ú¿ô¤Î»²¾ÈÀè
¤Î¥Õ¥¡¥¤¥ë¤ÇÆ°ºî¤·¤Þ¤¹¡¥¤½¤¦¤Ç¤Ê¤±¤ì¤Ð¡¤@command{stat}¤Ï¥·¥ó¥Ü¥ê¥Ã¥¯¥ê
¥ó¥¯¤ÇÄ¾ÀÜÆ°ºî¤·¤Þ¤¹¡¥

@item -t
@itemx --terse
@opindex -t
@opindex --terse
@cindex terse output
@c Print the information in terse form, suitable for parsing by other programs.
@c 
Â¾¤Î¥×¥í¥°¥é¥à¤Ç¥Ñ¡¼¥¹¤¹¤ë¤Î¤ËÅ¬¤·¤¿¡¤´Ê·é¤ÊÊý¼°¤Ç¾ðÊó¤ò½ÐÎÏ¤·¤Þ¤¹¡¥

@item -c
@itemx --format
@opindex -c
@opindex --format
@cindex output format
@c Allow user to specify the output format.
@c 
¥æ¡¼¥¶»ØÄê¤Î½ÐÎÏ½ñ¼°¤ò²ÄÇ½¤Ë¤·¤Þ¤¹¡¥

@c Interpreted sequences for file stat are:
@c 
¥Õ¥¡¥¤¥ë¤Î¥¹¥Æ¡¼¥¿¥¹¤È¤·¤Æ²ò¼á¤µ¤ì¤ë¤â¤Î¤Ç¤¹¡¥
@itemize @bullet
@c @item %a - Access rights in octal
@c @item %A - Access rights in human readable form
@c @item %b - Number of blocks allocated (see @samp{%B})
@c @item %B - The size in bytes of each block reported by @samp{%b}
@c @item %d - Device number in decimal
@c @item %D - Device number in hex
@c @item %f - raw mode in hex
@c @item %F - File type
@c @item %g - Group Id of owner
@c @item %G - Group name of owner
@c @item %h - Number of hard links
@c @item %i - Inode number
@c @item %n - File name
@c @item %N - Quoted File name with dereference if symbolic link
@c @item %o - IO block size
@c @item %s - Total size, in bytes
@c @item %t - Major device type in hex
@c @item %T - Minor device type in hex
@c @item %u - User Id of owner
@c @item %U - User name of owner
@c @item %x - Time of last access
@c @item %X - Time of last access as seconds since Epoch
@c @item %y - Time of last modification
@c @item %Y - Time of last modification as seconds since Epoch
@c @item %z - Time of last change
@c @item %Z - Time of last change as seconds since Epoch
@c 
@item %a - ¥¢¥¯¥»¥¹µö²Ä¤ÎÈ¬¿Ê¿ô
@item %A - ¥¢¥¯¥»¥¹µö²Ä¤Î¿Í´Ö¤¬ÆÉ¤á¤ë·Á¼°
@item %b - ÎÎ°è¤Î¥Ö¥í¥Ã¥¯¿ô (see @samp{%B})
@item %B - @samp{%b}¤ÇÊó¹ð¤µ¤ì¤ë¤½¤ì¤¾¤ì¤Î¥Ö¥í¥Ã¥¯¤Î¥Ð¥¤¥È¿ô
@item %d - ½½¿Ê¿ô¤Î¥Ç¥Ð¥¤¥¹ÈÖ¹æ
@item %D - 16¿Ê¿ô¤Î¥Ç¥Ð¥¤¥¹ÈÖ¹æ
@item %f - 16¿Ê¿ô¤Îraw mode
@item %F - ¥Õ¥¡¥¤¥ë·Á¼°
@item %g - ½êÍ­¼Ô¤Î¥°¥ë¡¼¥×Id
@item %G - ½êÍ­¼Ô¤Î¥°¥ë¡¼¥×Ì¾
@item %h - ¥Ï¡¼¥É¥ê¥ó¥¯¿ô
@item %i - inodeÈÖ¹æ
@item %n - ¥Õ¥¡¥¤¥ëÌ¾
@item %N - ¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯¤Î¾ì¹ç¡¤´ÖÀÜ»²¾È¤·¤¿°úÍÑÉä¤Ç°Ï¤Þ¤ì¤¿¥Õ¥¡¥¤¥ëÌ¾
@item %o - IO¥Ö¥í¥Ã¥¯¥µ¥¤¥º
@item %s - ¥Ð¥¤¥ÈÃ±°Ì¤ÎÁ´ÂÎ¤ÎÂç¤­¤µ
@item %t - 16¿Ê¿ô¤Î¥á¥¸¥ã¡¼¥Ç¥Ð¥¤¥¹·Á¼°
@item %T - 16¿Ê¿ô¤Î¥Þ¥¤¥Ê¡¼¥Ç¥Ð¥¤¥¹·Á¼°
@item %u - ½êÍ­¼Ô¤Î¥æ¡¼¥¶Id
@item %U - ½êÍ­¼Ô¤Î¥æ¡¼¥¶Ì¾
@item %x - ºÇ¸å¤Ë¥¢¥¯¥»¥¹¤·¤¿»þ´Ö
@item %X - ºÇ¸å¤Ë¥¢¥¯¥»¥¹¤·¤¿Epoch°ÊÍè¤ÎÉÃ¿ô
@item %y - ºÇ¸å¤ËÊÔ½¸¤·¤¿»þ´Ö
@item %Y - ºÇ¸å¤ËÊÔ½¸¤·¤¿Epoch°ÊÍè¤ÎÉÃ¿ô
@item %z - ºÇ¸å¤ËÊÑ¹¹¤·¤¿»þ´Ö
@item %Z - ºÇ¸å¤ËÊÑ¹¹¤·¤¿Epoch°ÊÍè¤ÎÉÃ¿ô
@end itemize

@c Interpreted sequences for filesystem stat are:
@c 
¥Õ¥¡¥¤¥ë¥·¥¹¥Æ¥à¤Î¥¹¥Æ¡¼¥¿¥¹¤È¤·¤Æ²ò¼á¤µ¤ì¤ë¤â¤Î¤Ç¤¹¡¥
@itemize @bullet
@c @item %n - File name
@c @item %i - File System id in hex
@c @item %l - Maximum length of filenames
@c @item %t - Type in hex
@c @item %T - Type in human readable form
@c @item %b - Total data blocks in file system
@c @item %f - Free blocks in file system
@c @item %a - Free blocks available to non-superuser
@c @item %s - Optimal transfer block size
@c @item %c - Total file nodes in file system
@c 
@item %n - ¥Õ¥¡¥¤¥ëÌ¾
@item %i - 16¿Ê¿ô¤Î¥Õ¥¡¥¤¥ë¥·¥¹¥Æ¥àid
@item %l - ¥Õ¥¡¥¤¥ëÌ¾¤ÎºÇÂçÄ¹¤µ
@item %t - 16¿Ê¿ô¤Î·Á¼°
@item %T - ¿Í´Ö¤¬ÆÉ¤á¤ë·Á¼°
@item %b - ¥Õ¥¡¥¤¥ë¥·¥¹¥Æ¥àÁ´ÂÎ¤Î¥Ç¡¼¥¿¥Ö¥í¥Ã¥¯
@item %f - ¥Õ¥¡¥¤¥ë¥·¥¹¥Æ¥à¤Î¶õ¤­¥Ö¥í¥Ã¥¯
@item %a - ¥¹¡¼¥Ñ¡¼¥æ¡¼¥¶°Ê³°¤¬ÍøÍÑ²ÄÇ½¤Ê¶õ¤­¥Ö¥í¥Ã¥¯
@item %s - ºÇÅ¬¤Ë°ÜÆ°¤µ¤ì¤ë¥Ö¥í¥Ã¥¯¥µ¥¤¥º
@item %c - ¥Õ¥¡¥¤¥ë¥·¥¹¥Æ¥àÁ´ÂÎ¤Î¥Õ¥¡¥¤¥ë¥Î¡¼¥É
@end itemize
@end table

@exitstatus


@node sync invocation
@c @section @command{sync}: Synchronize data on disk with memory
@section @command{sync}: ¥Ç¥£¥¹¥¯¤Î¥Ç¡¼¥¿¤È¥á¥â¥ê¤ÎÆ±´ü

@pindex sync
@cindex synchronize disk and memory

@cindex superblock, writing
@cindex inodes, written buffered
@c @command{sync} writes any data buffered in memory out to disk.  This can
@c include (but is not limited to) modified superblocks, modified inodes,
@c and delayed reads and writes.  This must be implemented by the kernel;
@c The @command{sync} program does nothing but exercise the @code{sync} system
@c call.
@c 
@command{sync}¤Ï¡¤¥á¥â¥ê¤ËÃß¤¨¤é¤ì¤Æ¤¤¤ë¥Ç¡¼¥¿¤ò¤¹¤Ù¤Æ¥Ç¥£¥¹¥¯¤Ë½ñ¤­½Ð
¤·¤Þ¤¹¡¥¤³¤ì¤Ï¡¤(À©¸Â¤Ï¤¢¤ë¤â¤Î¤Î)ÊÔ½¸¤µ¤ì¤¿¥¹¡¼¥Ñ¡¼¥Ö¥í¥Ã¥¯¡¤ÊÔ½¸¤µ¤ì
¤¿inode¡¤¤½¤·¤ÆÃÙ±ä¤µ¤ì¤¿ÆÉ¤ß½ñ¤­¤¬´Þ¤Þ¤ì¤Þ¤¹¡¥¤³¤ì¤Ï¥«¡¼¥Í¥ë¤Ç¼ÂÁõ¤µ
¤ì¤Æ¤¤¤ëÉ¬Í×¤¬¤¢¤ê¤Þ¤¹¡¥@command{sync}¥×¥í¥°¥é¥à¤Ï¡¤@code{sync}¥·¥¹¥Æ
¥à¥³¡¼¥ë¤Î¸Æ¤Ó½Ð¤·°Ê³°¡¤²¿¤â¤·¤Þ¤»¤ó¡¥

@cindex crashes and corruption
@c The kernel keeps data in memory to avoid doing (relatively slow) disk
@c reads and writes.  This improves performance, but if the computer
@c crashes, data may be lost or the filesystem corrupted as a
@c result. @command{sync} ensures everything in memory is written to disk.
@c 
¥«¡¼¥Í¥ë¤Ï¡¤(ÁêÂÐÅª¤ËÃÙ¤¤)¥Ç¥£¥¯¥¹¤ÎÆÉ¤ß½ñ¤­¤òÈò¤±¤ë¤¿¤á¡¤¥á¥â¥ê¤Î¥Ç¡¼
¥¿¤ò¤½¤Î¤Þ¤Þ¤Ë¤·¤Þ¤¹¡¥¤³¤ì¤Ï¥Ñ¥Õ¥©¡¼¥Þ¥ó¥¹¤ò²þÁ±¤·¤Þ¤¹¤¬¡¤¥³¥ó¥Ô¥å¡¼¥¿
¤¬²õ¤ì¤¿¾ì¹ç¡¤·ë²Ì¤È¤·¤Æ¥Ç¡¼¥¿¤¬¼º¤ï¤ì¤¿¤ê¡¤¥Õ¥¡¥¤¥ë¥·¥¹¥Æ¥à¤¬²õ¤ì¤ë¤«
¤â¤·¤ì¤Þ¤»¤ó¡¥@command{sync}¤Ï¡¤¥á¥â¥ê¤Ë¤¢¤ë¤â¤Î¤¹¤Ù¤Æ¤ò³Î¼Â¤Ë¥Ç¥£¥¹¥¯
¤Ë½ñ¤­¹þ¤ß¤Þ¤¹¡¥

@c Any arguments are ignored, except for a lone @option{--help} or
@c @option{--version} (@pxref{Common options}).
@c 
Ã±ÆÈ¤Î@option{--help}¤ä@option{--version} (@pxref{Common options})°Ê³°
¤Î¤¢¤é¤æ¤ë¥ª¥×¥·¥ç¥ó¤ÏÌµ»ë¤µ¤ì¤Þ¤¹¡¥

@exitstatus


@node Printing text
@c @chapter Printing text
@chapter ¥Æ¥­¥¹¥È¤ÎÉ½¼¨

@cindex printing text, commands for
@cindex commands for printing text

@c This section describes commands that display text strings.
@c 
¤³¤Î¥»¥¯¥·¥ç¥ó¤Ï¡¤¥Æ¥­¥¹¥ÈÊ¸»úÎó¤ò²èÌÌ¤ËÉ½¼¨¤¹¤ë¥³¥Þ¥ó¥É¤òÀâÌÀ¤·¤Þ¤¹¡¥

@menu
* echo invocation::             Print a line of text.
* printf invocation::           Format and print data.
* yes invocation::              Print a string until interrupted.
@end menu


@node echo invocation
@c @section @command{echo}: Print a line of text
@section @command{echo}: ¥Æ¥­¥¹¥È¤Î¹Ô¤òÉ½¼¨

@pindex echo
@cindex displaying text
@cindex printing text
@cindex text, displaying
@cindex arbitrary text, displaying

@c @command{echo} writes each given @var{string} to standard output, with a
@c space between each and a newline after the last one.  Synopsis:
@c 
@command{echo}¤Ï¡¤Í¿¤¨¤é¤ì¤¿¤½¤ì¤¾¤ì¤Î@var{string}¤ò¡¤¤½¤ì¤¾¤ì¤Î´Ö¤Ë¥¹
¥Ú¡¼¥¹¤òÍÑ¤¤¡¤ºÇ¸å¤Î¤â¤Î¤Î¸å¤Ë²þ¹Ô¤òÍÑ¤¤¤Æ¡¤É¸½à½ÐÎÏ¤Ë½ñ¤­½Ð¤·¤Þ¤¹¡¥³µ
Í×¤Ç¤¹¡¥

@example
echo [@var{option}]@dots{} [@var{string}]@dots{}
@end example

@c The program accepts the following options.  Also see @ref{Common options}.
@c 
¥×¥í¥°¥é¥à¤Ï°Ê²¼¤Î¥ª¥×¥·¥ç¥ó¤â¼õ¤±Æþ¤ì¤Þ¤¹¡¥@ref{Common options}¤â»²¾È
¤·¤Æ¤¯¤À¤µ¤¤¡¥

@table @samp
@item -n
@opindex -n
@c Do not output the trailing newline.
@c 
½ª¤ê¤Î²þ¹Ô¤ò½ÐÎÏ¤·¤Þ¤»¤ó¡¥

@item -e
@opindex -e
@cindex backslash escapes
@c Enable interpretation of the following backslash-escaped characters in
@c each @var{string}:
@c 
¤½¤ì¤¾¤ì¤Î@var{string}¤Ç¡¤°Ê²¼¤Î¥Ð¥Ã¥¯¥¹¥Ú¡¼¥¹¥¨¥¹¥±¡¼¥×¤µ¤ì¤¿Ê¸»ú¤Î²ò
¼á¤ò²ÄÇ½¤Ë¤·¤Þ¤¹¡¥

@table @samp
@item \a
@c alert (bell)
@c 
·ÙÊó(¥Ù¥ë)
@item \b
@c backspace
@c 
¥Ð¥Ã¥¯¥¹¥Ú¡¼¥¹
@item \c
@c suppress trailing newline
@c 
½ª¤ê¤Î²þ¹Ô¤òÍÞÀ©
@item \f
@c form feed
@c 
¥Õ¥©¡¼¥à¥Õ¥£¡¼¥É
@item \n
@c new line
@c 
²þ¹Ô
@item \r
@c carriage return
@c 
¥­¥ã¥ê¥Ã¥¸¥ê¥¿¡¼¥ó
@item \t
@c horizontal tab
@c 
¿åÊ¿¥¿¥Ö
@item \v
@c vertical tab
@c 
¿âÄ¾¥¿¥Ö
@item \\
@c backslash
@c 
¥Ð¥Ã¥¯¥¹¥é¥Ã¥·¥å
@item \@var{nnn}
@c the character whose @acronym{ASCII} code is @var{nnn} (octal); if @var{nnn} is not
@c a valid octal number, it is printed literally.
@c 
@acronym{ASCII}¥³¡¼¥É¤¬@var{nnn}(È¬¿Ê¿ô)¤ÎÊ¸»ú¡¥@var{nnn}¤¬Í­¸ú¤Ê¿ô»ú
¤Ç¤Ê¤¤¾ì¹ç¡¤¤½¤ì¤ÏÊ¸»úÄÌ¤ê¤Ë½ÐÎÏ¤µ¤ì¤Þ¤¹¡¥
@end table

@end table

@exitstatus


@node printf invocation
@c @section @command{printf}: Format and print data
@section @command{printf}: ¥Ç¡¼¥¿¤Î½ñ¼°²½¤È½ÐÎÏ

@pindex printf
@c @command{printf} does formatted printing of text. Synopsis:
@c 
@command{printf}¤Ï¥Æ¥­¥¹¥È¤Î½ñ¼°²½¤µ¤ì¤¿É½¼¨¤ò¹Ô¤¤¤Þ¤¹¡¥³µÍ×¤Ç¤¹¡¥

@example
printf @var{format} [@var{argument}]@dots{}
@end example

@c @command{printf} prints the @var{format} string, interpreting @samp{%}
@c directives and @samp{\} escapes in the same way as the C @command{printf}
@c function.  The @var{format} argument is re-used as necessary to convert
@c all of the given @var{argument}s.
@c 
@command{printf}¤Ï¡¤C @code{printf}´Ø¿ô¤ÈÆ±¤¸ÊýË¡¤Ç¡¤@samp{%}»Ø¼¨¸ì¤È
@samp{\}¥¨¥¹¥±¡¼¥×¤ò²ò¼á¤·¤Ê¤¬¤é@var{format}Ê¸»úÎó¤òÉ½¼¨¤·¤Þ¤¹¡¥Í¿¤¨¤é
¤ì¤¿@var{argument}¤Î¤¹¤Ù¤Æ¤òÊÑ´¹¤¹¤ëÉ¬Í×¤¬¤¢¤ë¤Î¤Ç¡¤@var{format}°ú¿ô¤Ï
ºÆÍøÍÑ¤µ¤ì¤Þ¤¹¡¥

@vindex LC_NUMERIC
@c A floating-point argument must use a period before any fractional
@c digits, but is printed according to the @env{LC_NUMERIC} category of the
@c current locale.  For example, in a locale whose radix character is a
@c comma, the command @samp{printf %g 3.14} outputs @samp{3,14} whereas
@c the command @samp{printf %g 3,14} is an error.
@c 
ÉâÆ°¾®¿ôÅÀ¤Î°ú¿ô¤Ï¡¤¾®¿ô·å¤ÎÁ°¤Ë¥Ô¥ê¥ª¥É¤ò»ÈÍÑ¤¹¤ëÉ¬Í×¤¬¤¢¤ê¤Þ¤¹¤¬¡¤½Ð
ÎÏ¤Ï¸½ºß¤Î¥í¥«¡¼¥ë¤Î@env{LC_NUMERIC}¥«¥Æ¥´¥ê¤Ë°ÍÂ¸¤·¤Þ¤¹¡¥Îã¤¨¤Ð¡¤¥í¥«¡¼
¥ë¤Î´ð¿ôÊ¸»ú¤¬¥«¥ó¥Þ¤Î¤È¤­¡¤¥³¥Þ¥ó¥É@samp{printf %g 3.14}¤Ç@samp{3,14} 
¤ò½ÐÎÏ¤·¤Þ¤¹¤¬¡¤¥³¥Þ¥ó¥É@samp{printf %g 3,14}¤Ï¥¨¥é¡¼¤Ë¤Ê¤ê¤Þ¤¹¡¥

@c @command{printf} has one additional directive, @samp{%b}, which prints its
@c argument string with @samp{\} escapes interpreted in the same way as in
@c the @var{format} string, except that octal escapes are of the form
@c @samp{\0@var{ooo}} where @var{ooo} is 0 to 3 octal digits.
@c 
@command{printf}¤ÏÄÉ²Ã¤Î»Ø¼¨¸ì@samp{%b}¤¬¤¢¤ê¡¤¤½¤ì¤Ï¡¤@var{format}Ê¸
»úÎó¤ÈÆ±¤¸ÊýË¡¤Ç@samp{\}¥¨¥¹¥±¡¼¥×¤ò²ò¼á¤·¤Ê¤¬¤é¡¤¤½¤Î°ú¿ôÊ¸»úÎó¤òÉ½¼¨
¤·¤Þ¤¹¤¬¡¤Îã³°¤È¤·¤Æ¡¤È¬¿Ê¿ô¤Î¥¨¥¹¥±¡¼¥×¤Ï@samp{\0@var{ooo}}¤Î·Á¼°¤Ç¡¤
@var{ooo}¤Ï0¤«¤é3·å¤ÎÈ¬¿Ê¿ô¤Ë¤Ê¤ê¤Þ¤¹¡¥

@kindex \@var{ooo}
@kindex \x@var{hh}

@c @command{printf} interprets @samp{\@var{ooo}} in @var{format} as an octal number
@c (if @var{ooo} is 1 to 3 octal digits) specifying a character to print,
@c and @samp{\x@var{hh}} as a hexadecimal number (if @var{hh} is 1 to 2 hex
@c digits) specifying a character to print.
@c 
@command{printf}¤Ï¡¤É½¼¨Ê¸»ú¤ò»ØÄê¤¹¤ë¤È¤­¡¤@var{format}Æâ¤Î
@samp{\0ooo}¤ò(@var{ooo}¤¬1¤«¤é3·å¤ÎÈ¬¿Ê¤Î¾ì¹ç)È¬¿Ê¿ô¤È¤·¤Æ¡¤¤½¤·¤Æ¡¤
É½¼¨Ê¸»ú¤ò»ØÄê¤¹¤ë¤È¤­¡¤@samp{\xhhh}¤ò(@var{hhh}¤¬0¤«¤é»°·å¤Î16¿Ê¤Î¾ì
¹ç)16¿Ê¿ô¤È¤·¤Æ²ò¼á¤·¤Þ¤¹¡¥

@kindex \uhhhh
@kindex \Uhhhhhhhh
@c @command{printf} interprets two character syntaxes introduced in ISO C 99:
@c @samp{\u} for 16-bit Unicode characters, specified as 4 hex digits
@c @var{hhhh}, and @samp{\U} for 32-bit Unicode characters, specified as 8 hex
@c digits @var{hhhhhhhh}. @command{printf} outputs the Unicode characters
@c according to the LC_CTYPE part of the current locale, i.e. depending
@c on the values of the environment variables @env{LC_ALL}, @env{LC_CTYPE},
@c @env{LANG}.
@c 
@command{printf}¤Ï¡¤@acronym{ISO} C 99¤ÇÆ³Æþ¤µ¤ì¤¿ÆóÊ¸»ú¤Î¹½Ê¸¤ò²ò¼á¤·
¤Þ¤¹¡¥»Í·å¤Î16¿Ê¿ô@var{hhhh}¤Ç»ØÄê¤µ¤ì¤ë16¥Ó¥Ã¥È¤ÎUnicodeÊ¸»ú¤ËÂÐ¤¹¤ë
@samp{\u}¡¤¤½¤·¤Æ¡¤»Í·å¤Î16¿Ê¿ô@var{hhhhhhhh}¤Ç»ØÄê¤µ¤ì¤ë32¥Ó¥Ã¥È¤Î
UnicodeÊ¸»ú¤ËÂÐ¤¹¤ë@samp{\U}¤Ç¤¹¡¥¸½ºß¤Î¥í¥«¡¼¥ë¤ÎLC_CTYPE¤ÎÉôÊ¬¤Ë°ÍÂ¸
¤·¤Æ@command{printf}¤ÏUnicodeÊ¸»ú¤ò½ÐÎÏ¤·¡¤¤¹¤Ê¤ï¤Á¡¤´Ä¶­ÊÑ¿ô
@env{LC_ALL}¡¤@env{LC_CTYPE}¡¤@env{LANG}¤ÎÃÍ¤Ë¤Ï°ÍÂ¸¤·¤Þ¤»¤ó¡¥

@c The processing of @samp{\u} and @samp{\U} requires a full-featured
@c @code{iconv} facility. It is activated on systems with glibc 2.2 (or newer),
@c or when @code{libiconv} is installed prior to this package. Otherwise the
@c use of @samp{\u} and @samp{\U} will give an error message.
@c 
@samp{\u}¤È@samp{\U}¤Î½èÍý¤Ç¤Ï¡¤@code{iconv}¤Îµ¡Ç½¤¬´°Á´¤Ë¤Ê¤Ã¤Æ¤¤¤ëÉ¬
Í×¤¬¤¢¤ê¤Þ¤¹¡¥glibc 2.2(¤Þ¤¿¤Ï¤½¤ì¤è¤ê¿·¤·¤¤¤â¤Î)¤òÍÑ¤¤¤¿¥·¥¹¥Æ¥à¤ä¡¤
¤³¤Î¥Ñ¥Ã¥±¡¼¥¸¤ËÍ¥Àè¤¹¤ë@code{libiconv}¤¬¥¤¥ó¥¹¥È¡¼¥ë¤µ¤ì¤Æ¤¤¤ë¤È¤­¤Ï
Æ°ºî¤·¤Þ¤¹¡¥¤½¤ì°Ê³°¤Ç@samp{\u}¤È@samp{\U}¤ò»ÈÍÑ¤¹¤ë¤È¡¤¥¨¥é¡¼¥á¥Ã¥»¡¼
¥¸¤¬É½¼¨¤µ¤ì¤Þ¤¹¡¥

@kindex \c
@c An additional escape, @samp{\c}, causes @command{printf} to produce no
@c further output.
@c 
ÄÉ²Ã¤Î¥¨¥¹¥±¡¼¥×@samp{\c}¤Ï¡¤@command{printf}¤Ë¤½¤ì°Ê¾å¤Î½ÐÎÏ¤òÀ¸À®¤µ
¤»¤Þ¤»¤ó¡¥

@c The only options are a lone @option{--help} or
@c @option{--version}.  @xref{Common options}.
@c 
¥ª¥×¥·¥ç¥ó¤Ï¡¤Ã±ÆÈ¤Î@option{--help}¤ä@option{--version}¤À¤±¤Ç¤¹¡¥
@xref{Common options}.

@c The Unicode character syntaxes are useful for writing strings in a locale
@c independent way. For example, a string containing the Euro currency symbol
@c 
UnicodeÊ¸»ú¤Î¹½Ê¸¤Ï¡¤¥í¥«¡¼¥ë¤Ë°ÍÂ¸¤·¤Æ¤¤¤ëÊ¸»úÎó¤ò½ñ¤¯¤È¤­Ìò¤ËÎ©¤Á¤Þ
¤¹¡¥Îã¤¨¤Ð¡¤EuroÄÌ²ß¤Îµ­¹æ¤ò´Þ¤àÊ¸»úÎó¤Ç¤¹¡¥

@example
$ /usr/local/bin/printf '\u20AC 14.95'
@end example

@noindent
@c will be output correctly in all locales supporting the Euro symbol
@c (ISO-8859-15, UTF-8, and others). Similarly, a Chinese string
@c 
¤³¤ì¤Ç¡¤Euro¤Îµ­¹æ¤ò¥µ¥Ý¡¼¥È¤·¤Æ¤¤¤ë¤¹¤Ù¤Æ¤Î¥í¥«¡¼¥ë¤Ç(ISO-8859-15¡¤
UTF-8¡¤Â¾)Àµ¤·¤¯½ÐÎÏ¤µ¤ì¤Þ¤¹¡¥Æ±ÍÍ¤ËÃæ¹ñÊ¸»ú¤òÍøÍÑ¤·¤Þ¤¹¡¥

@example
$ /usr/local/bin/printf '\u4e2d\u6587'
@end example

@noindent
@c will be output correctly in all Chinese locales (GB2312, BIG5, UTF-8, etc).
@c 
¤³¤ì¤Ç¡¤¤¹¤Ù¤Æ¤ÎÃæ¹ñ¤Î¥í¥«¡¼¥ë(GB2312¡¤BIG5¡¤UTF-8¡¤Åù)¤ÇÀµ¤·¤¯½ÐÎÏ¤µ
¤ì¤Þ¤¹¡¥

@c Note that in these examples, the full pathname of @command{printf} has been
@c given, to distinguish it from the GNU @code{bash} builtin function
@c @command{printf}.
@c 
¤³¤ì¤é¤ÎÎã¤Ï¡¤GNU @code{bash}¤ÎÁÈ¤ß¹þ¤ß´Ø¿ô@command{printf}¤È¶èÊÌ¤¹¤ë
¤¿¤á¡¤@command{printf}¤Î¥Õ¥ë¥Ñ¥¹Ì¾¤¬Í¿¤¨¤é¤ì¤Æ¤¤¤ë¤³¤È¤ËÃí°Õ¤·¤Æ²¼¤µ¤¤¡¥

@c For larger strings, you don't need to look up the hexadecimal code
@c values of each character one by one. @acronym{ASCII} characters mixed with \u
@c escape sequences is also known as the JAVA source file encoding. You can
@c use GNU recode 3.5c (or newer) to convert strings to this encoding. Here
@c is how to convert a piece of text into a shell script which will output
@c this text in a locale-independent way:
@c 
¤è¤êÄ¹¤¤Ê¸»úÎó¤Ç¤Ï¡¤¤½¤ì¤¾¤ì¤ÎÊ¸»ú°ì¤Ä°ì¤Ä¤Î16¿Ê¿ô¤Î¥³¡¼¥ÉÃÍ¤òÃµ¤¹É¬Í×
¤¬¤¢¤ê¤Þ¤»¤ó¡¥@samp{\u}¥¨¥¹¥±¡¼¥×¥·¡¼¥±¥ó¥¹¤¬º®¤¶¤Ã¤Æ¤¤¤ë
@acronym{ASCII}Ê¸»ú¤Ï¡¤JAVA¤Î¥½¡¼¥¹¥Õ¥¡¥¤¥ë¤Î¥¨¥ó¥³¡¼¥É¤È¤·¤ÆÃÎ¤é¤ì¤Æ
¤¤¤Þ¤¹¡¥¤³¤Î¥¨¥ó¥³¡¼¥É¤µ¤ì¤¿Ê¸»úÎó¤òÊÑ´¹¤¹¤ë¤¿¤á¤Ë¡¤GNU recode 3.5c(¤Þ
¤¿¤Ï¤è¤ê¿·¤·¤¤¤â¤Î)¤ò»ÈÍÑ¤¹¤ë¤³¤È¤¬²ÄÇ½¤Ç¤¹¡¥¥Æ¥­¥¹¥È¤Î°ìÉô¤ò¡¤¥í¥±¡¼
¥ë¤Ë°ÍÂ¸¤·¤Ê¤¤ÊýË¡¤Ç¤³¤Î¥Æ¥­¥¹¥È¤ò½ÐÎÏ¤¹¤ë¥·¥§¥ë¥¹¥¯¥ê¥×¥È¤ËÊÑ´¹¤¹¤ëÊý
Ë¡¤Ï°Ê²¼¤Î¤è¤¦¤Ë¤Ê¤ê¤Þ¤¹¡¥

@smallexample
$ LC_CTYPE=zh_CN.big5 /usr/local/bin/printf \
    '\u4e2d\u6587\n' > sample.txt
$ recode BIG5..JAVA < sample.txt \
    | sed -e "s|^|/usr/local/bin/printf '|" -e "s|$|\\\\n'|" \
    > sample.sh
@end smallexample

@exitstatus


@node yes invocation
@c @section @command{yes}: Print a string until interrupted
@section @command{yes}: ÃæÃÇ¤¹¤ë¤Þ¤ÇÊ¸»úÎó¤ò½ÐÎÏ

@pindex yes
@cindex repeated output of a string

@c @command{yes} prints the command line arguments, separated by spaces and
@c followed by a newline, forever until it is killed.  If no arguments are
@c given, it prints @samp{y} followed by a newline forever until killed.
@c 
@command{yes}¤Ï¡¤¥¹¥Ú¡¼¥¹¤ÇÊ¬Î¥¤µ¤ì²þ¹Ô¸åÃÖ¤µ¤ì¤¿¥³¥Þ¥ó¥É¥é¥¤¥ó°ú¿ô¤ò¡¤
¥­¥ë¤µ¤ì¤ë¤Þ¤Ç±Ê±ó¤Ë½ÐÎÏ¤·¤Þ¤¹¡¥°ú¿ô¤¬Í¿¤¨¤é¤ì¤Ê¤¤¾ì¹ç¤Ï¡¤²þ¹Ô¸åÃÖ¤µ¤ì
¤¿@samp{y}¤ò¡¤¥­¥ë¤µ¤ì¤ë¤Þ¤Ç±Ê±ó¤Ë½ÐÎÏ¤·¤Þ¤¹¡¥

@c Upon a write error, @command{yes} exits with status @samp{1}.
@c 
¾åµ­¤Î¥¨¥é¡¼¤Ç¡¤@command{yes}¤Ï@samp{1}¤Î¥¹¥Æ¡¼¥¿¥¹¤Ç½ªÎ»¤·¤Þ¤¹¡¥

@c The only options are a lone @option{--help} or @option{--version}.
@c @xref{Common options}.
@c 
¥ª¥×¥·¥ç¥ó¤Ï¡¤Ã±ÆÈ¤Î@option{--help}¤ä@option{--version}¤À¤±¤Ç¤¹¡¥
@xref{Common options}.


@node Conditions
@c @chapter Conditions
@chapter ¾ò·ïÊ¸

@cindex conditions
@cindex commands for exit status
@cindex exit status commands

@c This section describes commands that are primarily useful for their exit
@c status, rather than their output.  Thus, they are often used as the
@c condition of shell @code{if} statements, or as the last command in a
@c pipeline.
@c 
¤³¤Î¥»¥¯¥·¥ç¥ó¤Ç¤Ï¡¤¤½¤Î½ÐÎÏ¤Ç¤Ï¤Ê¤¯¡¤½ªÎ»¥¹¥Æ¡¼¥¿¥¹¤¬¼ç¤ËÌò¤ËÎ©¤Ä¥³¥Þ
¥ó¥É¤òµ­½Ò¤·¤Þ¤¹¡¥¤³¤Î¤¿¤á¤½¤ì¤é¤Ï¡¤¥·¥§¥ë¤Î@code{if}Ê¸¤Î¾ò·ï¤ä¥Ñ¥¤¥×
¥é¥¤¥ó¤ÎºÇ¸å¤Î¥³¥Þ¥ó¥É¤È¤·¤Æ¤è¤¯»ÈÍÑ¤µ¤ì¤Þ¤¹¡¥

@menu
* false invocation::            Do nothing, unsuccessfully.
* true invocation::             Do nothing, successfully.
* test invocation::             Check file types and compare values.
* expr invocation::             Evaluate expressions.
@end menu


@node false invocation
@c @section @command{false}: Do nothing, unsuccessfully
@section @command{false}: ²¿¤â¤»¤º¼ºÇÔ¤·¤Þ¤¹

@pindex false
@cindex do nothing, unsuccessfully
@cindex failure exit status
@cindex exit status of @command{false}

@c @command{false} does nothing except return an exit status of 1, meaning
@c @dfn{failure}.  It can be used as a place holder in shell scripts
@c where an unsuccessful command is needed.
@c 
@command{false}¤Ï¡¤@dfn{¼ºÇÔ(failure)}¤ò°ÕÌ£¤¹¤ë1¤Î½ªÎ»¥¹¥Æ¡¼¥¿¥¹¤òÊÖ
¤¹°Ê³°²¿¤â¤·¤Þ¤»¤ó¡¥¤½¤ì¤Ï¡¤¥·¥§¥ë¥¹¥¯¥ê¥×¥È¤Î¼ºÇÔ¤Î¥³¥Þ¥ó¥É¤¬É¬Í×¤Ê°Ì
ÃÖ¤Ç»ÈÍÑ¤¹¤ë¤³¤È¤¬²ÄÇ½¤Ç¤¹¡¥

@c By default, @command{false} honors the @option{--help} and @option{--version}
@c options.  However, that is contrary to @acronym{POSIX}, so when the environment
@c variable @env{POSIXLY_CORRECT} is set, @command{false} ignores @emph{all}
@c command line arguments, including @option{--help} and @option{--version}.
@c 
¥Ç¥Õ¥©¥ë¥È¤Ç¡¤@command{false}¤Ï@option{--help}¤È@option{--version}¤òÂº
½Å¤·¤Þ¤¹¡¥¤·¤«¤·¡¤¤½¤ì¤Ï@acronym{POSIX}¤Ë½àµò¤·¤Æ¤¤¤Ê¤¤¤Î¤Ç¡¤´Ä¶­ÊÑ¿ô
@env{POSIXLY_CORRECT}¤¬ÀßÄê¤µ¤ì¤Æ¤¤¤ë¤È¤­¡¤@command{false}¤Ï¡¤
@option{--help}¤È@option{--version}¤ò´Þ¤à¡¤¤¹¤Ù¤Æ¤Î¥³¥Þ¥ó¥É¥é¥¤¥ó°ú¿ô
¤òÌµ»ë¤·¤Þ¤¹¡¥

@c This version of @command{false} is implemented as a C program, and is thus
@c more secure and faster than a shell script implementation, and may safely
@c be used as a dummy shell for the purpose of disabling accounts.
@c 
¤³¤Î¥Ð¡¼¥¸¥ç¥ó¤Î@command{false}¤Ï¡¤C¥×¥í¥°¥é¥à¤È¤·¤Æ¼ÂÁõ¤µ¤ì¤Æ¤¤¤Æ¡¤¤½
¤Î¤¿¤á¡¤¥·¥§¥ë¥¹¥¯¥ê¥×¥È¤Î¼ÂÁõ¤è¤ê°ÂÁ´¤«¤Ä¹âÂ®¤Ë¤Ê¤ê¡¤¥¢¥«¥¦¥ó¥È¤Î»ÈÍÑ
¤ò¶Ø»ß¤¹¤ëÌÜÅª¤Î¥À¥ß¡¼¥·¥§¥ë¤È¤·¤Æ»ÈÍÑ¤·¤Æ¤â°ÂÁ´¤Ç¤·¤ç¤¦¡¥

@c Note that @command{false} (unlike all other programs documented herein)
@c exits unsuccessfully, even when invoked with
@c @option{--help} or @option{--version}.
@c 
@command{false}¤Ï¡¤(¤³¤³¤ÇÀâÌÀ¤µ¤ì¤Æ¤¤¤ëÂ¾¤Î¤¹¤Ù¤Æ¤Î¥×¥í¥°¥é¥à¤È¤Ï°Û¤Ê
¤ê) @option{--help}¤ä@option{--version}¤òÍÑ¤¤¤Æ¸Æ¤Ó½Ð¤µ¤ì¤Æ¤â¡¤¼ºÇÔ¤Î
½ªÎ»¥¹¥Æ¡¼¥¿¥¹¤òÊÖ¤·¤¹¤³¤È¤ËÃí°Õ¤·¤Æ²¼¤µ¤¤¡¥


@node true invocation
@c @section @command{true}: Do nothing, successfully
@section @command{true}: ²¿¤â¤»¤ºÀ®¸ù¤·¤Þ¤¹

@pindex true
@cindex do nothing, successfully
@cindex no-op
@cindex successful exit
@cindex exit status of @command{true}

@c @command{true} does nothing except return an exit status of 0, meaning
@c @dfn{success}.  It can be used as a place holder in shell scripts
@c where a successful command is needed, although the shell built-in
@c command @code{:} (colon) may do the same thing faster.
@c In most modern shells, @command{true} is a built-in command, so when
@c you use @samp{true} in a script, you're probably using the built-in
@c command, not the one documented here.
@c 
@command{true}¤Ï¡¤@dfn{À®¸ù(success)}¤ò°ÕÌ£¤¹¤ë0¤Î½ªÎ»¥¹¥Æ¡¼¥¿¥¹¤òÊÖ¤¹
°Ê³°²¿¤â¤·¤Þ¤»¤ó¡¥¤½¤ì¤Ï¡¤¥·¥§¥ë¥¹¥¯¥ê¥×¥È¤ÎÀ®¸ù¤Î¥³¥Þ¥ó¥É¤¬É¬Í×¤Ê°ÌÃÖ
¤Ç»ÈÍÑ¤¹¤ë¤³¤È¤¬²ÄÇ½¤Ç¤¹¤¬¡¤¥·¥§¥ëÁÈ¤ß¹þ¤ß¥³¥Þ¥ó¥É @code{:} (¥³¥í¥ó)¤Ï
Æ±¤¸¤³¤È¤ò¤è¤ê¹âÂ®¤Ë¹Ô¤¤¤Þ¤¹¡¥ºÇ¶á¤Î¤Û¤È¤ó¤É¤Î¥·¥§¥ë¤Ç¤Ï¡¤
@command{true}¤¬ÁÈ¤ß¹þ¤ß¥³¥Þ¥ó¥É¤Ê¤Î¤Ç¡¤¥¹¥¯¥ê¥×¥È¤Ç@samp{true}¤ò»ÈÍÑ
¤¹¤ë¤È¤­¡¤¤ª¤½¤é¤¯¤³¤³¤ÇÀâÌÀ¤·¤Æ¤¤¤ë¤â¤Î¤Ç¤Ï¤Ê¤¯ÁÈ¤ß¹þ¤ß¥³¥Þ¥ó¥É¤ò»ÈÍÑ
¤¹¤ë¤³¤È¤Ë¤Ê¤ê¤Þ¤¹¡¥

@c By default, @command{true} honors the @option{--help} and @option{--version}
@c options.  However, that is contrary to @acronym{POSIX}, so when the environment
@c variable @env{POSIXLY_CORRECT} is set, @command{true} ignores @emph{all}
@c command line arguments, including @option{--help} and @option{--version}.
@c 
¥Ç¥Õ¥©¥ë¥È¤Ç¡¤¤Ï@option{--help}¤È@option{--version}¤òÂº½Å¤·¤Þ¤¹¡¥¤·¤«
¤·¡¤¤½¤ì¤Ï@acronym{POSIX}¤Ë½àµò¤·¤Æ¤¤¤Ê¤¤¤Î¤Ç¡¤´Ä¶­ÊÑ¿ô
@env{POSIXLY_CORRECT}¤¬ÀßÄê¤µ¤ì¤Æ¤¤¤ë¤È¤­¡¤@command{true}¤Ï
@option{--help}¤È@option{--version}¤ò´Þ¤à¡¤¤¹¤Ù¤Æ¤Î¥³¥Þ¥ó¥É¥é¥¤¥ó°ú¿ô
¤òÌµ»ë¤·¤Þ¤¹¡¥

@c Note, however, that it is possible to cause @command{true}
@c to exit with nonzero status: when invoked in non-@acronym{POSIX} mode,
@c with the @option{--help} or @option{--version} option, and with standard
@c output already closed or redirected to a file that evokes an I/O error.
@c For example, using a Bourne-compatible shell:
@c 
¤·¤«¤·¡¤@command{true}¤Ë¥¼¥í°Ê³°¤Î¥¹¥Æ¡¼¥¿¥¹¤Ç½ªÎ»¤µ¤»¤ë¤³¤È¤â²ÄÇ½¤Ç¤¢
¤ë¤³¤È¤ËÃí°Õ¤·¤Æ²¼¤µ¤¤¡¥Èó@acronym{POSIX}¥â¡¼¥É¤Ç¸Æ¤Ó½Ð¤µ¤ì¡¤
@option{--help}¤ä@option{--version}¥ª¥×¥·¥ç¥ó¤òÍÑ¤¤¡¤É¸½à½ÐÎÏ¤¬ÊÄ¤¸¤é
¤ì¤Æ¤¤¤ë¡¤¤Þ¤¿¤ÏI/O¥¨¥é¡¼¤È¤Ê¤ë¥Õ¥¡¥¤¥ë¤Ë¥ê¥À¥¤¥ì¥¯¥È¤¹¤ë¤È¤­¤¬¤½¤¦¤Ç
¤¹¡¥Îã¤¨¤Ð¡¤Bouene¸ß´¹¥·¥§¥ë¤Ç¤Î»ÈÍÑÎã¤Ç¤¹¡¥

@example
$ ./true --version >&-
./true: write error: Bad file number
$ ./true --version > /dev/full
./true: write error: No space left on device
@end example

@c This version of @command{true} is implemented as a C program, and is thus
@c more secure and faster than a shell script implementation, and may safely
@c be used as a dummy shell for the purpose of disabling accounts.
@c 
¤³¤Î¥Ð¡¼¥¸¥ç¥ó¤Î@command{true}¤Ï¡¤C¥×¥í¥°¥é¥à¤È¤·¤Æ¼ÂÁõ¤µ¤ì¤Æ¤¤¤Æ¡¤¤½
¤Î¤¿¤á¡¤¥·¥§¥ë¥¹¥¯¥ê¥×¥È¤Î¼ÂÁõ¤è¤ê°ÂÁ´¤«¤Ä¹âÂ®¤Ë¤Ê¤ê¡¤¥¢¥«¥¦¥ó¥È¤Î»ÈÍÑ
¤ò¶Ø»ß¤¹¤ëÌÜÅª¤Î¥À¥ß¡¼¥·¥§¥ë¤È¤·¤Æ»ÈÍÑ¤·¤Æ¤â°ÂÁ´¤Ç¤·¤ç¤¦¡¥

@node test invocation
@c @section @command{test}: Check file types and compare values
@section @command{test}: ¥Õ¥¡¥¤¥ë·Á¼°¤ÎÄ´ºº¤ÈÃÍ¤ÎÈæ³Ó

@pindex test
@cindex check file types
@cindex compare values
@cindex expression evaluation

@c @command{test} returns a status of 0 (true) or 1 (false) depending on the
@c evaluation of the conditional expression @var{expr}.  Each part of the
@c expression must be a separate argument.
@c 
¾ò·ï¼°@var{expr}¤ÎÉ¾²Á¤Ë°ÍÂ¸¤·¤Æ¡¤0(¿¿)¤Þ¤¿¤Ï1(µ¶)¤Î¥¹¥Æ¡¼¥¿¥¹¤òÊÖ¤·¤Þ
¤¹¡¥¼°¤Î¤½¤ì¤¾¤ì¤ÎÉôÊ¬¤Ï¡¤Ê¬Î¥¤µ¤ì¤¿°ú¿ô¤Ë¤¹¤ëÉ¬Í×¤¬¤¢¤ê¤Þ¤¹¡¥

@c @command{test} has file status checks, string operators, and numeric
@c comparison operators.
@c 
@command{test}¤Ë¤Ï¡¤¥Õ¥¡¥¤¥ë¤Î¥¹¥Æ¡¼¥¿¥¹¤ÎÄ´ºº¡¤Ê¸»ú±é»»»Ò¡¤¤½¤·¤Æ¿ô»ú
Èæ³Ó¤Î±é»»»Ò¤¬¤¢¤ê¤Þ¤¹¡¥

@c @command{test} has an alternate form that uses opening and closing
@c square brackets instead a leading @samp{test}.  For example, instead
@c of @samp{test -d /}, you can write @samp{[ -d / ]}.  The square
@c brackets must be separate arguments; for example, @samp{[-d /]} does
@c not have the desired effect.  Since @samp{test @var{expr}} and @samp{[
@c @var{expr} ]} have the same meaning, only the former form is discussed
@c below.
@c 
@command{test}¤Ë¤Ï¡¤@samp{test}¤òÁ°ÃÖ¤¹¤ëÂå¤ï¤ê¤Ë»Í³Ñ¤¤³«³ç¸Ì¡¤ÊÄ³ç¸Ì
¤È»ÈÍÑ¤¹¤ë¡¤¤â¤¦°ì¤Ä¤Î·Á¼°¤¬¤¢¤ê¤Þ¤¹¡¥Îã¤¨¤Ð¡¤@samp{test -d /}¤ÎÂå¤ï¤ê
¤Ë@samp{[ -d / ]}¤È½ñ¤¯¤³¤È¤â²ÄÇ½¤Ç¤¹¡¥»Í³Ñ¤¤³ç¸Ì¤ÏÊ¬Î¥¤µ¤ì¤Æ¤¤¤ë°ú¿ô
¤Ë¤¹¤ëÉ¬Í×¤¬¤¢¤ê¤Þ¤¹¡¥Îã¤¨¤Ð¡¤@samp{[-d /]}¤Ç¤Ï´üÂÔ¤·¤¿¸ú²Ì¤Ë¤Ê¤ê¤Þ¤»
¤ó¡¥ @samp{test @var{expr}}¤È@samp{[ @var{expr} ]}¤Ë¤ÏÆ±¤¸°ÕÌ£¤¬¤¢¤ë¤Î
¤Ç¡¤°Ê²¼¤Ç¤ÏÁ°¼Ô¤Î·Á¼°¤À¤±¤òµÄÏÀ¤·¤Æ¤¤¤­¤Þ¤¹¡¥

@cindex conflicts with shell built-ins
@cindex built-in shell commands, conflicts with
@c Because most shells have a built-in command by the same name, using the
@c unadorned command name in a script or interactively may get you
@c different functionality than that described here.
@c 
¤Û¤È¤ó¤É¤Î¥·¥§¥ë¤Ë¤ÏÆ±¤¸Ì¾Á°¤ÎÁÈ¤ß¹þ¤ß¥³¥Þ¥ó¥É¤¬¤¢¤ë¤¿¤á¡¤¥¹¥¯¥ê¥×¥ÈÆâ
¤äÂÐÏÃÅª¤Ë´ÊÁÇ¤Ê¥³¥Þ¥ó¥ÉÌ¾¤ò»ÈÍÑ¤¹¤ë¤È¡¤¤³¤³¤Çµ­½Ò¤¹¤ë¤â¤Î¤È°Û¤Ê¤ëµ¡Ç½
¤È¤Ê¤ë²ÄÇ½À­¤¬¤¢¤ê¤Þ¤¹¡¥

@c Besides the options below, a single argument is also allowed:
@c @command{test} returns true if the argument is not null.  The argument
@c can be any string, including strings like @samp{-d}, @samp{-1},
@c @samp{--}, @samp{--help}, and @samp{--version} that most other
@c programs would treat as options.  To get help and version information,
@c invoke the commands @samp{[ --help} and @samp{[ --version}, without
@c the usual closing brackets.  @xref{Common options}.
@c 
°Ê²¼¤Î¥ª¥×¥·¥ç¥ó¤ÎÂ¾¤Ë¡¤Ã±°ì¤Î°ú¿ô¤â²ÄÇ½¤Ç¤¹¡¥°ú¿ô¤¬¶õ¤Ç¤Ê¤¤¾ì¹ç¡¤
@command{test}¤Ïtrue¤òÊÖ¤·¤Þ¤¹¡¥Ç¤°Õ¤ÎÊ¸»úÎó¤Î°ú¿ô¤¬²ÄÇ½¤Ç¡¤¤½¤ì¤é¤ÎÊ¸
»úÎó¤Ë¤Ï@samp{-d}¡¤@samp{-1}¡¤@samp{--}¡¤@samp{--help}¡¤¤½¤·¤Æ
@samp{--version}¤È¤¤¤Ã¤¿¡¤Â¾¤Î¥×¥í¥°¥é¥à¤Î¤Û¤È¤ó¤É¤¬¥ª¥×¥·¥ç¥ó¤È¤·¤Æ½è
Íý¤¹¤ë¤â¤Î¤â´Þ¤Þ¤ì¤Þ¤¹¡¥¥Ø¥ë¥×¤ä¥Ð¡¼¥¸¥ç¥ó¾ðÊó¤ò¼èÆÀ¤¹¤ë¤¿¤á¡¤¥³¥Þ¥ó¥É
@samp{[ --help}¤È@samp{[ --version}¤ò¡¤¤¤¤Ä¤â¤ÎÊÄ¤¸³ç¸Ì¤òÍÑ¤¤¤º¤Ë¸Æ¤Ó
½Ð¤·¤Æ²¼¤µ¤¤¡¥@xref{Common options}.

@cindex exit status of @command{test}
@c Exit status:
@c 
½ªÎ»¥¹¥Æ¡¼¥¿¥¹¤Ç¤¹¡¥
@display
@c 0 if the expression is true,
@c 1 if the expression is false,
@c 2 if an error occurred.
@c 
0 ¼°¤¬true¤Î¾ì¹ç¡¥
1 ¼°¤¬false¤Î¾ì¹ç¡¥
2 ¥¨¥é¡¼¤¬À¸¤¸¤¿¾ì¹ç¡¥
@end display

@menu
* File type tests::             -[bcdfhLpSt]
* Access permission tests::     -[gkruwxOG]
* File characteristic tests::   -e -s -nt -ot -ef
* String tests::                -z -n = !=
* Numeric tests::               -eq -ne -lt -le -gt -ge
* Connectives for test::        ! -a -o
@end menu


@node File type tests
@c @subsection File type tests
@subsection ¥Õ¥¡¥¤¥ë·Á¼°¤Î¥Æ¥¹¥È

@cindex file type tests

@c These options test for particular types of files.  (Everything's a file,
@c but not all files are the same!)
@c 
¤³¤ì¤é¤Î¥ª¥×¥·¥ç¥ó¤Ï¡¤¥Õ¥¡¥¤¥ë¤ÎÆÃÄê¤Î·Á¼°¤ò¥Æ¥¹¥È¤·¤Þ¤¹¡¥(¥Õ¥¡¥¤¥ë¤Î
¤¹¤Ù¤Æ¤Ç¤¹¤¬¡¤¤¹¤Ù¤Æ¤Î¥Õ¥¡¥¤¥ë¤¬Æ±¤¸¤Ç¤Ï¤¢¤ê¤Þ¤»¤ó¡ª)

@table @samp

@item -b @var{file}
@opindex -b
@cindex block special check
@c True if @var{file} exists and is a block special device.
@c 
@var{file}¤¬Â¸ºß¤·¡¤¥Ö¥í¥Ã¥¯¥¹¥Ú¥·¥ã¥ë¥Ç¥Ð¥¤¥¹¤Î¾ì¹ç¤Ï¿¿¤Ç¤¹¡¥

@item -c @var{file}
@opindex -c
@cindex character special check
@c True if @var{file} exists and is a character special device.
@c 
@var{file}¤¬Â¸ºß¤·¡¤¥­¥ã¥é¥¯¥¿¥¹¥Ú¥·¥ã¥ë¥Ç¥Ð¥¤¥¹¤Î¾ì¹ç¤Ï¿¿¤Ç¤¹¡¥

@item -d @var{file}
@opindex -d
@cindex directory check
@c True if @var{file} exists and is a directory.
@c 
@var{file}¤¬Â¸ºß¤·¡¤¥Ç¥£¥ì¥¯¥È¥ê¤Î¾ì¹ç¤Ï¿¿¤Ç¤¹¡¥

@item -f @var{file}
@opindex -f
@cindex regular file check
@c True if @var{file} exists and is a regular file.
@c 
@var{file}¤¬Â¸ºß¤·¡¤ÄÌ¾ï¤Î¥Õ¥¡¥¤¥ë¤Î¾ì¹ç¤Ï¿¿¤Ç¤¹¡¥

@item -h @var{file}
@itemx -L @var{file}
@opindex -L
@opindex -h
@cindex symbolic link check
@c True if @var{file} exists and is a symbolic link.
@c 
@var{file}¤¬Â¸ºß¤·¡¤¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯¤Î¾ì¹ç¤Ï¿¿¤Ç¤¹¡¥

@item -p @var{file}
@opindex -p
@cindex named pipe check
@c True if @var{file} exists and is a named pipe.
@c 
@var{file}¤¬Â¸ºß¤·¡¤Ì¾Á°ÉÕ¤­¥Ñ¥¤¥×¤Î¾ì¹ç¤Ï¿¿¤Ç¤¹¡¥

@item -S @var{file}
@opindex -S
@cindex socket check
@c True if @var{file} exists and is a socket.
@c 
@var{file}¤¬Â¸ºß¤·¡¤¥½¥±¥Ã¥È¤Î¾ì¹ç¤Ï¿¿¤Ç¤¹¡¥

@item -t @var{fd}
@opindex -t
@cindex terminal check
@c True if @var{fd} is a file descriptor that is associated with a
@c terminal.
@c 
@var{fd}¤¬Ã¼Ëö¤Ë´ØÏ¢¤Å¤±¤é¤ì¤Æ¤¤¤ë¥Õ¥¡¥¤¥ëµ­½Ò»Ò¤Î¾ì¹ç¤Ï¿¿¤Ç¤¹¡¥

@end table


@node Access permission tests
@c @subsection Access permission tests
@subsection ¥¢¥¯¥»¥¹µö²Ä¤Î¥Æ¥¹¥È

@cindex access permission tests
@cindex permission tests

@c These options test for particular access permissions.
@c 
¤³¤ì¤é¤Î¥ª¥×¥·¥ç¥ó¤Ï¡¤ÆÃÄê¤Î¥¢¥¯¥»¥¹µö²Ä¤ò¥Æ¥¹¥È¤·¤Þ¤¹¡¥

@table @samp

@item -g @var{file}
@opindex -g
@cindex set-group-id check
@c True if @var{file} exists and has its set-group-id bit set.
@c 
@var{file}¤¬Â¸ºß¤·¡¤¤½¤Î¥»¥Ã¥È¥°¥ë¡¼¥×id¥Ó¥Ã¥È¤¬ÀßÄê¤µ¤ì¤Æ¤¤¤ë¾ì¹ç¤Ï¿¿
¤Ç¤¹¡¥

@item -k @var{file}
@opindex -k
@cindex sticky bit check
@c True if @var{file} has its @dfn{sticky} bit set.
@c 
@var{file}¤¬Â¸ºß¤·¡¤@dfn{¥¹¥Æ¥£¥Ã¥­¡¼(sticky)}¥Ó¥Ã¥È¤¬ÀßÄê¤µ¤ì¤Æ¤¤¤ë¾ì
¹ç¤Ï¿¿¤Ç¤¹¡¥

@item -r @var{file}
@opindex -r
@cindex readable file check
@c True if @var{file} exists and is readable.
@c 
@var{file}¤¬Â¸ºß¤·¡¤ÆÉ¤ß¹þ¤ß²ÄÇ½¤Ê¾ì¹ç¤Ï¿¿¤Ç¤¹¡¥

@item -u @var{file}
@opindex -u
@cindex set-user-id check
@c True if @var{file} exists and has its set-user-id bit set.
@c 
@var{file}¤¬Â¸ºß¤·¡¤¥»¥Ã¥È¥æ¡¼¥¶id¥Ó¥Ã¥È¤¬ÀßÄê¤µ¤ì¤Æ¤¤¤ë¾ì¹ç¤Ï¿¿¤Ç¤¹¡¥

@item -w @var{file}
@opindex -w
@cindex writable file check
@c True if @var{file} exists and is writable.
@c 
@var{file}¤¬Â¸ºß¤·¡¤½ñ¤­¹þ¤ß²ÄÇ½¤Ê¾ì¹ç¤Ï¿¿¤Ç¤¹¡¥

@item -x @var{file}
@opindex -x
@cindex executable file check
@c True if @var{file} exists and is executable.
@c 
@var{file}¤¬Â¸ºß¤·¡¤¼Â¹Ô²ÄÇ½¤Ê¾ì¹ç¤Ï¿¿¤Ç¤¹¡¥

@item -O @var{file}
@opindex -O
@cindex owned by effective uid check
@c True if @var{file} exists and is owned by the current effective user id.
@c 
@var{file}¤¬Â¸ºß¤·¡¤¸½ºß¼Â»ÜÃæ¤Î¥æ¡¼¥¶id¤Ë½êÍ­¤µ¤ì¤Æ¤¤¤ë¾ì¹ç¤Ï¿¿¤Ç¤¹¡¥

@item -G @var{file}
@opindex -G
@cindex owned by effective gid check
@c True if @var{file} exists and is owned by the current effective group id.
@c 
@var{file}¤¬Â¸ºß¤·¡¤¸½ºß¼Â»ÜÃæ¤Î¥°¥ë¡¼¥×id¤Ë½êÍ­¤µ¤ì¤Æ¤¤¤ë¾ì¹ç¤Ï¿¿¤Ç¤¹¡¥

@end table

@node File characteristic tests
@c @subsection File characteristic tests
@subsection ¥Õ¥¡¥¤¥ë¤ÎÆÃÄ§¥Æ¥¹¥È

@cindex file characteristic tests

@c These options test other file characteristics.
@c 
¤³¤ì¤é¤Î¥ª¥×¥·¥ç¥ó¤Ï¤½¤ÎÂ¾¤Î¥Õ¥¡¥¤¥ë¤ÎÆÃÄ§¤òÄ´ºº¤·¤Þ¤¹¡¥

@table @samp

@item -e @var{file}
@opindex -e
@cindex existence-of-file check
@c True if @var{file} exists.
@c 
@var{file}¤¬Â¸ºß¤·¤Æ¤¤¤ë¾ì¹ç¤Ï¿¿¤Ç¤¹¡¥

@item -s @var{file}
@opindex -s
@cindex nonempty file check
@c True if @var{file} exists and has a size greater than zero.
@c 
@var{file}¤¬Â¸ºß¤·¡¤Âç¤­¤µ¤¬¥¼¥í¤è¤êÂç¤­¤¤¾ì¹ç¤Ï¿¿¤Ç¤¹¡¥

@item @var{file1} -nt @var{file2}
@opindex -nt
@cindex newer-than file check
@c True if @var{file1} is newer (according to modification date) than
@c @var{file2}, or if @var{file1} exists and @var{file2} does not.
@c 
@var{file1}¤¬@var{file2}¤è¤ê(½¤ÀµÆü¤Ç)¿·¤·¤¤¾ì¹ç¡¤¤Þ¤¿¤Ï¡¤@var{file1}
¤¬Â¸ºß¤·@var{file2}¤¬Â¸ºß¤·¤Ê¤¤¾ì¹ç¤Ï¿¿¤Ç¤¹¡¥

@item @var{file1} -ot @var{file2}
@opindex -ot
@cindex older-than file check
@c True if @var{file1} is older (according to modification date) than
@c @var{file2}, or if @var{file2} exists and @var{file1} does not.
@c 
@var{file1}¤¬@var{file2}¤è¤ê(½¤ÀµÆü¤Ç)¸Å¤¤¾ì¹ç¡¤¤Þ¤¿¤Ï¡¤@var{file2}¤¬
Â¸ºß¤·@var{file1}¤¬Â¸ºß¤·¤Ê¤¤¾ì¹ç¤Ï¿¿¤Ç¤¹¡¥

@item @var{file1} -ef @var{file2}
@opindex -ef
@cindex same file check
@cindex hard link check
@c True if @var{file1} and @var{file2} have the same device and inode
@c numbers, i.e., if they are hard links to each other.
@c 
@var{file1}¤È@var{file2}¤¬Æ±¤¸¥Ç¥Ð¥¤¥¹¤Èi-nodeÈÖ¹æ¤ò»ý¤Ä¾ì¹ç¡¤¤¹¤Ê¤ï¤Á¡¤
¤½¤ì¤é¤¬¤ª¸ß¤¤¤Ë¥Ï¡¼¥É¥ê¥ó¥¯¤Î¾ì¹ç¤Ï¿¿¤Ç¤¹¡¥

@end table


@node String tests
@c @subsection String tests
@subsection Ê¸»úÎó¤Î¥Æ¥¹¥È

@cindex string tests

@c These options test string characteristics.  Strings are not quoted for
@c @command{test}, though you may need to quote them to protect characters
@c with special meaning to the shell, e.g., spaces.
@c 
¤³¤ì¤é¤Î¥ª¥×¥·¥ç¥ó¤ÏÊ¸»úÎó¤ÎÆÃÄ§¤ò¥Æ¥¹¥È¤·¤Þ¤¹¡¥Ê¸»úÎó¤Ï@command{test} 
¤ËÂÐ¤·¤Æ°úÍÑÉä¤Ç°Ï¤ß¤Þ¤»¤ó¤¬¡¤Îã¤¨¤Ð¥¹¥Ú¡¼¥¹¤Î¤è¤¦¤Ê¡¤¥·¥§¥ë¤ÇÆÃÊÌ¤Ê°Õ
Ì£¤ò»ý¤ÄÊ¸»ú¤òÊÝ¸î¤¹¤ë¤¿¤á¤Ë¡¤¤½¤ì¤é¤ò°úÍÑÉä¤Ç°Ï¤àÉ¬Í×¤¬¤¢¤ë¤«¤â¤·¤ì¤Þ
¤»¤ó¡¥

@table @samp

@item -z @var{string}
@opindex -z
@cindex zero-length string check
@c True if the length of @var{string} is zero.
@c 
@var{string}¤ÎÄ¹¤µ¤¬¥¼¥í¤Î¾ì¹ç¤Ï¿¿¤Ç¤¹¡¥

@item -n @var{string}
@itemx @var{string}
@opindex -n
@cindex nonzero-length string check
@c True if the length of @var{string} is nonzero.
@c 
@var{string}¤ÎÄ¹¤µ¤¬¥¼¥í¤Ç¤Ï¤Ê¤¤¤Î¾ì¹ç¤Ï¿¿¤Ç¤¹¡¥

@item @var{string1} = @var{string2}
@opindex =
@cindex equal string check
@c True if the strings are equal.
@c 
Ê¸»úÎó¤¬Åù¤·¤¤¾ì¹ç¤Ï¿¿¤Ç¤¹¡¥

@item @var{string1} != @var{string2}
@opindex !=
@cindex not-equal string check
@c True if the strings are not equal.
@c 
Ê¸»úÎó¤¬Åù¤·¤¯¤Ê¤¤¾ì¹ç¤Ï¿¿¤Ç¤¹¡¥

@end table


@node Numeric tests
@c @subsection Numeric tests
@subsection ¿ôÃÍ¥Æ¥¹¥È

@cindex numeric tests
@cindex arithmetic tests

@c Numeric relationals.  The arguments must be entirely numeric (possibly
@c negative), or the special expression @w{@code{-l @var{string}}}, which
@c evaluates to the length of @var{string}.
@c 
¿ôÃÍ¤Î´Ø·¸¤Ç¤¹¡¥°ú¿ô¤Ï¡¤´°Á´¤Ê¿ôÃÍ(Éé¤â²ÄÇ½¤Ç¤¹)¡¤¤Þ¤¿¤Ï¡¤@var{string}
¤ÎÄ¹¤µ¤òÉ¾²Á¤¹¤ëÆÃÊÌ¤Ê¼°@w{@code{-l @var{string}}}¤Ë¤¹¤ëÉ¬Í×¤¬¤¢¤ê¤Þ¤¹¡¥

@table @samp

@item @var{arg1} -eq @var{arg2}
@itemx @var{arg1} -ne @var{arg2}
@itemx @var{arg1} -lt @var{arg2}
@itemx @var{arg1} -le @var{arg2}
@itemx @var{arg1} -gt @var{arg2}
@itemx @var{arg1} -ge @var{arg2}
@opindex -eq
@opindex -ne
@opindex -lt
@opindex -le
@opindex -gt
@opindex -ge
@c These arithmetic binary operators return true if @var{arg1} is equal,
@c not-equal, less-than, less-than-or-equal, greater-than, or
@c greater-than-or-equal than @var{arg2}, respectively.
@c 
¤³¤ì¤é¤Î»»¿ô¤ÎÆó¹à±é»»»Ò¤Ï¡¤¤½¤ì¤¾¤ì¡¤@var{arg1}¤¬@var{arg2}¤ËÈæ¤Ù¤Æ¡¤
Åù¤·¤¤¡¤Åù¤·¤¯¤Ê¤¤¡¤¾®¤µ¤¤¡¤°Ê²¼¡¤Âç¤­¤¤¡¤¤Þ¤¿¤Ï°Ê¾å¤Î¾ì¹ç¤Ë¿¿¤òÊÖ¤·¤Þ
¤¹¡¥

@end table

@c For example:
@c 
Îã¤¨¤Ð°Ê²¼¤Î¤è¤¦¤Ë¤·¤Þ¤¹¡¥

@example
test -1 -gt -2 && echo yes
@result{} yes
test -l abc -gt 1 && echo yes
@result{} yes
test 0x100 -eq 1
@error{} test: integer expression expected before -eq
@end example


@node Connectives for test
@c @subsection Connectives for @command{test}
@subsection @command{test}¤ÎÏ¢·ë

@cindex logical connectives
@cindex connectives, logical

@c The usual logical connectives.
@c 
ÄÌ¾ï¤ÎÏÀÍý·ë¹ç»Ò¤Ç¤¹¡¥

@table @samp

@item ! @var{expr}
@opindex !
@c True if @var{expr} is false.
@c 
@var{expr}¤¬µ¶¤Î¾ì¹ç¤Ï¿¿¤Ç¤¹¡¥

@item @var{expr1} -a @var{expr2}
@opindex -a
@cindex logical and operator
@cindex and operator
@c True if both @var{expr1} and @var{expr2} are true.
@c 
@var{expr1}¤È@var{expr2}¤ÎÎ¾Êý¤¬¿¿¤Î¾ì¹ç¤Ï¿¿¤Ç¤¹¡¥

@item @var{expr1} -o @var{expr2}
@opindex -o
@cindex logical or operator
@cindex or operator
@c True if either @var{expr1} or @var{expr2} is true.
@c 
@var{expr1}¤Þ¤¿¤Ï@var{expr2}¤Î¤É¤Á¤é¤«¤¬¿¿¤Î¾ì¹ç¤Ï¿¿¤Ç¤¹¡¥

@end table


@node expr invocation
@c @section @command{expr}: Evaluate expressions
@section @command{expr}: ¼°¤ÎÉ¾²Á

@pindex expr
@cindex expression evaluation
@cindex evaluation of expressions

@c @command{expr} evaluates an expression and writes the result on standard
@c output.  Each token of the expression must be a separate argument.
@c 
@command{expr}¤Ï¼°¤òÉ¾²Á¤·¡¤·ë²Ì¤òÉ¸½à½ÐÎÏ¤Ë½ñ¤­½Ð¤·¤Þ¤¹¡¥¤½¤ì¤¾¤ì¤Î¼°
¤Î¥È¡¼¥¯¥ó¤Ï¡¤Ê¬Î¥¤·¤Æ¤¤¤ë°ú¿ô¤Ë¤¹¤ëÉ¬Í×¤¬¤¢¤ê¤Þ¤¹¡¥

@c Operands are either integers or strings.  Integers consist of one or
@c more decimal digits, with an optional leading @samp{-}.
@c @command{expr} converts
@c anything appearing in an operand position to an integer or a string
@c depending on the operation being applied to it.
@c 
¥ª¥Ú¥é¥ó¥É¤ÏÀ°¿ô¤Þ¤¿¤ÏÊ¸»úÎó¤Î¤¤¤º¤ì¤«¤Ë¤Ê¤ê¤Þ¤¹¡¥À°¿ô¤Ï¡¤°ì·å°Ê¾å¤Î½½
¿Ê¿ô¤È¡¤ÄÉ²Ã¤Ç@samp{-}¤òÁ°ÃÖ¤·¤¿¤â¤Î¤«¤éÀ®¤êÎ©¤Á¤Þ¤¹¡¥@command{expr}¤Ï¡¤
¤¢¤é¤æ¤ë¤â¤Î¤¬¡¤Å¬ÍÑ¤µ¤ì¤Æ¤¤¤ë¥ª¥Ú¥ì¡¼¥·¥ç¥ó¤Ë°ÍÂ¸¤·¤Æ¡¤¥ª¥Ú¥é¥ó¥É¤Î°Ì
ÃÖ¤ËÂ¸ºß¤¹¤ëÀ°¿ô¤Þ¤¿¤ÏÊ¸»úÎó¤òÊÑ´¹¤·¤Þ¤¹¡¥

@c Strings are not quoted for @command{expr} itself, though you may need to
@c quote them to protect characters with special meaning to the shell,
@c e.g., spaces.  However, regardless of whether it is quoted, a string
@c operand should not be a parenthesis or any of @command{expr}'s
@c operators like @code{+}, so you cannot safely pass an arbitrary string
@c @code{$str} to expr merely by quoting it to the shell.  One way to
@c work around this is to use the @command{GNU} extension @code{+},
@c (e.g., @code{+ "$str" = foo}); a more portable way is to use
@c @code{@w{" $str"}} and to adjust the rest of the expression to take
@c the leading space into account (e.g., @code{@w{" $str" = " foo"}}).
@c 
Ê¸»úÎó¤Ï@command{expr}ÂÐ¤·°úÍÑÉä¤Ç°Ï¤ß¤Þ¤»¤ó¤¬¡¤Îã¤¨¤Ð¥¹¥Ú¡¼¥¹¤Î¤è¤¦¤Ê¡¤
¥·¥§¥ë¤ÇÆÃÊÌ¤Ê°ÕÌ£¤ò»ý¤ÄÊ¸»ú¤òÊÝ¸î¤¹¤ë¤¿¤á¤Ë¡¤¤½¤ì¤é¤ò°úÍÑÉä¤Ç°Ï¤àÉ¬Í×
¤¬¤¢¤ë¤«¤â¤·¤ì¤Þ¤»¤ó¡¥¤·¤«¤·¡¤°úÍÑÉä¤Ç°Ï¤Þ¤ì¤Æ¤¤¤ë¤«¤É¤¦¤«¤Ë°ÍÂ¸¤»¤º¡¤
Ê¸»úÎó¥ª¥Ú¥é¥ó¥É¤Ï¡¤³ç¸Ì¤ä@code{+}¤Î¤è¤¦¤Ê@command{expr}¤Î±é»»»Ò¤Ë¤¹¤Ù
¤­¤Ç¤Ï¤Ê¤¯¡¤°úÍÑÉä¤Ç°Ï¤Þ¤ì¤Æ¤¤¤ë¤â¤Î¤òÉ¾²Á¤¹¤ë¤¿¤á¤Ë¡¤Ç¤°Õ¤ÎÊ¸»úÎó¤ò
@code{$str}¤ò¥·¥§¥ë¤ËÅÏ¤¹¤³¤È¤Ï°ÂÁ´¤Ç¤Ï¤¢¤ê¤Þ¤»¤ó¡¥¤³¤ì¤òÇÓÈæ¤¹¤ëÊýË¡
¤Î°ì¤Ä¤Ï¡¤@command{GNU}¤Î³ÈÄ¥@code{+} (Îã¤¨¤Ð@code{+ "$str" = foo})¤Ç
¤¹¡¥¤è¤ê°Ü¿¢À­¤Î¹â¤¤ÊýË¡¤Ï¡¤@code{@w{" $str"}}¤ò»ÈÍÑ¤·¡¤Á°ÃÖ¤¹¤ë¥¹¥Ú¡¼
¥¹¤ò¿ô¤ËÆþ¤ì¤ë¤¿¤á¼°¤Î·ë²Ì¤òÄ´À°¤¹¤ë¤³¤È¤Ç¤¹(Îã¤¨¤Ð@code{@w{" $str" =
" foo"}})¡¥

@c You should not pass a negative integer or a string with leading
@c @samp{-} as @command{expr}'s first argument, as it might be
@c misinterpreted as an option; this can be avoided by parenthesization.
@c Also, portable scripts should not use a string operand that happens to
@c take the form of an integer; this can be worked around by inserting
@c leading spaces as mentioned above.
@c 
¥ª¥×¥·¥ç¥ó¤È¤·¤Æ´Ö°ã¤Ã¤Æ²ò¼á¤µ¤ì¤ë²ÄÇ½À­¤¬¤¢¤ë¤Î¤Ç¡¤Éä¤ÎÀ°¿ô¤äÁ°¤Ë
@samp{-}¤¬ÉÕ¤¯Ê¸»úÎó¤ò@command{expr}¤ÎºÇ½é¤Î°ú¿ô¤È¤·¤ÆÅÏ¤¹¤Ù¤­¤Ç¤Ï¤¢¤ê
¤Þ¤»¤ó¡¥¤³¤ì¤Ï¡¤³ç¸Ì¤ÇÈò¤±¤ë¤³¤È¤¬²ÄÇ½¤Ç¤¹¡¥¤Þ¤¿¡¤°Ü¿¢À­¤Î¹â¤¤¥¹¥¯¥ê¥×
¥È¤Ç¤Ï¡¤À°¿ô¤Î·Á¼°¤È¤Ê¤ê¤¦¤ëÊ¸»úÎó±é»»»Ò¤ò»ÈÍÑ¤¹¤Ù¤­¤Ç¤Ï¤¢¤ê¤Þ¤»¤ó¡¥¤³
¤ì¤Ï¡¤¾åµ­¤Î¥¹¥Ú¡¼¥¹¤òÁ°ÃÖ¤¹¤ëÊýË¡¤Ç²óÈò²ÄÇ½¤Ç¤¹¡¥

@cindex parentheses for grouping
@c Operators may be given as infix symbols or prefix keywords.  Parentheses
@c may be used for grouping in the usual manner.  You must quote
@c parentheses and many operators to avoid the shell evaluating them,
@c however.
@c 
±é»»»Ò¤Ï¡¤ÁÞÆþ¼­¥·¥ó¥Ü¥ë¤äÁ°ÃÖ¥­¡¼¥ï¡¼¥É¤È¤·¤ÆÍ¿¤¨¤ë¤³¤È¤¬¤Ç¤­¤Þ¤¹¡¥¥«¥Ã
¥³¤Ï¡¤ÄÌ¾ï¤ÎÊýË¡¤Î¥°¥ë¡¼¥×¤È¤·¤Æ»ÈÍÑ¤·¤Æ¤â¤«¤Þ¤¤¤Þ¤»¤ó¡¥¤·¤«¤·¡¤¥·¥§¥ë
¤¬É¾²Á¤¹¤ë¤³¤È¤òÈò¤±¤ë¤¿¤á¤Ë¡¤¥«¥Ã¥³¤ÈÂ¿¤¯¤Î¥ª¥Ú¥ì¡¼¥¿¤ò°úÍÑÉä¤Ç°Ï¤àÉ¬
Í×¤¬¤¢¤ê¤Þ¤¹¡¥

@cindex exit status of @command{expr}
@c Exit status:
@c 
½ªÎ»¥¹¥Æ¡¼¥¿¥¹¤Ï¡¤°Ê²¼¤Î¤è¤¦¤Ë¤Ê¤ê¤Þ¤¹¡¥

@display
@c 0 if the expression is neither null nor 0,
@c 1 if the expression is null or 0,
@c 2 if the expression is syntactically invalid,
@c 3 if an error occurred.
@c 
0 ¼°¤¬null¤Ç¤â0¤Ç¤â¤Ê¤¤¾ì¹ç¡¥
1 ¼°¤¬null¤Þ¤¿¤Ï0¤Î¾ì¹ç¡¥
2 ¼°¤¬¹½Ê¸¾åÍ­¸ú¤Ê¾ì¹ç¡¥
3 ¥¨¥é¡¼¤¬À¸¤¸¤¿¾ì¹ç¡¥
@end display

@menu
* String expressions::          + : match substr index length
* Numeric expressions::         + - * / %
* Relations for expr::          | & < <= = == != >= >
* Examples of expr::            Examples.
@end menu


@node String expressions
@c @subsection String expressions
@subsection Ê¸»úÎó¼°

@cindex string expressions
@cindex expressions, string

@c @command{expr} supports pattern matching and other string operators.  These
@c have lower precedence than both the numeric and relational operators (in
@c the next sections).
@c 
@command{expr}¤Ï¡¤¥Ñ¥¿¡¼¥ó¥Þ¥Ã¥Á¥ó¥°¤È¡¤¤½¤ÎÂ¾¤ÎÊ¸»úÎó±é»»»Ò¤ò¥µ¥Ý¡¼¥È
¤·¤Þ¤¹¡¥¤³¤ì¤é¤Ï¡¤(¼¡¤Î¥»¥¯¥·¥ç¥ó¤Î)¿ô»ú¤È´Ø·¸¤ÎÎ¾±é»»»Ò¤è¤êÄã¤¤Í¥Àè½ç
°Ì¤Ë¤Ê¤ê¤Þ¤¹¡¥

@table @samp

@item @var{string} : @var{regex}
@cindex pattern matching
@cindex regular expression matching
@cindex matching patterns
@c Perform pattern matching.  The arguments are converted to strings and the
@c second is considered to be a (basic, a la GNU @code{grep}) regular
@c expression, with a @code{^} implicitly prepended.  The first argument is
@c then matched against this regular expression.
@c 
¥Ñ¥¿¡¼¥ó¥Þ¥Ã¥Á¥ó¥°¤ò¼Â¹Ô¤·¤Þ¤¹¡¥°ú¿ô¤ÏÊ¸»úÎó¤ËÀ©¸Â¤µ¤ì¡¤ÆóÈÖÌÜ¤Ï¡¤
@code{^}¤¬°ÅÌÛ¤ËÁ°ÃÖ¤µ¤ì¤¿(´ðËÜÅª¤ËGNUÎ®¤Î@command{grep}¤Î)Àµµ¬É½¸½¤È
¹Í¤¨¤é¤ì¤Þ¤¹¡¥ºÇ½é¤Î°ú¿ô¤Ï¡¤¤³¤ÎÀµµ¬É½¸½¤ËÂÐ¤·¥Þ¥Ã¥Á¤ÎÉ¾²Á¤¬¤Ê¤µ¤ì¤Þ¤¹¡¥

@c If the match succeeds and @var{regex} uses @samp{\(} and @samp{\)}, the
@c @code{:} expression returns the part of @var{string} that matched the
@c subexpression; otherwise, it returns the number of characters matched.
@c 
¥Þ¥Ã¥Á¤ÎÉ¾²Á¤¬À®¸ù¤·¡¤@var{regex}¤¬@samp{\(}¤È@samp{\)}¤ò»ÈÍÑ¤·¤Æ¤¤¤ë
¾ì¹ç¡¤@code{:}¼°¤Ï¡¤¥µ¥Ö¼°¤Ë¥Þ¥Ã¥Á¤·¤¿@var{string}¤Î°ìÉô¤È¤Ê¤ê¤Þ¤¹¡¥¤½
¤ì°Ê³°¤Î¾ì¹ç¤Ï¥Þ¥Ã¥Á¤·¤¿Ê¸»ú¤Î¿ô¤òÊÖ¤·¤Þ¤¹¡¥

@c If the match fails, the @code{:} operator returns the null string if
@c @samp{\(} and @samp{\)} are used in @var{regex}, otherwise 0.
@c 
¥Þ¥Ã¥Á¤ÎÉ¾²Á¤Ë¼ºÇÔ¤·¤¿¾ì¹ç¡¤@var{regex}¤Ç@samp{\(}¤È@samp{\)}¤¬»ÈÍÑ¤µ
¤ì¤Æ¤¤¤ì¤Ð@code{:}±é»»»Ò¤ÏnullÊ¸»ú¤òÊÖ¤·¡¤¤½¤ì°Ê³°¤Ç¤Ï0¤òÊÖ¤·¤Þ¤¹¡¥

@kindex \( @r{regexp operator}
@c Only the first @samp{\( @dots{} \)} pair is relevant to the return
@c value; additional pairs are meaningful only for grouping the regular
@c expression operators.
@c 
ºÇ½é¤Î@samp{\( @dots{} \)}¤ÎÁÈ¤Î¤ß¡¤Ìá¤êÃÍ¤Ë´Ø·¸¤·¤Þ¤¹¡¥ÄÉ²Ã¤ÎÁÈ¤Ï¡¤Àµ
µ¬É½¸½±é»»»Ò¤Î¥°¥ë¡¼¥×²½¤Î°ÕÌ£¤·¤«¤¢¤ê¤Þ¤»¤ó¡¥

@kindex \+ @r{regexp operator}
@kindex \? @r{regexp operator}
@kindex \| @r{regexp operator}
@c In the regular expression, @code{\+}, @code{\?}, and @code{\|} are
@c operators which respectively match one or more, zero or one, or separate
@c alternatives.  SunOS and other @command{expr}'s treat these as regular
@c characters.  (@acronym{POSIX} allows either behavior.)
@c @xref{Top, , Regular Expression Library, regex, Regex}, for details of
@c regular expression syntax.  Some examples are in @ref{Examples of expr}.
@c 
Àµµ¬É½¸½Æâ¤Ç¤Ï¡¤@code{\+}¡¤@code{\?}¡¤¤½¤·¤Æ@code{\|}¤Ï¡¤¤½¤ì¤¾¤ì¡¤1°Ê
¾å¡¤¥¼¥í°Ê¾å¡¤¥ª¥¢Ê¬Î¥¤ÎÁªÂò»è¤Î±é»»»Ò¤Ç¤¹¡¥SunOS¤È¤½¤ÎÂ¾¤Î
@command{expr}¤Ï¤³¤ì¤é¤òÄÌ¾ï¤ÎÊ¸»ú¤È¤·¤Æ°·¤¤¤Þ¤¹¡¥(@acronym{POSIX}¤Ï¡¤
¤É¤Á¤é¤ÎÆ°ºî¤âµö²Ä¤·¤Þ¤¹¡¥) Àµµ¬É½¸½¤Î¹½Ê¸¤Î¾ÜºÙ¤Ï¡¤@xref{Top, ,
Regular Expression Library, regex, Regex}.  Îã¤Ï@ref{Examples of expr} 
¤Ë¤¢¤ê¤Þ¤¹¡¥

@item match @var{string} @var{regex}
@findex match
@c An alternative way to do pattern matching.  This is the same as
@c @w{@samp{@var{string} : @var{regex}}}.
@c 
¥Ñ¥¿¡¼¥ó¥Þ¥Ã¥Á¥ó¥°¤ò¹Ô¤¦ÊÌ¤ÎÊýË¡¤Ç¤¹¡¥¤³¤ì¤Ï¡¤@w{@samp{@var{string} :
@var{regex}}}¤ÈÆ±¤¸¤Ç¤¹¡¥

@item substr @var{string} @var{position} @var{length}
@findex substr
@c Returns the substring of @var{string} beginning at @var{position}
@c with length at most @var{length}.  If either @var{position} or
@c @var{length} is negative, zero, or non-numeric, returns the null string.
@c 
¾¯¤Ê¤¯¤È¤â@var{length}¤ÎÄ¹¤µ¤Î¡¤@var{position}¤«¤é»Ï¤Þ¤ë¡¤@var{string}
¤Î¥µ¥ÖÊ¸»úÎó¤òÊÖ¤·¤Þ¤¹¡¥@var{position}¤Þ¤¿¤Ï@var{length}¤Î¤É¤Á¤é¤«¤¬¡¤
Éé¡¤¥¼¥í¡¤¤Þ¤¿¤Ï¿ô»ú°Ê³°¤Î¾ì¹ç¡¤nullÊ¸»úÎó¤òÊÖ¤·¤Þ¤¹¡¥

@item index @var{string} @var{charset}
@findex index
@c Returns the first position in @var{string} where the first character in
@c @var{charset} was found.  If no character in @var{charset} is found in
@c @var{string}, return 0.
@c 
@var{charset}¤ÎºÇ½é¤ÎÊ¸»ú¤¬¸«¤Ä¤«¤Ã¤¿¡¤@var{string}¤ÎºÇ½é¤Î°ÌÃÖ¤òÊÖ¤·
¤Þ¤¹¡¥@var{charset}¤ÎÊ¸»ú¤¬@var{string}¤Ç¸«¤Ä¤«¤é¤Ê¤¤¾ì¹ç¤Ï¡¤0¤òÊÖ¤·¤Þ
¤¹¡¥

@item length @var{string}
@findex length
@c Returns the length of @var{string}.
@c 
@var{string}¤ÎÄ¹¤µ¤òÊÖ¤·¤Þ¤¹¡¥

@item + @var{token}
@kindex +
@c Interpret @var{token} as a string, even if it is a keyword like @var{match}
@c or an operator like @code{/}.
@c This makes it possible to test @code{expr length + "$x"} or
@c @code{expr + "$x" : '.*/\(.\)'} and have it do the right thing even if
@c the value of @var{$x} happens to be (for example) @code{/} or @code{index}.
@c This operator is a GNU extension.  Portable shell scripts should use
@c @code{@w{" $token"} : @w{' \(.*\)'}} instead of @code{+ "$token"}.
@c 
¥­¡¼¥ï¡¼¥É¤Î¤è¤¦¤Ê@var{match}¤ä¡¤±é»»»Ò¤Î¤è¤¦¤Ê@code{/}¤Î¾ì¹ç¤Ç¤â¡¤
@var{token}¤òÊ¸»úÎó¤È¤·¤Æ²ò¼á¤·¤Þ¤¹¡¥¤³¤ì¤Ç¡¤@code{expr length + "$x"} 
¤ä@code{expr + "$x" : '.*/\(.\)'}¤Î¥Æ¥¹¥È¤¬²ÄÇ½¤È¤Ê¤ê¡¤@var{$x}¤ÎÃÍ¤¬
(Îã¤¨¤Ð)@code{/}¤ä@code{index}¤Ë¶öÁ³¤Ê¤Ã¤¿¾ì¹ç¤Ç¤â¡¤Àµ¤·¤¯Æ°ºî¤·¤Þ¤¹¡¥
¤³¤Î±é»»»Ò¤ÏGNU¤Î³ÈÄ¥¤Ç¤¹¡¥°Ü¿¢À­¤Î¹â¤¤¥·¥§¥ë¥¹¥¯¥ê¥×¥È¤Ç¤Ï¡¤@code{+
"$token"}¤ÎÂå¤ï¤ê¤Ë@code{@w{" $token"} : @w{' \(.*\)'}}¤ò»ÈÍÑ¤¹¤Ù¤­¤Ç
¤¹¡¥

@end table

@c To make @command{expr} interpret keywords as strings, you must use the
@c @code{quote} operator.
@c 
@command{expr}¤Ë¥­¡¼¥ï¡¼¥É¤È¤·¤ÆÊ¸»úÎó¤ò²ò¼á¤µ¤»¤ë¤¿¤á¤Ë¡¤@code{quote}
±é»»»Ò¤ò»ÈÍÑ¤¹¤ëÉ¬Í×¤¬¤¢¤ê¤Þ¤¹¡¥


@node Numeric expressions
@c @subsection Numeric expressions
@subsection ¿ô¼°

@cindex numeric expressions
@cindex expressions, numeric

@c @command{expr} supports the usual numeric operators, in order of increasing
@c precedence.  The string operators (previous section) have lower precedence,
@c the connectives (next section) have higher.
@c 
@command{expr}¤Ï¡¤ÄÌ¾ï¤Î»»½Ñ±é»»»Ò¤ò¥µ¥Ý¡¼¥È¤·¡¤Í¥Àè½ç°Ì¤Ï½ç¤ËÁý²Ã¤·¤Þ
¤¹¡¥(Á°¤Î¥»¥¯¥·¥ç¥ó¤Î)Ê¸»úÎó±é»»»Ò¤Ï¡¤¤è¤ê½ç°Ì¤ÎÄã¤¤±é»»»Ò¤Ç¡¤(¼¡¤Î¥»
¥¯¥·¥ç¥ó¤Î)Ï¢·ë»Ò¤Ï¡¤¤è¤ê½ç°Ì¤¬¹â¤¯¤Ê¤ê¤Þ¤¹¡¥

@table @samp

@item + -
@kindex +
@kindex -
@cindex addition
@cindex subtraction
@c Addition and subtraction.  Both arguments are converted to integers;
@c an error occurs if this cannot be done.
@c 
²Ã»»¤È¸º»»¤Ç¤¹¡¥¤É¤Á¤é¤Î°ú¿ô¤âÀ°¿ô¤ËÊÑ´¹¤µ¤ì¤Þ¤¹¡¥¤½¤¦¤Ç¤Ê¤¤¾ì¹ç¤Ï¥¨¥é¡¼
¤òÀ¸¤¸¤Þ¤¹¡¥

@item * / %
@kindex *
@kindex /
@kindex %
@cindex multiplication
@cindex division
@cindex remainder
@c Multiplication, division, remainder.  Both arguments are converted to
@c integers; an error occurs if this cannot be done.
@c 
¾è»»¡¤½ü»»¡¤¾êÍ¾¤Ç¤¹¡¥¤É¤Á¤é¤Î°ú¿ô¤âÀ°¿ô¤ËÊÑ´¹¤µ¤ì¤Þ¤¹¡¥¤½¤¦¤Ç¤Ê¤¤¾ì¹ç
¤Ï¥¨¥é¡¼¤òÀ¸¤¸¤Þ¤¹¡¥

@end table


@node Relations for expr
@c @subsection Relations for @command{expr}
@subsection @command{expr}¤Î´Ø·¸¼°

@cindex connectives, logical
@cindex logical connectives
@cindex relations, numeric or string

@c @command{expr} supports the usual logical connectives and relations.  These
@c are higher precedence than either the string or numeric operators
@c (previous sections).  Here is the list, lowest-precedence operator first.
@c 
@command{expr}¤Ï¡¤ÄÌ¾ï¤ÎÏÀÍý·ë¹ç¤È´Ø·¸¼°¤ò¥µ¥Ý¡¼¥È¤·¤Þ¤¹¡¥¤³¤ì¤é¤Ï(Á°
¤Î¥»¥¯¥·¥ç¥ó¤Î)Ê¸»ú¤ä¿ô»ú¤Î±é»»»Ò¤è¤êÍ¥Àè½ç°Ì¤¬¹â¤¯¤Ê¤Ã¤Æ¤¤¤Þ¤¹¡¥¤³¤³
¤Ë¡¤Äã¤¤Í¥Àè½ç°Ì¤òºÇ½é¤Ë¤·¤¿¥ê¥¹¥È¤¬¤¢¤ê¤Þ¤¹¡¥

@table @samp

@item |
@kindex |
@cindex logical or operator
@cindex or operator
@c Returns its first argument if that is neither null nor zero, otherwise
@c its second argument if it is neither null nor zero, otherwise 0.  It
@c does not evaluate its second argument if its first argument is neither
@c null nor zero.
@c 
ºÇ½é¤Î°ú¿ô¤¬null¤Ç¤â¥¼¥í¤Ç¤â¤Ê¤¤¾ì¹ç¤Ï¤½¤ì¤ò¡¤¤½¤ì°Ê³°¤Ç¤Ï¡¤ÆóÈÖÌÜ¤Î°ú
¿ô¤¬null¤Ç¤â¥¼¥í¤Ç¤â¤Ê¤¤¾ì¹ç¤Ï¤½¤ì¤ò¡¤¤½¤ì°Ê³°¤Ç¤Ï0¤òÊÖ¤·¤Þ¤¹¡¥ºÇ½é¤Î
°ú¿ô¤¬null¤Ç¤â¥¼¥í¤Ç¤â¤Ê¤¤¾ì¹ç¡¤ÆóÈÖÌÜ¤Î°ú¿ô¤ÈÆ±¤¸¤Ë¤Ï¤Ê¤ê¤Þ¤»¤ó¡¥

@item &
@kindex &
@cindex logical and operator
@cindex and operator
@c Return its first argument if neither argument is null or zero, otherwise
@c 0.  It does not evaluate its second argument if its first argument is
@c null or zero.
@c 
¤É¤Á¤é¤Î°ú¿ô¤ânull¤ä¥¼¥í¤Ç¤Ê¤¤¾ì¹ç¤ÏºÇ½é¤Î°ú¿ô¤ò¡¤¤½¤ì°Ê³°¤Ç¤Ï0¤òÊÖ¤·
¤Þ¤¹¡¥ºÇ½é¤Î°ú¿ô¤¬null¤Ç¤â¥¼¥í¤Ç¤â¤Ê¤¤¾ì¹ç¡¤ÆóÈÖÌÜ¤Î°ú¿ô¤ÈÆ±¤¸¤Ë¤Ï¤Ê¤ê
¤Þ¤»¤ó¡¥

@item < <= = == != >= >
@kindex <
@kindex <=
@kindex =
@kindex ==
@kindex >
@kindex >=
@cindex comparison operators
@vindex LC_COLLATE
@c Compare the arguments and return 1 if the relation is true, 0 otherwise.
@c @code{==} is a synonym for @code{=}.  @command{expr} first tries to convert
@c both arguments to integers and do a numeric comparison; if either
@c conversion fails, it does a lexicographic comparison using the character
@c collating sequence specified by the @env{LC_COLLATE} locale.
@c 
°ú¿ô¤òÈæ³Ó¤·¡¤´Ø·¸¤¬¿¿¤Î¾ì¹ç¤Ï1¤ò¡¤¤½¤ì°Ê³°¤Ç¤Ï0¤òÊÖ¤·¤Þ¤¹¡¥@code{==} 
¤Ï@code{=}¤ÎÆ±µÁ¸ì¤Ç¤¹¡¥@command{expr}¤ÏºÇ½é¤Ë¡¤Î¾Êý¤Î°ú¿ô¤òÀ°¿ô¤ËÊÑ´¹
¤·¤è¤¦¤È¤·¡¤¿ôÃÍ¤ÎÈæ³Ó¤ò¹Ô¤¤¤Þ¤¹¡¥¤É¤Á¤é¤«¤ÎÊÑ´¹¤¬¼ºÇÔ¤·¤¿¾ì¹ç¡¤
@env{LC_COLLATE}¤Ç»ØÄê¤µ¤ì¤Æ¤¤¤ëÊ¸»ú¤ÎÂÐ±þÉ½¤Î½ç½ø¤ò»ÈÍÑ¤·¤Æ¡¤¼­½ñÅª¤Ê
Èæ³Ó¤ò¹Ô¤¤¤Þ¤¹¡¥

@end table


@node Examples of expr
@c @subsection Examples of using @command{expr}
@subsection @command{expr}¤Î»ÈÍÑÎã

@cindex examples of @command{expr}
@c Here are a few examples, including quoting for shell metacharacters.
@c 
¥·¥§¥ë¤Î¥á¥¿Ê¸»ú¤ò°úÍÑÉä¤Ç°Ï¤à¤â¤Î¤ò´Þ¤àÎã¤È¤·¤Æ°Ê²¼¤Î¤è¤¦¤Ê¤â¤Î¤¬¤¢¤ê
¤Þ¤¹¡¥

@c To add 1 to the shell variable @code{foo}, in Bourne-compatible shells:
@c 
Bourne¸ß´¹¥·¥§¥ë¤Ç¡¤¥·¥§¥ëÊÑ¿ô@code{foo}¤Ë1¤ò²Ã¤¨¤Þ¤¹¡¥
@example
foo=`expr $foo + 1`
@end example

@c To print the non-directory part of the file name stored in
@c @code{$fname}, which need not contain a @code{/}.
@c 
@code{$fname}¤ËÊÝÂ¸¤µ¤ì¤Æ¤¤¤ë¥Õ¥¡¥¤¥ëÌ¾¤Î¥Ç¥£¥ì¥¯¥È¥ê°Ê³°¤ÎÉôÊ¬¤ò¡¤
@code{/}¤ò´Þ¤á¤º¤Ë½ÐÎÏ¤·¤Þ¤¹¡¥
@example
expr $fname : '.*/\(.*\)' '|' $fname
@end example

@c An example showing that @code{\+} is an operator:
@c 
@code{\+}¤¬±é»»»Ò¤À¤È¤¤¤¦¤³¤È¤òÉ½¼¨¤¹¤ëÎã¤Ç¤¹¡¥
@example
expr aaa : 'a\+'
@result{} 3
@end example

@example
expr abc : 'a\(.\)c'
@result{} b
expr index abcdef cz
@result{} 3
expr index index a
@error{} expr: syntax error
expr index quote index a
@result{} 0
@end example


@node Redirection
@c @chapter Redirection
@chapter ¥ê¥À¥¤¥ì¥¯¥·¥ç¥ó

@cindex redirection
@cindex commands for redirection

@c Unix shells commonly provide several forms of @dfn{redirection}---ways
@c to change the input source or output destination of a command.  But one
@c useful redirection is performed by a separate command, not by the shell;
@c it's described here.
@c 
Unix¥·¥§¥ë¤Ï¡¤ÄÌ¾ï¤¤¤¯¤Ä¤«¤Î·Á¼°¤Î@dfn{¥ê¥À¥¤¥ì¥¯¥·¥ç¥ó(redirection)} 
¤òÄó¶¡¤·¤Þ¤¹ --- ¥³¥Þ¥ó¥É¤ÎÆþÎÏ¸µ¤ä½ÐÎÏÀè¤òÊÑ¹¹¤¹¤ëÊýË¡¤Ç¤¹¡¥¤·¤«¤·¡¤
°ì¤Ä¤ÎÊØÍø¤Ê¥ê¥À¥¤¥ì¥¯¥·¥ç¥ó¤Ç¤Ï¡¤¥·¥§¥ë¤Ç¤Ï¤Ê¤¯¡¤ÊÌ¡¹¤Î¥³¥Þ¥ó¥É¤Ç¼Â¹Ô
¤µ¤ì¤Þ¤¹¡¥°Ê²¼¤Ç¤Ï¤½¤ì¤òµ­½Ò¤·¤Þ¤¹¡¥

@menu
* tee invocation::              Redirect output to multiple files.
@end menu


@node tee invocation
@c @section @command{tee}: Redirect output to multiple files
@section @command{tee}: ½ÐÎÏ¤òÊ£¿ô¤Î¥Õ¥¡¥¤¥ë¤Ë¥ê¥À¥¤¥ì¥¯¥È¤¹¤ë

@pindex tee
@cindex pipe fitting
@cindex destinations, multiple output
@cindex read from stdin and write to stdout and files

@c The @command{tee} command copies standard input to standard output and also
@c to any files given as arguments.  This is useful when you want not only
@c to send some data down a pipe, but also to save a copy.  Synopsis:
@c 
@command{tee}¥³¥Þ¥ó¥É¤Ï¡¤É¸½àÆþÎÏ¤òÉ¸½à½ÐÎÏ¤È°ú¿ô¤ÇÍ¿¤¨¤é¤ì¤¿Ç¤°Õ¤Î¥Õ¥¡
¥¤¥ë¤Ë¥³¥Ô¡¼¤·¤Þ¤¹¡¥¤³¤ì¤Ï¡¤¥Ç¡¼¥¿¤ò¥Ñ¥¤¥×¤ËÁ÷¤ë¤À¤±¤Ç¤Ê¤¯¡¤¥³¥Ô¡¼¤òÊÝ
Â¸¤·¤¿¤¤¤È¤­¤ËÌò¤ËÎ©¤Á¤Þ¤¹¡¥³µÍ×¤Ç¤¹¡¥

@example
tee [@var{option}]@dots{} [@var{file}]@dots{}
@end example

@c If a file being written to does not already exist, it is created.  If a
@c file being written to already exists, the data it previously contained
@c is overwritten unless the @option{-a} option is used.
@c 
Â¸ºß¤·¤Ê¤¤¥Õ¥¡¥¤¥ë¤Ë½ñ¤­½Ð¤¹¾ì¹ç¡¤¥Õ¥¡¥¤¥ë¤¬ºîÀ®¤µ¤ì¤Þ¤¹¡¥´ûÂ¸¤Î¥Õ¥¡¥¤
¥ë¤Ë½ñ¤­½Ð¤¹¾ì¹ç¡¤Á°¤«¤é´Þ¤Þ¤ì¤Æ¤¤¤ë¥Ç¡¼¥¿¤Ï¡¤@option{-a}¥ª¥×¥·¥ç¥ó¤¬
»ÈÍÑ¤µ¤ì¤Ê¤¤¾ì¹ç¤Ï¾å½ñ¤­¤µ¤ì¤Þ¤¹¡¥

@c The program accepts the following options.  Also see @ref{Common options}.
@c 
¥×¥í¥°¥é¥à¤Ï°Ê²¼¤Î¥ª¥×¥·¥ç¥ó¤ò¼õ¤±Æþ¤ì¤Þ¤¹¡¥@ref{Common options}¤â»²¾È
¤·¤Æ¤¯¤À¤µ¤¤¡¥

@table @samp
@item -a
@itemx --append
@opindex -a
@opindex --append
@c Append standard input to the given files rather than overwriting
@c them.
@c 
É¸½àÆþÎÏ¤òÍ¿¤¨¤é¤ì¤¿¥Õ¥¡¥¤¥ë¤Ë¡¤¾å½ñ¤­¤»¤º¤ËÄÉ²Ã¤·¤Þ¤¹¡¥

@item -i
@itemx --ignore-interrupts
@opindex -i
@opindex --ignore-interrupts
@c Ignore interrupt signals.
@c 
ÃæÃÇ¥·¥°¥Ê¥ë¤òÌµ»ë¤·¤Þ¤¹¡¥

@end table

@exitstatus


@node File name manipulation
@c @chapter File name manipulation
@chapter ¥Õ¥¡¥¤¥ëÌ¾¤ÎÁàºî

@cindex file name manipulation
@cindex manipulation of file names
@cindex commands for file name manipulation

@c This section describes commands that manipulate file names.
@c 
¤³¤Î¥»¥¯¥·¥ç¥ó¤Ï¥Õ¥¡¥¤¥ëÌ¾¤òÁàºî¤¹¤ë¥³¥Þ¥ó¥É¤òµ­½Ò¤·¤Þ¤¹¡¥

@menu
* basename invocation::         Strip directory and suffix from a file name.
* dirname invocation::          Strip non-directory suffix from a file name.
* pathchk invocation::          Check file name portability.
@end menu


@node basename invocation
@c @section @command{basename}: Strip directory and suffix from a file name
@section @command{basename}: ¥Ç¥£¥ì¥¯¥È¥ê¤ÈÀÜÈø»Ò¤ò¥Õ¥¡¥¤¥ëÌ¾¤«¤é½üµî

@pindex basename
@cindex strip directory and suffix from file names
@cindex directory, stripping from file names
@cindex suffix, stripping from file names
@cindex file names, stripping directory and suffix
@cindex leading directory components, stripping

@c @command{basename} removes any leading directory components from
@c @var{name}.  Synopsis:
@c 
@command{basename}¤Ï¡¤Á°ÃÖ¤µ¤ì¤ë¥Ç¥£¥ì¥¯¥È¥êÍ×ÁÇ¤ò@var{name}¤«¤éºï½ü¤·
¤Þ¤¹¡¥³µÍ×¤Ç¤¹¡¥

@example
basename @var{name} [@var{suffix}]
@end example

@c If @var{suffix} is specified and is identical to the end of @var{name},
@c it is removed from @var{name} as well.  @command{basename} prints the
@c result on standard output.
@c 
@var{suffix}¤¬»ØÄê¤µ¤ì¡¤@var{name}¤Î½ª¤ê¤¬Æ±¤¸¾ì¹ç¡¤¤½¤ì¤Ï@var{name}¤«
¤éÆ±ÍÍ¤Ëºï½ü¤µ¤ì¤Þ¤¹¡¥@command{basename}¤Ï·ë²Ì¤òÉ¸½à½ÐÎÏ¤Ë½ÐÎÏ¤·¤Þ¤¹¡¥

@c The only options are @option{--help} and @option{--version}.  @xref{Common
@c options}.
@c 
¥ª¥×¥·¥ç¥ó¤Ï@option{--help}¤È@option{--version}¤À¤±¤Ç¤¹¡¥@xref{Common
options}.

@exitstatus


@node dirname invocation
@c @section @command{dirname}: Strip non-directory suffix from a file name
@section @command{dirname}: ¥Ç¥£¥ì¥¯¥È¥ê°Ê³°¤ÎÀÜÈø»Ò¤ò¥Õ¥¡¥¤¥ëÌ¾¤«¤é½üµî

@pindex dirname
@cindex directory components, printing
@cindex stripping non-directory suffix
@cindex non-directory suffix, stripping

@c @command{dirname} prints all but the final slash-delimited component of
@c a string (presumably a filename).  Synopsis:
@c 
@command{dirname}¤Ï¡¤ºÇ¸å¤Î¥¹¥é¥Ã¥·¥å¤ÇÊ¬Î¥¤µ¤ì¤Æ¤¤¤ë(¤ª¤½¤é¤¯¥Õ¥¡¥¤¥ë
Ì¾¤È¤Ê¤ë)Ê¸»úÎó¤ÎÆâÍÆ°Ê³°¤ò¤¹¤Ù¤Æ½ÐÎÏ¤·¤Þ¤¹¡¥³µÍ×¤Ç¤¹¡¥

@example
dirname @var{name}
@end example

@c If @var{name} is a single component, @command{dirname} prints @samp{.}
@c (meaning the current directory).
@c 
@var{name}¤ÏÃ±°ì¤ÎÍ×ÁÇ¤Ç¡¤@command{dirname}¤Ï(¸½ºß¤Î¥Ç¥£¥ì¥¯¥È¥ê¤ò°ÕÌ£
¤¹¤ë) @samp{.}¤òÉ½¼¨¤·¤Þ¤¹¡¥

@c The only options are @option{--help} and @option{--version}.  @xref{Common
@c options}.
@c 
¥ª¥×¥·¥ç¥ó¤Ï@option{--help}¤È@option{--version}¤À¤±¤Ç¤¹¡¥@xref{Common
options}.

@exitstatus


@node pathchk invocation
@c @section @command{pathchk}: Check file name portability
@section @command{pathchk}: ¥Õ¥¡¥¤¥ëÌ¾¤Î°Ü¿¢À­¤òÄ´ºº

@pindex pathchk
@cindex file names, checking validity and portability
@cindex valid file names, checking for
@cindex portable file names, checking for

@c @command{pathchk} checks portability of filenames.  Synopsis:
@c 
@command{pathchk}¤Ï¡¤¥Õ¥¡¥¤¥ëÌ¾¤Î°Ü¿¢À­¤òÄ´ºº¤·¤Þ¤¹¡¥³µÍ×¤Ç¤¹¡¥

@example
pathchk [@var{option}]@dots{} @var{name}@dots{}
@end example

@c For each @var{name}, @command{pathchk} prints a message if any of
@c these conditions is true:
@c 
¤½¤ì¤¾¤ì¤Î@var{name}¤ËÂÐ¤·¡¤@command{pathchk}¤Ï¤³¤ì¤é¤Î¾ò·ï¤¬¿¿¤«¤É¤¦
¤«¤Î¥á¥Ã¥»¡¼¥¸¤ò½ÐÎÏ¤·¤Þ¤¹¡¥
@enumerate
@item
@c one of the existing directories in @var{name} does not have search
@c (execute) permission,
@c 
@var{name}¤ËÂ¸ºß¤¹¤ë¥Ç¥£¥ì¥¯¥È¥ê¤Î°ì¤Ä¤¬¸¡º÷(¼Â¹Ô)µö²Ä¤ò»ý¤¿¤Ê¤¤¡¥
@item
@c the length of @var{name} is larger than its filesystem's maximum
@c file name length,
@c 
@var{name}¤ÎÄ¹¤µ¤¬¡¤¥Õ¥¡¥¤¥ë¥·¥¹¥Æ¥à¤Î¥Õ¥¡¥¤¥ëÌ¾¤ÎÄ¹¤µ¤ÎºÇÂç¤è¤êÄ¹¤¤¡¥
@item
@c the length of one component of @var{name}, corresponding to an
@c existing directory name, is larger than its filesystem's maximum
@c length for a file name component.
@c 
´ûÂ¸¤Î¥Ç¥£¥ì¥¯¥È¥êÌ¾¤Ë¥Þ¥Ã¥Á¤¹¤ë@var{name}¤Î°ì¤Ä¤ÎÍ×ÁÇ¤ÎÄ¹¤µ¤¬¡¤¥Õ¥¡¥¤
¥ë¥·¥¹¥Æ¥à¤Î¥Õ¥¡¥¤¥ëÌ¾¤ÎÍ×ÁÇ¤ÎÄ¹¤µ¤ÎºÇÂç¤è¤êÄ¹¤¤¡¥
@end enumerate

@c The program accepts the following option.  Also see @ref{Common options}.
@c 
¥×¥í¥°¥é¥à¤Ï°Ê²¼¤Î¥ª¥×¥·¥ç¥ó¤â¼õ¤±Æþ¤ì¤Þ¤¹¡¥@ref{Common options}¤â»²¾È
¤·¤Æ¤¯¤À¤µ¤¤¡¥

@table @samp

@item -p
@itemx --portability
@opindex -p
@opindex --portability
@c Instead of performing length checks on the underlying filesystem,
@c test the length of each file name and its components against the
@c @acronym{POSIX} minimum limits for portability.  Also check that the file
@c name contains no characters not in the portable file name character set.
@c 
º¬Äì¤Ë¤¢¤ë¥Õ¥¡¥¤¥ë¥·¥¹¥Æ¥à¤ÎÄ¹¤µÄ´ºº¤ò¼Â¹Ô¤¹¤ëÂå¤ï¤ê¤Ë¡¤
@acronym{POSIX}¤Î°Ü¿¢À­¤Î¤¿¤á¤ÎºÇ¾®À©¸Â¤ËÂÐ¤·¡¤¤½¤ì¤¾¤ì¤Î¥Õ¥¡¥¤¥ëÌ¾¤È
¤½¤ÎÍ×ÁÇ¤ÎÄ¹¤µ¤ò¥Æ¥¹¥È¤·¤Þ¤¹¡¥¥Õ¥¡¥¤¥ëÌ¾¤Ë¡¤°Ü¿¢À­¤Î¤¢¤ë¥Õ¥¡¥¤¥ëÌ¾Ê¸»ú
¥»¥Ã¥È¤ËÌµ¤¤Ê¸»ú¤¬´Þ¤Þ¤ì¤Æ¤¤¤Ê¤¤¤³¤È¤âÄ´ºº¤·¤Þ¤¹¡¥

@end table

@cindex exit status of @command{pathchk}
@c Exit status:
@c 
½ªÎ»¥¹¥Æ¡¼¥¿¥¹¡¥

@display
@c 0 if all specified file names passed all of the tests,
@c 1 otherwise.
@c 
0 ¤¹¤Ù¤Æ¤Î»ØÄê¤µ¤ì¤¿¥Õ¥¡¥¤¥ëÌ¾¤¬¡¤¤¹¤Ù¤Æ¤Î¥Æ¥¹¥È¤òÄÌ²á¤·¤¿¾ì¹ç¡¥
1 ¤½¤ì°Ê³°¡¥
@end display


@node Working context
@c @chapter Working context
@chapter ºî¶È¤Î¾õ¶·

@cindex working context
@cindex commands for printing the working context

@c This section describes commands that display or alter the context in
@c which you are working: the current directory, the terminal settings, and
@c so forth.  See also the user-related commands in the next section.
@c 
¤³¤Î¥»¥¯¥·¥ç¥ó¤Ï¡¤ºî¶È¤·¤Æ¤¤¤ë¾õ¶·¤òÉ½¼¨¤Þ¤¿¤ÏÊÑ¹¹¤¹¤ë¥³¥Þ¥ó¥É¤òµ­½Ò¤·
¤Þ¤¹¡¥¸½ºß¤Î¥Ç¥£¥ì¥¯¥È¥ê¡¤Ã¼ËöÀßÄê¡¤¤½¤ÎÂ¾¤Ç¤¹¡¥¼¡¤Î¥»¥¯¥·¥ç¥ó¤Î¥æ¡¼¥¶
´ØÏ¢¤Î¥³¥Þ¥ó¥É¤â»²¾È¤·¤Æ¤¯¤À¤µ¤¤¡¥

@menu
* pwd invocation::              Print working directory.
* stty invocation::             Print or change terminal characteristics.
* printenv invocation::         Print environment variables.
* tty invocation::              Print file name of terminal on standard input.
@end menu


@node pwd invocation
@c @section @command{pwd}: Print working directory
@section @command{pwd}: ºî¶ÈÃæ¤Î¥Ç¥£¥ì¥¯¥È¥ê¤òÉ½¼¨

@pindex pwd
@cindex print name of current directory
@cindex current working directory, printing
@cindex working directory, printing

@cindex symbolic links and @command{pwd}
@c @command{pwd} prints the fully resolved name of the current directory.
@c That is, all components of the printed name will be actual directory
@c names---none will be symbolic links.
@c 
@command{pwd}¤Ï¡¤¸½ºß¤Î¥Ç¥£¥ì¥¯¥È¥ê¤Î´°Á´¤Ë²ò·è¤µ¤ì¤¿Ì¾Á°¤ò½ÐÎÏ¤·¤Þ¤¹¡¥
¤¹¤Ê¤ï¤Á¡¤½ÐÎÏ¤µ¤ì¤ëÌ¾Á°¤Î¤¹¤Ù¤Æ¤ÎÍ×ÁÇ¤Ï¡¤¼ÂºÝ¤Î¥Ç¥£¥ì¥¯¥È¥êÌ¾¤Ç¤¹ --- 
¥·¥ó¥Ü¥ê¥Ã¥¯¥ê¥ó¥¯¤Ç¤Ï¤¢¤ê¤Þ¤»¤ó¡¥

@cindex conflicts with shell built-ins
@cindex built-in shell commands, conflicts with
@c Because most shells have a built-in command by the same name, using the
@c unadorned command name in a script or interactively may get you
@c different functionality than that described here.
@c 
¤Û¤È¤ó¤É¤Î¥·¥§¥ë¤Ë¤ÏÆ±¤¸Ì¾Á°¤ÎÁÈ¤ß¹þ¤ß¥³¥Þ¥ó¥É¤¬¤¢¤ë¤Î¤Ç¡¤Áõ¾þ¤Ê¤·¤Î¥¹
¥¯¥ê¥×¥ÈÆâ¤äÂÐÏÃÅª¤Ê¥³¥Þ¥ó¥ÉÌ¾¤òÍÑ¤¤¤ë¤È¡¤¤³¤³¤Çµ­½Ò¤·¤Æ¤¤¤ë¤â¤Î¤È¤Ï°Û
¤Ê¤ëµ¡Ç½¤Ë¤Ê¤ë²ÄÇ½À­¤¬¤¢¤ê¤Þ¤¹¡¥

@c The only options are a lone @option{--help} or
@c @option{--version}.  @xref{Common options}.
@c 
¥ª¥×¥·¥ç¥ó¤ÏÃ±ÆÈ¤Î@option{--help}¤È@option{--version}¤À¤±¤Ç¤¹¡¥
@xref{Common options}.
@exitstatus


@node stty invocation
@c @section @command{stty}: Print or change terminal characteristics
@section @command{stty}: Ã¼Ëö¤ÎÆÃÄ§¤òÉ½¼¨¤Þ¤¿¤ÏÊÑ¹¹

@pindex stty
@cindex change or print terminal settings
@cindex terminal settings
@cindex line settings of terminal

@c @command{stty} prints or changes terminal characteristics, such as baud rate.
@c Synopses:
@c 
@command{stty}¤Ï¡¤¥Ü¡¼¥ì¡¼¥È¤Î¤è¤¦¤Ê¡¤Ã¼Ëö¤ÎÆÃÄ§¤òÉ½¼¨¤Þ¤¿¤ÏÊÑ¹¹¤·¤Þ¤¹¡¥
³µÍ×¤Ç¤¹¡¥

@example
stty [@var{option}] [@var{setting}]@dots{}
stty [@var{option}]
@end example

@c If given no line settings, @command{stty} prints the baud rate, line
@c discipline number (on systems that support it), and line settings
@c that have been changed from the values set by @samp{stty sane}.
@c By default, mode reading and setting are performed on the tty line
@c connected to standard input, although this can be modified by the
@c @option{--file} option.
@c 
ÀßÄê¹Ô¤¬¤Ê¤¤¾ì¹ç¡¤@command{stty}¤Ï¡¤¥Ü¡¼¥ì¡¼¥È¡¤(¥·¥¹¥Æ¥à¤¬¥µ¥Ý¡¼¥È¤¹
¤ë)²óÀþÀ©¸æ¿ô¡¤¤½¤·¤Æ@samp{stty sane}¤ÇÀßÄê¤µ¤ì¤¿ÃÍ¤«¤éÊÑ¹¹¤µ¤ì¤¿²óÀþ
ÀßÄê¤òÉ½¼¨¤·¤Þ¤¹¡¥¥Ç¥Õ¥©¥ë¥È¤Ç¡¤¥â¡¼¥É¤ÎÆÉ¤ß¹þ¤ß¤ÈÀßÄê¤ÏÉ¸½àÆþÎÏ¤ËÀÜÂ³
¤µ¤ì¤Æ¤¤¤ëtty²óÀþ¤Ç¼Â¹Ô¤µ¤ì¤Þ¤¹¤¬¡¤¤³¤ì¤Ï@option{--file}¥ª¥×¥·¥ç¥ó¤Ç½¤
Àµ¤¹¤ë¤³¤È¤¬²ÄÇ½¤Ç¤¹¡¥

@c @command{stty} accepts many non-option arguments that change aspects of
@c the terminal line operation, as described below.
@c 
@command{stty}¤Ï¡¤Ã¼Ëö²óÀþ½èÍý¤Î¾õ¶·¤òÊÑ¹¹¤¹¤ë¡¤°Ê²¼¤Çµ­½Ò¤¹¤ë¤è¤¦¤Ê¥ª
¥×¥·¥ç¥ó¤Ç¤Ï¤Ê¤¤Â¿¤¯¤Î°ú¿ô¤ò¼õ¤±Æþ¤ì¤Þ¤¹¡¥

@c The program accepts the following options.  Also see @ref{Common options}.
@c 
¥×¥í¥°¥é¥à¤Ï°Ê²¼¤Î¥ª¥×¥·¥ç¥ó¤ò¼õ¤±Æþ¤ì¤Þ¤¹¡¥@ref{Common options}¤â»²¾È
¤·¤Æ¤¯¤À¤µ¤¤¡¥

@table @samp
@item -a
@itemx --all
@opindex -a
@opindex --all
@c Print all current settings in human-readable form.  This option may not
@c be used in combination with any line settings.
@c 
¤¹¤Ù¤Æ¤Î¸½ºß¤ÎÀßÄê¤ò¿Í´Ö¤¬ÆÉ¤á¤ë·Á¼°¤Ç½ÐÎÏ¤·¤Þ¤¹¡¥¤³¤Î¥ª¥×¥·¥ç¥ó¤Ï¡¤¤¢
¤é¤æ¤ë²óÀþÀßÄê¤ÈÁÈ¤ß¹ç¤ï¤»¤Æ»ÈÍÑ¤¹¤ë¤³¤È¤Ï¤Ç¤­¤Þ¤»¤ó¡¥

@item -F @var{device}
@itemx --file=@var{device}
@opindex -F
@opindex --file
@c Set the line opened by the filename specified in @var{device} instead of
@c the tty line connected to standard input.  This option is necessary
@c because opening a @acronym{POSIX} tty requires use of the @code{O_NONDELAY} flag to
@c prevent a @acronym{POSIX} tty from blocking until the carrier detect line is high if
@c the @code{clocal} flag is not set.  Hence, it is not always possible
@c to allow the shell to open the device in the traditional manner.
@c 
É¸½àÆþÎÏ¤ËÀÜÂ³¤·¤Æ¤¤¤ëtty²óÀþ¤ÎÂå¤ï¤ê¤Ë¡¤@var{device}¤Ç»ØÄê¤µ¤ì¤Æ¤¤¤ë
¥Õ¥¡¥¤¥ëÌ¾¤Ç³«¤«¤ì¤¿²óÀþ¤òÀßÄê¤·¤Þ¤¹¡¥¤³¤Î¥ª¥×¥·¥ç¥ó¤Ï¡¤@code{clocal} 
¤¬ÀßÄê¤µ¤ì¤Æ¤¤¤Ê¤¤¾ì¹ç¡¤¥­¥ã¥ê¥¢¸¡½Ð²óÀþ¤¬¹âÂ®¤Ç¤Ï¤Ê¤¤¤Î¤Ç¡¤
@acronym{POSIX} tty¤Î¥Ö¥í¥Ã¥­¥ó¥°¤òÈò¤±¤ë¤¿¤á¤Ë¡¤@code{O_NONDELAY}¥Õ¥é
¥°¤Î»ÈÍÑ¤òÍ×µá¤¹¤ë@acronym{POSIX} tty¤ò³«¤¯¤¿¤á¤ËÉ¬Í×¤Ç¤¹¡¥¤½¤Î¤¿¤á¡¤
½¾Íè¤ÎÊýË¡¤Ç¥·¥§¥ë¤¬¥Ç¥Ð¥¤¥¹¤ò³«¤¯¤³¤È¤¬¡¤¾ï¤Ë²ÄÇ½¤Ê¤ï¤±¤Ç¤Ï¤¢¤ê¤Þ¤»¤ó¡¥

@item -g
@itemx --save
@opindex -g
@opindex --save
@cindex machine-readable @command{stty} output
@c Print all current settings in a form that can be used as an argument to
@c another @command{stty} command to restore the current settings.  This option
@c may not be used in combination with any line settings.
@c 
Â¾¤Î@command{stty}¥³¥Þ¥ó¥É¤¬¸½ºß¤ÎÀßÄê¤òÉü¸µ¤¹¤ë¤¿¤á¤Î°ú¿ô¤È¤·¤Æ»ÈÍÑ²Ä
Ç½¤Ê·Á¼°¤Ç¡¤¤¹¤Ù¤Æ¤Î¸½ºß¤ÎÀßÄê¤òÉ½¼¨¤·¤Þ¤¹¡¥¤³¤Î¥ª¥×¥·¥ç¥ó¤Ï¡¤¤¢¤é¤æ¤ë
²óÀþÀßÄê¤ÈÁÈ¤ß¹ç¤ï¤»¤Æ»ÈÍÑ¤¹¤ë¤³¤È¤Ï¤Ç¤­¤Þ¤»¤ó¡¥

@end table

@c Many settings can be turned off by preceding them with a @samp{-}.
@c Such arguments are marked below with ``May be negated'' in their
@c description.  The descriptions themselves refer to the positive
@c case, that is, when @emph{not} negated (unless stated otherwise,
@c of course).
@c 
Â¿¤¯¤ÎÀßÄê¤Ï¡¤Á°ÃÖ¤µ¤ì¤ë@samp{-}¤ÇÄä»ß¤¹¤ë¤³¤È¤¬²ÄÇ½¤Ç¤¹¡¥¤½¤Î¤è¤¦¤Ê°ú
¿ô¤Ï¡¤¤½¤ì¤éµ­½Ò¤Ç``¼è¤ê¾Ã¤·²ÄÇ½''¤È¤·¤Æ°Ê²¼¤Ç¤Ï°õ¤¬¤Ä¤¤¤Æ¤¤¤Þ¤¹¡¥µ­½Ò
¼«¿È¤Ï¡¤¹ÎÄê¤Î¾ì¹ç¤ò½Ò¤Ù¤Æ¤¤¤Æ¡¤¤¹¤Ê¤ï¤Á¡¤(¤â¤Á¤í¤ó¡¤ÌÀ¸À¤µ¤ì¤Æ¤¤¤Ê¤±
¤ì¤Ð)¼è¤ê¾Ã¤·¤Ç¤Ï@emph{¤¢¤ê¤Þ¤»¤ó}¡¥

@c Some settings are not available on all @acronym{POSIX} systems, since they use
@c extensions.  Such arguments are marked below with ``Non-@acronym{POSIX}'' in their
@c description.  On non-@acronym{POSIX} systems, those or other settings also may not
@c be available, but it's not feasible to document all the variations: just
@c try it and see.
@c 
ÀßÄê¤Ë¤Ï¡¤³ÈÄ¥¤ò»ÈÍÑ¤·¤Æ¤¤¤ë¤¿¤á¡¤¤¹¤Ù¤Æ¤Î@acronym{POSIX}¥·¥¹¥Æ¥à¤ÇÍø
ÍÑ²ÄÇ½¤Ç¤Ï¤Ê¤¤¤â¤Î¤â¤¢¤ê¤Þ¤¹¡¥¤½¤Î¤è¤¦¤Ê°ú¿ô¤Ï¤½¤Îµ­½Ò¤Ç``Èó
@acronym{POSIX}''¤È¤¤¤¦°õ¤¬¤Ä¤¤¤Æ¤¤¤Þ¤¹¡¥Èó@acronym{POSIX}¥·¥¹¥Æ¥à¤Ç¤Ï¡¤
¤³¤ì¤é¤ä¤½¤ÎÂ¾¤ÎÀßÄê¤âÍøÍÑ²ÄÇ½¤Ç¤Ï¤¢¤ê¤Þ¤»¤ó¤¬¡¤¤¹¤Ù¤Æ¤Î¥Ð¥ê¥¨¡¼¥·¥ç¥ó
¤òÀâÌÀ¤¹¤ë¤Î¤Ï¼Â¹ÔÉÔ²ÄÇ½¤Ç¤¹¡¥¤Þ¤º¤Ï¡¤»î¤·¤Æ¤ß¤Æ¤¯¤À¤µ¤¤¡¥

@exitstatus

@menu
* Control::                     Control settings
* Input::                       Input settings
* Output::                      Output settings
* Local::                       Local settings
* Combination::                 Combination settings
* Characters::                  Special characters
* Special::                     Special settings
@end menu


@node Control
@c @subsection Control settings
@subsection À©¸æÀßÄê

@cindex control settings
@c Control settings:
@c 
À©¸æÀßÄê¤Ç¤¹¡¥

@table @samp
@item parenb
@opindex parenb
@cindex two-way parity
@c Generate parity bit in output and expect parity bit in input.
@c May be negated.
@c 
½ÐÎÏ¤Î°ìÈÌÅª¤Ê¥Ñ¥ê¥Æ¥£¥Ó¥Ã¥È¤È¡¤ÆþÎÏ¤Î´üÂÔ¤¹¤ë¥Ñ¥ê¥Æ¥£¥Ó¥Ã¥È¤Ç¤¹¡¥¼è¤ê
¾Ã¤·²ÄÇ½¤Ç¤¹¡¥

@item parodd
@opindex parodd
@cindex odd parity
@cindex even parity
@c Set odd parity (even if negated).  May be negated.
@c 
(¼è¤ê¾Ã¤¹¾ì¹ç¤â)¶ö¥Ñ¥ê¥Æ¥£¤Ç¤¹¡¥¼è¤ê¾Ã¤·²ÄÇ½¤Ç¤¹¡¥

@item cs5
@itemx cs6
@itemx cs7
@itemx cs8
@opindex cs@var{n}
@cindex character size
@cindex eight-bit characters
@c Set character size to 5, 6, 7, or 8 bits.
@c 
Ê¸»ú¥µ¥¤¥º¤ò5¡¤6¡¤7¡¤¤Þ¤¿¤Ï8¥Ó¥Ã¥È¤ËÀßÄê¤·¤Þ¤¹¡¥

@item hup
@itemx hupcl
@opindex hup[cl]
@c Send a hangup signal when the last process closes the tty.  May be
@c negated.
@c 
ºÇ¸å¤Î½èÍý¤¬tty¤òÊÄ¤¸¤ë¤È¤­¡¤¥Ï¥ó¥°¥¢¥Ã¥×¥·¥°¥Ê¥ë¤òÁ÷¤ê¤Þ¤¹¡¥¼è¤ê¾Ã¤·
²ÄÇ½¤Ç¤¹¡¥

@item cstopb
@opindex cstopb
@cindex stop bits
@c Use two stop bits per character (one if negated).  May be negated.
@c 
Æó¤Ä¤Î¥¹¥È¥Ã¥×¥Ó¥Ã¥È(¼è¾Ã¤·¤Î¾ì¹ç¤Ï°ì¤Ä)¤ò»ÈÍÑ¤·¤Þ¤¹¡¥¼è¤ê¾Ã¤·²ÄÇ½¤Ç¤¹¡¥

@item cread
@opindex cread
@c Allow input to be received.  May be negated.
@c 
ÆþÎÏ¤Î¼õ¿®¤òµö²Ä¤·¤Þ¤¹¡¥¼è¤ê¾Ã¤·²ÄÇ½¤Ç¤¹¡¥

@item clocal
@opindex clocal
@cindex modem control
@c Disable modem control signals.  May be negated.
@c 
¥â¥Ç¥àÀ©¸æ¥·¥°¥Ê¥ë¤òÍøÍÑÉÔ²ÄÇ½¤Ë¤·¤Þ¤¹¡¥¼è¤ê¾Ã¤·²ÄÇ½¤Ç¤¹¡¥

@item crtscts
@opindex crtscts
@cindex hardware flow control
@cindex flow control, hardware
@cindex RTS/CTS flow control
@c Enable RTS/CTS flow control.  Non-@acronym{POSIX}.  May be negated.
@c 
RTS/CTS¥Õ¥í¡¼À©¸æ¤òÍøÍÑ²ÄÇ½¤Ë¤·¤Þ¤¹¡¥Èó@acronym{POSIX}¤Ç¤¹¡¥¼è¤ê¾Ã¤·²Ä
Ç½¤Ç¤¹¡¥
@end table


@node Input
@c @subsection Input settings
@subsection ÆþÎÏÀßÄê

@cindex input settings

@table @samp
@item ignbrk
@opindex ignbrk
@cindex breaks, ignoring
@c Ignore break characters.  May be negated.
@c 
¥Ö¥ì¡¼¥¯Ê¸»ú¤òÌµ»ë¤·¤Þ¤¹¡¥¼è¤ê¾Ã¤·²ÄÇ½¤Ç¤¹¡¥

@item brkint
@opindex brkint
@cindex breaks, cause interrupts
@c Make breaks cause an interrupt signal.  May be negated.
@c 
¥Ö¥ì¡¼¥¯¤òÃæÃÇ¥·¥°¥Ê¥ë¤Ë¤·¤Þ¤¹¡¥¼è¤ê¾Ã¤·²ÄÇ½¤Ç¤¹¡¥

@item ignpar
@opindex ignpar
@cindex parity, ignoring
@c Ignore characters with parity errors.  May be negated.
@c 
¥Ñ¥ê¥Æ¥£¥¨¥é¡¼¤ÎÊ¸»ú¤òÌµ»ë¤·¤Þ¤¹¡¥¼è¤ê¾Ã¤·²ÄÇ½¤Ç¤¹¡¥

@item parmrk
@opindex parmrk
@cindex parity errors, marking
@c Mark parity errors (with a 255-0-character sequence).  May be negated.
@c 
(255-0¤ÎÊ¸»ú¤Î½ç¤Ë)¥Ñ¥ê¥Æ¥£¡¼¥¨¥é¡¼¤Ë°õ¤òÉÕ¤±¤Þ¤¹¡¥¼è¤ê¾Ã¤·²ÄÇ½¤Ç¤¹¡¥

@item inpck
@opindex inpck
@c Enable input parity checking.  May be negated.
@c 
ÆþÎÏ¥Ñ¥ê¥Æ¥£¥Á¥§¥Ã¥¯¤ò²ÄÇ½¤Ë¤·¤Þ¤¹¡¥¼è¤ê¾Ã¤·²ÄÇ½¤Ç¤¹¡¥

@item istrip
@opindex istrip
@cindex eight-bit input
@c Clear high (8th) bit of input characters.  May be negated.
@c 
ÆþÎÏÊ¸»ú¤Î¥Ï¥¤¥Ó¥Ã¥È(È¬ÈÖÌÜ)¤ò¥¯¥ê¥¢¤·¤Þ¤¹¡¥¼è¤ê¾Ã¤·²ÄÇ½¤Ç¤¹¡¥

@item inlcr
@opindex inlcr
@cindex newline, translating to return
@c Translate newline to carriage return.  May be negated.
@c 
¥Ë¥å¡¼¥é¥¤¥ó¤ò¥­¥ã¥ê¥Ã¥¸¥ê¥¿¡¼¥ó¤ËÊÑ´¹¤·¤Þ¤¹¡¥¼è¤ê¾Ã¤·²ÄÇ½¤Ç¤¹¡¥

@item igncr
@opindex igncr
@cindex return, ignoring
@c Ignore carriage return.  May be negated.
@c 
¥­¥ã¥ê¥Ã¥¸¥ê¥¿¡¼¥ó¤òÌµ»ë¤·¤Þ¤¹¡¥¼è¤ê¾Ã¤·²ÄÇ½¤Ç¤¹¡¥

@item icrnl
@opindex icrnl
@cindex return, translating to newline
@c Translate carriage return to newline.  May be negated.
@c 
¥­¥ã¥ê¥Ã¥¸¥ê¥¿¡¼¥ó¤ò¥Ë¥å¡¼¥é¥¤¥ó¤ËÊÑ´¹¤·¤Þ¤¹¡¥¼è¤ê¾Ã¤·²ÄÇ½¤Ç¤¹¡¥

@item ixon
@opindex ixon
@kindex C-s/C-q flow control
@cindex XON/XOFF flow control
@c Enable XON/XOFF flow control (that is, @kbd{CTRL-S}/@kbd{CTRL-Q}).  May
@c be negated.
@c 
XON/XOFF¥Õ¥í¡¼À©¸æ(¤¹¤Ê¤ï¤Á¡¤@kbd{CTRL-S}/@kbd{CTRL-Q})¤ò²ÄÇ½¤Ë¤·¤Þ¤¹¡¥
¼è¤ê¾Ã¤·²ÄÇ½¤Ç¤¹¡¥

@item ixoff
@itemx tandem
@opindex ixoff
@opindex tandem
@cindex software flow control
@cindex flow control, software
@c Enable sending of @code{stop} character when the system input buffer
@c is almost full, and @code{start} character when it becomes almost
@c empty again.  May be negated.
@c 
¥·¥¹¥Æ¥àÆþÎÏ¥Ð¥Ã¥Õ¥¡¤¬¤Û¤Ü¤¤¤Ã¤Ñ¤¤¤Î¤È¤­¤Î@code{stop}Ê¸»ú¤È¡¤ºÆ¤Ó¤Û¤È
¤ó¤É¶õ¤Ë¤Ê¤Ã¤¿¤È¤­¤Î@code{start}Ê¸»ú¤ÎÁ÷¿®¤ò²ÄÇ½¤Ë¤·¤Þ¤¹¡¥¼è¤ê¾Ã¤·²ÄÇ½
¤Ç¤¹¡¥

@item iuclc
@opindex iuclc
@cindex uppercase, translating to lowercase
@c Translate uppercase characters to lowercase.  Non-@acronym{POSIX}.  May be
@c negated.
@c 
ÂçÊ¸»ú¤ò¾®Ê¸»ú¤ËÊÑ´¹¤·¤Þ¤¹¡¥Èó@acronym{POSIX}¤Ç¤¹¡¥¼è¤ê¾Ã¤·²ÄÇ½¤Ç¤¹¡¥

@item ixany
@opindex ixany
@c Allow any character to restart output (only the start character
@c if negated).  Non-@acronym{POSIX}.  May be negated.
@c 
¤¢¤é¤æ¤ëÊ¸»ú¤Î½ÐÎÏ¤ÎºÆ³«¤òµö²Ä¤·¤Þ¤¹(¼è¾Ã¤·¤Î¾ì¹ç¤Ï³«»ÏÊ¸»ú¤Î¤ß¤Ç¤¹)¡¥
Èó@acronym{POSIX}¤Ç¤¹¡¥¼è¤ê¾Ã¤·²ÄÇ½¤Ç¤¹¡¥

@item imaxbel
@opindex imaxbel
@cindex beeping at input buffer full
@c Enable beeping and not flushing input buffer if a character arrives
@c when the input buffer is full.  Non-@acronym{POSIX}.  May be negated.
@c 
ÆþÎÏ¥Ð¥Ã¥Õ¥¡¤¬¤¤¤Ã¤Ñ¤¤¤Ë¤Ê¤Ã¤¿¤È¤­¤ËÊ¸»ú¤¬ÆÏ¤¤¤¿¾ì¹ç¡¤¥Ó¡¼¥×¤òÌÄ¤·¡¤Æþ
ÎÏ¥Ð¥Ã¥Õ¥¡¤ò¥Õ¥é¥Ã¥·¥å¤·¤Ê¤¤¤³¤È¤ò²ÄÇ½¤Ë¤·¤Þ¤¹¡¥Èó@acronym{POSIX}¤Ç¤¹¡¥
¼è¤ê¾Ã¤·²ÄÇ½¤Ç¤¹¡¥
@end table


@node Output
@c @subsection Output settings
@subsection ½ÐÎÏÀßÄê

@cindex output settings
@c These arguments specify output-related operations.
@c 
°Ê²¼¤Î°ú¿ô¤Ï½ÐÎÏ¤Ë´ØÏ¢¤¹¤ë½èÍý¤Ç¤¹¡¥

@table @samp
@item opost
@opindex opost
@c Postprocess output.  May be negated.
@c 
½ÐÎÏ¤ò¸å½èÍý¤·¤Þ¤¹¡¥¼è¤ê¾Ã¤·²ÄÇ½¤Ç¤¹¡¥

@item olcuc
@opindex olcuc
@cindex lowercase, translating to output
@c Translate lowercase characters to uppercase.  Non-@acronym{POSIX}.  May be
@c negated.
@c 
¾®Ê¸»ú¤òÂçÊ¸»ú¤ËÊÑ´¹¤·¤Þ¤¹¡¥Èó@acronym{POSIX}¤Ç¤¹¡¥¼è¤ê¾Ã¤·²ÄÇ½¤Ç¤¹¡¥

@item ocrnl
@opindex ocrnl
@cindex return, translating to newline
@c Translate carriage return to newline.  Non-@acronym{POSIX}.  May be negated.
@c 
¥­¥ã¥ê¥Ã¥¸¥ê¥¿¡¼¥ó¤ò¥Ë¥å¡¼¥é¥¤¥ó¤ËÊÑ´¹¤·¤Þ¤¹¡¥Èó@acronym{POSIX}¤Ç¤¹¡¥
¼è¤ê¾Ã¤·²ÄÇ½¤Ç¤¹¡¥

@item onlcr
@opindex onlcr
@cindex newline, translating to crlf
@c Translate newline to carriage return-newline.  Non-@acronym{POSIX}.  May be
@c negated.
@c 
¥Ë¥å¡¼¥é¥¤¥ó¤ò¥­¥ã¥ê¥Ã¥¸¥ê¥¿¡¼¥ó¤ËÊÑ´¹¤·¤Þ¤¹¡¥Èó@acronym{POSIX}¤Ç¤¹¡¥
¼è¤ê¾Ã¤·²ÄÇ½¤Ç¤¹¡¥

@item onocr
@opindex onocr
@c Do not print carriage returns in the first column.  Non-@acronym{POSIX}.
@c May be negated.
@c 
ºÇ½é¤ÎÎó¤Î¥­¥ã¥ê¥Ã¥¸¥ê¥¿¡¼¥ó¤ò½ÐÎÏ¤·¤Þ¤»¤ó¡¥Èó@acronym{POSIX}¤Ç¤¹¡¥¼è
¤ê¾Ã¤·²ÄÇ½¤Ç¤¹¡¥

@item onlret
@opindex onlret
@c Newline performs a carriage return.  Non-@acronym{POSIX}.  May be negated.
@c 
¥Ë¥å¡¼¥é¥¤¥ó¤¬¥­¥ã¥ê¥Ã¥¸¥ê¥¿¡¼¥ó¤ò¼Â¹Ô¤·¤Þ¤¹¡¥Èó@acronym{POSIX}¤Ç¤¹¡¥
¼è¤ê¾Ã¤·²ÄÇ½¤Ç¤¹¡¥

@item ofill
@opindex ofill
@cindex pad instead of timing for delaying
@c Use fill (padding) characters instead of timing for delays.  Non-@acronym{POSIX}.
@c May be negated.
@c 
ÃÙ±ä¤ËÂÐ¤¹¤ë»þ´ÖÄ´À°¤ÎÂå¤ï¤ê¤Ë¡¤Ê¸»ú¤ÎÊä½¼(¥Ñ¥Ç¥£¥ó¥°)¤ò»ÈÍÑ¤·¤Þ¤¹¡¥Èó
@acronym{POSIX}¤Ç¤¹¡¥¼è¤ê¾Ã¤·²ÄÇ½¤Ç¤¹¡¥

@item ofdel
@opindex ofdel
@cindex pad character
@c Use delete characters for fill instead of null characters.  Non-@acronym{POSIX}.
@c May be negated.
@c 
Êä½¼¤ËÂÐ¤·¡¤nullÊ¸»ú¤ÎÂå¤ï¤ê¤Ë¥Ç¥ê¡¼¥ÈÊ¸»ú¤ò»ÈÍÑ¤·¤Þ¤¹¡¥Èó
@acronym{POSIX}¤Ç¤¹¡¥¼è¤ê¾Ã¤·²ÄÇ½¤Ç¤¹¡¥

@item nl1
@itemx nl0
@opindex nl@var{n}
@c Newline delay style.  Non-@acronym{POSIX}.
@c 
¥Ë¥å¡¼¥é¥¤¥ó¤ÎÃÙ±ä·Á¼°¤Ç¤¹¡¥Èó@acronym{POSIX}¤Ç¤¹¡¥

@item cr3
@itemx cr2
@itemx cr1
@itemx cr0
@opindex cr@var{n}
@c Carriage return delay style.  Non-@acronym{POSIX}.
@c 
¥­¥ã¥ê¥Ã¥¸¥ê¥¿¡¼¥ó¤ÎÃÙ±ä·Á¼°¤Ç¤¹¡¥Èó@acronym{POSIX}¤Ç¤¹¡¥

@item tab3
@itemx tab2
@itemx tab1
@itemx tab0
@opindex tab@var{n}
@c Horizontal tab delay style.  Non-@acronym{POSIX}.
@c 
¿åÊ¿¥¿¥Ö¤ÎÃÙ±ä·Á¼°¤Ç¤¹¡¥Èó@acronym{POSIX}¤Ç¤¹¡¥

@item bs1
@itemx bs0
@opindex bs@var{n}
@c Backspace delay style.  Non-@acronym{POSIX}.
@c 
¥Ð¥Ã¥¯¥¹¥Ú¡¼¥¹¤ÎÃÙ±ä·Á¼°¤Ç¤¹¡¥Èó@acronym{POSIX}¤Ç¤¹¡¥

@item vt1
@itemx vt0
@opindex vt@var{n}
@c Vertical tab delay style.  Non-@acronym{POSIX}.
@c 
¿âÄ¾¥¿¥Ö¤ÎÃÙ±ä·Á¼°¤Ç¤¹¡¥Èó@acronym{POSIX}¤Ç¤¹¡¥

@item ff1
@itemx ff0
@opindex ff@var{n}
@c Form feed delay style.  Non-@acronym{POSIX}.
@c 
¥Õ¥©¡¼¥à¥Õ¥£¡¼¥É¤ÎÃÙ±ä·Á¼°¤Ç¤¹¡¥Èó@acronym{POSIX}¤Ç¤¹¡¥
@end table


@node Local
@c @subsection Local settings
@subsection ¥í¡¼¥«¥ëÀßÄê

@cindex local settings

@table @samp
@item isig
@opindex isig
@c Enable @code{interrupt}, @code{quit}, and @code{suspend} special
@c characters.  May be negated.
@c 
@code{interrupt}¡¤ @code{quit}¡¤¤½¤·¤Æ@code{suspend}ÆÃ¼ìÊ¸»ú¤ò²ÄÇ½¤Ë¤·
¤Þ¤¹¡¥¼è¤ê¾Ã¤·²ÄÇ½¤Ç¤¹¡¥

@item icanon
@opindex icanon
@c Enable @code{erase}, @code{kill}, @code{werase}, and @code{rprnt}
@c special characters.  May be negated.
@c 
@code{erase}¡¤@code{kill}¡¤@code{werase}¡¤¤½¤·¤Æ@code{rprnt}ÆÃ¼ìÊ¸»ú¤ò
²ÄÇ½¤Ë¤·¤Þ¤¹¡¥¼è¤ê¾Ã¤·²ÄÇ½¤Ç¤¹¡¥

@item iexten
@opindex iexten
@c Enable non-@acronym{POSIX} special characters.  May be negated.
@c 
Èó@acronym{POSIX}ÆÃ¼ìÊ¸»ú¤ò²ÄÇ½¤Ë¤·¤Þ¤¹¡¥¼è¤ê¾Ã¤·²ÄÇ½¤Ç¤¹¡¥

@item echo
@opindex echo
@c Echo input characters.  May be negated.
@c 
ÆþÎÏÊ¸»ú¤ò¥¨¥³¡¼¥Ð¥Ã¥¯¤·¤Þ¤¹¡¥¼è¤ê¾Ã¤·²ÄÇ½¤Ç¤¹¡¥

@item echoe
@itemx crterase
@opindex echoe
@opindex crterase
@c Echo @code{erase} characters as backspace-space-backspace.  May be
@c negated.
@c 
@code{erase}Ê¸»ú¤ò¥Ð¥Ã¥¯¥¹¥Ú¡¼¥¹-¥¹¥Ú¡¼¥¹-¥Ð¥Ã¥¯¥¹¥Ú¡¼¥¹¤È¤·¤Æ¥¨¥³¡¼¥Ð¥Ã
¥¯¤·¤Þ¤¹¡¥¼è¤ê¾Ã¤·²ÄÇ½¤Ç¤¹¡¥

@item echok
@opindex echok
@cindex newline echoing after @code{kill}
@c Echo a newline after a @code{kill} character.  May be negated.
@c 
@code{kill}Ê¸»ú¤Î¸å¤Î¥Ë¥å¡¼¥é¥¤¥ó¤ò¥¨¥³¡¼¥Ð¥Ã¥¯¤·¤Þ¤¹¡¥¼è¤ê¾Ã¤·²ÄÇ½¤Ç¤¹¡¥

@item echonl
@opindex echonl
@cindex newline, echoing
@c Echo newline even if not echoing other characters.  May be negated.
@c 
Â¾¤ÎÊ¸»ú¤ò¥¨¥³¡¼¥Ð¥Ã¥¯¤·¤Æ¤¤¤Ê¤¯¤Æ¤â¡¤¥Ë¥å¡¼¥é¥¤¥ó¤ò¥¨¥³¡¼¥Ð¥Ã¥¯¤·¤Þ¤¹¡¥
¼è¤ê¾Ã¤·²ÄÇ½¤Ç¤¹¡¥

@item noflsh
@opindex noflsh
@cindex flushing, disabling
@c Disable flushing after @code{interrupt} and @code{quit} special
@c characters.  May be negated.
@c 
@code{interrupt}¤È@code{quit}ÆÃ¼ìÊ¸»ú¤Î¸å¤Î¥Õ¥é¥Ã¥·¥å¤òÉÔ²ÄÇ½¤Ë¤·¤Þ¤¹¡¥
¼è¤ê¾Ã¤·²ÄÇ½¤Ç¤¹¡¥

@item xcase
@opindex xcase
@cindex case translation
@c Enable input and output of uppercase characters by preceding their
@c lowercase equivalents with @samp{\}, when @code{icanon} is set.
@c Non-@acronym{POSIX}.  May be negated.
@c 
@code{icanon}¤¬ÀßÄê¤µ¤ì¤Æ¤¤¤ë¤È¤­¡¤Æ±¤¸¾®Ê¸»ú¤Ë@samp{\}¤òÁ°ÃÖ¤¹¤ë¤³¤È
¤Ç¡¤ÆþÎÏ¤È½ÐÎÏ¤ÎÂçÊ¸»ú¤ò²ÄÇ½¤Ë¤·¤Þ¤¹¡¥Èó@acronym{POSIX}¤Ç¤¹¡¥¼è¤ê¾Ã¤·
²ÄÇ½¤Ç¤¹¡¥

@item tostop
@opindex tostop
@cindex background jobs, stopping at terminal write
@c Stop background jobs that try to write to the terminal.  Non-@acronym{POSIX}.
@c May be negated.
@c 
Ã¼Ëö¤Ë½ñ¤­¹þ¤â¤¦¤È¤·¤Æ¤¤¤ë¥Ð¥Ã¥¯¥°¥é¥¦¥ó¥É½èÍý¤òÄä»ß¤·¤Þ¤¹¡¥Èó
@acronym{POSIX}¤Ç¤¹¡¥¼è¤ê¾Ã¤·²ÄÇ½¤Ç¤¹¡¥

@item echoprt
@itemx prterase
@opindex echoprt
@opindex prterase
@c Echo erased characters backward, between @samp{\} and @samp{/}.
@c Non-@acronym{POSIX}.  May be negated.
@c 
ºï½ü¤µ¤ì¤¿Ê¸»ú¤ò¸åÊý¤Î@samp{\}¤È@samp{/}¤Î´Ö¤Ë¥¨¥³¡¼¥Ð¥Ã¥¯¤·¤Þ¤¹¡¥Èó
@acronym{POSIX}¤Ç¤¹¡¥¼è¤ê¾Ã¤·²ÄÇ½¤Ç¤¹¡¥

@item echoctl
@itemx ctlecho
@opindex echoctl
@opindex ctlecho
@cindex control characters, using @samp{^@var{c}}
@cindex hat notation for control characters
@c Echo control characters in hat notation (@samp{^@var{c}}) instead
@c of literally.  Non-@acronym{POSIX}.  May be negated.
@c 
À©¸æÊ¸»ú¤ò¡¤¤½¤Î¤Þ¤Þ¤Ç¤Ï¤Ê¤¯¡¤¥Ï¥Ã¥ÈÉ½¼¨(@samp{^@var{c}})¤Ç¥¨¥³¡¼¥Ð¥Ã
¥¯¤·¤Þ¤¹¡¥Èó@acronym{POSIX}¤Ç¤¹¡¥¼è¤ê¾Ã¤·²ÄÇ½¤Ç¤¹¡¥

@item echoke
@itemx crtkill
@opindex echoke
@opindex crtkill
@c Echo the @code{kill} special character by erasing each character on
@c the line as indicated by the @code{echoprt} and @code{echoe} settings,
@c instead of by the @code{echoctl} and @code{echok} settings.  Non-@acronym{POSIX}.
@c May be negated.
@c 
@code{echoctl}¤È@code{echok}¤ÎÀßÄê¤ÎÂå¤ï¤ê¤Ë¡¤@code{echoprt}¤È
@code{echoe}¤ÎÀßÄê¤Ç¼¨¤¹¤â¤Î¤È¤·¤Æ¡¤¹Ô¤Î¤½¤ì¤¾¤ì¤ÎÊ¸»ú¤òºï½ü¤¹¤ë¤³¤È¤Ç¡¤
@code{kill}ÆÃ¼ìÊ¸»ú¤ò¥¨¥³¡¼¥Ð¥Ã¥¯¤·¤Þ¤¹¡¥Èó@acronym{POSIX}¤Ç¤¹¡¥¼è¤ê¾Ã
¤·²ÄÇ½¤Ç¤¹¡¥
@end table


@node Combination
@c @subsection Combination settings
@subsection ÁÈ¤ß¹ç¤ï¤»ÀßÄê

@cindex combination settings
@c Combination settings:
@c 
ÁÈ¤ß¹ç¤ï¤»ÀßÄê¤Ç¤¹¡¥

@table @samp
@item evenp
@opindex evenp
@itemx parity
@opindex parity
@c Same as @code{parenb -parodd cs7}.  May be negated.  If negated, same
@c as @code{-parenb cs8}.
@c 
@code{parenb -parodd cs7}¤ÈÆ±¤¸¤Ç¤¹¡¥¼è¤ê¾Ã¤·²ÄÇ½¤Ç¤¹¡¥¼è¤ê¾Ã¤·¤Î¾ì¹ç
¤Ï¡¤@code{-parenb cs8}¤ÈÆ±¤¸¤Ç¤¹¡¥

@item oddp
@opindex oddp
@c Same as @code{parenb parodd cs7}.  May be negated.  If negated, same
@c as @code{-parenb cs8}.
@c 
@code{parenb parodd cs7}¤ÈÆ±¤¸¤Ç¤¹¡¥¼è¤ê¾Ã¤·²ÄÇ½¤Ç¤¹¡¥¼è¤ê¾Ã¤·¤Î¾ì¹ç¤Ï¡¤
@code{-parenb cs8}¤ÈÆ±¤¸¤Ç¤¹¡¥

@item nl
@opindex nl
@c Same as @code{-icrnl -onlcr}.  May be negated.  If negated, same as
@c @code{icrnl -inlcr -igncr onlcr -ocrnl -onlret}.
@c 
@code{-icrnl -onlcr}¤ÈÆ±¤¸¤Ç¤¹¡¥¼è¤ê¾Ã¤·²ÄÇ½¤Ç¤¹¡¥¼è¤ê¾Ã¤·¤Î¾ì¹ç¤Ï¡¤
@code{icrnl -inlcr -igncr onlcr -ocrnl -onlret}¤ÈÆ±¤¸¤Ç¤¹¡¥

@item ek
@opindex ek
@c Reset the @code{erase} and @code{kill} special characters to their default
@c values.
@c 
@code{erase}¤È@code{kill}ÆÃ¼ìÊ¸»ú¤ò¤½¤Î¥Ç¥Õ¥©¥ë¥ÈÃÍ¤Ë¥ê¥»¥Ã¥È¤·¤Þ¤¹¡¥

@item sane
@opindex sane
@c Same as:
@c 
°Ê²¼¤ÈÆ±¤¸¤Ç¤¹¡¥
@c This is too long to write inline.
@example
cread -ignbrk brkint -inlcr -igncr icrnl -ixoff
-iuclc -ixany imaxbel opost -olcuc -ocrnl onlcr
-onocr -onlret -ofill -ofdel nl0 cr0 tab0 bs0 vt0
ff0 isig icanon iexten echo echoe echok -echonl
-noflsh -xcase -tostop -echoprt echoctl echoke
@end example
@c @noindent and also sets all special characters to their default values.
@c 
@noindent ¤½¤·¤Æ¡¤¤¹¤Ù¤Æ¤ÎÆÃ¼ìÊ¸»ú¤ò¤½¤Î¥Ç¥Õ¥©¥ë¥ÈÃÍ¤ËÀßÄê¤·¤Þ¤¹¡¥

@item cooked
@opindex cooked
@c Same as @code{brkint ignpar istrip icrnl ixon opost isig icanon}, plus
@c sets the @code{eof} and @code{eol} characters to their default values
@c if they are the same as the @code{min} and @code{time} characters.
@c May be negated.  If negated, same as @code{raw}.
@c 
@code{brkint ignpar istrip icrnl ixon opost isig icanon}¤ÈÆ±¤¸¤Ç¡¤
@code{min}¤È@code{time}Ê¸»ú¤¬@code{eof}¤È@code{eol}Ê¸»ú¤ÈÆ±¤¸¾ì¹ç¤Ï¡¤
@code{eof}¤È@code{eol}Ê¸»ú¤ò¤½¤Î¥Ç¥Õ¥©¥ë¥ÈÃÍ¤ËÀßÄê¤·¤Þ¤¹¡¥¼è¤ê¾Ã¤·²ÄÇ½
¤Ç¤¹¡¥¼è¤ê¾Ã¤·¤Î¾ì¹ç¤Ï¡¤@code{raw}¤ÈÆ±¤¸¤Ç¤¹¡¥

@item raw
@opindex raw
@c Same as:
@c 
°Ê²¼¤ÈÆ±¤¸¤Ç¤¹¡¥
@example
-ignbrk -brkint -ignpar -parmrk -inpck -istrip
-inlcr -igncr -icrnl -ixon -ixoff -iuclc -ixany
-imaxbel -opost -isig -icanon -xcase min 1 time 0
@end example
@c @noindent May be negated.  If negated, same as @code{cooked}.
@c 
@noindent ¼è¤ê¾Ã¤·²ÄÇ½¤Ç¤¹¡¥¼è¤ê¾Ã¤·¤Î¾ì¹ç¤Ï¡¤@code{cooked}¤ÈÆ±¤¸¤Ç¤¹¡¥

@item cbreak
@opindex cbreak
@c Same as @option{-icanon}.  May be negated.  If negated, same as
@c @code{icanon}.
@c 
@option{-icanon}¤ÈÆ±¤¸¤Ç¤¹¡¥¼è¤ê¾Ã¤·²ÄÇ½¤Ç¤¹¡¥¼è¤ê¾Ã¤·¤Î¾ì¹ç¤Ï¡¤
@code{icanon}¤ÈÆ±¤¸¤Ç¤¹¡¥

@item pass8
@opindex pass8
@cindex eight-bit characters
@c Same as @code{-parenb -istrip cs8}.  May be negated.  If negated,
@c same as @code{parenb istrip cs7}.
@c 
@code{-parenb -istrip cs8}¤ÈÆ±¤¸¤Ç¤¹¡¥¼è¤ê¾Ã¤·²ÄÇ½¤Ç¤¹¡¥¼è¤ê¾Ã¤·¤Î¾ì¹ç
¤Ï¡¤@code{parenb istrip cs7}¤ÈÆ±¤¸¤Ç¤¹¡¥

@item litout
@opindex litout
@c Same as @option{-parenb -istrip -opost cs8}.  May be negated.
@c If negated, same as @code{parenb istrip opost cs7}.
@c 
@option{-parenb -istrip -opost cs8}¤ÈÆ±¤¸¤Ç¤¹¡¥¼è¤ê¾Ã¤·²ÄÇ½¤Ç¤¹¡¥¼è¤ê¾Ã
¤·¤Î¾ì¹ç¤Ï¡¤@code{parenb istrip opost cs7}Æ±¤¸¤Ç¤¹¡¥

@item decctlq
@opindex decctlq
@c Same as @option{-ixany}.  Non-@acronym{POSIX}.  May be negated.
@c 
@option{-ixany}¤ÈÆ±¤¸¤Ç¤¹¡¥Èó@acronym{POSIX}¤Ç¤¹¡¥¼è¤ê¾Ã¤·²ÄÇ½¤Ç¤¹¡¥

@item tabs
@opindex tabs
@c Same as @code{tab0}.  Non-@acronym{POSIX}.  May be negated.  If negated, same
@c as @code{tab3}.
@c 
@code{tab0}¤ÈÆ±¤¸¤Ç¤¹¡¥¼è¤ê¾Ã¤·²ÄÇ½¤Ç¤¹¡¥¼è¤ê¾Ã¤·¤Î¾ì¹ç¤Ï¡¤@code{tab3}
¤ÈÆ±¤¸¤Ç¤¹¡¥

@item lcase
@itemx LCASE
@opindex lcase
@opindex LCASE
@c Same as @code{xcase iuclc olcuc}.  Non-@acronym{POSIX}.  May be negated.
@c 
@code{xcase iuclc olcuc}¤ÈÆ±¤¸¤Ç¤¹¡¥Èó@acronym{POSIX}¤Ç¤¹¡¥¼è¤ê¾Ã¤·²Ä
Ç½¤Ç¤¹¡¥

@item crt
@opindex crt
@c Same as @code{echoe echoctl echoke}.
@c 
@code{echoe echoctl echoke}¤ÈÆ±¤¸¤Ç¤¹¡¥

@item dec
@opindex dec
@c Same as @code{echoe echoctl echoke -ixany intr ^C erase ^? kill C-u}.
@c 
@code{echoe echoctl echoke -ixany intr ^C erase ^? kill C-u}¤ÈÆ±¤¸¤Ç¤¹¡¥
@end table


@node Characters
@c @subsection Special characters
@subsection ÆÃ¼ìÊ¸»ú

@cindex special characters
@cindex characters, special

@c The special characters' default values vary from system to system.
@c They are set with the syntax @samp{name value}, where the names are
@c listed below and the value can be given either literally, in hat
@c notation (@samp{^@var{c}}), or as an integer which may start with
@c @samp{0x} to indicate hexadecimal, @samp{0} to indicate octal, or
@c any other digit to indicate decimal.
@c 
ÆÃ¼ìÊ¸»ú¤Î¥Ç¥Õ¥©¥ë¥ÈÃÍ¤Ï¥·¥¹¥Æ¥à¤´¤È¤Ë°Û¤Ê¤ê¤Þ¤¹¡¥¤½¤ì¤é¤Ï¡¤¹½Ê¸
@samp{name value}¤ÇÀßÄê¤µ¤ì¡¤name¤Ï°Ê²¼¤Ë¥ê¥¹¥È¥¢¥Ã¥×¤µ¤ì¤Æ¤¤¤Æ¡¤value 
¤Ï¥Ï¥Ã¥ÈÉ½¼¨(@samp{^@var{c}})¤ÎÊ¸»úÄÌ¤ê¡¤¤Þ¤¿¤Ï¡¤16¿Ê¤ò¼¨¤¹@samp{0x}¡¤
È¬¿Ê¿ô¤ò¼¨¤¹@samp{0}¡¤¤Þ¤¿¤Ï¡¤½½¿Ê¤ò¼¨¤¹¤½¤ÎÂ¾¤â¤Î¤Ç»Ï¤Þ¤ëÀ°¿ô¤Î¤É¤Á¤é
¤«¤Ç¡¤Í¿¤¨¤ë¤³¤È¤¬²ÄÇ½¤Ç¤¹¡¥

@cindex disabling special characters
@kindex u@r{, and disabling special characters}
@c For GNU stty, giving a value of @code{^-} or @code{undef} disables that
@c special character.  (This is incompatible with Ultrix @command{stty},
@c which uses  a value of @samp{u} to disable a special character.  GNU
@c @command{stty} treats a value @samp{u} like any other, namely to set that
@c special character to @key{U}.)
@c 
GNU stty¤ËÂÐ¤·¡¤@code{^-}¤ä@code{undef}¤ÎÃÍ¤òÍ¿¤¨¤ë¤³¤È¤Ç¡¤ÆÃ¼ìÊ¸
»ú¤ò»ÈÍÑÉÔ²ÄÇ½¤Ë¤·¤Þ¤¹¡¥(¤³¤ì¤Ï¡¤Ultrix @command{stty}¤È¸ß´¹À­¤¬¤Ê¤¯¡¤
¤½¤ì¤ÏÆÃ¼ìÊ¸»ú¤ò»ÈÍÑÉÔ²ÄÇ½¤Ë¤¹¤ë¤¿¤á¤Ë@samp{u}¤ÎÃÍ¤ò»ÈÍÑ¤·¤Þ¤¹¡¥
GNU @command{stty}¤Ï¡¤ÃÍ@samp{u}¤òÂ¾¤ÈÆ±¤¸¤è¤¦¤Ë°·¤¤¡¤¸À¤¤´¹¤¨¤ë
¤È¡¤ÆÃ¼ìÊ¸»ú¤ò@key{U}¤ËÀßÄê¤·¤Þ¤¹¡¥)

@table @samp

@item intr
@opindex intr
@c Send an interrupt signal.
@c 
ÃæÃÇ¥·¥°¥Ê¥ë¤òÁ÷¿®¤·¤Þ¤¹¡¥

@item quit
@opindex quit
@c Send a quit signal.
@c 
½ªÎ»¥·¥°¥Ê¥ë¤òÁ÷¿®¤·¤Þ¤¹¡¥

@item erase
@opindex erase
@c Erase the last character typed.
@c 
ºÇ¸å¤ËÆþÎÏ¤µ¤ì¤¿Ê¸»ú¤òºï½ü¤·¤Þ¤¹¡¥

@item kill
@opindex kill
@c Erase the current line.
@c 
¸½ºß¤Î¹Ô¤òºï½ü¤·¤Þ¤¹¡¥

@item eof
@opindex eof
@c Send an end of file (terminate the input).
@c 
¥Õ¥¡¥¤¥ë¤Î½ª¤ê¤òÁ÷¿®¤·¤Þ¤¹(ÆþÎÏ¤ò½ªÎ»¤·¤Þ¤¹)¡¥

@item eol
@opindex eol
@c End the line.
@c 
¹Ô¤Î½ª¤ê¤Ç¤¹¡¥

@item eol2
@opindex eol2
@c Alternate character to end the line.  Non-@acronym{POSIX}.
@c 
¹Ô¤Î½ª¤ê¤ÎÊÌÊ¸»ú¤Ç¤¹¡¥Èó@acronym{POSIX}¤Ç¤¹¡¥

@item swtch
@opindex swtch
@c Switch to a different shell layer.  Non-@acronym{POSIX}.
@c 
°Û¤Ê¤ë¥·¥§¥ë¥ì¥¤¥ä¡¼¤ËÀÚ¤êÂØ¤¨¤Þ¤¹¡¥Èó@acronym{POSIX}¤Ç¤¹¡¥

@item start
@opindex start
@c Restart the output after stopping it.
@c 
Ää»ß¸å¤Î½ÐÎÏ¤òºÆ³«¤·¤Þ¤¹¡¥

@item stop
@opindex stop
@c Stop the output.
@c 
½ÐÎÏ¤òÄä»ß¤·¤Þ¤¹¡¥

@item susp
@opindex susp
@c Send a terminal stop signal.
@c 
Ã¼Ëö¤ÎÄä»ß¥·¥°¥Ê¥ë¤òÁ÷¿®¤·¤Þ¤¹¡¥

@item dsusp
@opindex dsusp
@c Send a terminal stop signal after flushing the input.  Non-@acronym{POSIX}.
@c 
ÆþÎÏ¤ò¥Õ¥é¥Ã¥·¥å¤·¤¿¸å¡¤Ää»ß¥·¥°¥Ê¥ë¤òÁ÷¿®¤·¤Þ¤¹¡¥Èó@acronym{POSIX}¤Ç¤¹¡¥

@item rprnt
@opindex rprnt
@c Redraw the current line.  Non-@acronym{POSIX}.
@c 
¸½ºß¤Î¹Ô¤òºÆÉÁ²è¤·¤Þ¤¹¡¥Èó@acronym{POSIX}¤Ç¤¹¡¥

@item werase
@opindex werase
@c Erase the last word typed.  Non-@acronym{POSIX}.
@c 
ºÇ¸å¤ËÆþÎÏ¤µ¤ì¤¿Ã±¸ì¤ò¾Ãµî¤·¤Þ¤¹¡¥Èó@acronym{POSIX}¤Ç¤¹¡¥

@item lnext
@opindex lnext
@c Enter the next character typed literally, even if it is a special
@c character.  Non-@acronym{POSIX}.
@c 
ÆþÎÏ¤µ¤ì¤¿¼¡¤ÎÊ¸»ú¤ò¡¤¤½¤ì¤¬ÆÃ¼ìÊ¸»ú¤Î¾ì¹ç¤Ç¤â¡¤¤½¤Î¤Þ¤ÞÆþÎÏ¤·¤Þ¤¹¡¥Èó
@acronym{POSIX}¤Ç¤¹¡¥
@end table


@node Special
@c @subsection Special settings
@subsection ÆÃ¼ìÀßÄê

@cindex special settings

@table @samp
@item min @var{n}
@opindex min
@c Set the minimum number of characters that will satisfy a read until
@c the time value has expired, when @option{-icanon} is set.
@c 
@option{-icanon}¤¬ÀßÄê¤µ¤ì¤Æ¤¤¤ë¤È¤­¡¤À©¸Â¤µ¤ì¤Æ¤¤¤ë»þ´ÖÃÍ¤Þ¤Ç¤Ë°ÂÁ´¤ËÆÉ
¤ß¹þ¤àÊ¸»ú¤ÎºÇ¾®¿ô¤òÀßÄê¤·¤Þ¤¹¡¥

@item time @var{n}
@opindex time
@c Set the number of tenths of a second before reads time out if the minimum
@c number of characters have not been read, when @option{-icanon} is set.
@c 
@option{-icanon}¤¬ÀßÄê¤µ¤ì¤Æ¤¤¤ë¤È¤­¡¤Ê¸»ú¤ÎºÇ¾®¿ô¤¬ÆÉ¤ß¹þ¤Þ¤ì¤Æ¤¤¤Ê¤¤¾ì
¹ç¡¤ÆÉ¤ß¹þ¤ß»þ´ÖÀÚ¤ì¤Þ¤Ç¤Î10ÉÃÃ±°Ì¤Î¿ô»ú¤òÀßÄê¤·¤Þ¤¹¡¥

@item ispeed @var{n}
@opindex ispeed
@c Set the input speed to @var{n}.
@c 
ÆþÎÏÂ®ÅÙ¤ò@var{n}¤ËÀßÄê¤·¤Þ¤¹¡¥

@item ospeed @var{n}
@opindex ospeed
@c Set the output speed to @var{n}.
@c 
½ÐÎÏÂ®ÅÙ¤ò@var{n}¤ËÀßÄê¤·¤Þ¤¹¡¥

@item rows @var{n}
@opindex rows
@c Tell the tty kernel driver that the terminal has @var{n} rows.  Non-@acronym{POSIX}.
@c 
tty¥«¡¼¥Í¥ë¥É¥é¥¤¥Ð¤ËÃ¼Ëö¤Î¹Ô¿ô@var{n}¤òÅÁ¤¨¤Þ¤¹¡¥Èó@acronym{POSIX}¤Ç¤¹¡¥

@item cols @var{n}
@itemx columns @var{n}
@opindex cols
@opindex columns
@c Tell the kernel that the terminal has @var{n} columns.  Non-@acronym{POSIX}.
@c 
¥«¡¼¥Í¥ë¤ËÃ¼Ëö¤ÎÎó¿ô@var{n}¤òÅÁ¤¨¤Þ¤¹¡¥Èó@acronym{POSIX}¤Ç¤¹¡¥

@item size
@opindex size
@vindex LINES
@vindex COLUMNS
@c Print the number of rows and columns that the kernel thinks the
@c terminal has.  (Systems that don't support rows and columns in the kernel
@c typically use the environment variables @env{LINES} and @env{COLUMNS}
@c instead; however, GNU @command{stty} does not know anything about them.)
@c Non-@acronym{POSIX}.
@c 
Ã¼Ëö¤¬»ý¤Ã¤Æ¤¤¤ë¤È¥«¡¼¥Í¥ë¤¬ÁÛÁü¤¹¤ë¡¤Îó¤È¹Ô¤Î¿ô¤òÉ½¼¨¤·¤Þ¤¹¡¥(¥«¡¼¥Í
¥ë¤Ç¹Ô¤ÈÎó¤ò¥µ¥Ý¡¼¥È¤·¤Ê¤¤¥·¥¹¥Æ¥à¤Ç¤Ï¡¤ÆÃ¤Ë´Ä¶­ÊÑ¿ô@env{LINES}¤È
@env{COLUMNS}¤¬Âå¤ï¤ê¤Ë»ÈÍÑ¤µ¤ì¤Þ¤¹¡¥¤·¤«¤·¡¤GNU @command{stty}¤Ï¤½¤ì
¤Ë¤Ä¤¤¤Æ²¿¤âÃÎ¤ê¤Þ¤»¤ó¡¥)Èó@acronym{POSIX}¤Ç¤¹¡¥

@item line @var{n}
@opindex line
@c Use line discipline @var{n}.  Non-@acronym{POSIX}.
@c 
²óÀþÀ©¸æ@var{n}¤ò»ÈÍÑ¤·¤Þ¤¹¡¥Èó@acronym{POSIX}¤Ç¤¹¡¥

@item speed
@opindex speed
@c Print the terminal speed.
@c 
Ã¼Ëö¤ÎÂ®ÅÙ¤ò½ÐÎÏ¤·¤Þ¤¹¡¥

@item @var{n}
@cindex baud rate, setting
@c FIXME: Is this still true that the baud rate can't be set
@c higher than 38400?
@c 
@c Set the input and output speeds to @var{n}.  @var{n} can be one
@c of: 0 50 75 110 134 134.5 150 200 300 600 1200 1800 2400 4800 9600
@c 19200 38400 @code{exta} @code{extb}.  @code{exta} is the same as
@c 19200; @code{extb} is the same as 38400.  0 hangs up the line if
@c @option{-clocal} is set.
@c 
Æþ½ÐÎÏ¤ÎÂ®ÅÙ¤ò@var{n}¤ËÀßÄê¤·¤Þ¤¹¡¥@var{n}¤Ï¡¤°Ê²¼¤Î°ì¤Ä¤Ë¤Ê¤ê¤Þ¤¹¡¥0
50 75 110 134 134.5 150 200 300 600 1200 1800 2400 4800 9600 19200
38400 @code{exta} @code{extb}¤Ç¤¹¡¥@code{exta}¤Ï19200¤ÈÆ±¤¸¤Ç¤¹¡¥
@code{extb}¤Ï38400¤ÈÆ±¤¸¤Ç¤¹¡¥@option{-clocal}¤¬ÀßÄê¤µ¤ì¤Æ¤¤¤ë¾ì¹ç¡¤0¤Ï
²óÀþ¤òÀÚÃÇ¤·¤Þ¤¹¡¥
@end table


@node printenv invocation
@c @section @command{printenv}: Print all or some environment variables
@section @command{printenv}: ¤¹¤Ù¤Æ¤Þ¤¿¤Ï¤¤¤¯¤Ä¤«¤Î´Ä¶­ÊÑ¿ô¤ò½ÐÎÏ

@pindex printenv
@cindex printing all or some environment variables
@cindex environment variables, printing

@c @command{printenv} prints environment variable values.  Synopsis:
@c 
@command{printenv}¤Ï¡¤´Ä¶­ÊÑ¿ô¤ÎÃÍ¤ò½ÐÎÏ¤·¤Þ¤¹¡¥³µÍ×¤Ç¤¹¡¥

@example
printenv [@var{option}] [@var{variable}]@dots{}
@end example

@c If no @var{variable}s are specified, @command{printenv} prints the value of
@c every environment variable.  Otherwise, it prints the value of each
@c @var{variable} that is set, and nothing for those that are not set.
@c 
°ú¿ô¤¬»ØÄê¤µ¤ì¤Æ¤¤¤Ê¤¤¾ì¹ç¡¤@command{printenv}¤Ï¤¹¤Ù¤Æ¤Î´Ä¶­ÊÑ¿ô¤ÎÃÍ¤ò
½ÐÎÏ¤·¤Þ¤¹¡¥¤½¤ì°Ê³°¤Î¾ì¹ç¡¤¤½¤ì¤Ï¡¤¤½¤ì¤¾¤ì¤ÎÀßÄê¤µ¤ì¤Æ¤¤¤ë
@var{variable}¤ÎÃÍ¤ò½ÐÎÏ¤·¡¤ÀßÄê¤µ¤ì¤Æ¤¤¤Ê¤¤¤â¤Î¤Ë¤Ï²¿¤â¤·¤Þ¤»¤ó¡¥

@c The only options are a lone @option{--help} or @option{--version}.
@c @xref{Common options}.
@c 
¥ª¥×¥·¥ç¥ó¤Ï¡¤Ã±ÆÈ¤Î@option{--help}¤Þ¤¿¤Ï@option{--version}¤À¤±¤Ç¤¹¡¥
@xref{Common options}.

@cindex exit status of @command{printenv}
@c Exit status:
@c 
½ªÎ»¥¹¥Æ¡¼¥¿¥¹¡¥

@display
@c 0 if all variables specified were found
@c 1 if at least one specified variable was not found
@c 2 if a write error occurred
@c 
0 ¤¹¤Ù¤Æ¤Î»ØÄê¤µ¤ì¤¿ÊÑ¿ô¤¬¸«¤Ä¤«¤Ã¤¿¾ì¹ç¡¥
1 »ØÄê¤µ¤ì¤¿ÊÑ¿ô¤Î¾¯¤Ê¤¯¤È¤â°ì¤Ä¤¬¸«¤Ä¤«¤Ã¤¿¾ì¹ç¡¥
2 ½ñ¤­¹þ¤ß¥¨¥é¡¼¤¬È¯À¸¤·¤¿¾ì¹ç¡¥
@end display


@node tty invocation
@c @section @command{tty}: Print file name of terminal on standard input
@section @command{tty}: É¸½àÆþÎÏ¤Ë¤Ä¤Ê¤¬¤Ã¤Æ¤¤¤ëÃ¼Ëö¤Î¥Õ¥¡¥¤¥ëÌ¾¤ò½ÐÎÏ

@pindex tty
@cindex print terminal file name
@cindex terminal file name, printing

@c @command{tty} prints the file name of the terminal connected to its standard
@c input.  It prints @samp{not a tty} if standard input is not a terminal.
@c Synopsis:
@c 
@command{tty}¤Ï¡¤É¸½àÆþÎÏ¤¬ÀÜÂ³¤·¤Æ¤¢¤ëÃ¼Ëö¤Î¥Õ¥¡¥¤¥ëÌ¾¤ò½ÐÎÏ¤·¤Þ¤¹¡¥
É¸½àÆþÎÏ¤¬Ã¼Ëö¤Ç¤Ê¤¤¾ì¹ç¡¤¤½¤ì¤Ï¡¤@samp{not a tty}¤ò½ÐÎÏ¤·¤Þ¤¹¡¥³µÍ×¤Ç
¤¹¡¥

@example
tty [@var{option}]@dots{}
@end example

@c The program accepts the following option.  Also see @ref{Common options}.
@c 
¥×¥í¥°¥é¥à¤Ï°Ê²¼¤Î¥ª¥×¥·¥ç¥ó¤â¼õ¤±Æþ¤ì¤Þ¤¹¡¥@ref{Common options}¤â»²¾È
¤·¤Æ¤¯¤À¤µ¤¤¡¥

@table @samp

@item -s
@itemx --silent
@itemx --quiet
@opindex -s
@opindex --silent
@opindex --quiet
@c Print nothing; only return an exit status.
@c 
²¿¤â½ÐÎÏ¤·¤Þ¤»¤ó¡¥½ªÎ»¥¹¥Æ¡¼¥¿¥¹¤òÊÖ¤¹¤À¤±¤Ç¤¹¡¥

@end table

@cindex exit status of @command{tty}
@c Exit status:
@c 
@command{tty}¤Î½ªÎ»¥¹¥Æ¡¼¥¿¥¹¤Ç¤¹¡¥

@display
@c 0 if standard input is a terminal
@c 1 if standard input is not a terminal
@c 2 if given incorrect arguments
@c 3 if a write error occurs
@c 
0 É¸½àÆþÎÏ¤¬Ã¼Ëö¤Î¾ì¹ç¡¥
1 É¸½àÆþÎÏ¤¬Ã¼Ëö¤Ç¤Ê¤¤¾ì¹ç¡¥
2 ÉÔÀµ¤Ê°ú¿ô¤¬Í¿¤¨¤é¤ì¤¿¾ì¹ç¡¥
3 ½ñ¤­¹þ¤ß¥¨¥é¡¼¤¬È¯À¸¤·¤¿¾ì¹ç¡¥
@end display


@node User information
@c @chapter User information
@chapter ¥æ¡¼¥¶¾ðÊó

@cindex user information, commands for
@cindex commands for printing user information

@c This section describes commands that print user-related information:
@c logins, groups, and so forth.
@c 
¤³¤Î¥»¥¯¥·¥ç¥ó¤Ï¡¤¥æ¡¼¥¶¤Ë´ØÏ¢¤¹¤ë¾ðÊó¤ò½ÐÎÏ¤¹¤ë¥³¥Þ¥ó¥É¤òµ­½Ò¤·¤Þ¤¹¡¥
login¡¤¥°¥ë¡¼¥×¡¤¤½¤ÎÂ¾¤Ç¤¹¡¥

@menu
* id invocation::               Print real and effective uid and gid.
* logname invocation::          Print current login name.
* whoami invocation::           Print effective user id.
* groups invocation::           Print group names a user is in.
* users invocation::            Print login names of users currently logged in.
* who invocation::              Print who is currently logged in.
@end menu


@node id invocation
@c @section @command{id}: Print real and effective uid and gid
@section @command{id}: ¼ÂºÝ¤È¼Â¸ú¤Îuid¤Ègid¤ò½ÐÎÏ

@pindex id
@cindex real uid and gid, printing
@cindex effective uid and gid, printing
@cindex printing real and effective uid and gid

@c @command{id} prints information about the given user, or the process
@c running it if no user is specified.  Synopsis:
@c 
@command{id}¤Ï¡¤Í¿¤¨¤é¤ì¤¿¥æ¡¼¥¶¤ä¡¤¥æ¡¼¥¶¤¬»ØÄê¤µ¤ì¤Æ¤¤¤Ê¤¤¾ì¹ç¤Ï¤½¤ì
¤ò¼Â¹Ô¤·¤Æ¤¤¤ë¥×¥í¥»¥¹¤Î¾ðÊó¤ò½ÐÎÏ¤·¤Þ¤¹¡¥³µÍ×¤Ç¤¹¡¥

@example
id [@var{option}]@dots{} [@var{username}]
@end example

@c By default, it prints the real user id, real group id, effective user id
@c if different from the real user id, effective group id if different from
@c the real group id, and supplemental group ids.
@c 
¥Ç¥Õ¥©¥ë¥È¤Ç¡¤¤½¤ì¤Ï¼ÂºÝ¤Î¥æ¡¼¥¶id¡¤¼ÂºÝ¤Î¥°¥ë¡¼¥×id¡¤¼ÂºÝ¤Î¥æ¡¼¥¶id¤È
°Û¤Ê¤ë¾ì¹ç¤Ï¼Â¸ú¥æ¡¼¥¶id¡¤¼ÂºÝ¤Î¥°¥ë¡¼¥×id¤È°Û¤Ê¤ë¾ì¹ç¤Ï¼Â¸ú¥°¥ë¡¼¥×id¡¤
¤½¤·¤Æ¡¤ÄÉ²Ã¤Î¥°¥ë¡¼¥×id¤ò½ÐÎÏ¤·¤Þ¤¹¡¥

@c Each of these numeric values is preceded by an identifying string and
@c followed by the corresponding user or group name in parentheses.
@c 
¤½¤ì¤¾¤ì¤Î¤³¤ì¤é¤Î¿ôÃÍ¤Ï¡¤¼±ÊÌÊ¸»ú¤¬Á°ÃÖ¤µ¤ì¡¤¥«¥Ã¥³Æâ¤ËÂÐ±þ¤¹¤ë¥æ¡¼¥¶
¤ä¥°¥ë¡¼¥×Ì¾¤¬Â³¤­¤Þ¤¹¡¥

@c The options cause @command{id} to print only part of the above information.
@c Also see @ref{Common options}.
@c 
¥ª¥×¥·¥ç¥ó¤Ç¡¤@command{id}¤Ï¡¤¾åµ­¤Î¾ðÊó¤Î°ìÉô¤Î¤ß¤ò½ÐÎÏ¤·¤Þ¤¹¡¥
@ref{Common options}¤â»²¾È¤·¤Æ¤¯¤À¤µ¤¤¡¥

@table @samp
@item -g
@itemx --group
@opindex -g
@opindex --group
@c Print only the group id.
@c 
¥°¥ë¡¼¥×id¤Î¤ß½ÐÎÏ¤·¤Þ¤¹¡¥

@item -G
@itemx --groups
@opindex -G
@opindex --groups
@c Print only the supplementary groups.
@c 
ÄÉ²Ã¤Î¥°¥ë¡¼¥×¤Î¤ß½ÐÎÏ¤·¤Þ¤¹¡¥

@item -n
@itemx --name
@opindex -n
@opindex --name
@c Print the user or group name instead of the ID number.  Requires
@c @option{-u}, @option{-g}, or @option{-G}.
@c 
IDÈÖ¹æ¤ÎÂå¤ï¤ê¤Ë¥æ¡¼¥¶¤ä¥°¥ë¡¼¥×¤ÎÌ¾Á°¤ò½ÐÎÏ¤·¤Þ¤¹¡¥@option{-u}¡¤@option{-g}¡¤
¤Þ¤¿¤Ï@option{-G}¤¬É¬Í×¤Ç¤¹¡¥

@item -r
@itemx --real
@opindex -r
@opindex --real
@c Print the real, instead of effective, user or group id.  Requires
@c @option{-u}, @option{-g}, or @option{-G}.
@c 
¼Â¸ú¤ÎÂå¤ï¤ê¤Ë¡¤¼ÂºÝ¤Î¥æ¡¼¥¶¤ä¥°¥ë¡¼¥×¤Îid¤ò½ÐÎÏ¤·¤Þ¤¹¡¥@option{-u}¡¤
@option{-g}¡¤¤Þ¤¿¤Ï@option{-G}¤¬É¬Í×¤Ç¤¹¡¥

@item -u
@itemx --user
@opindex -u
@opindex --user
@c Print only the user id.
@c 
¥æ¡¼¥¶id¤Î¤ß½ÐÎÏ¤·¤Þ¤¹¡¥

@end table

@exitstatus


@node logname invocation
@c @section @command{logname}: Print current login name
@section @command{logname}: ¸½ºß¤Î¥í¥°¥¤¥óÌ¾¤ò½ÐÎÏ

@pindex logname
@cindex printing user's login name
@cindex login name, printing
@cindex user name, printing

@flindex /etc/utmp
@flindex utmp

@c @command{logname} prints the calling user's name, as found in the file
@c @file{/etc/utmp}, and exits with a status of 0.  If there is no
@c @file{/etc/utmp} entry for the calling process, @command{logname} prints
@c an error message and exits with a status of 1.
@c 
@command{logname}¤Ï¡¤¥Õ¥¡¥¤¥ë@file{/etc/utmp}¤Ë¸«¤Ä¤«¤ë¡¤¸Æ¤Ó½Ð¤·¤Æ¤¤
¤ë¥æ¡¼¥¶Ì¾¤ò½ÐÎÏ¤·¡¤0¤Î¥¹¥Æ¡¼¥¿¥¹¤Ç½ªÎ»¤·¤Þ¤¹¡¥¸Æ¤Ó½Ð¤·¤Æ¤¤¤ë¥×¥í¥»¥¹
¤ËÂÐ¤¹¤ë@file{/etc/utmp}¹àÌÜ¤¬¤Ê¤¤¾ì¹ç¡¤@command{logname}¤Ï¥¨¥é¡¼¥á¥Ã
¥»¡¼¥¸¤ò½ÐÎÏ¤·¡¤1¤Î¥¹¥Æ¡¼¥¿¥¹¤Ç½ªÎ»¤·¤Þ¤¹¡¥

@c The only options are @option{--help} and @option{--version}.  @xref{Common
@c options}.
@c 
¥ª¥×¥·¥ç¥ó¤Ï@option{--help}¤È@option{--version}¤Î¤ß¤Ç¤¹¡¥@xref{Common
options}.

@exitstatus


@node whoami invocation
@c @section @command{whoami}: Print effective user id
@section @command{whoami}: ¼Â¸ú¥æ¡¼¥¶id¤Î½ÐÎÏ

@pindex whoami
@cindex effective UID, printing
@cindex printing the effective UID

@c @command{whoami} prints the user name associated with the current
@c effective user id.  It is equivalent to the command @samp{id -un}.
@c 
@command{whoami}¤Ï¡¤¸½ºß¤Î¼Â¸ú¥æ¡¼¥¶id¤Ë´ØÏ¢¤·¤Æ¤¤¤ë¥æ¡¼¥¶Ì¾¤ò½ÐÎÏ¤·¤Þ
¤¹¡¥¥³¥Þ¥ó¥É@samp{id -un}¤ÈÆ±¤¸¤Ç¤¹¡¥

@c The only options are @option{--help} and @option{--version}.  @xref{Common
@c options}.
@c 
¥ª¥×¥·¥ç¥ó¤Ï@option{--help}¤È@option{--version}¤Î¤ß¤Ç¤¹¡¥@xref{Common
options}.

@exitstatus


@node groups invocation
@c @section @command{groups}: Print group names a user is in
@section @command{groups}: ¥æ¡¼¥¶¤¬½êÂ°¤¹¤ë¥°¥ë¡¼¥×Ì¾¤ò½ÐÎÏ

@pindex groups
@cindex printing groups a user is in
@cindex supplementary groups, printing

@c @command{groups} prints the names of the primary and any supplementary
@c groups for each given @var{username}, or the current process if no names
@c are given.  If names are given, the name of each user is printed before
@c the list of that user's groups.  Synopsis:
@c 
@command{groups}¤Ï¡¤Í¿¤¨¤é¤ì¤¿¤½¤ì¤¾¤ì¤Î@var{username}¡¤¤Þ¤¿¤Ï¡¤Ì¾Á°¤¬
Í¿¤¨¤é¤ì¤Ê¤¤¾ì¹ç¤Ï¸½ºß¤Î¥×¥í¥»¥¹¤ËÂÐ¤¹¤ë¡¤¥×¥é¥¤¥Þ¥ê¤ÈÄÉ²Ã¤Î¥°¥ë¡¼¥×Ì¾
¤ò½ÐÎÏ¤·¤Þ¤¹¡¥Ì¾Á°¤¬Í¿¤¨¤é¤ì¤¿¾ì¹ç¤Ï¡¤¤½¤ì¤¾¤ì¤Î¥æ¡¼¥¶Ì¾¤¬¡¤¥æ¡¼¥¶¤Î¥°
¥ë¡¼¥×¤Î¥ê¥¹¥È¤ÎÁ°¤Ë½ÐÎÏ¤µ¤ì¤Þ¤¹¡¥³µÍ×¤Ç¤¹¡¥

@example
groups [@var{username}]@dots{}
@end example

@c The group lists are equivalent to the output of the command @samp{id -Gn}.
@c 
¥°¥ë¡¼¥×¥ê¥¹¥È¤Ï¡¤¥³¥Þ¥ó¥É@samp{id -Gn}¤Î½ÐÎÏ¤ÈÆ±¤¸¤Ç¤¹¡¥

@c The only options are @option{--help} and @option{--version}.  @xref{Common
@c options}.
@c 
¥ª¥×¥·¥ç¥ó¤Ï@option{--help}¤È@option{--version}¤Î¤ß¤Ç¤¹¡¥@xref{Common
options}.

@exitstatus


@node users invocation
@c @section @command{users}: Print login names of users currently logged in
@section @command{users}: ¸½ºß¥í¥°¥¤¥ó¤·¤Æ¤¤¤ë¥æ¡¼¥¶¤Î¥í¥°¥¤¥óÌ¾¤ò½ÐÎÏ

@pindex users
@cindex printing current usernames
@cindex usernames, printing current

@cindex login sessions, printing users with
@c @command{users} prints on a single line a blank-separated list of user
@c names of users currently logged in to the current host.  Each user name
@c corresponds to a login session, so if a user has more than one login
@c session, that user's name will appear the same number of times in the
@c output. Synopsis:
@c 
@command{users}¤Ï¡¤¸½ºß¤Î¥Û¥¹¥È¤Ë¸½ºß¥í¥°¥¤¥ó¤·¤Æ¤¤¤ë¥æ¡¼¥¶¤Î¡¤¶õÇò¤Ç
Ê¬¤±¤é¤ì¤¿¥æ¡¼¥¶Ì¾¤Î¥ê¥¹¥È¤ò¡¤Ã±°ì¹Ô¤Ë½ÐÎÏ¤·¤Þ¤¹¡¥¤½¤ì¤¾¤ì¤Î¥æ¡¼¥¶Ì¾¤Ï
¥í¥°¥¤¥ó¥»¥Ã¥·¥ç¥ó¤ËÂÐ±þ¤¹¤ë¤Î¤Ç¡¤°ì²ó°Ê¾å¤Î¥í¥°¥¤¥ó¥»¥Ã¥·¥ç¥ó¤¬¤¢¤ë¥æ¡¼
¥¶¤Ï¡¤¥æ¡¼¥¶Ì¾¤¬²ó¿ô¤ÈÆ±¤¸¿ô¤À¤±½ÐÎÏ¤Ë¤¢¤é¤ï¤ì¤Þ¤¹¡¥³µÍ×¤Ç¤¹¡¥

@example
users [@var{file}]
@end example

@flindex /etc/utmp
@flindex /etc/wtmp
@c With no @var{file} argument, @command{users} extracts its information from
@c the file @file{/etc/utmp}.  If a file argument is given, @command{users}
@c uses that file instead.  A common choice is @file{/etc/wtmp}.
@c 
@var{file}°ú¿ô¤¬¤Ê¤¤¾ì¹ç¤Ï¡¤@command{users}¤Ï¡¤¤½¤Î¾ðÊó¤ò¥Õ¥¡¥¤¥ë
@file{/etc/utmp}¤«¤é¡¤Ãê½Ð¤·¤Þ¤¹¡¥¥Õ¥¡¥¤¥ë°ú¿ô¤¬Í¿¤¨¤é¤ì¤¿¾ì¹ç¤Ï¡¤
@command{users}¤Ï¡¤Âå¤ï¤ê¤Ë¤½¤Î¥Õ¥¡¥¤¥ë¤ò»ÈÍÑ¤·¤Þ¤¹¡¥ÉáÄÌ¤Ï¡¤
@file{/etc/wtmp}¤òÁªÂò¤·¤Þ¤¹¡¥

@c The only options are @option{--help} and @option{--version}.  @xref{Common
@c options}.
@c 
¥ª¥×¥·¥ç¥ó¤Ï@option{--help}¤È@option{--version}¤À¤±¤Ç¤¹¡¥@xref{Common
options}.

@exitstatus


@node who invocation
@c @section @command{who}: Print who is currently logged in
@section @command{who}: ¸½ºß¥í¥°¥¤¥ó¤·¤Æ¤¤¤ë¥æ¡¼¥¶¤ò½ÐÎÏ

@pindex who
@cindex printing current user information
@cindex information, about current users

@c @command{who} prints information about users who are currently logged on.
@c Synopsis:
@c 
@command{who}¤Ï¡¤¸½ºß¥í¥°¥ª¥ó¤·¤Æ¤¤¤ë¥æ¡¼¥¶¤Î¾ðÊó¤ò½ÐÎÏ¤·¤Þ¤¹¡¥³µÍ×¤Ç
¤¹¡¥

@example
@command{who} [@var{option}] [@var{file}] [am i]
@end example

@cindex terminal lines, currently used
@cindex login time
@cindex remote hostname
@c If given no non-option arguments, @command{who} prints the following
@c information for each user currently logged on: login name, terminal
@c line, login time, and remote hostname or X display.
@c 
Èó¥ª¥×¥·¥ç¥ó°ú¿ô¤¬Í¿¤¨¤é¤ì¤Æ¤¤¤Ê¤¤¾ì¹ç¡¤@command{who}¤Ï¡¤¸½ºß¥í¥°¥ª¥ó
¤·¤Æ¤¤¤ë¤½¤ì¤¾¤ì¤Î¥æ¡¼¥¶¤ËÂÐ¤·¡¤°Ê²¼¤Î¾ðÊó¤ò½ÐÎÏ¤·¤Þ¤¹¡¥¥í¥°¥¤¥óÌ¾¡¤Ã¼
Ëö²óÀþ¡¤¥í¥°¥¤¥ó»þ´Ö¡¤¤½¤·¤Æ¡¤¥ê¥â¡¼¥È¥Û¥¹¥ÈÌ¾¤äX¥Ç¥£¥¹¥×¥ì¥¤¤Ç¤¹¡¥

@flindex /etc/utmp
@flindex /etc/wtmp
@c If given one non-option argument, @command{who} uses that instead of
@c @file{/etc/utmp} as the name of the file containing the record of
@c users logged on.  @file{/etc/wtmp} is commonly given as an argument
@c to @command{who} to look at who has previously logged on.
@c 
Èó¥ª¥×¥·¥ç¥ó°ú¿ô¤¬°ì¤ÄÍ¿¤¨¤é¤ì¤Æ¤¤¤ë¾ì¹ç¡¤@command{who}¤Ï¡¤
@file{/etc/utmp} ¤ÎÂå¤ï¤ê¤Ë¡¤¤½¤ì¤ò¥í¥°¥ª¥ó¤·¤Æ¤¤¤ë¥æ¡¼¥¶¤Îµ­Ï¿¤ò´Þ¤à
¥Õ¥¡¥¤¥ëÌ¾¤È¤·¤Æ»ÈÍÑ¤·¤Þ¤¹¡¥ÄÌ¾ï¡¤°ÊÁ°¥í¥°¥¤¥ó¤·¤Æ¤¤¤¿¿Í¤ò¸«¤ë¤¿¤á¤Ë¡¤
@file{/etc/wtmp}¤¬°ú¿ô¤È¤·¤ÆÍ¿¤¨¤é¤ì¤Þ¤¹¡¥

@opindex am i
@opindex who am i
@c If given two non-option arguments, @command{who} prints only the entry
@c for the user running it (determined from its standard input), preceded
@c by the hostname.  Traditionally, the two arguments given are @samp{am
@c i}, as in @samp{who am i}.
@c 
Èó¥ª¥×¥·¥ç¥ó¤¬Æó¤ÄÍ¿¤¨¤é¤ì¤Æ¤¤¤ë¾ì¹ç¡¤@command{who}¤Ï¡¤(É¸½àÆþÎÏ¤«¤é·è
Äê¤µ¤ì¤ë)¤½¤ì¤ò¼Â¹Ô¤·¤Æ¤¤¤ë¥æ¡¼¥¶¤Î¹àÌÜ¤Î¤ß½ÐÎÏ¤·¡¤¤½¤ì¤Ë¤Ï¥Û¥¹¥ÈÌ¾¤¬
Á°ÃÖ¤µ¤ì¤Þ¤¹¡¥ÅÁÅýÅª¤Ë¡¤Æó¤Ä¤ÎÍ¿¤¨¤é¤ì¤ë°ú¿ô¤Ï¡¤@samp{am i}¤Ç¡¤
@samp{who am i}¤È¤Ê¤ê¤Þ¤¹¡¥

@c The program accepts the following options.  Also see @ref{Common options}.
@c 
¥×¥í¥°¥é¥à¤Ï°Ê²¼¤Î¥ª¥×¥·¥ç¥ó¤â¼õ¤±Æþ¤ì¤Þ¤¹¡¥@ref{Common options}¤â»²¾È
¤·¤Æ¤¯¤À¤µ¤¤¡¥

@table @samp

@item -a
@itemx --all
@opindex -a
@opindex --all
@c Same as @samp{-b -d --login -p -r -t -T -u}.
@c 
@samp{-b -d --login -p -r -t -T -u}¤ÈÆ±¤¸¤Ç¤¹¡¥

@item -b
@itemx --boot
@opindex -b
@opindex --boot
@c Print the date and time of last system boot.
@c 
Á°²ó¥·¥¹¥Æ¥à¤¬µ¯Æ°¤·¤¿Æü»þ¤ò½ÐÎÏ¤·¤Þ¤¹¡¥

@item -d
@itemx --dead
@opindex -d
@opindex --dead
@c Print information corresponding to dead processes.
@c 
»à¤ó¤À¥×¥í¥»¥¹¤ËÂÐ±þ¤¹¤ë¾ðÊó¤ò½ÐÎÏ¤·¤Þ¤¹¡¥

@item -H
@itemx --heading
@opindex -H
@opindex --heading
@c Print column headings.
@c 
Îó¤Î¸«½Ð¤·¤ò½ÐÎÏ¤·¤Þ¤¹¡¥

@item -i
@itemx --idle
@opindex -i
@opindex --idle
@c Include idle time in HOURS:MINUTES, @samp{.} (to indicate
@c current process), or @samp{old}.
@c 
¥¢¥¤¥É¥ë»þ´Ö¤ÎHOURS:MINUTES¤Î·Á¼°¡¤@samp{.} (¸½ºß¤Î¥×¥í¥»¥¹¤ò¼¨¤¹)¡¤¤Þ
¤¿¤Ï@samp{old}¤ò´Þ¤á¤Þ¤¹¡¥

@item -m
@opindex -m
@c Same as @samp{who am i}.
@c 
@samp{who am i}¤ÈÆ±¤¸¤Ç¤¹¡¥

@item -q
@itemx --count
@opindex -q
@opindex --count
@c Print only the login names and the number of users logged on.
@c Overrides all other options.
@c 
¥í¥°¥¤¥óÌ¾¤È¡¤¥í¥°¥ª¥ó¤·¤Æ¤¤¤ë¥æ¡¼¥¶¤Î¿ô¤Î¤ß¤ò½ÐÎÏ¤·¤Þ¤¹¡¥Â¾¤Î¤¹¤Ù¤Æ¤Î
¥ª¥×¥·¥ç¥ó¤ËÍ¥Àè¤·¤Þ¤¹¡¥

@item -s
@opindex -s
@c Ignored; for compatibility with other versions of @command{who}.
@c 
Ìµ»ë¤·¤Þ¤¹¡¥Â¾¤Î¥Ð¡¼¥¸¥ç¥ó¤Î@command{who}¤È¤Î¸ß´¹À­¤Î¤¿¤á¤Ç¤¹¡¥

@item -i
@itemx -u
@itemx --idle
@opindex -i
@opindex -u
@opindex --idle
@cindex idle time
@c After the login time, print the number of hours and minutes that the
@c user has been idle.  @samp{.} means the user was active in last minute.
@c @samp{old} means the user was idle for more than 24 hours.
@c 
¥í¥°¥¤¥ó»þ´Ö¸å¡¤¥æ¡¼¥¶¤¬¥¢¥¤¥É¥ë¾õÂÖ¤Î»þ´Ö¤ÈÊ¬¤Î¿ô¤ò½ÐÎÏ¤·¤Þ¤¹¡¥
@samp{.}  ¤Ï¡¤¥æ¡¼¥¶¤¬¤³¤Î°ìÊ¬´Ö¤Î´Ö¤Ë¥¢¥¯¥Æ¥£¥Ö¤À¤Ã¤¿¤È¤¤¤¦¤³¤È¤ò°ÕÌ£
¤·¤Þ¤¹¡¥@samp{old}¤Ï¡¤¥æ¡¼¥¶¤¬24»þ´Ö°Ê¾å¥¢¥¤¥É¥ë¾õÂÖ¤À¤È¤¤¤¦¤³¤È¤ò°ÕÌ£
¤·¤Þ¤¹¡¥

@item -l
@itemx --login
@opindex -l
@opindex --login
@c List only the entries that correspond to processes via which the
@c system is waiting for a user to login.  The user name is always @samp{LOGIN}.
@c 
¥æ¡¼¥¶¤Î¥í¥°¥¤¥ó¤òÂÔ¤Ã¤Æ¤¤¤ë¥·¥¹¥Æ¥à¤Î¥×¥í¥»¥¹¤ËÂÐ±þ¤¹¤ë¹àÌÜ¤À¤±¤ò¥ê¥¹
¥È¥¢¥Ã¥×¤·¤Þ¤¹¡¥¥æ¡¼¥¶Ì¾¤Ï¾ï¤Ë@samp{LOGIN}¤Ë¤Ê¤ê¤Þ¤¹¡¥

@itemx --lookup
@opindex --lookup
@c Attempt to canonicalize hostnames found in utmp through a DNS lookup.  This
@c is not the default because it can cause significant delays on systems with
@c automatic dial-up internet access.
@c 
DNS¥ë¥Ã¥¯¥¢¥Ã¥×¤òÄÌ¤¸¤Æ¡¤utmp¤Ç¸«¤Ä¤«¤ë¥Û¥¹¥ÈÌ¾¤ÎÉ¸½à²½¤ò»î¤ß¤Þ¤¹¡¥¤³
¤ì¤Ï¡¤¼«Æ°¥À¥¤¥¢¥ë¥¢¥Ã¥×¥¤¥ó¥¿¡¼¥Í¥Ã¥È¥¢¥¯¥»¥¹¤òÍÑ¤¤¤¿¥·¥¹¥Æ¥à¤Ç¡¤½ÅÂç
¤ÊÃÙ±ä¤ò°ú¤­µ¯¤³¤¹¤¿¤á¡¤¥Ç¥Õ¥©¥ë¥È¤Ç¤Ï¤¢¤ê¤Þ¤»¤ó¡¥

@item -H
@itemx --heading
@opindex -H
@opindex --heading
@c Print a line of column headings.
@c 
Îó¤Î¸«½Ð¤·¤ò½ÐÎÏ¤·¤Þ¤¹¡¥

@item -w
@itemx -T
@itemx --mesg
@itemx --message
@itemx --writable
@opindex -w
@opindex -T
@opindex --mesg
@opindex --message
@opindex --writable
@cindex message status
@pindex write@r{, allowed}
@c After each login name print a character indicating the user's message status:
@c 
¤½¤ì¤¾¤ì¤Î¥í¥°¥¤¥óÌ¾¤Î¸å¤Ë¡¤¥æ¡¼¥¶¤Î¥á¥Ã¥»¡¼¥¸¥¹¥Æ¡¼¥¿¥¹¤ò¼¨¤¹Ê¸»ú¤ò½Ð
ÎÏ¤·¤Þ¤¹¡¥

@display
@c @samp{+} allowing @code{write} messages
@c @samp{-} disallowing @code{write} messages
@c @samp{?} cannot find terminal device
@c 
@samp{+} @code{write}¥á¥Ã¥»¡¼¥¸¤¬ÍøÍÑ²ÄÇ½¤Ç¤¹¡¥
@samp{-} @code{write}¥á¥Ã¥»¡¼¥¸¤¬ÍøÍÑÉÔ²ÄÇ½¤Ç¤¹¡¥
@samp{?} Ã¼Ëö¥Ç¥Ð¥¤¥¹¤¬¸«¤Ä¤«¤ê¤Þ¤»¤ó¡¥
@end display

@end table

@exitstatus


@node System context
@c @chapter System context
@chapter ¥·¥¹¥Æ¥à¤Î¾õ¶·

@cindex system context
@cindex context, system
@cindex commands for system context

@c This section describes commands that print or change system-wide
@c information.
@c 
¤³¤Î¥»¥¯¥·¥ç¥ó¤Ï¡¤¥·¥¹¥Æ¥àÁ´ÂÎ¤Î¾ðÊó¤ò½ÐÎÏ¤Þ¤¿¤ÏÊÑ¹¹¤¹¤ë¥³¥Þ¥ó¥É¤òµ­½Ò
¤·¤Þ¤¹¡¥

@menu
* date invocation::             Print or set system date and time.
* uname invocation::            Print system information.
* hostname invocation::         Print or set system name.
* hostid invocation::           Print numeric host identifier.
@end menu


@node date invocation
@c @section @command{date}: Print or set system date and time
@section @command{date}: ¥·¥¹¥Æ¥à¤ÎÆüÉÕ¤È»þ´Ö¤ò½ÐÎÏ¤Þ¤¿¤ÏÀßÄê

@pindex date
@cindex time, printing or setting
@cindex printing the current time

@c Synopses:
@c 
³µÍ×¤Ç¤¹¡¥

@example
date [@var{option}]@dots{} [+@var{format}]
date [-u|--utc|--universal] @c this avoids a newline in the output
[ MMDDhhmm[[CC]YY][.ss] ]
@end example

@c Invoking @command{date} with no @var{format} argument is equivalent to invoking
@c @samp{date '+%a %b %e %H:%M:%S %Z %Y'}.
@c 
°ú¿ô¤òÈ¼¤ï¤Ê¤¤@command{date}¤Ï¡¤(°Ê²¼¤Çµ­½Ò¤¹¤ë)@samp{%c}»Ø¼¨¸ì¤Î½ñ¼°
¤Ç¡¤¸½ºß¤Î»þ´Ö¤ÈÆüÉÕ¤ò½ÐÎÏ¤·¤Þ¤¹¡¥

@findex strftime @r{and @command{date}}
@cindex time formats
@cindex formatting times
@c If given an argument that starts with a @samp{+}, @command{date} prints the
@c current time and date (or the time and date specified by the
@c @option{--date} option, see below) in the format defined by that argument,
@c which is the same as in the @code{strftime} function.  Except for
@c directives, which start with @samp{%}, characters in the format string
@c are printed unchanged.  The directives are described below.
@c 
@samp{+}¤Ç»Ï¤Þ¤ë°ú¿ô¤¬Í¿¤¨¤é¤ì¤¿¾ì¹ç¡¤@command{date}¤Ï¸½ºß¤Î»þ´Ö¤ÈÆüÉÕ
(¤Þ¤¿¤Ï¡¤°Ê²¼¤Ç»²¾È¤Ç¤­¤ë¡¤@option{--date}¥ª¥×¥·¥ç¥ó¤Ç»ØÄê¤µ¤ì¤¿ÆüÉÕ¤È
»þ´Ö)¤ò¡¤°ú¿ô¤ÇÄêµÁ¤µ¤ì¤¿½ñ¼°¤Ç½ÐÎÏ¤·¡¤¤½¤ì¤Ï¡¤@code{strftime}´Ø¿ô¤ÈÆ±
¤¸¤Ç¤¹¡¥@samp{%}¤Ç»Ï¤Þ¤ë»Ø¼¨¸ì°Ê³°¤Î¡¤½ñ¼°Ê¸»úÎóÆâ¤ÎÊ¸»ú¤Ï¡¤ÊÑ¹¹¤µ¤ì¤º
¤Ë½ÐÎÏ¤µ¤ì¤Þ¤¹¡¥»Ø¼¨¸ì¤Ï°Ê²¼¤Çµ­½Ò¤·¤Þ¤¹¡¥

@exitstatus

@menu
* Time directives::             %[HIklMprsSTXzZ]
* Date directives::             %[aAbBcdDhjmUwWxyY]
* Literal directives::          %[%nt]
* Padding::                     Pad with zeroes, spaces (%_), or nothing (%-).
* Setting the time::            Changing the system clock.
* Options for date::            Instead of the current time.
* Examples of date::            Examples.
@end menu

@node Time directives
@c @subsection Time directives
@subsection »þ´Ö»Ø¼¨¸ì

@cindex time directives
@cindex directives, time

@c @command{date} directives related to times.
@c 
»þ´Ö¤Ë´ØÏ¢¤¹¤ë@command{date}¤Î»Ø¼¨¸ì¤Ç¤¹¡¥

@table @samp
@item %H
@c hour (00@dots{}23)
@c 
»þ´Ö(00@dots{}23)
@item %I
@c hour (01@dots{}12)
@c 
»þ´Ö(01@dots{}12)
@item %k
@c hour ( 0@dots{}23)
@c 
»þ´Ö( 0@dots{}23)
@item %l
@c hour ( 1@dots{}12)
@c 
»þ´Ö( 1@dots{}12)
@item %M
@c minute (00@dots{}59)
@c 
Ê¬(00@dots{}59)
@item %N
@c nanoseconds (000000000@dots{}999999999)
@c 
¥Ê¥ÎÉÃ(000000000@dots{}999999999)
@item %p
@c locale's upper case @samp{AM} or @samp{PM} (blank in many locales)
@c 
¥í¥«¡¼¥ë¤ÎÂçÊ¸»ú¤Î@samp{AM}(¸áÁ°)¤Þ¤¿¤Ï@samp{PM}(¸á¸å)(Â¿¤¯¤Î¥í¥«¡¼¥ë
¤Ç¤Ï¶õÇò)
@item %P
@c locale's lower case @samp{am} or @samp{pm} (blank in many locales)
@c 
¥í¥«¡¼¥ë¤Î¾®Ê¸»ú¤Î@samp{AM}(¸áÁ°)¤Þ¤¿¤Ï@samp{PM}(¸á¸å)(Â¿¤¯¤Î¥í¥«¡¼¥ë
¤Ç¤Ï¶õÇò)
@item %r
@c time, 12-hour (hh:mm:ss [AP]M)
@c 
»þ´Ö¤Ç¡¤12»þ´Ö´ð½à(hh:mm:ss [AP]M)
@item %R
@c time, 24-hour (hh:mm).  Same as @code{%H:%M}.
@c 
»þ´Ö¤Ç¡¤24»þ´Ö´ð½à(hh:mm)¡¥@code{%H:%M}¤ÈÆ±¤¸¤Ç¤¹¡¥
@item %s
@cindex epoch, seconds since
@cindex seconds since the epoch
@cindex beginning of time
@c seconds since the epoch, i.e., 1 January 1970 00:00:00 UTC (a GNU extension).
@c For examples, @xref{%s-examples}.
@c 
¥¨¥Ý¥Ã¥¯¡¤¤¹¤Ê¤ï¤Á1970Ç¯1·î1Æü00:00:00 UTC¤«¤é¤ÎÉÃ(GNU³ÈÄ¥)¤Ç¤¹¡¥
Îã¤¨¤Ð¡¤@xref{%s-examples}.
@item %S
@c second (00@dots{}60).  The range is [00@dots{}60], and not [00@dots{}59],
@c in order to accommodate the occasional positive leap second.
@c 
ÉÃ(00@dots{}60)¡¥ÉÃ¿ô¤ÎµÞ·ã¤ÊÊÑ²½¤Ë¹ç¤ï¤»¤ë¤¿¤á¡¤ÈÏ°Ï¤Ï[00@dots{}60]¤Ç
[00@dots{}59]¤Ç¤Ï¤¢¤ê¤Þ¤»¤ó¡¥
@item %T
@c time, 24-hour (hh:mm:ss)
@c 
»þ´Ö¤Ç¡¤24»þ´Ö´ð½à(hh:mm:ss)
@item %X
@c locale's time representation (%H:%M:%S)
@c 
¥í¥«¡¼¥ë¤Î»þ´ÖÉ½¸½(%H:%M:%S)
@item %z
@c RFC-2822 style numeric time zone (e.g., -0600 or +0100), or nothing if no
@c time zone is determinable.  This value reflects the @emph{current} time
@c zone.  It isn't changed by the @option{--date} option.
@c 
RFC-2822¥¹¥¿¥¤¥ë¤Î¿ôÃÍÅª¤Ê¥¿¥¤¥à¥¾¡¼¥ó(Îã¤¨¤Ð¡¤-0600¤ä+0100)¡¤¤Þ¤¿¤Ï¡¤
¥¿¥¤¥à¥¾¡¼¥ó¤¬·èÄê¤Ç¤­¤Ê¤¤¾ì¹ç¤Ï²¿¤â¤·¤Þ¤»¤ó¡¥¤³¤ÎÃÍ¤Ï@emph{¸½ºß¤Î}¥¿
¥¤¥à¥¾¡¼¥ó¤òÈ¿±Ç¤·¤Þ¤¹¡¥¤½¤ì¤Ï¡¤@option{--date}¥ª¥×¥·¥ç¥ó¤ÇÊÑ¹¹¤µ¤ì¤Þ
¤»¤ó¡¥
@item %Z
@c time zone (e.g., EDT), or nothing if no time zone is
@c determinable.
@c Note that this value reflects the @emph{current} time zone.
@c It isn't changed by the @option{--date} option.
@c 
¥¿¥¤¥à¥¾¡¼¥ó(Îã¤¨¤Ð¡¤EDT)¡¤¤Þ¤¿¤Ï¡¤¥¿¥¤¥à¥¾¡¼¥ó¤¬·èÄê¤Ç¤­¤Ê¤¤¾ì¹ç¤Ï²¿
¤â¤·¤Þ¤»¤ó¡¥¤³¤ÎÃÍ¤Ï@emph{¸½ºß¤Î}¥¿¥¤¥à¥¾¡¼¥ó¤òÈ¿±Ç¤¹¤ë¤³¤È¤ËÃí°Õ¤·¤Æ
¤¯¤À¤µ¤¤¡¥¤½¤ì¤Ï¡¤@option{--date}¥ª¥×¥·¥ç¥ó¤ÇÊÑ¹¹¤µ¤ì¤Þ¤»¤ó¡¥
@end table


@node Date directives
@c @subsection Date directives
@subsection ÆüÉÕ»Ø¼¨¸ì

@cindex date directives
@cindex directives, date

@c @command{date} directives related to dates.
@c 
ÆüÉÕ¤Ë´ØÏ¢¤¹¤ë@command{date}»Ø¼¨¸ì¤Ç¤¹¡¥

@table @samp
@item %a
@c locale's abbreviated weekday name (Sun@dots{}Sat)
@c 
¥í¥«¡¼¥ëÎ¬µ­¤µ¤ì¤ëÍËÆü¤ÎÌ¾Á°(Sun@dots{}Sat)
@item %A
@c locale's full weekday name, variable length (Sunday@dots{}Saturday)
@c 
¥í¥«¡¼¥ë¤Î´°Á´¤Ê½µ¤ÎÍËÆü¤ÎÌ¾Á°¤Ç¡¤²ÄÊÑÄ¹(Sunday@dots{}Saturday)
@item %b
@c locale's abbreviated month name (Jan@dots{}Dec)
@c 
¥í¥«¡¼¥ë¤ÎÎ¬µ­¤µ¤ì¤ë·î¤ÎÌ¾Á°(Jan@dots{}Dec)
@item %B
@c locale's full month name, variable length (January@dots{}December)
@c 
¥í¥«¡¼¥ë¤Î´°Á´¤Ê·î¤ÎÌ¾Á°¤Ç¡¤²ÄÊÑÄ¹(January@dots{}December)
@item %c
@c locale's date and time (Sat Nov 04 12:02:33 EST 1989)
@c 
¥í¥«¡¼¥ë¤ÎÆüÉÕ¤È»þ´Ö(Sat Nov 04 12:02:33 EST 1989)
@item %C
@c century (year divided by 100 and truncated to an integer) (00@dots{}99)
@c 
À¤µª(Ç¯¤Î100Ê¬¤Î1¤ÇÀ°¿ô¤ËÀÚ¤ê¼Î¤Æ¤é¤ì¤¿¤â¤Î) (00@dots{}99)
@item %d
@c day of month (01@dots{}31)
@c 
·î¤Î²¿ÆüÌÜ(01@dots{}31)
@item %D
@c date (mm/dd/yy)
@c 
ÆüÉÕ(mm/dd/yy)
@item %e
@c blank-padded day of month (1@dots{}31)
@c 
·î¤Î²¿ÆüÌÜ¤Ç¥¼¥í¥Ñ¥Ç¥£¥ó¥°¤¬¤Ê¤¤¤â¤Î¡¥
@item %F
@c the @w{ISO 8601} standard date format: @code{%Y-%m-%d}.
@c This is the preferred form for all uses.
@c 
@acronym{ISO} 8601É¸½à¤ÎÆüÉÕ½ñ¼°¡¤@code{%Y-%m-%d}¡¥¤³¤ì¤Ï¡¤¤¹¤Ù¤Æ¤Î¥æ¡¼
¥¶¤¬¹¥¤à·Á¼°¤Ç¤¹¡¥
@item %g
@c The year corresponding to the ISO week number, but without the century
@c (range @code{00} through @code{99}).  This has the same format and value
@c as @code{%y}, except that if the ISO week number (see @code{%V}) belongs
@c to the previous or next year, that year is used instead.
@c 
@acronym{ISO}¤Î½µÈÖ¹æ¤ËÂÐ±þ¤¹¤ëÇ¯¤Ç¤¹¤¬¡¤À¤µª(@code{00}¤«¤é@code{99}¤Î
ÈÏ°Ï)¤¬Ìµ¤¤¤â¤Î¤Ç¤¹¡¥@code{%y}¤Î½ñ¼°¤ÈÃÍ¤ÈÆ±¤¸¤Ç¤¹¤¬¡¤@acronym{ISO}¤Î
½µÈÖ¹æ(@code{%V}¤ò»²¾È)¤¬Á°Ç¯¤Þ¤¿¤ÏÍâÇ¯¤Ë¤Ê¤ë¾ì¹ç¤Ï¡¤¤½¤ÎÇ¯¤¬Âå¤ï¤ê¤Ë
»ÈÍÑ¤µ¤ì¤Þ¤¹¡¥
@item %G
@c The year corresponding to the ISO week number.  This has the same format
@c and value as @code{%Y}, except that if the ISO week number (see
@c @code{%V}) belongs to the previous or next year, that year is used
@c instead.
@c 
@acronym{ISO}¤Î½µÈÖ¹æ¤ËÂÐ±þ¤¹¤ëÇ¯¤Ç¤¹¡¥@code{%Y}¤Î½ñ¼°¤ÈÃÍ¤ÈÆ±¤¸¤Ç¤¹¤¬¡¤
@acronym{ISO}¤Î½µÈÖ¹æ(@code{%V}¤ò»²¾È)¤¬Á°Ç¯¤Þ¤¿¤ÏÍâÇ¯¤Ë¤Ê¤ë¾ì¹ç¤Ï¡¤¤½
¤ÎÇ¯¤¬Âå¤ï¤ê¤Ë»ÈÍÑ¤µ¤ì¤Þ¤¹¡¥
@item %h
@c same as %b
@c 
%b¤ÈÆ±¤¸
@item %j
@c day of year (001@dots{}366)
@c 
Ç¯¤Î²¿ÆüÌÜ(001@dots{}366)
@item %m
@c month (01@dots{}12)
@c 
·î(01@dots{}12)
@item %u
@c day of week (1@dots{}7) with 1 corresponding to Monday
@c 
·îÍËÆü¤ò1¤ËÂÐ±þ¤µ¤»¤¿½µ¤ÎÆüÉÕ(1@dots{}7)
@item %U
@c week number of year with Sunday as first day of week (00@dots{}53).
@c Days in a new year preceding the first Sunday are in week zero.
@c 
ÆüÍËÆü¤ò½µ¤ÎºÇ½é¤ÎÆü¤È¤·¤ÆÍÑ¤¤¤¿¡¤Ç¯¤Î²¿½µÌÜ(00@dots{}53)¤Ç¤¹¡¥¿·Ç¯¤Î
ºÇ½é¤ÎÆüÍËÆü¤ÎÁ°¤ÎÆüÉÕ¤Ï¡¤0½µÌÜ¤Ë¤Ê¤ê¤Þ¤¹¡¥
@item %V
@c week number of year with Monday as first day of the week as a decimal
@c (01@dots{}53). If the week containing January 1 has four or more days in
@c the new year, then it is considered week 1; otherwise, it is week 53 of
@c the previous year, and the next week is week 1. (See the @acronym{ISO} 8601
@c standard.)
@c 
·îÍËÆü¤ò½µ¤ÎºÇ½é¤ÎÆü¤È¤·¤ÆÍÑ¤¤¤¿¡¤Ç¯¤Î²¿½µÌÜ¤Î½½¿Ê¿ô(00@dots{}53)¤Ç¤¹¡¥
¿·Ç¯¤Î°ì·î°ìÆü¤¬´Þ¤Þ¤ì¤ë½µ¤¬¡¤»ÍÆü°Ê¾å¤ÎÆü¤ò´Þ¤à¾ì¹ç¡¤¤½¤ì¤ÏÂè°ì½µ¤È¹Í
¤¨¤é¤ì¤Þ¤¹¡¥¤½¤ì°Ê³°¤Î¾ì¹ç¤Ï¡¤Á°Ç¯¤Î53½µÌÜ¤È¤Ê¤ê¡¤Íâ½µ¤¬Âè°ì½µ¤È¤Ê¤ê¤Þ
¤¹¡¥(@acronym{ISO} 8601¤ÎÉ¸½à¤ò»²¾È¤·¤Æ¤¯¤À¤µ¤¤¡¥)
@item %w
@c day of week (0@dots{}6) with 0 corresponding to Sunday
@c 
½µ¤Î²¿ÆüÌÜ(0@dots{}6)¤Ç¡¤0¤ÏÆüÍËÆü¤ËÂÐ±þ¤·¤Þ¤¹¡¥
@item %W
@c week number of year with Monday as first day of week (00@dots{}53).
@c Days in a new year preceding the first Monday are in week zero.
@c 
·îÍËÆü¤ò½µ¤ÎºÇ½é¤ÎÆü¤È¤·¤ÆÍÑ¤¤¤¿¡¤Ç¯¤Î²¿½µÌÜ(00@dots{}53)¤Ç¤¹¡¥¿·Ç¯¤Î
ºÇ½é¤Î·îÍËÆü¤ÎÁ°¤ÎÆüÉÕ¤Ï¡¤0½µÌÜ¤Ë¤Ê¤ê¤Þ¤¹¡¥
@item %x
@c locale's date representation (mm/dd/yy)
@c 
¥í¥«¡¼¥ë¤ÎÆüÉÕÉ½¸½(mm/dd/yy)
@item %y
@c last two digits of year (00@dots{}99)
@c 
ºÇ¸å¤ÎÆó·å¤òÍÑ¤¤¤¿Ç¯(00@dots{}99)
@item %Y
@c year (1970@dots{}.)
@c 
Ç¯(1970@dots{}.)
@end table


@node Literal directives
@c @subsection Literal directives
@subsection ¥ê¥Æ¥é¥ë»Ø¼¨¸ì

@cindex literal directives
@cindex directives, literal

@c @command{date} directives that produce literal strings.
@c 
¥ê¥Æ¥é¥ëÊ¸»úÎó¤òÀ¸À®¤¹¤ë@command{date}¤Î»Ø¼¨¸ì¤Ç¤¹¡¥

@table @samp
@item %%
@c a literal %
@c 
¥ê¥Æ¥é¥ë¤Î%
@item %n
@c a newline
@c 
²þ¹Ô
@item %t
@c a horizontal tab
@c 
¿åÊ¿¥¿¥Ö
@end table


@node Padding
@c @subsection Padding
@subsection ¥Ñ¥Ç¥£¥ó¥°

@cindex numeric field padding
@cindex padding of numeric fields
@cindex fields, padding numeric

@c By default, @command{date} pads numeric fields with zeroes, so that, for
@c example, numeric months are always output as two digits. GNU @command{date}
@c recognizes the following numeric modifiers between the @samp{%} and the
@c directive.
@c 
¥Ç¥Õ¥©¥ë¥È¤Ç¡¤@command{date}¤Ï¿ôÃÍ¥Õ¥£¡¼¥ë¥É¤ò¥¼¥í¤Ç¥Ñ¥Ç¥£¥ó¥°¤·¡¤Îã¤¨
¤Ð¡¤¿ô»ú¤Î·î¤Ï¡¤¾ï¤ËÆó·å¤Ç½ÐÎÏ¤µ¤ì¤Þ¤¹¡¥GNU @command{date}¤Ï¡¤°Ê²¼¤Î
@samp{%}¤È»Ø¼¨¸ì¤Î´Ö¤Î¿ôÃÍ½¤¾þ»Ò¤òÇ§¼±¤·¤Þ¤¹¡¥

@table @samp
@item -
@c (hyphen) do not pad the field; useful if the output is intended for
@c human consumption.
@c 
(¥Ï¥¤¥Õ¥ó)¥Õ¥£¡¼¥ë¥É¤ò¥Ñ¥Ç¥£¥ó¥°¤·¤Þ¤»¤ó¡¥½ÐÎÏ¤ò¿Í´Ö¤¬ÍøÍÑ¤¹¤ëÌÜÅª¤Î¾ì
¹çÌò¤ËÎ©¤Á¤Þ¤¹¡¥
@item _
@c (underscore) pad the field with spaces; useful if you need a fixed
@c number of characters in the output, but zeroes are too distracting.
@c 
(¥¢¥ó¥À¡¼¥¹¥³¥¢)¥Õ¥£¡¼¥ë¥É¤ò¥¹¥Ú¡¼¥¹¤Ç¥Ñ¥Ç¥£¥ó¥°¤·¤Þ¤¹¡¥½ÐÎÏ¤Ë¸ÇÄê¿ô¤Î
Ê¸»ú¤¬É¬Í×¤Ç¡¤¥¼¥í¤Ç¤Ïº®Íð¤¹¤ë¾ì¹ç¡¤Ìò¤ËÎ©¤Á¤Þ¤¹¡¥
@end table

@noindent
@c These are GNU extensions.
@c 
¤³¤ì¤é¤ÏGNU³ÈÄ¥¤Ç¤¹¡¥

@c Here is an example illustrating the differences:
@c 
°Ê²¼¤Ë°ã¤¤¤òÉ½¸½¤¹¤ëÎã¤¬¤¢¤ê¤Þ¤¹¡¥

@example
date +%d/%m -d "Feb 1"
@result{} 01/02
date +%-d/%-m -d "Feb 1"
@result{} 1/2
date +%_d/%_m -d "Feb 1"
@result{}  1/ 2
@end example


@node Setting the time
@c @subsection Setting the time
@subsection »þ´Ö¤ÎÀßÄê

@cindex setting the time
@cindex time setting
@cindex appropriate privileges

@c If given an argument that does not start with @samp{+}, @command{date} sets
@c the system clock to the time and date specified by that argument (as
@c described below).  You must have appropriate privileges to set the
@c system clock.  The @option{--date} and @option{--set} options may not be
@c used with such an argument.  The @option{--universal} option may be used
@c with such an argument to indicate that the specified time and date are
@c relative to Coordinated Universal Time rather than to the local time
@c zone.
@c 
@samp{+}¤Ç»Ï¤Þ¤é¤Ê¤¤°ú¿ô¤¬Í¿¤¨¤é¤ì¤¿¾ì¹ç¡¤@command{date}¤Ï¡¤¥·¥¹¥Æ¥à»þ
·×¤ò¤½¤Î°ú¿ô(°Ê²¼¤Çµ­½Ò)¤Ç»ØÄê¤µ¤ì¤¿»þ´Ö¤ÈÆüÉÕ¤ËÀßÄê¤·¤Þ¤¹¡¥¥·¥¹¥Æ¥à»þ
·×¤òÀßÄê¤¹¤ë¤¿¤á¡¤Å¬ÀÚ¤ÊÆÃ¸¢¤ò»ý¤Ã¤Æ¤¤¤ëÉ¬Í×¤¬¤¢¤ê¤Þ¤¹¡¥
@option{--date}¤È@option{--set}¥ª¥×¥·¥ç¥ó¤Ï¡¤°ú¿ô¤È¤·¤Æ»ÈÍÑ¤Ç¤­¤Þ¤»¤ó¡¥
@option{--universal}¥ª¥×¥·¥ç¥ó¤Ï¡¤»ØÄê¤µ¤ì¤¿»þ´Ö¤ÈÆüÉÕ¤¬¥í¡¼¥«¥ë¤Ê¥¿¥¤
¥à¥¾¡¼¥ó¤Ç¤Ï¤Ê¤¯¶¨ÄêÀ¤³¦»þ¤Ë´ØÏ¢¤¹¤ë¤³¤È¤ò¼¨¤¹¤¿¤á¤Ë¡¤°ú¿ô¤È¤·¤Æ»ÈÍÑ¤·
¤Æ¤â¤«¤Þ¤¤¤Þ¤»¤ó¡¥

@c The argument must consist entirely of digits, which have the following
@c meaning:
@c 
°ú¿ô¤Ï¡¤´°Á´¤Ê¿ô»ú¤«¤éÀ®¤êÎ©¤ÄÉ¬Í×¤¬¤¢¤ê¡¤¤½¤ì¤Ï°Ê²¼¤Î°ÕÌ£¤ò»ý¤Á¤Þ¤¹¡¥

@table @samp
@item MM
@c month
@c 
·î
@item DD
@c day within month
@c 
·î¤ÎÆüÉÕ
@item hh
@c hour
@c 
»þ´Ö
@item mm
@c minute
@c 
Ê¬
@item CC
@c first two digits of year (optional)
@c 
Ç¯¤ÎºÇ½é¤ÎÆó·å(¥ª¥×¥·¥ç¥ó)
@item YY
@c last two digits of year (optional)
@c 
Ç¯¤ÎºÇ¸å¤ÎÆó·å(¥ª¥×¥·¥ç¥ó)
@item ss
@c second (optional)
@c 
ÉÃ(¥ª¥×¥·¥ç¥ó)
@end table

@c The @option{--set} option also sets the system clock; see the next section.
@c 
@option{--set}¥ª¥×¥·¥ç¥ó¤â¥·¥¹¥Æ¥à»þ·×¤òÀßÄê¤·¤Þ¤¹¡¥¼¡¤Î¥ª¥×¥·¥ç¥ó¤ò»²
¾È¤·¤Æ¤¯¤À¤µ¤¤¡¥


@node Options for date
@c @subsection Options for @command{date}
@subsection @command{date}¤Î¥ª¥×¥·¥ç¥ó

@cindex @command{date} options
@cindex options for @command{date}

@c The program accepts the following options.  Also see @ref{Common options}.
@c 
¥×¥í¥°¥é¥à¤Ï°Ê²¼¤Î¥ª¥×¥·¥ç¥ó¤â¼õ¤±Æþ¤ì¤Þ¤¹¡¥@ref{Common options}¤â»²¾È
¤·¤Æ¤¯¤À¤µ¤¤¡¥

@table @samp

@item -d @var{datestr}
@itemx --date=@var{datestr}
@opindex -d
@opindex --date
@cindex parsing date strings
@cindex date strings, parsing
@cindex arbitrary date strings, parsing
@opindex yesterday
@opindex tomorrow
@opindex next @var{day}
@opindex last @var{day}
@c Display the time and date specified in @var{datestr} instead of the
@c current time and date.  @var{datestr} can be in almost any common
@c format.  It can contain month names, time zones, @samp{am} and @samp{pm},
@c @samp{yesterday}, @samp{ago}, @samp{next}, etc.  @xref{Date input formats}.
@c 
¸½ºß¤Î»þ´Ö¤ÈÆüÉÕ¤ÎÂå¤ï¤ê¤Ë¡¤@var{datestr}¤Ç»ØÄê¤µ¤ì¤¿»þ´Ö¤ÈÆüÉÕ¤òÉ½¼¨
¤·¤Þ¤¹¡¥@var{datestr}¤Ï¡¤¤Û¤È¤ó¤É¤¢¤é¤æ¤ë°ìÈÌÅª¤Ê½ñ¼°¤¬²ÄÇ½¤Ç¤¹¡¥·î¤Î
Ì¾Á°¡¤¥¿¥¤¥à¥¾¡¼¥ó¡¤@samp{am}¤È@samp{pm}¡¤@samp{yesterday}¡¤@samp{ago}¡¤
@samp{next}¡¤Åù¤ò´Þ¤á¤ë¤³¤È¤¬²ÄÇ½¤Ç¤¹¡¥@xref{Date input formats}.

@item -f @var{datefile}
@itemx --file=@var{datefile}
@opindex -f
@opindex --file
@c Parse each line in @var{datefile} as with @option{-d} and display the
@c resulting time and date.  If @var{datefile} is @samp{-}, use standard
@c input.  This is useful when you have many dates to process, because the
@c system overhead of starting up the @command{date} executable many times can
@c be considerable.
@c 
@option{-d}¤ÈÆ±ÍÍ¤Ë¡¤@var{datefile}¤Î¤½¤ì¤¾¤ì¤Î¹Ô¤ò²òÀÏ¤·¡¤·ë²Ì¤Î»þ´Ö
¤ÈÆüÉÕ¤òÉ½¼¨¤·¤Þ¤¹¡¥@var{datefile}¤¬@samp{-}¤Î¾ì¹ç¡¤É¸½àÆþÎÏ¤ò»ÈÍÑ¤·¤Þ
¤¹¡¥@command{date}¤Î¼Â¹Ô¤ò²¿ÅÙ¤â³«»Ï¤¹¤ë¥·¥¹¥Æ¥à¤Î¥ª¡¼¥Ð¡¼¤Ø¥Ã¥É¤ÏÌµ»ë
¤Ç¤­¤Ê¤¤¤Î¤Ç¡¤¤³¤ì¤ÏÂ¿¤¯¤ÎÆüÉÕ¤ò½èÍý¤¹¤ë¤È¤­Ìò¤ËÎ©¤Á¤Þ¤¹¡¥

@item -I @var{timespec}
@itemx --iso-8601[=@var{timespec}]
@opindex -I @var{timespec}
@opindex --iso-8601[=@var{timespec}]
@c Display the date using the @acronym{ISO} 8601 format, @samp{%Y-%m-%d}.
@c 
@acronym{ISO} 8601½ñ¼°@samp{%Y-%m-%d}¤ò»ÈÍÑ¤·¤ÆÆüÉÕ¤òÉ½¼¨¤·¤Þ¤¹¡¥

@c The argument @var{timespec} specifies the number of additional
@c terms of the time to include.  It can be one of the following:
@c 
¥ª¥×¥·¥ç¥ó°ú¿ô¤Î@var{timespec}¤Ï¡¤´Þ¤á¤ë»þ´Ö¤ÎÄÉ²Ã¤ÎÃ±¸ì¤Î¿ô¤ò»ØÄê¤·¤Þ
¤¹¡¥°Ê²¼¤Î°ì¤Ä¤Ë¤Ê¤ë¤Ï¤º¤Ç¤¹¡¥
@table @samp
@item auto
@c The default behavior: print just the date.
@c 
¥Ç¥Õ¥©¥ë¥È¤ÎÆ°ºî¤Ç¤¹¡¥ÆüÉÕ¤Î¤ß½ÐÎÏ¤·¤Þ¤¹¡¥

@item hours
@c Append the hour of the day to the date.
@c 
ÆüÉÕ¤Ë»þ´Ö¤òÄÉ²Ã¤·¤Þ¤¹¡¥

@item minutes
@c Append the hours and minutes.
@c 
»þ´Ö¤ÈÊ¬¤òÄÉ²Ã¤·¤Þ¤¹¡¥

@item seconds
@c Append the hours, minutes, and seconds.
@c 
»þ´Ö¡¤Ê¬¡¤¤½¤·¤ÆÉÃ¤òÄÉ²Ã¤·¤Þ¤¹¡¥
@end table

@c If showing any time terms, then include the time zone using the format
@c @samp{%z}.
@c 
»þ´Ö¤ÎÍÑ¸ì¤òÉ½¼¨¤¹¤ë¾ì¹ç¡¤½ñ¼°@samp{%z}¤ò»ÈÍÑ¤·¤¿¥¿¥¤¥à¥¾¡¼¥ó¤ò´Þ¤á¤Þ
¤¹¡¥@option{--utc}¤â»ØÄê¤µ¤ì¤Æ¤¤¤ë¾ì¹ç¡¤@samp{%z}¤Î¾ì½ê¤Ë@samp{%Z}¤ò»È
ÍÑ¤·¤Þ¤¹¡¥

@c If @var{timespec} is omitted with @option{--iso-8601}, the default is
@c @samp{auto}.  On older systems, @sc{gnu} @command{date} instead
@c supports an obsolete option @option{-I[@var{timespec}]}, where
@c @var{timespec} defaults to @samp{auto}.  @acronym{POSIX} 1003.1-2001
@c (@pxref{Standards conformance}) does not allow @option{-I} without an
@c argument; use @option{--iso-8601} instead.
@c 
@option{--iso-8601}¤Ç@var{timespec}¤¬¾ÊÎ¬¤µ¤ì¤Æ¤¤¤ë¾ì¹ç¡¤¥Ç¥Õ¥©¥ë¥È¤Ï
@samp{auto}¤Ç¤¹¡¥¸Å¤¤¥·¥¹¥Æ¥à¤Ç¤Ï¡¤@sc{gnu} @command{date}¤Ï»þÂåÃÙ¤ì¤Î
¥ª¥×¥·¥ç¥ó@option{-I[@var{timespec}]}¤òÂå¤ï¤ê¤Ë¥µ¥Ý¡¼¥È¤·¤Æ¤¤¤Æ¡¤¤½¤³
¤Ç¤Î@var{timespec}¤Î¥Ç¥Õ¥©¥ë¥È¤Ï@samp{auto}¤Ç¤¹¡¥@acronym{POSIX}
1003.1-2001 (@pxref{Standards conformance})¤Ç¤Ï¡¤°ú¿ô¤òÍÑ¤¤¤Ê¤¤
@option{-I}¤òµö²Ä¤·¤Æ¤¤¤Þ¤»¤ó¡¥Âå¤ï¤ê¤Ë@option{--iso-8601}¤ò»ÈÍÑ¤·¤Æ¤¯
¤À¤µ¤¤¡¥

@item -R
@itemx --rfc-822
@itemx --rfc-2822
@opindex -R
@opindex --rfc-822
@opindex --rfc-2822
@c Display the time and date using the format @samp{%a, %d %b %Y %H:%M:%S
@c %z}, evaluated in the C locale so abbreviations are always in English.
@c For example:
@c 
@samp{%a, %d %b %Y %H:%M:%S %z}¤Î½ñ¼°¤ò»ÈÍÑ¤·¤ÆÆü»þ¤ò½ÐÎÏ¤·¡¤¤½¤ì¤Ï¾ï
¤Ë±Ñ¸ì¤ÇÎ¬µ­¤µ¤ì¤ëC¥í¥«¡¼¥ë¤ÇÉ¾²Á¤µ¤ì¤Þ¤¹¡¥
Îã¤¨¤Ð°Ê²¼¤Î¤è¤¦¤Ë¤Ê¤ê¤Þ¤¹¡¥

@example
Fri,@ @ 1 Aug 2003 23:05:56 -0700
@end example

@c This format conforms to
@c @uref{ftp://ftp.rfc-editor.org/in-notes/rfc2822.txt, RFC 2822} and
@c @uref{ftp://ftp.rfc-editor.org/in-notes/rfc822.txt, RFC 822}, the
@c current and previous standards for Internet email.
@c 
¤³¤Î½ñ¼°¤Ï¡¤@uref{ftp://ftp.rfc-editor.org/in-notes/rfc2822.txt, RFC
2822}¤È@uref{ftp://ftp.rfc-editor.org/in-notes/rfc822.txt, RFC 822}¤Ë
½àµò¤·¤Æ¤¤¤Æ¡¤¸½ºß¤È¤½¤ì°ÊÁ°¤Î¥¤¥ó¥¿¡¼¥Í¥Ã¥ÈÅÅ»Ò¥á¡¼¥ë¤ÎÉ¸½à¤Î¤â¤Î¤Ç¤¹¡¥

@item -r @var{file}
@itemx --reference=@var{file}
@opindex -r
@opindex --reference
@c Display the time and date reference according to the last modification
@c time of @var{file}, instead of the current time and date.
@c 
¸½ºß¤Î»þ´Ö¤ÈÆüÉÕ¤ÎÂå¤ï¤ê¤Ë¡¤@var{file}¤¬ºÇ¸å¤ËÊÔ½¸¤µ¤ì¤¿»þ´Ö¤ò»²¾È¤·¤Æ¡¤
»þ´Ö¤ÈÆüÉÕ¤òÉ½¼¨¤·¤Þ¤¹¡¥

@item -s @var{datestr}
@itemx --set=@var{datestr}
@opindex -s
@opindex --set
@c Set the time and date to @var{datestr}.  See @option{-d} above.
@c 
»þ´Ö¤ÈÆüÉÕ¤ò@var{datestr}¤ËÀßÄê¤·¤Þ¤¹¡¥¾åµ­¤Î@option{-d}¤ò»²¾È¤·¤Æ¤¯¤À
¤µ¤¤¡¥

@item -u
@itemx --utc
@itemx --universal
@opindex -u
@opindex --utc
@opindex --universal
@cindex Coordinated Universal Time
@cindex UTC
@cindex Greenwich Mean Time
@cindex GMT
@c Use Coordinated Universal Time (@acronym{UTC}) by operating as if the
@c @env{TZ} environment variable were set to the string @samp{UTC0}.
@c Normally, @command{date} operates in the time zone indicated by
@c @env{TZ}, or the system default if @env{TZ} is not set.  Coordinated
@c Universal Time is often called ``Greenwich Mean Time'' (@sc{gmt}) for
@c historical reasons.
@c 
@env{TZ}´Ä¶­ÊÑ¿ô¤¬Ê¸»úÎó@samp{UTC0}¤ËÀßÄê¤µ¤ì¤Æ¤¤¤ë¤«¤Î¤è¤¦¤Ë¡¤À¤³¦É¸
½à»þ(@acronym{UTC})¤ò»ÈÍÑ¤·¤Þ¤¹¡¥ÄÌ¾ï¡¤@command{date}¤Ï@env{TZ}¤Ç¼¨¤µ
¤ì¤ë¥¿¥¤¥à¥¾¡¼¥ó¡¤¤Þ¤¿¤Ï@env{TZ}¤¬ÀßÄê¤µ¤ì¤Æ¤¤¤Ê¤¤¾ì¹ç¤Ï¥·¥¹¥Æ¥à¥Ç¥Õ¥©
¥ë¥È¤Î¥¿¥¤¥à¥¾¡¼¥ó¤Ç½èÍý¤·¤Þ¤¹¡¤¶¨ÄêÀ¤³¦»þ¤Ï¡¤Îò»ËÅª¤ÊÍýÍ³¤Ç``¥°¥ê¥Ë¥Ã
¥¸É¸½à»þ''(@sc{gmt})¤È¸Æ¤Ð¤ì¤ë¤³¤È¤â¤è¤¯¤¢¤ê¤Þ¤¹¡¥
@end table


@node Examples of date
@c @subsection Examples of @command{date}
@subsection @command{date}¤ÎÎã

@cindex examples of @command{date}

@c Here are a few examples.  Also see the documentation for the @option{-d}
@c option in the previous section.
@c 
°Ê²¼¤Ë¤¤¤¯¤Ä¤«¤ÎÎã¤¬¤¢¤ê¤Þ¤¹¡¥¾åµ­¥»¥¯¥·¥ç¥ó¤Î@option{-d}¥ª¥×¥·¥ç¥ó¤Ë
ÂÐ¤¹¤ë¥É¥­¥å¥á¥ó¥È¤â»²¾È¤·¤Æ¤¯¤À¤µ¤¤¡¥

@itemize @bullet

@item
@c To print the date of the day before yesterday:
@c 
°ìºòÆü¤ÎÆüÉÕ¤ò½ÐÎÏ¤·¤Þ¤¹¡¥

@example
date --date='2 days ago'
@end example

@item
@c To print the date of the day three months and one day hence:
@c 
¤³¤ì¤«¤é»°¥ö·î¤È°ìÆüÀè¤ÎÆüÉÕ¤ò½ÐÎÏ¤·¤Þ¤¹¡¥
@example
date --date='3 months 1 day'
@end example

@item
@c To print the day of year of Christmas in the current year:
@c 
º£Ç¯¤Î¥¯¥ê¥¹¥Þ¥¹¤¬Ç¯¤Î²¿ÆüÌÜ¤«¤ò½ÐÎÏ¤·¤Þ¤¹¡¥
@example
date --date='25 Dec' +%j
@end example

@item
@c To print the current full month name and the day of the month:
@c 
¸½ºß¤Î·î¤Î´°Á´¤ÊÌ¾Á°¤ÈÆü¤ò½ÐÎÏ¤·¤Þ¤¹¡¥
@example
date '+%B %d'
@end example

@c But this may not be what you want because for the first nine days of
@c the month, the @samp{%d} expands to a zero-padded two-digit field,
@c for example @samp{date -d 1may '+%B %d'} will print @samp{May 01}.
@c 
¤·¤«¤·¡¤·î¤ÎºÇ½é¤Î¶åÆü¤Î´Ö¡¤@samp{%d}¤Ï¥¼¥í¥Ñ¥Ç¥£¥ó¥°¤·¤¿Æó·å¤Î¥Õ¥£¡¼
¥ë¥É¤ËÅ¸³«¤¹¤ë¤¿¤á¡¤¤³¤ì¤Ï´üÂÔ¤¹¤ë¤â¤Î¤Ç¤Ê¤¤²ÄÇ½À­¤¬¤¢¤ê¡¤Îã¤¨¤Ð¡¤
@samp{date -d 1may '+%B %d'}¤Ï@samp{May 01}¤ò½ÐÎÏ¤·¤Þ¤¹¡¥

@item
@c To print a date without the leading zero for one-digit days
@c of the month, you can use the (GNU extension) @code{-} modifier to suppress
@c the padding altogether.
@c 
°ì·å¤ÎÆü¤ÎÁ°ÃÖ¤µ¤ì¤ë¥¼¥í¤òÆüÉÕ¤ËÉÕ¤±¤Ê¤¤¤Ç½ÐÎÏ¤¹¤ë¤¿¤á¡¤¥Ñ¥Ç¥£¥ó¥°¤ò´°
Á´¤ËÍÞÀ©¤¹¤ë(GNU³ÈÄ¥)¤Î@code{-}½¤¾þ»Ò¤ò»ÈÍÑ²ÄÇ½¤Ç¤¹¡¥
@example
date -d 1may '+%B %-d
@end example

@item
@c To print the current date and time in the format required by many
@c non-GNU versions of @command{date} when setting the system clock:
@c 
¥·¥¹¥Æ¥à»þ·×¤òÀßÄê¤¹¤ë¤È¤­¡¤@command{date}¤ÎÂ¿¤¯¤ÎÈóGNU¥Ð¡¼¥¸¥ç¥ó¤¬Í×
µá¤¹¤ë½ñ¼°¤Ç¡¤¸½ºß¤ÎÆüÉÕ¤È»þ´Ö¤ò½ÐÎÏ¤·¤Þ¤¹¡¥
@example
date +%m%d%H%M%Y.%S
@end example

@item
@c To set the system clock forward by two minutes:
@c 
¥·¥¹¥Æ¥à»þ·×¤òÆóÊ¬¿Ê¤á¤ëÀßÄê¤Ç¤¹¡¥
@example
date --set='+2 minutes'
@end example

@item
@c To print the date in the format specified by RFC-2822,
@c use @samp{date --rfc-2822}.  I just did and saw this:
@c 
RFC-2822¤Ç»ØÄê¤µ¤ì¤ë½ñ¼°¤ÇÆüÉÕ¤ò½ÐÎÏ¤¹¤ë¤¿¤á¡¤@samp{date --rfc-2822}¤ò
»ÈÍÑ¤·¤Æ¤¯¤À¤µ¤¤¡¥¤½¤¦¤¹¤ë¤È¤³¤Î¤è¤¦¤Ë¤Ê¤ê¤Þ¤·¤¿¡¥

@example
Thu, 31 Jul 2003 13:13:05 -0700
@end example

@anchor{%s-examples}
@item
@c To convert a date string to the number of seconds since the epoch
@c (which is 1970-01-01 00:00:00 UTC), use the @option{--date} option with
@c the @samp{%s} format.  That can be useful in sorting and/or graphing
@c and/or comparing data by date.  The following command outputs the
@c number of the seconds since the epoch for the time two minutes after the
@c epoch:
@c 
ÆüÉÕÊ¸»ú¤ò¡¤¥¨¥Ý¥Ã¥¯(1970-01-01 00:00:00 UTC)¤«¤é¤ÎÉÃ¿ô¤ËÊÑ´¹¤¹¤ë¤¿¤á¡¤
@samp{%s}½ñ¼°¤òÍÑ¤¤¤¿@option{--date}¥ª¥×¥·¥ç¥ó¤ò»ÈÍÑ¤·¤Æ¤¯¤À¤µ¤¤¡¥¤½¤ì
¤Ï¡¤ÆüÉÕ¤´¤È¤ÎÊÂ¤ÙÂØ¤¨¡¤¤ª¤è¤Ó/¤Þ¤¿¤Ï¡¤¥°¥é¥Õ²½¡¤¤ª¤è¤Ó/¤Þ¤¿¤Ï¡¤Èæ³Ó¤Ë
ÌòÎ©¤Ä¤Ï¤º¤Ç¤¹¡¥°Ê²¼¤Î¥³¥Þ¥ó¥É¤Ï¡¤¥¨¥Ý¥Ã¥¯¤è¤ê°ìÉÃ°Ê¾å¸å¤Î»þ´Ö¤ËÂÐ¤·¡¤
¥¨¥Ý¥Ã¥¯¤«¤é¤ÎÉÃ¿ô¤ò½ÐÎÏ¤·¤Þ¤¹¤¬¡¤¥¿¥¤¥à¥¾¡¼¥ó¤Î¸Þ»þ´Ö¸å(¥±¥ó¥Ö¥ê¥Ã¥¸¡¤
¥Þ¥µ¥Á¥å¡¼¥»¥Ã¥Ä) ¤Ç¤Ï¡¤¤³¤Î¤è¤¦¤ËÁ´ÂÎ¤Ç¥¨¥Ý¥Ã¥¯¤Î¸Þ»þ´Ö¤È°ìÉÃ¸å¤È¤Ê¤ê
¤Þ¤¹¡¥

@example
date --date='1970-01-01 00:02:00 +0000' +%s
120
@end example

@c If you do not specify time zone information in the date string,
@c @command{date} uses your computer's idea of the time zone when
@c interpreting the string.  For example, if your computer's time zone is
@c that of Cambridge, Massachusetts, which was then 5 hours (i.e., 18,000
@c seconds) behind UTC:
@c 
¾åµ­¤ÎÎã¤Ç¥¿¥¤¥à¥¾¡¼¥ó¾ðÊó¤ò»ØÄê@emph{¤·¤Æ¤¤¤Ê¤¤}¤È²¾Äê¤·¤Þ¤¹¡¥¤½¤Î¤È
¤­¡¤Ê¸»úÎó¤ò²ò¼á¤¹¤ë¤È¤­¡¤ÆüÉÕ¤Ï¥³¥ó¥Ô¥å¡¼¥¿¤Î¥¿¥¤¥à¥¾¡¼¥ó¤Î¹Í¤¨¤ò»ÈÍÑ
¤·¤Þ¤¹¡¥¥¤¥ó¥°¥é¥ó¥É¤Î¥°¥ê¥Ë¥Ã¥¸¤Ë¤¤¤ë¾ì¹ç¡¤ÆÀ¤ë¤â¤Î¤Ï¤³¤Î¤è¤¦¤Ë¤Ê¤ê¤Þ
¤¹¡¥

@example
# local time zone used
date --date='1970-01-01 00:02:00' +%s
18120
@end example

@item
@c If you're sorting or graphing dated data, your raw date values may be
@c represented as seconds since the epoch.  But few people can look at
@c the date @samp{946684800} and casually note ``Oh, that's the first second
@c of the year 2000 in Greenwich, England.''
@c 
ÆüÉÕ¤òÊÂ¤ÙÂØ¤¨¤¿¤ê¥°¥é¥Õ²½¤·¤¿¤ê¤·¤Æ¤¤¤ë¾ì¹ç¡¤À¸¤ÎÆüÉÕ¤ÎÃÍ¤Ï¡¤¥¨¥Ý¥Ã¥¯
¤«¤é¤ÎÉÃ¤È¤·¤ÆÉ½¸½²ÄÇ½¤Ç¤¹¡¥¤·¤«¤·¡¤¤Û¤È¤ó¤É¤Î¿Í¤Ï¡¤ÆüÉÕ
@samp{946684800}¤ò¸«¤Æ¡¤``¤¢¤¢¡¤¤½¤ì¤Ï2000Ç¯ºÇ½é¤ÎÉÃ¤À''¤È´ÊÃ±¤Ë¤Ïµ¤¤¬
ÉÕ¤­¤Þ¤»¤ó¡¥

@example
date --date='2000-01-01 UTC' +%s
946684800
@end example

@c An alternative is to use the @option{--utc} (@option{-u}) option.
@c Then you may omit @samp{UTC} from the date string.  Although this
@c produces the same result for @samp{%s} and many other format sequences,
@c with a time zone offset different from zero, it would give a different
@c result for zone-dependent formats like @samp{%z}.
@c 
Âå¤ï¤ê¤Ë¡¤@option{--utc} (@option{-u})¥ª¥×¥·¥ç¥ó¤ò»ÈÍÑ¤·¤Þ¤¹¡¥ÆüÉÕÊ¸»ú
Îó¤«¤é@samp{UTC}¤òºï½ü¤·¤Æ¤â¤«¤Þ¤¤¤Þ¤»¤ó¡¥¤³¤ì¤Ï@samp{%s}¤È¡¤¤½¤ÎÂ¾¤Î
¥¼¥í¤Èµ¯ÅÀ¤È¤·¤¿¥¿¥¤¥à¥¾¡¼¥ó¥ª¥Õ¥»¥Ã¥È¤òÍÑ¤¤¤¿½ñ¼°¤ÈÆ±¤¸·ë²Ì¤òÀ¸À®¤·¤Þ
¤¹¤¬¡¤@samp{%z}¤Î¤è¤¦¤ÊÃÏ°è¤Ë°ÍÂ¸¤·¤¿½ñ¼°¤È¤Ï°Û¤Ê¤ë·ë²Ì¤Ë¤Ê¤ê¤Þ¤¹¡¥

@example
date -u --date=2000-01-01 +%s
946684800
@end example

@c To convert such an unwieldy number of seconds back to
@c a more readable form, use a command like this:
@c 
¤½¤Î¤è¤¦¤Ê°·¤¤¤Ë¤¯¤¤ÉÃ¿ô¤ò¡¤¤è¤êÆÉ¤ß¤ä¤¹¤¤·Á¼°¤ËÊÑ´¹¤¹¤ë¤¿¤á¡¤¤³¤Î¤è¤¦
¤Ê¥³¥Þ¥ó¥É¤ò»ÈÍÑ¤·¤Æ¤¯¤À¤µ¤¤¡¥
@smallexample
# local time zone used
date -d '1970-01-01 UTC 946684800 seconds' +"%Y-%m-%d %T %z"
1999-12-31 19:00:00 -0500
@end smallexample

@c Often it is better to output UTC-relative date and time:
@c 
UTC¤ËÁêÂÐÅª¤ÊÆü»þ¤Î½ÐÎÏ¤è¤êÎÉ¤¯¤Ê¤ë¤³¤È¤¬Â¿¤¯¤Ê¤Ã¤Æ¤¤¤Þ¤¹¡¥

@smallexample
date -u -d '1970-01-01 946684800 seconds' +"%Y-%m-%d %T %z"
2000-01-01 00:00:00 +0000
@end smallexample

@end itemize


@node uname invocation
@c @section @command{uname}: Print system information
@section @command{uname}: ¥·¥¹¥Æ¥à¾ðÊó¤Î½ÐÎÏ

@pindex uname
@cindex print system information
@cindex system information, printing

@c @command{uname} prints information about the machine and operating system
@c it is run on.  If no options are given, @command{uname} acts as if the
@c @option{-s} option were given. Synopsis:
@c 
@command{uname}¤Ï¡¤¼Â¹Ô¤·¤Æ¤¤¤ë¥Þ¥·¥ó¤È¥ª¥Ú¥ì¡¼¥Æ¥£¥ó¥°¥·¥¹¥Æ¥à¤Î¾ðÊó
¤ò½ÐÎÏ¤·¤Þ¤¹¡¥¥ª¥×¥·¥ç¥ó¤¬Í¿¤¨¤é¤ì¤Ê¤¤¾ì¹ç¡¤@command{uname}¤Ï
@option{-s}¥ª¥×¥·¥ç¥ó¤¬Í¿¤¨¤é¤ì¤¿¤«¤Î¤è¤¦¤ËÆ°ºî¤·¤Þ¤¹¡¥³µÍ×¤Ç¤¹¡¥

@example
uname [@var{option}]@dots{}
@end example

@c If multiple options or @option{-a} are given, the selected information is
@c printed in this order:
@c 
Ê£¿ô¤Î¥ª¥×¥·¥ç¥ó¤ä@option{-a}¤¬Í¿¤¨¤é¤ì¤¿¾ì¹ç¡¤ÁªÂò¤µ¤ì¤¿¾ðÊó¤Ï¡¤°Ê²¼
¤Î½çÈÖ¤Ç½ÐÎÏ¤µ¤ì¤Þ¤¹¡¥

@example
@var{kernel-name} @var{nodename} @var{kernel-release} @var{kernel-version} @var{machine} @var{processor} @var{hardware-platform} @var{operating-system}
@end example

@c The information may contain internal spaces, so such output cannot be
@c parsed reliably.  In the following example, @var{release} is
@c @samp{2.2.18ss.e820-bda652a #4 SMP Tue Jun 5 11:24:08 PDT 2001}:
@c 
¾ðÊó¤ÎÆâÉô¤Ë¤Ï¥¹¥Ú¡¼¥¹¤¬´Þ¤Þ¤ì¤ë¤Î¤Ç¡¤½ÐÎÏ¤ò³Î¼Â¤Ë¥Ñ¡¼¥¹¤¹¤ë¤³¤È¤ÏÉÔ²Ä
Ç½¤Ç¤¹¡¥°Ê²¼¤ÎÎã¤Ç¤Ï¡¤@var{release}¤Ï@samp{2.2.18ss.e820-bda652a #4
SMP Tue Jun 5 11:24:08 PDT 2001}¤Ç¤¹¡¥

@example
uname -a
@result{} Linux dum 2.2.18ss.e820-bda652a #4 SMP Tue Jun 5 11:24:08 PDT 2001 i686 unknown unknown GNU/Linux
@end example


@c The program accepts the following options.  Also see @ref{Common options}.
@c 
¥×¥í¥°¥é¥à¤Ï¡¤°Ê²¼¤Î¥ª¥×¥·¥ç¥ó¤â¼õ¤±Æþ¤ì¤Þ¤¹¡¥@ref{Common options}¤â»²
¾È¤·¤Æ¤¯¤À¤µ¤¤¡¥

@table @samp

@item -a
@itemx --all
@opindex -a
@opindex --all
@c Print all of the below information.
@c 
°Ê²¼¤Î¾ðÊó¤¹¤Ù¤Æ¤ò½ÐÎÏ¤·¤Þ¤¹¡¥

@item -i
@itemx --hardware-platform
@opindex -i
@opindex --hardware-platform
@cindex implementation, hardware
@cindex hardware platform
@cindex platform, hardware
@c Print the hardware platform name
@c (sometimes called the hardware implementation).
@c 
¥Ï¡¼¥É¥¦¥§¥¢¤Î¥×¥é¥Ã¥È¥Õ¥©¡¼¥àÌ¾¤ò½ÐÎÏ¤·¤Þ¤¹(¥Ï¡¼¥É¥¦¥§¥¢¼ÂÁõ¤È¸Æ¤Ð¤ì
¤ë¤³¤È¤â¤¢¤ê¤Þ¤¹)¡¥

@item -m
@itemx --machine
@opindex -m
@opindex --machine
@cindex machine type
@cindex hardware class
@cindex hardware type
@c Print the machine hardware name (sometimes called the hardware class
@c or hardware type).
@c 
¥Þ¥·¥ó¥Ï¡¼¥É¥¦¥§¥¢Ì¾¤ò½ÐÎÏ¤·¤Þ¤¹(¥Ï¡¼¥É¥¦¥§¥¢¥¯¥é¥¹¤Þ¤¿¤Ï¥Ï¡¼¥É¥¦¥§¥¢
¥¿¥¤¥×¤È¸Æ¤Ð¤ì¤ë¤³¤È¤â¤¢¤ê¤Þ¤¹)¡¥

@item -n
@itemx --nodename
@opindex -n
@opindex --nodename
@cindex hostname
@cindex node name
@cindex network node name
@c Print the network node hostname.
@c 
¥Þ¥·¥ó¤Î¥Í¥Ã¥È¥ï¡¼¥¯¥Î¡¼¥É¤Î¥Û¥¹¥ÈÌ¾¤ò½ÐÎÏ¤·¤Þ¤¹¡¥

@item -p
@itemx --processor
@opindex -p
@opindex --processor
@cindex host processor type
@c Print the processor type (sometimes called the instruction set
@c architecture or ISA).
@c 
¥Þ¥·¥ó¤Î¥×¥í¥»¥Ã¥µ¥¿¥¤¥×¤ò½ÐÎÏ¤·¤Þ¤¹(Ì¿Îá¥»¥Ã¥È¥¢¡¼¥­¥Æ¥¯¥Á¥ã¤äISA¤È¸Æ
¤Ð¤ì¤ë¤³¤È¤â¤¢¤ê¤Þ¤¹)¡¥

@item -o
@itemx --operating-system
@opindex -o
@opindex --operating-system
@cindex operating system name
@c Print the name of the operating system.
@c 
¥ª¥Ú¥ì¡¼¥Æ¥£¥ó¥°¥·¥¹¥Æ¥à¤ÎÌ¾Á°¤ò½ÐÎÏ¤·¤Þ¤¹¡¥

@item -r
@itemx --kernel-release
@opindex -r
@opindex --kernel-release
@cindex kernel release
@cindex release of kernel
@c Print the kernel release.
@c 
¥«¡¼¥Í¥ë¤Î¥ê¥ê¡¼¥¹¤ò½ÐÎÏ¤·¤Þ¤¹¡¥

@item -s
@itemx --kernel-name
@opindex -s
@opindex --kernel-name
@cindex kernel name
@cindex name of kernel
@c Print the kernel name.
@c @acronym{POSIX} 1003.1-2001 (@pxref{Standards conformance}) calls this
@c ``the implementation of the operating system'', because the
@c @acronym{POSIX} specification itself has no notion of ``kernel''.
@c The kernel name might be the same as the operating system name printed
@c by the @option{-o} or @option{--operating-system} option, but it might
@c differ.  Some operating systems (e.g., FreeBSD, HP-UX) have the same
@c name as their underlying kernels; others (e.g., GNU/Linux, Solaris)
@c do not.
@c 
¥«¡¼¥Í¥ë¤ÎÌ¾Á°¤ò½ÐÎÏ¤·¤Þ¤¹¡¥@acronym{POSIX} 1003.1-2001
(@pxref{Standards conformance})¤Ç¤Ï¡¤¤³¤ì¤ò``¥ª¥Ú¥ì¡¼¥Æ¥£¥ó¥°¥·¥¹¥Æ¥à
¤Î¼ÂÁõ(the implementation of the operating system)''¤È¸Æ¤ó¤Ç¤¤¤Þ¤¹¡¥
@acronym{POSIX}¤Î»ØÄê¼«¿È¤Ë¤Ï``¥«¡¼¥Í¥ë(kernel)''¤Î³µÇ°¤Ï¤¢¤ê¤Þ¤»¤ó¡¥
¥«¡¼¥Í¥ëÌ¾¤Ï¡¤@option{-o}¤ä@option{--operating-system}¥ª¥×¥·¥ç¥ó¤Ç½ÐÎÏ
¤µ¤ì¤ë¥ª¥Ú¥ì¡¼¥Æ¥£¥ó¥°¥·¥¹¥Æ¥à¤ÎÌ¾Á°¤ÈÆ±¤¸¤Ç¤¹¤¬¡¤°ã¤¦¾ì¹ç¤â¤¢¤ê¤Þ¤¹¡¥
¥ª¥Ú¥ì¡¼¥Æ¥£¥ó¥°¥·¥¹¥Æ¥à¤Ë¤è¤Ã¤Æ¤Ï(Îã¤¨¤ÐFreeBSD¡¤HP-UX)¡¤´ðÁÃ¤È¤Ê¤ë¥«¡¼
¥Í¥ë¤ÈÆ±¤¸Ì¾Á°¤Ç¤¹¤¬¡¤¤½¤ì°Ê³°¤Î¤â¤Î(GNU/Linux¡¤Solaris)¤â¤¢¤ê¤Þ¤¹¡¥

@item -v
@itemx --kernel-version
@opindex -v
@opindex --kernel-version
@cindex kernel version
@cindex version of kernel
@c Print the kernel version.
@c 
¥«¡¼¥Í¥ë¤Î¥Ð¡¼¥¸¥ç¥ó¤ò½ÐÎÏ¤·¤Þ¤¹¡¥

@end table

@exitstatus


@node hostname invocation
@c @section @command{hostname}: Print or set system name
@section @command{hostname}: ¥·¥¹¥Æ¥àÌ¾¤Î½ÐÎÏ¤äÀßÄê

@pindex hostname
@cindex setting the hostname
@cindex printing the hostname
@cindex system name, printing
@cindex appropriate privileges

@c With no arguments, @command{hostname} prints the name of the current host
@c system.  With one argument, it sets the current host name to the
@c specified string.  You must have appropriate privileges to set the host
@c name. Synopsis:
@c 
°ú¿ô¤¬Ìµ¤¤¾ì¹ç¡¤@command{hostname}¤Ï¸½ºß¤Î¥Û¥¹¥È¥·¥¹¥Æ¥à¤ÎÌ¾Á°¤ò½ÐÎÏ¤·
¤Þ¤¹¡¥°ì¤Ä¤Î°ú¿ô¤òÍÑ¤¤¤¿¾ì¹ç¡¤¤½¤ì¤Ï¸½ºß¤Î¥Û¥¹¥ÈÌ¾¤ò»ØÄê¤µ¤ì¤¿Ê¸»úÎó¤Ë
ÀßÄê¤·¤Þ¤¹¡¥¥Û¥¹¥ÈÌ¾¤ÎÀßÄê¤Ë¤ÏÅ¬ÀÚ¤ÊÆÃ¸¢¤¬É¬Í×¤Ç¤¹¡¥³µÍ×¤Ç¤¹¡¥

@example
hostname [@var{name}]
@end example

@c The only options are @option{--help} and @option{--version}.  @xref{Common
@c options}.
@c 
¥ª¥×¥·¥ç¥ó¤Ï¡¤@option{--help}¤È@option{--version}¤À¤±¤Ç¤¹¡¥
@xref{Common options}.

@exitstatus


@node hostid invocation
@c @section @command{hostid}: Print numeric host identifier.
@section @command{hostid}: ¿ôÃÍ¤Ç¥Û¥¹¥È¤Î¼±ÊÌ»Ò¤ò½ÐÎÏ

@pindex hostid
@cindex printing the host identifier

@c @command{hostid} prints the numeric identifier of the current host
@c in hexadecimal.  This command accepts no arguments.
@c The only options are @option{--help} and @option{--version}.
@c @xref{Common options}.
@c 
@command{hostid}¤Ï¡¤¸½ºß¤Î¥Û¥¹¥È¤Î¿ôÃÍ¤Î¼±ÊÌ»Ò¤ò16¿Ê¿ô¤Ç½ÐÎÏ¤·¤Þ¤¹¡¥¤³
¤Î¥³¥Þ¥ó¥É¤Ï°ú¿ô¤ò¼õ¤±Æþ¤ì¤Þ¤»¤ó¡¥¥ª¥×¥·¥ç¥ó¤Ï@option{--help}¤È
@option{--version}¤À¤±¤Ç¤¹¡¥@xref{Common options}.

@c For example, here's what it prints on one system I use:
@c 
Îã¤¨¤Ð¡¤»ä¤¬»ÈÍÑ¤·¤Æ¤¤¤ë¥·¥¹¥Æ¥à¤Ç¤Ï¡¤°Ê²¼¤Î¤è¤¦¤Ë½ÐÎÏ¤µ¤ì¤Þ¤¹¡¥

@example
$ hostid
1bac013d
@end example

@c On that system, the 32-bit quantity happens to be closely
@c related to the system's Internet address, but that isn't always
@c the case.
@c 
¤³¤Î¥·¥¹¥Æ¥à¤Ç¤Ï¡¤¥·¥¹¥Æ¥à¤ÎInternet¥¢¥É¥ì¥¹¤Ë´ØÏ¢¤·¤¿32¥Ó¥Ã¥È¤Î¿ôÃÍ¤Ë
¤¿¤Þ¤¿¤Þ¤Ê¤Ã¤Æ¤¤¤Þ¤¹¤¬¡¤¾ï¤Ë¤½¤¦¤À¤È¤¤¤¦¤ï¤±¤Ç¤Ï¤¢¤ê¤Þ¤»¤ó¡¥

@exitstatus


@node Modified command invocation
@c @chapter Modified command invocation
@chapter ½¤Àµ¤µ¤ì¤¿¥³¥Þ¥ó¥É¤Î¸Æ¤Ó½Ð¤·

@cindex modified command invocation
@cindex invocation of commands, modified
@cindex commands for invoking other commands

@c This section describes commands that run other commands in some context
@c different than the current one: a modified environment, as a different
@c user, etc.
@c 
¤³¤Î¥»¥¯¥·¥ç¥ó¤Ï¡¤¸½ºß¤È°Û¤Ê¤ë¾õ¶·¤ÇÂ¾¤Î¥³¥Þ¥ó¥É¤ò¼Â¹Ô¤¹¤ë¥³¥Þ¥ó¥É¤òµ­
½Ò¤·¤Þ¤¹¡¥°Û¤Ê¤ë¥æ¡¼¥¶¤È¤·¤Æ´Ä¶­¤òÊÑ¹¹¤¹¤ë¤Ê¤É¤Ç¤¹¡¥

@menu
* chroot invocation::           Modify the root directory.
* env invocation::              Modify environment variables.
* nice invocation::             Modify scheduling priority.
* nohup invocation::            Immunize to hangups.
* su invocation::               Modify user and group id.
@end menu


@node chroot invocation
@c @section @command{chroot}: Run a command with a different root directory
@section @command{chroot}: °Û¤Ê¤ë¥ë¡¼¥È¥Ç¥£¥ì¥¯¥È¥ê¤Ç¥³¥Þ¥ó¥É¤ò¼Â¹Ô

@pindex chroot
@cindex running a program in a specified root directory
@cindex root directory, running a program in a specified

@c @command{chroot} runs a command with a specified root directory.
@c On many systems, only the super-user can do this.
@c Synopses:
@c 
@command{chroot}¤Ï¡¤»ØÄê¤µ¤ì¤¿¥ë¡¼¥È¥Ç¥£¥ì¥¯¥È¥ê¤Ç¥³¥Þ¥ó¥É¤ò¼Â¹Ô¤·¤Þ¤¹¡¥
Â¿¤¯¤Î¥·¥¹¥Æ¥à¤Ç¤Ï¡¤¥¹¡¼¥Ñ¡¼¥æ¡¼¥¶¤Î¤ß¤³¤ì¤¬²ÄÇ½¤Ç¤¹¡¥³µÍ×¤Ç¤¹¡¥

@example
chroot @var{newroot} [@var{command} [@var{args}]@dots{}]
chroot @var{option}
@end example

@c Ordinarily, filenames are looked up starting at the root of the
@c directory structure, i.e., @file{/}.  @command{chroot} changes the root to
@c the directory @var{newroot} (which must exist) and then runs
@c @var{command} with optional @var{args}.  If @var{command} is not
@c specified, the default is the value of the @env{SHELL} environment
@c variable or @command{/bin/sh} if not set, invoked with the @option{-i} option.
@c 
ÄÌ¾ï¥Õ¥¡¥¤¥ëÌ¾¤Ï¡¤¥Ç¥£¥ì¥¯¥È¥ê¹½Â¤¤Î¥ë¡¼¥È¡¤¤¹¤Ê¤ï¤Á@file{/}¤òµ¯ÅÀ¤È¤·
¤ÆÄ´¤Ù¤é¤ì¤Þ¤¹¡¥@command{chroot}¤Ï¡¤¥ë¡¼¥È¤ò@var{newroot}¥Ç¥£¥ì¥¯¥È¥ê
(Â¸ºß¤¹¤ëÉ¬Í×¤¬¤¢¤ê¤Þ¤¹)¤ËÊÑ¹¹¤·¡¤¥ª¥×¥·¥ç¥ó¤Î@var{args}¤òÍÑ¤¤¤Æ
@var{command}¤ò¼Â¹Ô¤·¤Þ¤¹¡¥@var{command}¤¬»ØÄê¤µ¤ì¤Æ¤¤¤Ê¤¤¾ì¹ç¡¤¥Ç¥Õ¥©
¥ë¥È¤Ï¡¤@env{SHELL}´Ä¶­ÊÑ¿ô¤ä¡¤ÀßÄê¤µ¤ì¤Æ¤¤¤Ê¤¤¾ì¹ç¤Ï@code{/bin/sh}¤Î
ÃÍ¤¬¡¤@option{-i}¥ª¥×¥·¥ç¥ó¤Ç¸Æ¤Ó½Ð¤µ¤ì¤Þ¤¹¡¥

@c The only options are @option{--help} and @option{--version}.  @xref{Common
@c options}.
@c 
¥ª¥×¥·¥ç¥ó¤Ï@option{--help}¤È@option{--version}¤À¤±¤Ç¤¹¡¥@xref{Common
options}.

@c Here are a few tips to help avoid common problems in using chroot.
@c To start with a simple example, make @var{command} refer to a statically
@c linked binary.  If you were to use a dynamically linked executable, then
@c you'd have to arrange to have the shared libraries in the right place under
@c your new root directory.
@c 
@command{chroot}¤Î»ÈÍÑ¤Ë¤¢¤¿¤ê¡¤°ìÈÌÅª¤ÊÌäÂê¤òÈò¤±¤ë¼ê½õ¤±¤È¤Ê¤ë¥Ò¥ó¥È
¤¬¤¤¤¯¤Ä¤«¤¢¤ê¤Þ¤¹¡¥Ã±½ã¤ÊÎã¤ò»Ï¤á¤ë¤¿¤á¡¤@var{command}¤Ï¥¹¥¿¥Æ¥£¥Ã¥¯
¥ê¥ó¥¯¤µ¤ì¤Æ¤¤¤ë¥Ð¥¤¥Ê¥ê¤À¤È²¾Äê¤·¤Þ¤¹¡¥¥À¥¤¥Ê¥ß¥Ã¥¯¥ê¥ó¥¯¤µ¤ì¤Æ¤¤¤ë¼Â
¹Ô·Á¼°¤ò»ÈÍÑ¤·¤Æ¤¤¤ë¾ì¹ç¡¤¶¦Í­¥é¥¤¥Ö¥é¥ê¤ò¿·¤·¤¤¥ë¡¼¥È¥Ç¥£¥ì¥¯¥È¥ê¤ÎÀµ
¤·¤¤°ÌÃÖ¤ËÇÛÃÖ¤¹¤ëÉ¬Í×¤¬¤¢¤ê¤Þ¤¹¡¥

@c For example, if you create a statically linked `ls' executable,
@c and put it in /tmp/empty, you can run this command as root:
@c 
Îã¤¨¤Ð¡¤¥¹¥¿¥Æ¥£¥Ã¥¯¥ê¥ó¥¯¤Î@command{ls}¤Î¼Â¹Ô·Á¼°¤òºîÀ®¤·¡¤
@file{/tmp/empty}¤ËÇÛÃÖ¤·¤¿¾ì¹ç¡¤°Ê²¼¤Î¥³¥Þ¥ó¥É¤òroot¤Ç¼Â¹Ô¤¹¤ë¤³¤È¤¬
²ÄÇ½¤Ç¤¹¡¥

@example
$ chroot /tmp/empty /ls -Rl /
@end example

@c Then you'll see output like this:
@c 
½ÐÎÏ¤Ï°Ê²¼¤Î¤è¤¦¤Ë¤Ê¤ê¤Þ¤¹¡¥

@example
/:
total 1023
-rwxr-xr-x  1 0 0 1041745 Aug 16 11:17 ls
@end example

@c If you want to use a dynamically linked executable, say @command{bash},
@c then first run @samp{ldd bash} to see what shared objects it needs.
@c Then, in addition to copying the actual binary, also copy the listed
@c files to the required positions under your intended new root directory.
@c Finally, if the executable requires any other files (e.g., data, state,
@c device files), copy them into place, too.
@c 
@command{bash}¤Î¤è¤¦¤Ê¡¤¥À¥¤¥Ê¥ß¥Ã¥¯¥ê¥ó¥¯¤µ¤ì¤Æ¤¤¤ë¼Â¹Ô·Á¼°¤ò»ÈÍÑ¤·¤¿
¤¤¾ì¹ç¡¤ºÇ½é¤ËÉ¬Í×¤Ê¶¦Í­¥ª¥Ö¥¸¥§¥¯¥È¤ò¸«¤Ä¤±¤ë¤¿¤á@samp{ldd bash}¤ò¼Â
¹Ô¤·¤Æ¤¯¤À¤µ¤¤¡¥¤½¤·¤Æ¡¤¼ÂºÝ¤Î¥Ð¥¤¥Ê¥ê¤ò¥³¥Ô¡¼¤·¡¤¿·¤·¤¤¥ë¡¼¥È¥Ç¥£¥ì¥¯
¥È¥ê¤ÎÍ×µá¤µ¤ì¤ë¾ì½ê¤Ë¡¤¥ê¥¹¥È¥¢¥Ã¥×¤µ¤ì¤Æ¤¤¤ë¥Õ¥¡¥¤¥ë¤â¥³¥Ô¡¼¤·¤Æ²¼¤µ
¤¤¡¥ºÇ¸å¤Ë¡¤¼Â¹Ô·Á¼°¤¬Í×µá¤¹¤ë¤¹¤Ù¤Æ¤Î¥Õ¥¡¥¤¥ë¤â(Îã¤¨¤Ð¡¤¥Ç¡¼¥¿¡¤¥¹¥Æ¡¼
¥È¡¤¥Ç¥Ð¥¤¥¹¥Õ¥¡¥¤¥ë)¡¤É¬Í×¤Ê¾ì½ê¤Ë¥³¥Ô¡¼¤·¤Æ²¼¤µ¤¤¡¥

@cindex exit status of @command{chroot}
@c Exit status:
@c 
½ªÎ»¥¹¥Æ¡¼¥¿¥¹¤Ç¤¹¡¥
@display
@c 1   if @command{chroot} itself fails
@c 126 if @var{command} is found but cannot be invoked
@c 127 if @var{command} cannot be found
@c the exit status of @var{command} otherwise
@c 
1   @command{chroot}¼«¿È¤¬¼ºÇÔ¤·¤¿¾ì¹ç¡¥
126 @var{command}¤Ï¸«¤Ä¤«¤Ã¤¿¤¬¡¤¸Æ½Ð¤·¤Ç¤­¤Ê¤¤¾ì¹ç¡¥
127 @var{command}¤¬¸«¤Ä¤«¤é¤Ê¤¤¾ì¹ç¡¥
¤½¤ì°Ê³°¤Ï@var{command}¤Î½ªÎ»¥¹¥Æ¡¼¥¿¥¹¤Ë¤Ê¤ê¤Þ¤¹¡¥
@end display


@node env invocation
@c @section @command{env}: Run a command in a modified environment
@section @command{env}: ÊÑ¹¹¤µ¤ì¤¿´Ä¶­ÊÑ¿ô¤Ç¥³¥Þ¥ó¥É¤ò¼Â¹Ô

@pindex env
@cindex environment, running a program in a modified
@cindex modified environment, running a program in a
@cindex running a program in a modified environment

@c @command{env} runs a command with a modified environment.  Synopses:
@c 
@command{env}¤Ï¡¤ÊÑ¹¹¤µ¤ì¤¿´Ä¶­ÊÑ¿ô¤Ç¥³¥Þ¥ó¥É¤ò¼Â¹Ô¤·¤Þ¤¹¡¥³µÍ×¤Ç¤¹¡¥

@example
env [@var{option}]@dots{} [@var{name}=@var{value}]@dots{} @c
[@var{command} [@var{args}]@dots{}]
env
@end example

@c Arguments of the form @samp{@var{variable}=@var{value}} set
@c the environment variable @var{variable} to value @var{value}.
@c @var{value} may be empty (@samp{@var{variable}=}).  Setting a variable
@c to an empty value is different from unsetting it.
@c 
@samp{@var{variable}=@var{value}}¤Î·Á¼°¤Î°ú¿ô¤Ï¡¤´Ä¶­ÊÑ¿ô
@var{variable}¤òÃÍ@var{value}¤ËÀßÄê¤·¤Þ¤¹¡¥@var{value}¤Ï¶õ¤Ë¤â¤Ç¤­¤Þ¤¹
(@samp{@var{variable}=})¡¥ÊÑ¿ô¤ò¶õ¤ÎÃÍ¤ËÀßÄê¤¹¤ë¤³¤È¤Ï¡¤¥¢¥ó¥»¥Ã¥È¤¹¤ë
¤³¤È¤È¤Ï°Û¤Ê¤ê¤Þ¤¹¡¥

@vindex PATH
@c The first remaining argument specifies the program name to invoke; it is
@c searched for according to the @env{PATH} environment variable.  Any
@c remaining arguments are passed as arguments to that program.
@c 
»Ä¤ê¤ÎºÇ½é¤Î°ú¿ô¤Ï¡¤¸Æ¤Ó½Ð¤¹¥×¥í¥°¥é¥àÌ¾¤ò»ØÄê¤·¤Þ¤¹¡¥¤½¤ì¤Ï@env{PATH} 
´Ä¶­ÊÑ¿ô¤Ç¸¡º÷¤µ¤ì¤Þ¤¹¡¥¤¢¤é¤æ¤ë»Ä¤ê¤Î°ú¿ô¤Ï¡¤°ú¿ô¤È¤·¤Æ¤½¤Î¥×¥í¥°¥é¥à
¤ËÅÏ¤µ¤ì¤Þ¤¹¡¥

@cindex environment, printing

@c If no command name is specified following the environment
@c specifications, the resulting environment is printed.  This is like
@c specifying a command name of @command{printenv}.
@c 
´Ä¶­ÊÑ¿ô»ØÄê¤ËÂ³¤¤¤Æ¥³¥Þ¥ó¥ÉÌ¾¤¬»ØÄê¤µ¤ì¤Æ¤¤¤Ê¤¤¾ì¹ç¡¤·ë²Ì¤È¤Ê¤ë´Ä¶­ÊÑ
¿ô¤¬½ÐÎÏ¤µ¤ì¤Þ¤¹¡¥¤³¤ì¤Ï¡¤@command{printenv}¤Î¥³¥Þ¥ó¥ÉÌ¾¤ò»ØÄê¤¹¤ë¤³¤È
¤Ë»÷¤Æ¤¤¤Þ¤¹¡¥

@c The program accepts the following options.  Also see @ref{Common options}.
@c 
¥×¥í¥°¥é¥à¤Ï°Ê²¼¤Î¥ª¥×¥·¥ç¥ó¤â¼õ¤±Æþ¤ì¤Þ¤¹¡¥@ref{Common options}¤â»²¾È
¤·¤Æ¤¯¤À¤µ¤¤¡¥

@table @samp

@item -u @var{name}
@itemx --unset=@var{name}
@opindex -u
@opindex -unset
@c Remove variable @var{name} from the environment, if it was in the
@c environment.
@c 
ÊÑ¿ô@var{name}¤¬´Ä¶­ÊÑ¿ô¤Î¾ì¹ç¡¤¤½¤ì¤ò´Ä¶­ÊÑ¿ô¤«¤éºï½ü¤·¤Þ¤¹¡¥

@item -
@itemx -i
@itemx --ignore-environment
@opindex -
@opindex -i
@opindex --ignore-environment
@c Start with an empty environment, ignoring the inherited environment.
@c 
·Ñ¾µ¤µ¤ì¤¿´Ä¶­ÊÑ¿ô¤òÌµ»ë¤·¤Æ¡¤¶õ¤Î´Ä¶­ÊÑ¿ô¤òÍÑ¤¤¤Æ³«»Ï¤·¤Þ¤¹¡¥

@end table

@cindex exit status of @command{env}
@c Exit status:
@c 
½ªÎ»¥¹¥Æ¡¼¥¿¥¹¤Ç¤¹¡¥
@display
@c 0   if no @var{command} is specified and the environment is output
@c 1   if @command{env} itself fails
@c 126 if @var{command} is found but cannot be invoked
@c 127 if @var{command} cannot be found
@c the exit status of @var{command} otherwise
@c 
0    @var{command}¤¬»ØÄê¤µ¤ì¤Æ¤ª¤é¤º¡¤´Ä¶­ÊÑ¿ô¤¬½ÐÎÏ¤µ¤ì¤ë¾ì¹ç¡¥
1   @command{env}¼«¿È¤¬¼ºÇÔ¤·¤¿¾ì¹ç¡¥
126 @var{command}¤Ï¸«¤Ä¤«¤Ã¤¿¤¬¡¤¸Æ½Ð¤·¤Ç¤­¤Ê¤¤¾ì¹ç¡¥
127 @var{command}¤¬¸«¤Ä¤«¤é¤Ê¤¤¾ì¹ç¡¥
¤½¤ì°Ê³°¤Ï@var{command}¤Î½ªÎ»¥¹¥Æ¡¼¥¿¥¹¤Ë¤Ê¤ê¤Þ¤¹¡¥
@end display


@node nice invocation
@c @section @command{nice}: Run a command with modified scheduling priority
@section @command{nice}: ÊÑ¹¹¤µ¤ì¤¿¥¹¥±¥¸¥å¡¼¥ëÍ¥Àè½ç°Ì¤Ç¥³¥Þ¥ó¥É¤ò¼Â¹Ô

@pindex nice
@cindex modifying scheduling priority
@cindex scheduling priority, modifying
@cindex priority, modifying
@cindex appropriate privileges

@c @command{nice} prints or modifies the scheduling priority of a job.
@c Synopsis:
@c 
@command{nice}¤Ï¡¤¥¸¥ç¥Ö¤Î¥¹¥±¥¸¥å¡¼¥ë¤ÎÍ¥Àè½ç°Ì¤ò½ÐÎÏ¤Þ¤¿¤ÏÊÑ¹¹¤·¤Þ¤¹¡¥
³µÍ×¤Ç¤¹¡¥

@example
nice [@var{option}]@dots{} [@var{command} [@var{arg}]@dots{}]
@end example

@c If no arguments are given, @command{nice} prints the current scheduling
@c priority, which it inherited.  Otherwise, @command{nice} runs the given
@c @var{command} with its scheduling priority adjusted.  If no
@c @var{adjustment} is given, the priority of the command is incremented by
@c 10.  You must have appropriate privileges to specify a negative
@c adjustment.  The priority can be adjusted by @command{nice} over the range
@c of -20 (the highest priority) to 19 (the lowest).
@c 
°ú¿ô¤¬Í¿¤¨¤é¤ì¤Æ¤¤¤Ê¤¤¾ì¹ç¡¤@command{nice}¤Ï¸½ºß¤Î¥¹¥±¥¸¥å¡¼¥ë¤ÎÍ¥Àè½ç
°Ì¤ò½ÐÎÏ¤·¡¤¤½¤ì¤Ï·Ñ¾µ¤µ¤ì¤Þ¤¹¡¥¤½¤ì°Ê³°¤Î¾ì¹ç¡¤@command{nice}¤Ï¡¤Í¿¤¨
¤é¤ì¤¿¥³¥Þ¥ó¥É¤ò¤½¤Î¥¹¥±¥¸¥å¡¼¥ëÍ¥Àè½ç°Ì¤òÄ´À°¤·¤Ê¤¬¤é¼Â¹Ô¤·¤Þ¤¹¡¥
@var{adjustment}¤¬Í¿¤¨¤é¤ì¤Æ¤¤¤Ê¤¤¾ì¹ç¡¤¥³¥Þ¥ó¥É¤ÎÍ¥Àè½ç°Ì¤Ï10Áý²Ã¤·¤Þ
¤¹¡¥Éé¤ÎÄ´À°¤ò»ØÄê¤¹¤ë¤¿¤á¤Ë¤ÏÅ¬ÀÚ¤ÊÆÃ¸¢¤¬É¬Í×¤Ç¤¹¡¥@command{nice}¤¬Ä´
À°²ÄÇ½¤ÊÍ¥Àè½ç°Ì¤Ï¡¤-20(ºÇÍ¥Àè)¤«¤é19(ºÇÄã)¤Þ¤Ç¤Ç¤¹¡¥

@cindex conflicts with shell built-ins
@cindex built-in shell commands, conflicts with
@c Because most shells have a built-in command by the same name, using the
@c unadorned command name in a script or interactively may get you
@c different functionality than that described here.
@c 
¤Û¤È¤ó¤É¤Î¥·¥§¥ë¤Ë¤ÏÆ±¤¸Ì¾Á°¤Î¥·¥§¥ëÁÈ¤ß¹þ¤ß¥³¥Þ¥ó¥É¤¬¤¢¤ë¤Î¤Ç¡¤Áõ¾þ¤Ê
¤·¤Î¥¹¥¯¥ê¥×¥È¤Î¥³¥Þ¥ó¥ÉÌ¾¤äÂÐÏÃÅª¤Ë»ÈÍÑ¤¹¤ë¤È¡¤¤³¤³¤Çµ­½Ò¤µ¤ì¤Æ¤¤¤Ê¤¤
°Û¤Ê¤ëµ¡Ç½¤È¤Ê¤ë²ÄÇ½À­¤¬¤¢¤ê¤Þ¤¹¡¥

@c The program accepts the following option.  Also see @ref{Common options}.
@c 
¥×¥í¥°¥é¥à¤Ï°Ê²¼¤Î¥ª¥×¥·¥ç¥ó¤â¼õ¤±Æþ¤ì¤Þ¤¹¡¥@ref{Common options}¤â»²¾È
¤·¤Æ¤¯¤À¤µ¤¤¡¥

@table @samp
@item -n @var{adjustment}
@itemx --adjustment=@var{adjustment}
@opindex -n
@opindex --adjustment
@c Add @var{adjustment} instead of 10 to the command's priority.
@c 
¥³¥Þ¥ó¥É¤ÎÍ¥Àè½ç°Ì¤Ë¡¤10¤ÎÂå¤ï¤ê¤Ë@var{adjustment}¤ò²Ã¤¨¤Þ¤¹¡¥

@c On older systems, @command{nice} supports an obsolete option
@c @option{-@var{adjustment}}.  @acronym{POSIX} 1003.1-2001 (@pxref{Standards
@c conformance}) does not allow this; use @option{-n @var{adjustment}}
@c instead.
@c 
¸Å¤¤¥·¥¹¥Æ¥à¤Ç¤Ï¡¤@command{nice}¤Ï»þÂåÃÙ¤ì¤Î¥ª¥×¥·¥ç¥ó
@option{-@var{adjustment}}¤ò¥µ¥Ý¡¼¥È¤·¤Æ¤¤¤Þ¤¹¡¥@acronym{POSIX}
1003.1-2001 (@pxref{Standards conformance})¤Ç¤Ï¡¤¤³¤ì¤òµö²Ä¤·¤Æ¤¤¤Þ¤»
¤ó¡¥Âå¤ï¤ê¤Ë@option{-n @var{adjustment}}¤ò»ÈÍÑ¤·¤Æ¤¯¤À¤µ¤¤¡¥

@end table

@cindex exit status of @command{nice}
@c Exit status:
@c 
½ªÎ»¥¹¥Æ¡¼¥¿¥¹¤Ç¤¹¡¥
@display
@c 0   if no @var{command} is specified and the current priority is output
@c 1   if @command{nice} itself fails
@c 126 if @var{command} is found but cannot be invoked
@c 127 if @var{command} cannot be found
@c the exit status of @var{command} otherwise
@c 
0    @var{command}¤¬»ØÄê¤µ¤ì¤Æ¤ª¤é¤º¡¤¸½ºß¤ÎÍ¥Àè½ç°Ì¤¬½ÐÎÏ¤µ¤ì¤ë¾ì¹ç¡¥
1   @command{nice}¼«¿È¤¬¼ºÇÔ¤·¤¿¾ì¹ç¡¥
126 @var{command}¤Ï¸«¤Ä¤«¤Ã¤¿¤¬¡¤¸Æ½Ð¤·¤Ç¤­¤Ê¤¤¾ì¹ç¡¥
127 @var{command}¤¬¸«¤Ä¤«¤é¤Ê¤¤¾ì¹ç¡¥
¤½¤ì°Ê³°¤Ï@var{command}¤Î½ªÎ»¥¹¥Æ¡¼¥¿¥¹¤Ë¤Ê¤ê¤Þ¤¹¡¥
@end display

@c It is sometimes useful to run non-interactive programs with reduced priority.
@c 
Í¥Àè½ç°Ì¤ò²¼¤²¤ÆÂÐÏÃÅª¤Ç¤Ï¤Ê¤¤¥×¥í¥°¥é¥à¤ò¼Â¹Ô¤¹¤ë¤³¤È¤¬¡¤Ìò¤ËÎ©¤Ä»ö¤â
¤¢¤ê¤Þ¤¹¡¥

@example
$ nice factor `echo '2^997 - 1'|bc`
@end example

@c Since @command{nice} prints the current priority,
@c we can invoke it through itself to demonstrate how it works:
@c 
@command{nice}¤Ï¸½ºß¤ÎÍ¥Àè½ç°Ì¤ò½ÐÎÏ¤¹¤ë¤Î¤Ç¡¤Æ°ºî¾õÂÖ¤ò¸¡¾Ú¤¹¤ë¤¿¤á¤Ë
¸Æ¤Ó½Ð¤¹¤³¤È¤â²ÄÇ½¤Ç¤¹¡¥

@c The default behavior is to reduce priority by @samp{10}.
@c 
¥Ç¥Õ¥©¥ë¥È¤ÎÆ°ºî¤Ç¤Ï¡¤Í¥Àè½ç°Ì¤ò@samp{10}²¼¤²¤Þ¤¹¡¥

@example
$ nice nice
10
@end example

@example
$ nice -n 10 nice
10
@end example

@c The @var{adjustment} is relative to the current priority.
@c Here, the first @command{nice} invocation runs the second one at priority
@c @samp{10}, and it in turn runs the final one at a priority lowered by
@c @samp{3} more.
@c 
@var{adjustment}¤Ï¡¤¸½ºß¤ÎÍ¥Àè½ç°Ì¤ËÁêÂÐÅª¤Ê¤â¤Î¤Ë¤Ê¤ê¤Þ¤¹¡¥¤³¤³¤Ç¡¤ºÇ
½é¤Î@command{nice}¤Î¸Æ¤Ó½Ð¤·¤Ç¡¤ÆóÈÖÌÜ¤Î@command{nice}¤ÎÍ¥Àè½ç°Ì¤ò
@samp{10}²¼¤²¤Æ¡¤ºÇ½ªÅª¤Ë¤½¤ÎÍ¥Àè½ç°Ì¤ò¤µ¤é¤Ë@samp{3}²¼¤²¤ë¤è¤¦¤Ë¼Â¹Ô
¤·¤Þ¤¹¡¥

@example
$ nice nice -n 3 nice
13
@end example

@c Specifying a priority larger than @samp{19} is the same as specifying @samp{19}.
@c 
Í¥Àè½ç°Ì¤ò@samp{19}°Ê¾å¤Ë»ØÄê¤¹¤ë¤³¤È¤Ï¡¤@samp{19}¤Ë»ØÄê¤¹¤ë¤³¤È¤ÈÆ±¤¸
¤Ë¤Ê¤ê¤Þ¤¹¡¥

@example
$ nice -n 30 nice
19
@end example

@c Only a privileged user may run a process with higher priority.
@c 
ÆÃ¸¢¥æ¡¼¥¶¤À¤±¤¬¡¤¤è¤ê¹â¤¤Í¥Àè½ç°Ì¤Ç¥×¥í¥»¥¹¤ò¼Â¹Ô¤¹¤ë¤³¤È¤¬²ÄÇ½¤Ç¤¹¡¥

@example
$ nice -n -1 nice
nice: cannot set priority: Permission denied
$ sudo nice -n -1 nice
-1
@end example


@node nohup invocation
@c section @command{nohup}: Run a command immune to hangups
@section @command{nohup}: ¥Ï¥ó¥°¥¢¥Ã¥×¤òÌÈ½ü¤·¤¿¥³¥Þ¥ó¥É¤Î¼Â¹Ô

@pindex nohup
@cindex hangups, immunity to
@cindex immunity to hangups
@cindex logging out and continuing to run

@flindex nohup.out
@c @command{nohup} runs the given @var{command} with hangup signals ignored,
@c so that the command can continue running in the background after you log
@c out. Synopsis:
@c 
@command{nohup}¤Ï¡¤¥í¥°¥¢¥¦¥È¸å¤Ë¥Ð¥Ã¥¯¥°¥é¥ó¥É¤Ç¥³¥Þ¥ó¥É¤ò¼Â¹Ô¤·Â³¤±
¤ë¤³¤È¤ò²ÄÇ½¤Ë¤¹¤ë¤¿¤á¡¤¥Ï¥ó¥°¥¢¥Ã¥×¥·¥°¥Ê¥ë¤òÌµ»ë¤·¤Æ¡¤Í¿¤¨¤é¤ì¤¿¥³¥Þ
¥ó¥É¤ò¼Â¹Ô¤·¤Þ¤¹¡¥³µÍ×¤Ç¤¹¡¥

@example
nohup @var{command} [@var{arg}]@dots{}
@end example

@flindex nohup.out
@c If standard output is a terminal, it is redirected so that it is appended
@c to the file @file{nohup.out}; if that cannot be written to, it is appended
@c to the file @file{$HOME/nohup.out}.  If that cannot be written to, the
@c command is not run.
@c If standard output is not a terminal, then the standard output of
@c @var{command} will be the same as that of @command{nohup}.
@c 
É¸½à½ÐÎÏ¤¬Ã¼Ëö¤Î¾ì¹ç¡¤¥Õ¥¡¥¤¥ë@file{nohup.out}¤ËÄÉ²Ã¤¹¤ë¤è¤¦¤Ë¥ê¥À¥¤¥ì
¥¯¥È¤µ¤ì¤Þ¤¹¡¥½ñ¤­¹þ¤ßÉÔ²ÄÇ½¤Ê¾ì¹ç¡¤¤½¤ì¤é¤Ï¥Õ¥¡¥¤¥ë
@file{$HOME/nohup.out}¤ËÄÉ²Ã¤·¤Þ¤¹¡¥¤½¤ì¤â½ñ¤­¹þ¤ßÉÔ²ÄÇ½¤Ê¾ì¹ç¡¤¥³¥Þ¥ó
¥É¤Ï¼Â¹Ô¤µ¤ì¤Þ¤»¤ó¡¥É¸½à½ÐÎÏ¤¬Ã¼Ëö¤Î¾ì¹ç¡¤@var{command}¤ÎÉ¸½à½ÐÎÏ¤Ï
@command{nohup}¤Î¤â¤Î¤ÈÆ±¤¸¤Ë¤Ê¤ê¤Þ¤¹¡¥

@c If @command{nohup} creates either @file{nohup.out} or
@c @file{$HOME/nohup.out}, it creates it with no ``group'' or ``other''
@c access permissions.  It does not change the permissions if the output
@c file already existed.
@c 
@command{nohup}¤¬@file{nohup.out}¤ä@file{$HOME/nohup.out}¤òºîÀ®¤¹¤ë¾ì
¹ç¡¤``group''¤ä``other''¤Î¥¢¥¯¥»¥¹µö²Ä¤òÍÑ¤¤¤Æ¤½¤ì¤òºîÀ®¤·¤Þ¤»¤ó¡¥½ÐÎÏ
¥Õ¥¡¥¤¥ë¤¬´ûÂ¸¤Î¾ì¹ç¤Ï¡¤¤½¤Îµö²Ä¤òÊÑ¹¹¤·¤Þ¤»¤ó¡¥

@c If standard error is a terminal, it is redirected to the same file
@c descriptor as the standard output.
@c 
É¸½à¥¨¥é¡¼½ÐÎÏ¤¬Ã¼Ëö¤Î¾ì¹ç¡¤É¸½à½ÐÎÏ¤ÈÆ±¤¸¥Õ¥¡¥¤¥ë¥Ç¥¹¥¯¥ê¥×¥¿¤Ë¥ê¥À¥¤
¥ì¥¯¥È¤µ¤ì¤Þ¤¹¡¥

@c @command{nohup} does not automatically put the command it runs in the
@c background; you must do that explicitly, by ending the command line
@c with an @samp{&}.  Also, @command{nohup} does not change the
@c scheduling priority of @var{command}; use @command{nice} for that,
@c e.g., @samp{nohup nice @var{command}}.
@c 
@command{nohup}¤Ï¡¤¥Ð¥Ã¥¯¥°¥é¥ó¥É¤Ç¼Â¹Ô¤¹¤ë¤è¤¦¤Ë¤¹¤ë¥³¥Þ¥ó¥É¤ò¡¤¼«Æ°
Åª¤Ë½ñ¤­½Ð¤·¤Þ¤»¤ó¡¥¥³¥Þ¥ó¥É¹Ô¤Î½ª¤ê¤Ë@samp{&}¤òÍÑ¤¤¤Æ¡¤ÌÀ¼¨¤¹¤ëÉ¬Í×¤¬
¤¢¤ê¤Þ¤¹¡¥¤Þ¤¿¡¤@command{nohup}¤Ï@var{command}¤Î¥¹¥±¥¸¥å¡¼¥ë¤ÎÍ¥Àè½ç°Ì
¤òÊÑ¹¹¤·¤Þ¤»¤ó¡¥¤½¤¦¤¹¤ë¤¿¤á¤Ë@command{nice}¥³¥Þ¥ó¥É¤ò¡¤Îã¤¨¤Ð
@samp{nohup nice @var{command}}¤Î¤è¤¦¤Ë»ÈÍÑ¤·¤Æ²¼¤µ¤¤¡¥

@c The only options are @option{--help} and @option{--version}.  @xref{Common
@c options}.
@c 
¥ª¥×¥·¥ç¥ó¤Ï@option{--help}¤È@option{--version}¤Î¤ß¤Ç¤¹¡¥@xref{Common
options}.

@cindex exit status of @command{nohup}
@c Exit status:
@c 
½ªÎ»¥¹¥Æ¡¼¥¿¥¹¤Ç¤¹¡¥

@display
@c 126 if @var{command} is found but cannot be invoked
@c 127 if @command{nohup} itself fails or if @var{command} cannot be found
@c the exit status of @var{command} otherwise
@c 
126 @var{command}¤Ï¸«¤Ä¤«¤ë¤¬¡¤¸Æ¤Ó½Ð¤»¤Ê¤«¤Ã¤¿¾ì¹ç¡¥
127 @command{nohup}¼«¿È¤¬°Û¾ï½ªÎ»¤·¤¿¡¤¤Þ¤¿¤Ï¡¤@var{command}¤¬¸«¤Ä¤«¤é¤Ê¤¤¡¥
¤½¤ì°Ê³°¤Ï¡¤@var{command}¤Î½ªÎ»¥¹¥Æ¡¼¥¿¥¹¤Ç¤¹¡¥
@end display


@node su invocation
@c @section @command{su}: Run a command with substitute user and group id
@section @command{su}: Å¬ÀÚ¤Ê¥æ¡¼¥¶¤È¥°¥ë¡¼¥×id¤òÍÑ¤¤¤Æ¥³¥Þ¥ó¥É¤ò¼Â¹Ô

@pindex su
@cindex substitute user and group ids
@cindex user id, switching
@cindex super-user, becoming
@cindex root, becoming

@c @command{su} allows one user to temporarily become another user.  It runs a
@c command (often an interactive shell) with the real and effective user
@c id, group id, and supplemental groups of a given @var{user}. Synopsis:
@c 
@command{su}¤Ï¡¤¤¢¤ë¥æ¡¼¥¶¤¬°ì»þÅª¤ËÂ¾¤Î¥æ¡¼¥¶¤Ë¤Ê¤ë¤³¤È¤ò²ÄÇ½¤Ë¤·¤Þ¤¹¡¥
¤½¤ì¤Ï¼ÂºÝ¤Î¼Â¸ú¥æ¡¼¥¶id¤È¡¤Í¿¤¨¤é¤ì¤¿@var{user}¤ÎÄÉ²Ã¥°¥ë¡¼¥×¤Ç¥³¥Þ¥ó
¥É¤ò(¤·¤Ð¤·¤ÐÂÐÏÃÅª¥·¥§¥ë¤Ç)¼Â¹Ô¤·¤Þ¤¹¡¥³µÍ×¤Ç¤¹¡¥

@example
su [@var{option}]@dots{} [@var{user} [@var{arg}]@dots{}]
@end example

@cindex passwd entry, and @command{su} shell
@flindex /bin/sh
@flindex /etc/passwd
@c If no @var{user} is given, the default is @code{root}, the super-user.
@c The shell to use is taken from @var{user}'s @code{passwd} entry, or
@c @file{/bin/sh} if none is specified there.  If @var{user} has a
@c password, @command{su} prompts for the password unless run by a user with
@c effective user id of zero (the super-user).
@c 
@var{user}¤¬Í¿¤¨¤é¤ì¤Ê¤¤¾ì¹ç¡¤¥Ç¥Õ¥©¥ë¥È¤Ï@code{root}¤Î¥¹¡¼¥Ñ¡¼¥æ¡¼¥¶
¤Ç¤¹¡¥»ÈÍÑ¤¹¤ë¥·¥§¥ë¤Ï¡¤@var{user}¤Î@code{passwd}¤Î¹àÌÜ¤«¤éÆÀ¤é¤ì¤¿¤â
¤Î¡¤¤Þ¤¿¤Ï¡¤¤½¤³¤Ç»ØÄê¤µ¤ì¤Æ¤¤¤Ê¤¤¾ì¹ç¤Ï@file{/bin/sh}¤ò»ÈÍÑ¤·¤Þ¤¹¡¥
@var{user}¤Ë¥Ñ¥¹¥ï¡¼¥É¤¬¤¢¤ë¾ì¹ç¡¤¼Â¹Ô¥æ¡¼¥¶id¤¬¥¼¥í(¥¹¡¼¥Ñ¡¼¥æ¡¼¥¶) 
¤Î¼Â¹Ô¤Ç¤Ê¤±¤ì¤Ð¡¤@command{su}¤Ï¥Ñ¥¹¥ï¡¼¥É¤ÎÆþÎÏ¤òÂ¥¤·¤Þ¤¹¡¥

@vindex HOME
@vindex SHELL
@vindex USER
@vindex LOGNAME
@cindex login shell
@c By default, @command{su} does not change the current directory.
@c It sets the environment variables @env{HOME} and @env{SHELL}
@c from the password entry for @var{user}, and if @var{user} is not
@c the super-user, sets @env{USER} and @env{LOGNAME} to @var{user}.
@c By default, the shell is not a login shell.
@c 
¥Ç¥Õ¥©¥ë¥È¤Ç¡¤@command{su}¤Ï¥«¥ì¥ó¥È¥Ç¥£¥ì¥¯¥È¥ê¤òÊÑ¹¹¤·¤Þ¤»¤ó¡¥¤½¤ì¤Ï
´Ä¶­ÊÑ¿ô@env{HOME}¤È@env{SHELL}¤ò@var{user}¤Î¥Ñ¥¹¥ï¡¼¥É¹àÌÜ¤«¤éÀßÄê¤·¡¤
@var{user}¤¬¥¹¡¼¥Ñ¡¼¥æ¡¼¥¶¤Ç¤Ê¤¤¾ì¹ç¡¤@env{USER}¤È@env{LOGNAME}¤ò
@var{user}¤ËÀßÄê¤·¤Þ¤¹¡¥¥Ç¥Õ¥©¥ë¥È¤Ç¥·¥§¥ë¤Ï¥í¥°¥¤¥ó¥·¥§¥ë¤Ç¤Ï¤¢¤ê¤Þ¤»
¤ó¡¥

@c Any additional @var{arg}s are passed as additional arguments to the
@c shell.
@c 
ÄÉ²Ã¤Î@var{arg}¤Ï¡¤¥·¥§¥ë¤Ø¤ÎÄÉ²Ã¤Î°ú¿ô¤È¤·¤ÆÍ¿¤¨¤é¤ì¤Þ¤¹¡¥

@cindex @option{-su}
@c GNU @command{su} does not treat @file{/bin/sh} or any other shells specially
@c (e.g., by setting @code{argv[0]} to @option{-su}, passing @option{-c} only
@c to certain shells, etc.).
@c 
GNU @command{su}¤Ï¡¤@file{/bin/sh}¤äÂ¾¤ÎÆÃ¼ì¤Ê¤â¤Î¤ò°·¤¤¤Þ¤»¤ó(Îã¤¨¤Ð¡¤
@code{argv[0]}¤ò@option{-su}¤ËÀßÄê¤¹¤ë¡¤@option{-c}¤òÆÃÄê¤Î¥·¥§¥ë¤ËÅÏ
¤¹Åù¤Ç¤¹)¡¥

@findex syslog
@c @command{su} can optionally be compiled to use @code{syslog} to report
@c failed, and optionally successful, @command{su} attempts.  (If the system
@c supports @code{syslog}.)  However, GNU @command{su} does not check if the
@c user is a member of the @code{wheel} group; see below.
@c 
@command{su}¤Ï¡¤@command{su}¤Î»î¤ß¤ËÂÐ¤¹¤ë¼ºÇÔ¤È¡¤ÄÉ²Ã¤ÇÀ®¸ù¤òÊó¹ð¤¹¤ë
¤¿¤á¤Ë¡¤@code{syslog}¤ò»ÈÍÑ¤¹¤ë¤è¤¦¤Ë¥³¥ó¥Ñ¥¤¥ë¤¹¤ë¤³¤È¤¬²ÄÇ½¤Ç¤¹¡¥(¥·
¥¹¥Æ¥à¤¬@code{syslog}¤ò¥µ¥Ý¡¼¥È¤·¤Æ¤¤¤ë¾ì¹ç¤Ç¤¹¡¥)¤·¤«¤·¡¤GNU
@command{su}¤Ï¡¤¥æ¡¼¥¶¤¬@code{wheel}¥°¥ë¡¼¥×¤Î¥á¥ó¥Ð¡¼¤«¤É¤¦¤«Ä´ºº¤·¤Þ
¤»¤ó¡¥°Ê²¼¤ò»²¾È¤·¤Æ¤¯¤À¤µ¤¤¡¥

@c The program accepts the following options.  Also see @ref{Common options}.
@c 
¥×¥í¥°¥é¥à¤Ï¡¤°Ê²¼¤Î¥ª¥×¥·¥ç¥ó¤ò¼õ¤±Æþ¤ì¤Þ¤¹¡¥@ref{Common options}¤â»²
¾È¤·¤Æ¤¯¤À¤µ¤¤¡¥

@table @samp
@item -c @var{command}
@itemx --command=@var{command}
@opindex -c
@opindex --command
@c Pass @var{command}, a single command line to run, to the shell with
@c a @option{-c} option instead of starting an interactive shell.
@c 
Ã±°ì¤Î¥³¥Þ¥ó¥É¥é¥¤¥ó¤Ç¼Â¹Ô¤¹¤ë@var{command}¤ò¡¤ÂÐÏÃÅª¥·¥§¥ë¤ò³«»Ï¤¹¤ë
Âå¤ï¤ê¤Ë¡¤@option{-c}¥ª¥×¥·¥ç¥ó¤òÍÑ¤¤¤ÆÅÏ¤·¤Þ¤¹¡¥

@item -f
@itemx --fast
@opindex -f
@opindex --fast
@flindex .cshrc
@cindex file name pattern expansion, disabled
@cindex globbing, disabled
@c Pass the @option{-f} option to the shell.  This probably only makes sense
@c if the shell run is @command{csh} or @command{tcsh}, for which the @option{-f}
@c option prevents reading the startup file (@file{.cshrc}).  With
@c Bourne-like shells, the @option{-f} option disables file name pattern
@c expansion (globbing), which is not likely to be useful.
@c 
¥·¥§¥ë¤Ë@option{-f}¥ª¥×¥·¥ç¥ó¤òÅÏ¤·¤Þ¤¹¡¥¤³¤ì¤Ï¤ª¤½¤é¤¯¡¤¥·¥§¥ë¤Î¼Â¹Ô
¤¬@code{csh}¤ä@code{tcsh}¤Î¾ì¹ç¤Ë¤Î¤ß°ÕÌ£¤¬¤¢¤ê¡¤¤½¤ì¤é¤ËÂÐ¤¹¤ë
@option{-f}¥ª¥×¥·¥ç¥ó¤Ï¡¤¥¹¥¿¡¼¥È¥¢¥Ã¥×¥Õ¥¡¥¤¥ë(@file{.cshrc})¤ÎÆÉ¤ß¹þ
¤ß¤òË¸¤²¤Þ¤¹¡¥Bourne¤Î¤è¤¦¤Ê¥·¥§¥ë¤òÍÑ¤¤¤¿¾ì¹ç¡¤@option{-f}¥ª¥×¥·¥ç¥ó
¤Ï¥Õ¥¡¥¤¥ëÌ¾¤Î¥Ñ¥¿¡¼¥ó³ÈÄ¥(glob)¤òÍøÍÑÉÔ²ÄÇ½¤Ë¤·¡¤¤½¤ì¤ÏÌò¤ËÎ©¤Ä¤È¤Ï»×
¤¨¤Þ¤»¤ó¡¥

@item -
@itemx -l
@itemx --login
@opindex -
@opindex -l
@opindex --login
@c other variables already indexed above
@vindex TERM
@vindex PATH
@cindex login shell, creating
@c Make the shell a login shell.  This means the following.  Unset all
@c environment variables except @env{TERM}, @env{HOME}, and @env{SHELL}
@c (which are set as described above), and @env{USER} and @env{LOGNAME}
@c (which are set, even for the super-user, as described above), and set
@c @env{PATH} to a compiled-in default value.  Change to @var{user}'s home
@c directory.  Prepend @samp{-} to the shell's name, intended to make it
@c read its login startup file(s).
@c 
¥·¥§¥ë¤ò¥í¥°¥¤¥ó¥·¥§¥ë¤Ë¤·¤Þ¤¹¡¥¤³¤ì¤Ï°Ê²¼¤Î¤³¤È¤ò°ÕÌ£¤·¤Þ¤¹¡¥
@env{TERM}¡¤@env{HOME}¡¤¤½¤·¤Æ@env{SHELL}(¾åµ­¤Çµ­½Ò¤µ¤ì¤ë¤è¤¦¤ËÀßÄê¤µ
¤ì¤Æ¤¤¤ë)¡¤¤½¤·¤Æ@env{USER}¤È@env{LOGNAME}(¥¹¡¼¥Ñ¡¼¥æ¡¼¥¶¤Ç¤â¡¤¾åµ­¤Ç
µ­½Ò¤µ¤ì¤ë¤è¤¦¤ËÀßÄê¤µ¤ì¤Æ¤¤¤ë)°Ê³°¤Î¡¤¤¹¤Ù¤Æ¤Î´Ä¶­ÊÑ¿ô¤ò¥¢¥ó¥»¥Ã¥È¤·¡¤
@env{PATH}¤òÁÈ¤ß¹þ¤Þ¤ì¤Æ¤¤¤ë¥Ç¥Õ¥©¥ë¥ÈÃÍ¤ËÀßÄê¤·¤Þ¤¹¡¥@var{user}¤Î¥Û¡¼
¥à¥Ç¥£¥ì¥¯¥È¥ê¤ËÊÑ¹¹¤·¤Þ¤¹¡¥¥í¥°¥¤¥ó¥¹¥¿¡¼¥È¥¢¥Ã¥×¥Õ¥¡¥¤¥ë¤òÆÉ¤ß¹þ¤Þ¤»
¤ë¤¿¤á¤Ë¡¤@samp{-}¤ò¥·¥§¥ë¤ÎÌ¾Á°¤ÎÁ°¤ËÁ°ÃÖ¤·¤Æ¤¯¤À¤µ¤¤¡¥

@item -m
@itemx -p
@itemx --preserve-environment
@opindex -m
@opindex -p
@opindex --preserve-environment
@cindex environment, preserving
@flindex /etc/shells
@cindex restricted shell
@c Do not change the environment variables @env{HOME}, @env{USER},
@c @env{LOGNAME}, or @env{SHELL}.  Run the shell given in the environment
@c variable @env{SHELL} instead of the shell from @var{user}'s passwd
@c entry, unless the user running @command{su} is not the superuser and
@c @var{user}'s shell is restricted.  A @dfn{restricted shell} is one that
@c is not listed in the file @file{/etc/shells}, or in a compiled-in list
@c if that file does not exist.  Parts of what this option does can be
@c overridden by @option{--login} and @option{--shell}.
@c 
´Ä¶­ÊÑ¿ô@env{HOME}¡¤@env{USER}¡¤@env{LOGNAME}¡¤¤Þ¤¿¤Ï@env{SHELL}¤òÊÑ¹¹
¤·¤Þ¤»¤ó¡¥@command{su}¤ò¼Â¹Ô¤·¤Æ¤¤¤ë¥æ¡¼¥¶¤¬¥¹¡¼¥Ñ¡¼¥æ¡¼¥¶¤Ç¡¤
@var{user}¤Î¥·¥§¥ë¤¬À©¸Â¤µ¤ì¤Æ¤¤¤Ê¤¤¾ì¹ç¤Ï¡¤@var{user}¤Î¥Ñ¥¹¥ï¡¼¥É¹àÌÜ
¤«¤éÆÀ¤é¤ì¤ë¥·¥§¥ë¤ÎÂå¤ï¤ê¤Ë¡¤´Ä¶­ÊÑ¿ô@env{SHELL}¤ÇÍ¿¤¨¤é¤ì¤¿¥·¥§¥ë¤ò
¼Â¹Ô¤·¤Þ¤¹¡¥@dfn{À©¸Â¤µ¤ì¤Æ¤¤¤ë¥·¥§¥ë(restricted shell)}¤È¤Ï¡¤¥Õ¥¡¥¤¥ë
@file{/etc/shells}¤ä¡¤¤½¤Î¥Õ¥¡¥¤¥ë¤¬Â¸ºß¤·¤Ê¤¤¾ì¹ç¤ÏÁÈ¤ß¹þ¤ß¥ê¥¹¥È¤Ë¥ê
¥¹¥È¥¢¥Ã¥×¤µ¤ì¤Æ¤¤¤Ê¤¤¤â¤Î¤Ç¤¹¡¥¤³¤Î¥ª¥×¥·¥ç¥ó¤¬¹Ô¤¦¤³¤È¤Î°ìÉô¤Ï¡¤
@option{--login}¤È@option{--shell}¤ÇÍ¥Àè¤¹¤ë¤³¤È¤¬²ÄÇ½¤Ç¤¹¡¥

@item -s @var{shell}
@itemx --shell=@var{shell}
@opindex -s
@opindex --shell
@c Run @var{shell} instead of the shell from @var{user}'s passwd entry,
@c unless the user running @command{su} is not the superuser and @var{user}'s
@c shell is restricted (see @option{-m} just above).
@c 
@command{su}¤ò¼Â¹Ô¤·¤Æ¤¤¤ë¥æ¡¼¥¶¤¬¥¹¡¼¥Ñ¡¼¥æ¡¼¥¶¤Ç¡¤@var{user}¤Î¥·¥§¥ë
¤¬¸ÂÄê¤µ¤ì¤Æ¤¤¤Ê¤¤(¿¿¾å¤Î@option{-m}¤ò»²¾È¤·¤Æ¤¯¤À¤µ¤¤)¾ì¹ç¤Ï¡¤
@var{user}¤Î¥Ñ¥¹¥ï¡¼¥É¹àÌÜ¤«¤éÆÀ¤é¤ì¤ë¥·¥§¥ë¤ÎÂå¤ï¤ê¤Ë¡¤@var{shell}¤ò
¼Â¹Ô¤·¤Þ¤¹¡¥

@end table

@cindex exit status of @command{su}
@c Exit status:
@c 
½ªÎ»¥¹¥Æ¡¼¥¿¥¹¤Ç¤¹¡¥

@display
@c 1   if @command{su} itself fails
@c 126 if subshell is found but cannot be invoked
@c 127 if subshell cannot be found
@c the exit status of the subshell otherwise
@c 
1   @command{su}¼«¿È¤¬¼ºÇÔ¤·¤¿¾ì¹ç¡¥
126 ¥µ¥Ö¥·¥§¥ë¤Ï¸«¤Ä¤«¤Ã¤¿¤¬¡¤¸Æ½Ð¤·¤Ç¤­¤Ê¤¤¾ì¹ç¡¥
127 ¥µ¥Ö¥·¥§¥ë¤¬¸«¤Ä¤«¤é¤Ê¤¤¾ì¹ç¡¥
¤½¤ì°Ê³°¤Ç¤Ï¡¤¥µ¥Ö¥·¥§¥ë¤Î½ªÎ»¥¹¥Æ¡¼¥¿¥¹¤Ë¤Ê¤ê¤Þ¤¹¡¥
@end display

@cindex wheel group, not supported
@cindex group wheel, not supported
@cindex fascism
@c @subsection Why GNU @command{su} does not support the @samp{wheel} group
@subsection GNU @command{su}¤¬@samp{wheel}¥°¥ë¡¼¥×¤ò¥µ¥Ý¡¼¥È¤·¤Ê¤¤ÍýÍ³

@c (This section is by Richard Stallman.)
@c 
(¤³¤Î¥»¥¯¥·¥ç¥ó¤Ï¡¤Richard Stallman¤¬ºîÀ®¤·¤Þ¤·¤¿¡¥)

@cindex Twenex
@cindex MIT AI lab
@c Sometimes a few of the users try to hold total power over all the
@c rest.  For example, in 1984, a few users at the MIT AI lab decided to
@c seize power by changing the operator password on the Twenex system and
@c keeping it secret from everyone else.  (I was able to thwart this coup
@c and give power back to the users by patching the kernel, but I
@c wouldn't know how to do that in Unix.)
@c 
¿ô¿Í¤Î¥æ¡¼¥¶¤¬¡¤»Ä¤êÁ´°÷°Ê¾å¤ÎÁí¹çÅª¤Ê¸¢ÎÏ¤ò»ý¤Á¤¿¤¤¤È»×¤¦¤È¤­¤â¤¢¤ê¤Þ
¤¹¡¥Îã¤¨¤Ð¡¤1984Ç¯¤Ë¡¤MIT AI lab¤Î¿ô¿Í¤Î¥æ¡¼¥¶¤¬¡¤Twenex¥·¥¹¥Æ¥à¤Î¥ª¥Ú
¥ì¡¼¥¿¥Ñ¥¹¥ï¡¼¥É¤òÊÑ¹¹¤·¡¤Â¾¤ÎÁ´°÷¤ËÈëÌ©¤Ë¤·Â³¤±¤ë¤³¤È¤Ç¡¤¸¢ÎÏ¤òÀêÍ­¤·
¤è¤¦¤È¤·¤Þ¤·¤¿¡¥(»ä¤Ï¡¤¤³¤Î¥¯¡¼¥Ç¥¿¡¼¤òË¸³²¤·¡¤¥«¡¼¥Í¥ë¤Ë¥Ñ¥Ã¥Á¤ò¹Ô¤¤
¥æ¡¼¥¶¤ËÎÏ¤ò¼è¤êÌá¤µ¤»¤è¤¦¤È¤·¤Þ¤·¤¿¤¬¡¤Unix¤Ç¤½¤¦¤¹¤ëÊýË¡¤òÃÎ¤ê¤Þ¤»¤ó
¤Ç¤·¤¿¡¥)

@c However, occasionally the rulers do tell someone.  Under the usual
@c @command{su} mechanism, once someone learns the root password who
@c sympathizes with the ordinary users, he or she can tell the rest.  The
@c ``wheel group'' feature would make this impossible, and thus cement the
@c power of the rulers.
@c 
¤·¤«¤·¡¤»ÙÇÛ¼Ô¤¬¤À¤ì¤«¤Ë¹ð¤²¤ë¤³¤È¤â¤¢¤ê¤Þ¤¹¡¥ÄÌ¾ï¤Î@command{su}¥á¥«¥Ë
¥º¥à¤Ç¤Ï¡¤°ìÃ¶¡¤ÉáÄÌ¤Î¥æ¡¼¥¶¤ËÆ±¾ð¤¹¤ëÃ¯¤«¤¬¡¤¥ë¡¼¥È¤Î¥Ñ¥¹¥ï¡¼¥É¤òÃÎ¤ë
¤È¡¤Èà¤Þ¤¿¤ÏÈà½÷¤Ï»Ä¤ê¤òÅÁ¤¨¤ë¤³¤È¤¬¤Ç¤­¤Þ¤¹¡¥``wheel group''¤ÎÆÃÄ§¤Ï¡¤
¤³¤ì¤òÉÔ²ÄÇ½¤Ë¤·¡¤¤½¤Î¤¿¤á»ÙÇÛ¼Ô¤Î¸¢ÎÏ¤Ï¸Ç¤Þ¤ê¤Þ¤¹¡¥

@c I'm on the side of the masses, not that of the rulers.  If you are
@c used to supporting the bosses and sysadmins in whatever they do, you
@c might find this idea strange at first.
@c 
»ä¤ÏÂ¿¿ô¤ÎÌ£Êý¤Ç»ÙÇÛ¼Ô¤ÎÌ£Êý¤Ç¤Ï¤¢¤ê¤Þ¤»¤ó¡¥¥Ü¥¹¤È¥·¥¹¥¢¥É¤Î¤¢¤é¤æ¤ëºî
¶È¤ò¥µ¥Ý¡¼¥È¤¹¤ë¤³¤È¤Ë´·¤ì¤Æ¤¤¤ë¾ì¹ç¡¤ºÇ½é¤Ë¤³¤Î¹Í¤¨¤¬´ñÌ¯¤À¤ÈÊ¬¤«¤ë¤³
¤È¤Ç¤·¤ç¤¦¡¥


@node Process control
@c @chapter Process control
@chapter ¥×¥í¥»¥¹À©¸æ

@cindex processes, commands for controlling
@cindex commands for controlling processes

@menu
* kill invocation::             Sending a signal to processes.
@end menu


@node kill invocation
@c @section @command{kill}: Send a signal to processes
@section @command{kill}: ¥×¥í¥»¥¹¤Ë¥·¥°¥Ê¥ë¤òÁ÷¤ë

@pindex kill
@cindex send a signal to processes

@c The @command{kill} command sends a signal to processes, causing them
@c to terminate or otherwise act upon receiving the signal in some way.
@c Alternatively, it lists information about signals.  Synopses:
@c 
@command{kill}¥³¥Þ¥ó¥É¤Ï¡¤¥×¥í¥»¥¹¤Ë¥·¥°¥Ê¥ë¤òÁ÷¤ê½ªÎ»¤µ¤»¤¿¤ê¡¤¤½¤ì°Ê
³°¤Ç¤Ï¡¤¥·¥°¥Ê¥ë¤ò¼õ¤±¼è¤é¤»¤Æ²¿¤é¤«¤ÎÆ°ºî¤ò¤µ¤»¤Þ¤¹¡¥¤Þ¤¿¡¤¥·¥°¥Ê¥ë¤Î
¾ðÊó¤ò¥ê¥¹¥È¥¢¥Ã¥×¤·¤Þ¤¹¡¥³µÍ×¤Ç¤¹¡¥

@example
kill [-s @var{signal} | --signal @var{signal} | -@var{signal}] @var{pid}@dots{}
kill [-l | --list | -t | --table] [@var{signal}]@dots{}
@end example

@c The first form of the @command{kill} command sends a signal to all
@c @var{pid} arguments.  The default signal to send if none is specified
@c is @samp{TERM}.  The special signal number @samp{0} does not denote a
@c valid signal, but can be used to test whether the @var{pid} arguments
@c specify processes to which a signal could be sent.
@c 
@command{kill}¥³¥Þ¥ó¥É¤ÎºÇ½é¤Î·Á¼°¤Ï¡¤¤¹¤Ù¤Æ¤Î@var{pid}°ú¿ô¤Ë¥·¥°¥Ê¥ë
¤òÁ÷¤ê¤Þ¤¹¡¥²¿¤â»ØÄê¤µ¤ì¤Æ¤¤¤Ê¤¤¾ì¹ç¤Î¥Ç¥Õ¥©¥ë¥È¤Î¥·¥°¥Ê¥ë¤Ï
@samp{TERM}¤Ç¤¹¡¥ÆÃÊÌ¤Ê¥·¥°¥Ê¥ëÈÖ¹æ@samp{0}¤ÇÍ­¸ú¤Ê¥·¥°¥Ê¥ë¤òÉ½¼¨¤·¡¤
¤µ¤é¤Ë¡¤@var{pid}°ú¿ô¤¬¥·¥°¥Ê¥ë¤òÁ÷¤ë¤³¤È¤¬²ÄÇ½¤Ê¥×¥í¥»¥¹¤ò»ØÄê¤·¤Æ¤¤
¤ë¤«¤É¤¦¤«¤òÄ´ºº¤¹¤ë¤¿¤á¤Ë»ÈÍÑ¤¹¤ë¤³¤È¤¬²ÄÇ½¤Ç¤¹¡¥

@c If @var{pid} is positive, the signal is sent to the process with the
@c process id @var{pid}.  If @var{pid} is zero, the signal is sent to all
@c processes in the process group of the current process.  If @var{pid}
@c is -1, the signal is sent to all processes for which the user has
@c permission to send a signal.  If @var{pid} is less than -1, the signal
@c is sent to all processes in the process group that equals the absolute
@c value of @var{pid}.
@c 
@var{pid}¤¬Àµ¤Î¾ì¹ç¡¤¥·¥°¥Ê¥ë¤Ï¥×¥í¥»¥¹id @var{pid}¤È¤È¤â¤Ë¥×¥í¥»¥¹¤Ë
Á÷¤é¤ì¤Þ¤¹¡¥@var{pid}¤¬¥¼¥í¤Î¾ì¹ç¡¤¸½ºß¤Î¥×¥í¥»¥¹¤Î¥×¥í¥»¥¹¥°¥ë¡¼¥×¤Î
¤¹¤Ù¤Æ¤Î¥×¥í¥»¥¹¤Ë¥·¥°¥Ê¥ë¤¬Á÷¤é¤ì¤Þ¤¹¡¥@var{pid}¤¬@samp{-1}¤Î¾ì¹ç¡¤¥æ¡¼
¥¶¤¬¥·¥°¥Ê¥ë¤òÁ÷¤ëµö²Ä¤ò»ý¤Ä¤¹¤Ù¤Æ¤Î¥×¥í¥»¥¹¤Ë¥·¥°¥Ê¥ë¤¬Á÷¤é¤ì¤Þ¤¹¡¥
@var{pid}¤¬@samp{-1}¤è¤ê¾®¤µ¤¤¾ì¹ç¡¤@var{pid}¤ÎÀäÂÐÃÍ¤ÈÆ±¤¸¥×¥í¥»¥¹¥°
¥ë¡¼¥×¤Î¤¹¤Ù¤Æ¤Î¥×¥í¥»¥¹¤Ë¥·¥°¥Ê¥ë¤¬Á÷¤é¤ì¤Þ¤¹¡¥

@c If @var{pid} is not positive, a system-dependent set of system
@c processes is excluded from the list of processes to which the signal
@c is sent.
@c 
@var{pid}¤¬Éé¤Î¾ì¹ç¡¤¥·¥¹¥Æ¥à¥×¥í¥»¥¹¤Î¥·¥¹¥Æ¥à¤Ë°ÍÂ¸¤¹¤ë¥»¥Ã¥È¤Ï¡¤¥·
¥°¥Ê¥ë¤òÁ÷¤ë¥×¥í¥»¥¹¤Î¥ê¥¹¥È¤«¤é½ü³°¤µ¤ì¤Þ¤¹¡¥

@c If a negative @var{PID} argument is desired as the first one, either a
@c signal must be specified as well, or the option parsing
@c must be interrupted with `--' before the first @var{pid} argument.
@c The following three commands are equivalent:
@c 
Éé¤Î@var{PID}°ú¿ô¤¬ºÇ½é¤Î¤â¤Î¤È¤·¤ÆÀß·×¤µ¤ì¤Æ¤¤¤ë¾ì¹ç¡¤¥·¥°¥Ê¥ë¤âÆ±ÍÍ
¤Ë»ØÄê¤¹¤ëÉ¬Í×¤¬¤¢¤ë¤³¤È¡¤¤Þ¤¿¤ÏºÇ½é¤Î@var{pid}°ú¿ô¤ÎÁ°¤Ë`--'¤¬»ÈÍÑ¤µ
¤ì¤Æ¤¤¤ë¤È²ò¼á¤¹¤ëÉ¬Í×¤¬¤¢¤ë¤³¤È¤Î¤¤¤º¤ì¤«¤Ë¤Ê¤ê¤Þ¤¹¡¥°Ê²¼¤Î»°¤Ä¤Î¥³¥Þ
¥ó¥É¤ÏÅù²Á¤Ç¤¹¡¥

@example
kill -15 -1
kill -TERM -1
kill -- -1
@end example

@c The first form of the @command{kill} command succeeds if every @var{pid}
@c argument specifies at least one process that the signal was sent to.
@c 
@command{kill}¥³¥Þ¥ó¥É¤ÎºÇ½é¤Î·Á¼°¤Ï¡¤¤¹¤Ù¤Æ¤Î@var{pid}°ú¿ô¤¬¾¯¤Ê¤¯¤È
¤â°ì¤Ä¤Î¥·¥°¥Ê¥ë¤¬Á÷¤é¤ì¤¿¥×¥í¥»¥¹¤ò»ØÄê¤·¤Æ¤¤¤ë¾ì¹ç¡¤¥³¥Þ¥ó¥É¤ÏÀ®¸ù¤·
¤Þ¤¹¡¥

@c The second form of the @command{kill} command lists signal information.
@c Either the @option{-l} or @option{--list} option, or the @option{-t}
@c or @option{--table} option must be specified.  Without any
@c @var{signal} argument, all supported signals are listed.  The output
@c of @option{-l} or @option{--list} is a list of the signal names, one
@c per line; if @var{signal} is already a name, the signal number is
@c printed instead.  The output of @option{-t} or @option{--table} is a
@c table of signal numbers, names, and descriptions.  This form of the
@c @command{kill} command succeeds if all @var{signal} arguments are valid
@c and if there is no output error.
@c 
@command{kill}¥³¥Þ¥ó¥É¤ÎÆóÈÖÌÜ¤Î·Á¼°¤Ç¤Ï¡¤¥·¥°¥Ê¥ë¤Î¾ðÊó¤¬¥ê¥¹¥È¥¢¥Ã¥×
¤µ¤ì¤Þ¤¹¡¥@option{-l}¤ä@option{--list}¥ª¥×¥·¥ç¥ó¡¤¤Þ¤¿¤Ï@option{-t}¤ä
@option{--table}¥ª¥×¥·¥ç¥ó¤Î¤É¤Á¤é¤«¤ò»ØÄê¤¹¤ëÉ¬Í×¤¬¤¢¤ê¤Þ¤¹¡¥
@var{signal}°ú¿ô¤òÍÑ¤¤¤Æ¤¤¤Ê¤¤¤È¡¤¥µ¥Ý¡¼¥È¤µ¤ì¤ë¤¹¤Ù¤Æ¤Î¥·¥°¥Ê¥ë¤¬¥ê¥¹
¥È¥¢¥Ã¥×¤µ¤ì¤Þ¤¹¡¥@option{-l}¤ä@option{--list}¤Î½ÐÎÏ¤Ï¡¤°ì¹ÔÃ±°Ì¤Î¥·¥°
¥Ê¥ëÌ¾¤Î¥ê¥¹¥È¤Ç¤¹¡¥@var{signal}¤ËÌ¾Á°¤¬¤¢¤ë¾ì¹ç¡¤¥·¥°¥Ê¥ëÈÖ¹æ¤¬Âå¤ï¤ê
¤Ë½ÐÎÏ¤µ¤ì¤Þ¤¹¡¥@option{-t}¤ä@option{--table}¤Î½ÐÎÏ¤Ï¡¤¥·¥°¥Ê¥ëÈÖ¹æ¡¤
Ì¾Á°¡¤¤½¤·¤Æ¤½¤ÎÀâÌÀ¤ÎÉ½¤Ç¤¹¡¥¤³¤Î@command{kill}¥³¥Þ¥ó¥É¤Î·Á¼°¤Ç¤Ï¡¤¤¹
¤Ù¤Æ¤Î@var{signal}°ú¿ô¤¬Í­¸ú¤Ç¡¤½ÐÎÏ¥¨¥é¡¼¤¬Ìµ¤¤¾ì¹ç¤ÏÀ®¸ù¤·¤Þ¤¹¡¥

@c The @command{kill} command also supports the @option{--help} and
@c @option{--version} options.  @xref{Common options}.
@c 
@command{kill}¥³¥Þ¥ó¥É¤Ï¡¤@option{--help}¤È@option{--version}¥ª¥×¥·¥ç
¥ó¤â¥µ¥Ý¡¼¥È¤·¤Æ¤¤¤Þ¤¹¡¥@xref{Common options}.

@c A @var{signal} may be a signal name like @samp{HUP}, or a signal
@c number like @samp{1}, or an exit status of a process terminated by the
@c signal.  A signal name can be given in canonical form or prefixed by
@c @samp{SIG}.  The case of the letters is ignored, except for the
@c @option{-@var{signal}} option which must use upper case to avoid
@c ambiguity with lower case option letters.  The following signal names
@c and numbers are supported on all @acronym{POSIX} compliant systems:
@c 
@var{signal}¤Ï¡¤@samp{HUP}¤Î¤è¤¦¤Ê¥·¥°¥Ê¥ëÌ¾¡¤¤½¤·¤Æ@samp{1}¤Î¤è¤¦¤Ê¥·
¥°¥Ê¥ëÈÖ¹æ¡¤¤½¤·¤Æ¥·¥°¥Ê¥ë¤Ç½ªÎ»¤·¤¿¤È¤­¤Î½ªÎ»¥¹¥Æ¡¼¥¿¥¹¤Î¤¤¤º¤ì¤Ç¤â¤«
¤Þ¤¤¤Þ¤»¤ó¡¥¥·¥°¥Ê¥ëÌ¾¤Ï¡¤É¸½àÅª¤Ê·Á¼°¡¤¤Þ¤¿¤Ï@samp{SIG}¤¬Á°ÃÖ¤µ¤ì¤Æ¤¤
¤ë¤â¤Î¤ÇÅÏ¤¹¤³¤È¤¬²ÄÇ½¤Ç¤¹¡¥ÂçÊ¸»ú¾®Ê¸»ú¤ÏÌµ»ë¤·¤Þ¤¹¤¬¡¤
@option{-@var{signal}} ¥ª¥×¥·¥ç¥ó¤Ç¤Ï¾®Ê¸»ú¤Î¥ª¥×¥·¥ç¥óÊ¸»ú¤Ç¤ÏÉÔÌÀÎÆ
¤Ë¤Ê¤ë¤Î¤òÈò¤±¤ë¤¿¤á¡¤ÂçÊ¸»ú¤ò»ÈÍÑ¤¹¤ëÉ¬Í×¤¬¤¢¤ê¤Þ¤¹¡¥°Ê²¼¤Î¥·¥°¥Ê¥ëÌ¾
¤ÈÈÖ¹æ¤Ï¡¤¤¹¤Ù¤Æ¤Î@acronym{POSIX}¸ß´¹¥·¥¹¥Æ¥à¤Ç¥µ¥Ý¡¼¥È¤µ¤ì¤Æ¤¤¤Þ¤¹¡¥

@table @samp
@item HUP
@c 1.  Hangup.
@c 
1.  ¥Ï¥ó¥°¥¢¥Ã¥×¡¥
@item INT
@c 2.  Terminal interrupt.
@c 
2.  Ã¼Ëö³ä¤ê¹þ¤ß¡¥
@item QUIT
@c 3.  Terminal quit.
@c 
3.  Ã¼Ëö½ªÎ»¡¥
@item ABRT
@c 6.  Process abort.
@c 
6.  ¥×¥í¥»¥¹¤Î°Û¾ï½ªÎ»¡¥
@item KILL
@c 9.  Kill (cannot be caught or ignored).
@c 
9.  ¥­¥ë(¥­¥ã¥Ã¥Á¤âÌµ»ë¤âÉÔ²ÄÇ½).
@item ALRM
@c 14.  Alarm Clock.
@c 
14.  ÌÜ³Ð¤·»þ·×¡¥
@item TERM
@c 15.  Termination.
@c 
15.  ½ªÎ»¡¥
@end table

@noindent
@c Other supported signal names have system-dependent corresponding
@c numbers.  All systems conforming to @acronym{POSIX} 1003.1-2001 also
@c support the following signals:
@c 
¤½¤ÎÂ¾¤Î¥µ¥Ý¡¼¥È¤µ¤ì¤Æ¤¤¤ë¥·¥°¥Ê¥ëÌ¾¤Ë¤Ï¡¤¥·¥¹¥Æ¥à¤Ë°ÍÂ¸¤·¤¿ÂÐ±þÈÖ¹æ¤¬
¤¢¤ê¤Þ¤¹¡¥@acronym{POSIX} 1003.1-2001¤Ë½àµò¤·¤Æ¤¤¤ë¤¹¤Ù¤Æ¤Î¥·¥¹¥Æ¥à¤Ç
¤Ï¡¤°Ê²¼¤Î¥·¥°¥Ê¥ë¤â¥µ¥Ý¡¼¥È¤·¤Æ¤¤¤Þ¤¹¡¥

@table @samp
@item BUS
@c Access to an undefined portion of a memory object.
@c 
¥á¥â¥ê¥ª¥Ö¥¸¥§¥¯¥È¤ÎÌ¤ÄêµÁ¤Î¾ì½ê¤Î¥¢¥¯¥»¥¹¡¥
@item CHLD
@c Child process terminated, stopped, or continued.
@c 
»Ò¥×¥í¥»¥¹¤Î½ªÎ»¡¤Ää»ß¡¤¤Þ¤¿¤Ï·ÑÂ³¡¥
@item CONT
@c Continue executing, if stopped.
@c 
Ää»ß¤µ¤ì¤Æ¤¤¤ë¾ì¹ç¡¤·ÑÂ³¤·¤¿¼Â¹Ô¡¥
@item FPE
@c Erroneous arithmetic operation.
@c 
´Ö°ã¤Ã¤Æ¤¤¤ë»»½Ñ½èÍý¡¥
@item ILL
@c Illegal Instruction.
@c 
ÉÔÀµ¤ÊÌ¿Îá¡¥
@item PIPE
@c Write on a pipe with no one to read it.
@c 
Ã¯¤âÆÉ¤ß¤³¤Þ¤Ê¤¤¥Ñ¥¤¥×¤Ø¤Î½ñ¤­¹þ¤ß¡¥
@item SEGV
@c Invalid memory reference.
@c 
Ìµ¸ú¤Ê¥á¥â¥ê»²¾È¡¥
@item STOP
@c Stop executing (cannot be caught or ignored).
@c 
¼Â¹Ô¤·¤Æ¤¤¤ë¤â¤Î¤ÎÄä»ß(¥­¥ã¥Ã¥Á¤âÌµ»ë¤âÉÔ²ÄÇ½).
@item TSTP
@c Terminal stop.
@c 
Ã¼Ëö¤ÎÄä»ß¡¥
@item TTIN
@c Background process attempting read.
@c 
¥Ð¥Ã¥¯¥°¥é¥¦¥ó¥É¥×¥í¥»¥¹¤Ø¤ÎÆÉ¤ß¹þ¤ß¥Æ¥¹¥È¡¥
@item TTOU
@c Background process attempting write.
@c 
¥Ð¥Ã¥¯¥°¥é¥ó¥É¥×¥í¥»¥¹¤Ø¤Î½ñ¤­¹þ¤ß¥Æ¥¹¥È¡¥
@item URG
@c High bandwidth data is available at a socket.
@c 
¥½¥±¥Ã¥È¤Ø¤Î¹âÂÓ°è¥Ç¡¼¥¿¤ÎÍøÍÑ²ÄÇ½¡¥
@item USR1
@c User-defined signal 1.
@c 
¥æ¡¼¥¶ÄêµÁ¥·¥°¥Ê¥ë1¡¥
@item USR2
@c User-defined signal 2.
@c 
¥æ¡¼¥¶ÄêµÁ¥·¥°¥Ê¥ë1¡¥
@end table

@noindent
@c @acronym{POSIX} 1003.1-2001 systems that support the @acronym{XSI} extension
@c also support the following signals:
@c 
@acronym{XSI}¤Î³ÈÄ¥¤ò¥µ¥Ý¡¼¥È¤·¤Æ¤¤¤ë@acronym{POSIX} 1003.1-2001¥·¥¹¥Æ
¥à¤Ç¤Ï¡¤°Ê²¼¤Î¥·¥°¥Ê¥ë¤â¥µ¥Ý¡¼¥È¤·¤Æ¤¤¤Þ¤¹¡¥

@table @samp
@item POLL
@c Pollable event.
@c 
¥¤¥Ù¥ó¥È¤Î¥Ý¡¼¥ê¥ó¥°¡¥
@item PROF
@c Profiling timer expired.
@c 
¥¿¥¤¥à¥¢¥¦¥È¤Î¥Ý¡¼¥ê¥ó¥°¡¥
@item SYS
@c Bad system call.
@c 
´Ö°ã¤Ã¤¿¥·¥¹¥Æ¥à¥³¡¼¥ë¡¥
@item TRAP
@c Trace/breakpoint trap.
@c 
¥È¥é¥Ã¥×¤ÎÄÉÀ×/¥Ö¥ì¡¼¥¯¥Ý¥¤¥ó¥È¡¥
@item VTALRM
@c Virtual timer expired.
@c 
²¾ÁÛ¥¿¥¤¥Þ¡¼¤Î¥¿¥¤¥à¥¢¥¦¥È¡¥
@item XCPU
@c CPU time limit exceeded.
@c 
CPU»þ´Ö¤ÎÀ©¸Â¤ÎÄ¶²á¡¥
@item XFSZ
@c File size limit exceeded.
@c 
¥Õ¥¡¥¤¥ë¥µ¥¤¥ºÀ©¸Â¤ÎÄ¶²á¡¥
@end table

@noindent
@c @acronym{POSIX} 1003.1-2001 systems that support the @acronym{XRT} extension
@c also support at least eight real-time signals called @samp{RTMIN},
@c @samp{RTMIN+1}, @dots{}, @samp{RTMAX-1}, @samp{RTMAX}.
@c 
@acronym{XRT}¤Î³ÈÄ¥¤ò¥µ¥Ý¡¼¥È¤·¤Æ¤¤¤ë@acronym{POSIX} 1003.1-2001¥·¥¹¥Æ
¥à¤Ç¤Ï¡¤¡¤¾¯¤Ê¤¯¤È¤â@samp{RTMIN}¡¤@samp{RTMIN+1}¡¤@dots{}¡¤
@samp{RTMAX-1}¡¤@samp{RTMAX}¤È¤¤¤Ã¤¿È¬¸Ä¤Î¥ê¥¢¥ë¥¿¥¤¥à¥·¥°¥Ê¥ë¤â¥µ¥Ý¡¼
¥È¤·¤Æ¤¤¤Þ¤¹¡¥


@node Delaying
@c @chapter Delaying
@chapter ÃÙ±ä

@cindex delaying commands
@cindex commands for delaying

@c Perhaps @command{wait} or other commands should be described here also?

@menu
* sleep invocation::            Delay for a specified time.
@end menu


@node sleep invocation
@c @section @command{sleep}: Delay for a specified time
@section @command{sleep}: »ØÄê¤·¤¿»þ´Ö¤ÎÃÙ±ä

@pindex sleep
@cindex delay for a specified time

@c @command{sleep} pauses for an amount of time specified by the sum of
@c the values of the command line arguments.
@c Synopsis:
@c 
@command{sleep}¤Ï¡¤¥³¥Þ¥ó¥É¥é¥¤¥ó°ú¿ô¤ÎÃÍ¤Î¹ç·×¤Ç»ØÄê¤µ¤ì¤¿»þ´Ö¡¤°ì»þ
Ää»ß¤·¤Þ¤¹¡¥³µÍ×¤Ç¤¹¡¥

@example
sleep @var{number}[smhd]@dots{}
@end example

@cindex time units
@c Each argument is a number followed by an optional unit; the default
@c is seconds.  The units are:
@c 
¤½¤ì¤¾¤ì¤Î°ú¿ô¤Ï¡¤¥ª¥×¥·¥ç¥ó¤ÎÃ±°Ì¤¬Â³¤¯¿ô»ú¤Ç¤¹¡¥¥Ç¥Õ¥©¥ë¥È¤ÏÉÃ¤Ç¤¹¡¥
Ã±°Ì¤Ï°Ê²¼¤Î¤È¤ª¤ê¤Ç¤¹¡¥

@table @samp
@item s
@c seconds
@c 
ÉÃ
@item m
@c minutes
@c 
Ê¬
@item h
@c hours
@c 
»þ´Ö
@item d
@c days
@c 
Æü
@end table

@c Historical implementations of @command{sleep} have required that
@c @var{number} be an integer.  However, GNU @command{sleep} accepts
@c arbitrary floating point numbers (using a period before any fractional
@c digits).
@c 
Îò»ËÅª¤Ë@command{sleep}¤Î¼ÂÁõ¤Ç¤Ï¡¤@var{number}¤¬À°¿ô¤Ç¤¢¤ë¤³¤È¤òÍ×µá
¤·¤Æ¤¤¤Þ¤·¤¿¡¥¤·¤«¤·¡¤GNU @command{sleep}¤Ï(¾®¿ôÉô¤ÎÁ°¤Ë¥Ô¥ê¥ª¥É¤ò»ÈÍÑ
¤·¤Æ¤¤¤ë)Ç¤°Õ¤ÎÉâÆ°¾®¿ôÅÀ¤â¼õ¤±Æþ¤ì¤Þ¤¹¡¥

@c The only options are @option{--help} and @option{--version}.  @xref{Common
@c options}.
@c 
¥ª¥×¥·¥ç¥ó¤Ï@option{--help}¤È@option{--version}¤À¤±¤Ç¤¹¡¥@xref{Common
options}.

@exitstatus


@node Numeric operations
@c @chapter Numeric operations
@chapter ¿ôÃÍ½èÍý

@cindex numeric operations
@c These programs do numerically-related operations.
@c 
°Ê²¼¤Î¥×¥í¥°¥é¥à¤Ï¿ôÃÍ¤Ë´Ø¤¹¤ë½èÍý¤ò¹Ô¤¤¤Þ¤¹¡¥

@menu
* factor invocation::              Show factors of numbers.
* seq invocation::                 Print sequences of numbers.
@end menu


@node factor invocation
@c @section @command{factor}: Print prime factors
@section @command{factor}: ÁÇ°ø¿ô¤ò½ÐÎÏ

@pindex factor
@cindex prime factors

@c @command{factor} prints prime factors.  Synopses:
@c 
@command{factor}¤ÏÁÇ°ø¿ô¤ò½ÐÎÏ¤·¤Þ¤¹¡¥³µÍ×¤Ç¤¹¡¥

@example
factor [@var{number}]@dots{}
factor @var{option}
@end example

@c If no @var{number} is specified on the command line, @command{factor} reads
@c numbers from standard input, delimited by newlines, tabs, or spaces.
@c 
¥³¥Þ¥ó¥É¥é¥¤¥ó¤Ë@var{number}¤¬»ØÄê¤µ¤ì¤Ê¤¤¾ì¹ç¡¤@command{factor}¤ÏÉ¸½à
ÆþÎÏ¤«¤éÆÉ¤ß¹þ¤ß¡¤¤½¤ì¤Ï¡¤²þ¹Ô¡¤¥¿¥Ö¡¤¤Þ¤¿¤Ï¥¹¥Ú¡¼¥¹¤Ç¶èÀÚ¤é¤ì¤Æ¤¤¤Þ¤¹¡¥

@c The only options are @option{--help} and @option{--version}.  @xref{Common
@c options}.
@c 
¥ª¥×¥·¥ç¥ó¤Ï¡¤@option{--help}¤È@option{--version}¤Î¤ß¤Ç¤¹¡¥
@xref{Common options}.

@c The algorithm it uses is not very sophisticated, so for some inputs
@c @command{factor} runs for a long time.  The hardest numbers to factor are
@c the products of large primes.  Factoring the product of the two largest 32-bit
@c prime numbers takes about 80 seconds of CPU time on a 1.6 GHz Athlon.
@c 
»ÈÍÑ¤¹¤ë¥¢¥ë¥´¥ê¥º¥à¤Ï¡¤¤¢¤Þ¤êÀöÎý¤µ¤ì¤¿¤â¤Î¤Ç¤Ï¤Ê¤¤¤Î¤Ç¡¤ÆþÎÏ¤Ë¤è¤Ã¤Æ
¤Ï@command{factor}¤Î¼Â¹Ô¤Ë»þ´Ö¤¬¤«¤«¤ë¤³¤È¤¬¤¢¤ê¤Þ¤¹¡¥@command{factor} 
¤Ë¤È¤Ã¤ÆºÇ¤â¸·¤·¤¤¤â¤Î¤Ï¡¤Âç¤­¤ÊÁÇ¿ô¤Î¾è¿ô¤Ç¤¹¡¥Æó¤Ä¤ÎÂç¤­¤Ê32¥Ó¥Ã¥È¤Î
ÁÇ¿ô¤Î¾è¿ô¤òÁÇ°ø¿ôÊ¬²ò¤¹¤ë¤È¡¤1.6 GHz Athlon¤Ç80ÉÃÄøÅÙ¤ÎCPU»þ´Ö¤¬¤«¤«
¤ê¤Þ¤¹¡¥

@example
$ p=`echo '4294967279 * 4294967291'|bc`
$ factor $p
18446743979220271189: 4294967279 4294967291
@end example

@c Similarly, it takes about 80 seconds for GNU factor (from coreutils-5.1.2)
@c to ``factor'' the largest 64-bit prime:
@c 
Æ±ÍÍ¤Ë¡¤ºÇÂç¤Î64¥Ó¥Ã¥È¤ÎÁÇ¿ô¤Î``ÁÇ°ø¿ôÊ¬²ò''¤Ç¡¤GNU @command{factor}
(coreutils-5.1.2)¤Ç80ÉÃÄøÅÙ¤«¤«¤ê¤Þ¤¹¡¥
@example
$ factor 18446744073709551557
  18446744073709551557: 18446744073709551557
@end example

@c In contrast, @command{factor} factors the largest 64-bit number in just
@c over a tenth of a second:
@c 
È¿ÂÐ¤Ë¡¤@command{factor}¤Ï¡¤Âç¤­¤Ê64¥Ó¥Ã¥È¤Î¿ô»ú¤ò½½ÉÃ¤Á¤ç¤Ã¤È¤ÇÁÇ°ø¿ô
Ê¬²ò¤·¤Þ¤¹¡¥

@example
$ factor `echo '2^64-1'|bc`
18446744073709551615: 3 5 17 257 641 65537 6700417
@end example

@exitstatus


@node seq invocation
@c @section @command{seq}: Print numeric sequences
@section @command{seq}: ¿ôÎó¤ò½ÐÎÏ

@pindex seq
@cindex numeric sequences
@cindex sequence of numbers

@c @command{seq} prints a sequence of numbers to standard output.  Synopses:
@c 
@command{seq}¤Ï¡¤¿ô»ú¤ÎÎó¤òÉ¸½à½ÐÎÏ¤Ë½ÐÎÏ¤·¤Þ¤¹¡¥³µÍ×¤Ç¤¹¡¥

@example
seq [@var{option}]@dots{} @var{last}
seq [@var{option}]@dots{} @var{first} @var{last}
seq [@var{option}]@dots{} @var{first} @var{increment} @var{last}
@end example

@c @command{seq} prints the numbers from @var{first} to @var{last} by
@c @var{increment}.  By default, each number is printed on a separate line.
@c When @var{increment} is not specified, it defaults to @samp{1},
@c even when @var{first} is larger than @var{last}.
@c @var{first} also defaults to @samp{1}.  So @code{seq 1} prints
@c @samp{1}, but @code{seq 0} and @code{seq 10 5} produce no output.
@c Floating-point numbers
@c may be specified (using a period before any fractional digits).
@c 
@command{seq}¤Ï¡¤@var{first}¤«¤é@var{last}¤Þ¤Ç@var{increment}¤ª¤­¤Ë¡¤
¿ô»ú¤ò½ÐÎÏ¤·¤Þ¤¹¡¥¥Ç¥Õ¥©¥ë¥È¤Ç¡¤¤½¤ì¤¾¤ì¤Î¿ô»ú¤ÏÊÌ¡¹¤Î¹Ô¤Ë½ÐÎÏ¤µ¤ì¤Þ¤¹¡¥
@var{increment}¤¬»ØÄê¤µ¤ì¤Æ¤¤¤Ê¤¤¤È¤­¡¤@var{first}¤¬@var{last}¤è¤êÂç¤­
¤¤¤È¤­¤Ç¤â¡¤¤½¤Î¥Ç¥Õ¥©¥ë¥È¤Ï@samp{1}¤Ë¤Ê¤ê¤Þ¤¹¡¥@var{first}¤Î¥Ç¥Õ¥©¥ë
¥È¤â@samp{1}¤Ç¤¹¡¥¤½¤Î¤¿¤á¡¤So @code{seq 1}¤Ï@samp{1}¤ò½ÐÎÏ¤·¤Þ¤¹¤¬¡¤
@code{seq 0}¤È@code{seq 10 5}¤Ç¤Ï½ÐÎÏ¤·¤Þ¤»¤ó¡¥(¾®¿ôÉô¤ÎÁ°¤Ë¥Ô¥ê¥ª¥É¤ò
»ÈÍÑ¤·¤Æ¤¤¤ë)ÉâÆ°¾®¿ôÅÀ¤Î¿ô»ú¤ò»ØÄê¤·¤Æ¤â¤«¤Þ¤¤¤Þ¤»¤ó¡¥

@c The program accepts the following options.  Also see @ref{Common options}.
@c 
¥×¥í¥°¥é¥à¤Ï°Ê²¼¤Î¥ª¥×¥·¥ç¥ó¤ò¼õ¤±Æþ¤ì¤Þ¤¹¡¥@ref{Common options}¤â»²¾È
¤·¤Æ¤¯¤À¤µ¤¤¡¥

@table @samp
@item -f @var{format}
@itemx --format=@var{format}
@opindex -f @var{format}
@opindex --format=@var{format}
@cindex formatting of numbers in @command{seq}
@c Print all numbers using @var{format}; default @samp{%g}.
@c @var{format} must contain exactly one of the floating point
@c output formats @samp{%e}, @samp{%f}, or @samp{%g}.
@c 
¤¹¤Ù¤Æ¤Î¿ô»ú¤ò@var{format}¤ò»ÈÍÑ¤·¤Æ½ÐÎÏ¤·¤Þ¤¹¡¥¥Ç¥Õ¥©¥ë¥È¤Ï@samp{%g} 
¤Ç¤¹¡¥@var{format}¤Ï¡¤É¸½àÅª¤ÊÉâÆ°¾®¿ôÅÀ½ÐÎÏ½ñ¼°¤Î¡¤@samp{%e}¡¤
@samp{%f}¡¤¤Þ¤¿¤Ï@samp{%g}¤ÎÆâ¡¤¤¿¤À°ì¤Ä¤À¤±¤ò´Þ¤ó¤Ç¤¤¤ëÉ¬Í×¤¬¤¢¤ê¤Þ¤¹¡¥

@item -s @var{string}
@itemx --separator=@var{string}
@cindex separator for numbers in @command{seq}
@c Separate numbers with @var{string}; default is a newline.
@c The output always terminates with a newline.
@c 
¿ô»ú¤ò@var{string}¤ÇÊ¬Î¥¤·¤Þ¤¹¡¥¥Ç¥Õ¥©¥ë¥È¤Ï²þ¹Ô¤Ç¤¹¡¥½ÐÎÏ¤Ï¡¤¾ï¤Ë²þ¹Ô
¤Ç½ªÎ»¤·¤Þ¤¹¡¥

@item -w
@itemx --equal-width
@c Print all numbers with the same width, by padding with leading zeroes.
@c (To have other kinds of padding, use @option{--format}).
@c 
¤¹¤Ù¤Æ¤Î¿ô»ú¤òÆ±¤¸Éý¤Ç½ÐÎÏ¤·¡¤¥¼¥í¤òÁ°ÃÖ¤·¤Æ¥Ñ¥Ç¥£¥ó¥°¤·¤Þ¤¹¡¥(Â¾¤Î¼ï
Îà¤Î¥Ñ¥Ç¥£¥ó¥°¤ò¤¹¤ë¤¿¤á¡¤@option{--format}¤ò»ÈÍÑ¤·¤Æ¤¯¤À¤µ¤¤)¡¥

@end table

@c If you want to use @command{seq} to print sequences of large integer values,
@c don't use the default @samp{%g} format since it can result in
@c loss of precision:
@c 
Âç¤­¤ÊÀ°¿ôÃÍ¤ÎÎó¤ò½ÐÎÏ¤¹¤ë¤¿¤á¤Ë@command{seq}¤ò»ÈÍÑ¤·¤¿¤¤¾ì¹ç¡¤ÀºÅÙ¤¬
°­¤¯¤Ê¤ë¤Î¤Ç¥Ç¥Õ¥©¥ë¥È¤Î@samp{%g}½ñ¼°¤ò»ÈÍÑ¤·¤Ê¤¤¤Ç²¼¤µ¤¤¡¥

@example
$ seq 1000000 1000001
1e+06
1e+06
@end example

@c Instead, you can use the format, @samp{%1.f},
@c to print large decimal numbers with no exponent and no decimal point.
@c 
Âå¤ï¤ê¤Ë¡¤»Ø¿ô¤â½½¿Ê¿ô¤ÎÅÀ¤â»ÈÍÑ¤»¤º¤Ë½½¿Ê¿ô¤ò½ÐÎÏ¤¹¤ë¤¿¤á¡¤½ñ¼°
@samp{%1.f}¤ò»ÈÍÑ¤¹¤ë¤³¤È¤¬²ÄÇ½¤Ç¤¹¡¥

@example
$ seq --format=%1.f 1000000 1000001
1000000
1000001
@end example

@c If you want hexadecimal output, you can use @command{printf}
@c to perform the conversion:
@c 
16¿Ê¿ô¤Ç½ÐÎÏ¤·¤¿¤¤¾ì¹ç¡¤ÊÑ´¹¤ò¼Â¹Ô¤¹¤ë¤¿¤á¤Ë@command{printf}¤ò»ÈÍÑ¤¹¤ë
¤³¤È¤¬²ÄÇ½¤Ç¤¹¡¥

@example
$ printf %x'\n' `seq -f %1.f 1048575 1024 1050623`
fffff
1003ff
1007ff
@end example

@c For very long lists of numbers, use xargs to avoid
@c system limitations on the length of an argument list:
@c 
Èó¾ï¤ËÄ¹¤¤¿ô»ú¤Î¥ê¥¹¥È¤ËÂÐ¤·¤Æ¤Ï¡¤°ú¿ô¥ê¥¹¥È¤ÎÄ¹¤µ¤Ë¤ª¤±¤ë¥·¥¹¥Æ¥à¤ÎÀ©
¸Â¤òÈò¤±¤ë¤¿¤á@command{xargs}¤ò»ÈÍÑ¤·¤Æ²¼¤µ¤¤¡¥

@example
$ seq -f %1.f 1000000 | xargs printf %x'\n' | tail -n 3
f423e
f423f
f4240
@end example

@c To generate octal output, use the printf @code{%o} format instead
@c of @code{%x}.  Note however that using printf works only for numbers
@c smaller than @code{2^32}:
@c 
È¬¿Ê¿ô¤òÀ¸À®¤¹¤ë¤¿¤á¤Ë¡¤@code{%x}¤ÎÂå¤ï¤ê¤Ë@command{printf}¤Î@code{%o} 
½ñ¼°¤ò»ÈÍÑ¤·¤Æ²¼¤µ¤¤¡¥¤·¤«¤·¡¤@command{printf}¤Î»ÈÍÑ¤Ï@code{2^32}Ì¤Ëþ
¤ÎÀ°¿ô¤Ç¤Î¤ßÆ°ºî¤¹¤ë¤³¤È¤ËÃí°Õ¤·¤Æ²¼¤µ¤¤¡¥

@example
$ printf "%x\n" `seq -f %1.f 4294967295 4294967296`
ffffffff
bash: printf: 4294967296: Numerical result out of range
@end example

@c On most systems, seq can produce whole-number output for values up to
@c @code{2^53}, so here's a more general approach to base conversion that
@c also happens to be more robust for such large numbers.  It works by
@c using @code{bc} and setting its output radix variable, @var{obase},
@c to @samp{16} in this case to produce hexadecimal output.
@c 
¤Û¤È¤ó¤É¤Î¥·¥¹¥Æ¥à¤Ç¡¤@command{seq}¤ÏºÇÂç@code{2^53}¤Þ¤ÇÃÍ¤Ç¤¹¤Ù¤Æ¤Î¿ô
»ú¤òÀ¸À®¤¹¤ë¤³¤È¤¬²ÄÇ½¤Ê¤Î¤Ç¡¤¤½¤Î¤è¤¦¤ÊÂç¤­¤Ê¿ô¤ò¤è¤ê¶¯¸Ç¤ËÀ¸À®¤¹¤ë¤¿
¤á¤Ë¡¤´ð¿ôÊÑ´¹¤Î¤è¤ê°ìÈÌÅª¤Ê¼êË¡¤È¤·¤Æ°Ê²¼¤Î¤â¤Î¤¬¤¢¤ê¤Þ¤¹¡¥¤½¤ì¤Ï¡¤
@code{bc}¤ò»ÈÍÑ¤·¡¤½ÐÎÏ¤Î´ð¿ô¤ÎÃÍ¤òÀßÄê¤¹¤ë¤³¤È¤ÇÆ°ºî¤·¡¤°Ê²¼¤Ç¤Ï16¿Ê
¿ô¤Î½ÐÎÏ¤ò¹Ô¤Ê¤¦¾õ¶·¤È¤·¤Æ¡¤@var{obase}¤ò@samp{16}¤Ë¤·¤Æ¤¤¤Þ¤¹¡¥

@example
$ (echo obase=16; seq -f %1.f 4294967295 4294967296)|bc
FFFFFFFF
100000000
@end example

@c Be careful when using @command{seq} with a fractional @var{increment},
@c otherwise you may see surprising results.  Most people would expect to
@c see @code{0.3} printed as the last number in this example:
@c 
@command{seq}¤ò¾®¿ô¤Î@var{increment}¤Ç»ÈÍÑ¤·¤Æ¤¤¤ë¤È¤­Ãí°Õ¤·¤Ê¤¤¤È¡¤¤Ó¤Ã
¤¯¤ê¤¹¤ë¤è¤¦¤Ê·ë²Ì¤Ë¤Ê¤ë²ÄÇ½À­¤¬¤¢¤ê¤Þ¤¹¡¥°Ê²¼¤ÎÎã¤Ç¤Ï¡¤ºÇ¸å¤ÎÃÍ¤¬
@code{0.3}¤Ë¤Ê¤ë¤³¤È¤ò¡¤¤Û¤È¤ó¤É¤Î¿Í¤¬´üÂÔ¤¹¤ë¤Ç¤·¤ç¤¦¡¥

@example
$ seq -s' ' 0 .1 .3
0 0.1 0.2
@end example

@c But that doesn't happen on most systems because @command{seq} is
@c implemented using binary floating point arithmetic (via the C
@c @code{double} type) -- which means some decimal numbers like @code{.1}
@c cannot be represented exactly.  That in turn means some nonintuitive
@c conditions like @w{@code{.1 * 3 > .3}} will end up being true.
@c 
¤·¤«¤·¡¤@command{seq}¤¬Æó¿Ê¿ô¤ÎÉâÆ°¾®¿ôÅÀ(C¤Î@code{double}·¿)¤Ç·×»»¤·
¤Æ¤¤¤ë¤¿¤á¡¤¤Û¤È¤ó¤É¤Î¥·¥¹¥Æ¥à¤Ç¤½¤¦¤Ï¤Ê¤ê¤Þ¤»¤ó -- ¤Ä¤Þ¤ê¡¤½½¿Ê¿ô¤Î
@code{.1}¤ÏÀµ³Î¤ËÉ½¸½¤Ç¤­¤Ê¤¤¤³¤È¤ò°ÕÌ£¤·¤Þ¤¹¡¥¤Ä¤Þ¤ê¡¤@w{@code{.1 * 3
> .3}}¤Î¤è¤¦¤ÊÈóÄ¾´ÑÅª¤Ê¾ò·ï¼°¤¬¡¤·ë¶É¤ÏÀµ¤·¤¤¤È¤¤¤¦¤³¤È¤ò°ÕÌ£¤·¤Æ¤¤¤Þ
¤¹¡¥

@c To work around that in the above example, use a slightly larger number as
@c the @var{last} value:
@c 
¾åµ­¤ÎÎã¤ò²óÈò¤¹¤ë¤¿¤á¡¤@var{last}¤ÎÃÍ¤Ë¤Á¤ç¤Ã¤ÈÂç¤­¤¤¿ô»ú¤ò»ÈÍÑ¤·¤Æ²¼
¤µ¤¤¡¥

@example
$ seq -s' ' 0 .1 .31
0 0.1 0.2 0.3
@end example

@c In general, when using an @var{increment} with a fractional part, where
@c (@var{last} - @var{first}) / @var{increment} is (mathematically) a whole
@c number, specify a slightly larger (or smaller, if @var{increment} is negative)
@c value for @var{last} to ensure that @var{last} is the final value printed
@c by seq.
@c 
°ìÈÌÅª¤Ë¡¤¾®¿ôÉôÊ¬¤Ç@var{increment}¤ò»ÈÍÑ¤·¤Æ¤¤¤ë¤È¤­¡¤¤½¤·¤Æ
(@var{last} - @var{first}) / @var{increment}¤¬(¿ô³ØÅª¤Ë)À°¿ô¤Ç¤¢¤Ã¤Æ¤â
@var{last}¤¬³Î¼Â¤Ë@command{seq}¤Ç½ÐÎÏ¤µ¤ì¤ëºÇ½ªÃÍ¤Ë¤Ê¤ë¤è¤¦¤Ë¡¤
@var{last}¤ÎÃÍ¤ò¤ï¤º¤«¤ËÂç¤­¤¤(¤Þ¤¿¤Ï@var{increment}¤¬Éé¤Î¾ì¹ç¤Ï¾®¤µ¤¤) 
ÃÍ¤Ë»ØÄê¤·¤Æ²¼¤µ¤¤¡¥

@exitstatus


@node File permissions
@c @chapter File permissions
@chapter ¥Õ¥¡¥¤¥ë¤Îµö²Ä
@include perm-ja.texi

@include getdate-ja.texi

@c              What's GNU?
@c              Arnold Robbins
@node Opening the software toolbox
@c @chapter Opening the Software Toolbox
@chapter ¥½¥Õ¥È¥¦¥§¥¢¡¦¥Ä¡¼¥ë¥Ü¥Ã¥¯¥¹¤ò³«¤¯

@c This chapter originally appeared in @cite{Linux Journal}, volume 1,
@c number 2, in the @cite{What's GNU?} column. It was written by Arnold
@c Robbins.
@c 
¤³¤Î¾Ï¤Ï¤â¤È¤â¤È@cite{Linux Journal}¡¤volume 1¡¤number 2¤Î¥³¥é¥à
@cite{What's GNU?}¤Çµ­ºÜ¤µ¤ì¤Þ¤·¤¿¡¥¤½¤ì¤Ï¡¤Arnold Robbins¤Ë¤è¤Ã¤Æ½ñ¤«
¤ì¤Þ¤·¤¿¡¥

@menu
* Toolbox introduction::        Toolbox introduction
* I/O redirection::             I/O redirection
* The who command::             The @command{who} command
* The cut command::             The @command{cut} command
* The sort command::            The @command{sort} command
* The uniq command::            The @command{uniq} command
* Putting the tools together::  Putting the tools together
@end menu


@node Toolbox introduction
@c @unnumberedsec Toolbox Introduction
@unnumberedsec ¥Ä¡¼¥ë¥Ü¥Ã¥¯¥¹¤Î¾Ò²ð

@c This month's column is only peripherally related to the GNU Project, in
@c that it describes a number of the GNU tools on your GNU/Linux system and how they
@c might be used.  What it's really about is the ``Software Tools'' philosophy
@c of program development and usage.
@c 
º£·î¤Î¥³¥é¥à¤Ï¡¤GNU¥×¥í¥¸¥§¥¯¥È¤Î¼þÊÕ¤À¤±¤Ë´ØÏ¢¤¹¤ë¤â¤Î¤Ç¡¤¤½¤³¤Ç¤Ï¡¤
GNU/Linux¥·¥¹¥Æ¥à¾å¤Î¤¤¤¯¤Ä¤«¤ÎGNU¥Ä¡¼¥ë¤È¡¤¤½¤ì¤é¤Î»ÈÍÑÊýË¡¤òµ­½Ò¤·¤Þ
¤¹¡¥¤½¤ì¤ÏÀµ¤Ë¡¤¥×¥í¥°¥é¥à³«È¯¤È»ÈÍÑÊýË¡¤Î``¥½¥Õ¥È¥¦¥§¥¢¥Ä¡¼¥ë''¤ÎÅ¯
³Ø¤Ç¤¹¡¥

@c The software tools philosophy was an important and integral concept
@c in the initial design and development of Unix (of which Linux and GNU are
@c essentially clones).  Unfortunately, in the modern day press of
@c Internetworking and flashy GUIs, it seems to have fallen by the
@c wayside.  This is a shame, since it provides a powerful mental model
@c for solving many kinds of problems.
@c 
¥½¥Õ¥È¥¦¥§¥¢¥Ä¡¼¥ë¤ÎÅ¯³Ø¤Ï¡¤½é´üÀß·×¤È(Linux¤ÈGNU¤¬ËÜ¼ÁÅª¤Ë¿¿»÷¤Æ¤¤¤ë)
Unix¤Î³«È¯¤Ç¤Ï½ÅÍ×¤ÇÉÔ²Ä·ç¤Ê³µÇ°¤Ç¤·¤¿¡¥ÉÔ¹¬¤Ë¤â¡¤¥¤¥ó¥¿¡¼¥Í¥Ã¥È¥ï¡¼¥­
¥ó¥°¤ÈÇÉ¼ê¤ÊGUI¤Î¸½ºß¤Î½ÐÉÊÊª¤Ç¤Ï¡¤¤½¤ì¤Ï²¦Æ»¤«¤é¤½¤ì¤Æ¤·¤Þ¤Ã¤Æ¤¤¤ë¤è
¤¦¤Ë´¶¤¸¤é¤ì¤Þ¤¹¡¥¤½¤ì¤ÏÂ¿¤¯¤Î¼ïÎà¤ÎÌäÂê¤ò²ò·è¤¹¤ë¤¿¤á¡¤¶¯ÎÏ¤ÇÀº¿ÀÅª¤Ê
¥â¥Ç¥ë¤òÄó¶¡¤¹¤ë¤Î¤Ç»ÄÇ°¤Ç¤¹¡¥

@c Many people carry a Swiss Army knife around in their pants pockets (or
@c purse).  A Swiss Army knife is a handy tool to have: it has several knife
@c blades, a screwdriver, tweezers, toothpick, nail file, corkscrew, and perhaps
@c a number of other things on it.  For the everyday, small miscellaneous jobs
@c where you need a simple, general purpose tool, it's just the thing.
@c 
¥º¥Ü¥ó¤Î¥Ý¥±¥Ã¥È(¤Þ¤¿¤Ï¥Ï¥ó¥É¥Ð¥Ã¥°)¤Ë¡¤¥¹¥¤¥¹¤Î¥¢¡¼¥ß¡¼¥Ê¥¤¥Õ¤ò»ý¤Á±¿
¤ó¤Ç¤¤¤ë¿Í¤â¤¿¤¯¤µ¤ó¤¤¤Þ¤¹¡¥¥¹¥¤¥¹¤Î¥¢¡¼¥ß¡¼¥Ê¥¤¥Õ¤ÏÍ­ÍÑ¤Ê¥Ï¥ó¥Ç¥£¡¼¥Ä¡¼
¥ë¤Ç¤¹¡¥¤½¤ì¤Ï¤¤¤¯¤Ä¤«¤Î¥Ê¥¤¥Õ¤Î¿Ï¡¤¥Í¥¸²ó¤·¡¤ÌÓÈ´¤­¡¤ÍÌ»Ò¡¤ÄÞ¤ä¤¹¤ê¡¤
ÀòÈ´¤­¡¤¤½¤·¤Æ¤½¤ÎÂ¾¤Ë¤¤¤¯¤Ä¤«¤Î¤â¤Î¤¬¤­¤Ã¤È¤¢¤ê¤Þ¤¹¡¥ËèÆü¤Î¡¤Ã±½ã¤ÊÈÆ
ÍÑ¤Î¥Ä¡¼¥ë¤¬É¬Í×¤Ê¾®¤µ¤ÊÍÍ¡¹¤Ê»Å»ö¤Ç¤ª¤¢¤Ä¤é¤¨¸þ¤­¤Ç¤¹¡¥

@c On the other hand, an experienced carpenter doesn't build a house using
@c a Swiss Army knife.  Instead, he has a toolbox chock full of specialized
@c tools---a saw, a hammer, a screwdriver, a plane, and so on.  And he knows
@c exactly when and where to use each tool; you won't catch him hammering nails
@c with the handle of his screwdriver.
@c 
°ìÊý¡¤·Ð¸³Ë­ÉÙ¤ÊÂç¹©¤Ï¡¤¥¹¥¤¥¹¤Î¥¢¡¼¥ß¡¼¥Ê¥¤¥Õ¤ò»ÈÍÑ¤·¤Æ²È¤ò·ú¤Æ¤Þ¤»¤ó¡¥
¤½¤ÎÂå¤ï¤ê¤Ë¡¤ÀìÌçÅª¤ÊÆ»¶ñ --- ¤Î¤³¤®¤ê¡¤¤«¤Ê¤Å¤Á¡¤¥Í¥¸²ó¤·¡¤¤«¤ó¤ÊÅù
¤¬¤®¤Ã¤·¤êµÍ¤Þ¤Ã¤¿Æ»¶ñÈ¢¤ò»ý¤Ã¤Æ¤¤¤Þ¤¹¡¥¤½¤·¤Æ¡¤¤½¤ì¤¾¤ì¤ÎÆ»¶ñ¤ò¤¤¤Ä¤É
¤³¤Ç»ÈÍÑ¤¹¤ë¤Î¤«ÃÎ¤Ã¤Æ¤¤¤Þ¤¹¡¥¥Í¥¸²ó¤·¤ò°·¤¤¤Ê¤¬¤é¡¤Å£¤òÂÇ¤Ã¤Æ¤¤¤ë¤È¤³
¤í¤ò¸«¤¿¤³¤È¤Ï¤Ê¤¤¤Ç¤·¤ç¤¦¡¥

@c The Unix developers at Bell Labs were all professional programmers and trained
@c computer scientists.  They had found that while a one-size-fits-all program
@c might appeal to a user because there's only one program to use, in practice
@c such programs are
@c 
¥Ù¥ë¸¦µæ½ê¤ÎUnix³«È¯¼Ô¤Ï¡¤Á´¤ÆÀìÌçÅª¤Ê¥×¥í¥°¥é¥Þ¤È·±Îý¤µ¤ì¤¿¥³¥ó¥Ô¥å¡¼
¥¿²Ê³Ø¼Ô¤Ç¤¹¡¥Èà¤é¤Ï¡¤°ì¤Ä¤Î¥×¥í¥°¥é¥à¤Î¤ß¤òÍøÍÑ¤¹¤ë¤¿¤á¡¤°ì¤Ä¤ÇÁ´¤Æ¤Ë
Å¬¤¹¤ë¥×¥í¥°¥é¥à¤ò¥æ¡¼¥¶¤ËÄó¼¨¤¹¤ë°ìÊý¡¤¤½¤Î¤è¤¦¤Ê¥×¥í¥°¥é¥à¤Ï°Ê²¼¤Î¤è
¤¦¤Ë¤Ê¤ë¤³¤È¤¬Ê¬¤«¤ê¤Þ¤·¤¿¡¥

@enumerate a
@item
@c difficult to write,
@c 
½ñ¤¯¤Î¤¬Æñ¤·¤¤¡¥

@item
@c difficult to maintain and
@c debug, and
@c 
´ÉÍý¤È¥Ç¥Ð¥Ã¥¯¤¬Æñ¤·¤¤¡¥

@item
@c difficult to extend to meet new situations.
@c 
¿·¤·¤¤¾õ¶·¤ËÂÐ¤·³ÈÄ¥¤¬Æñ¤·¤¤¡¥
@end enumerate

@c Instead, they felt that programs should be specialized tools.  In short, each
@c program ``should do one thing well.''  No more and no less.  Such programs are
@c simpler to design, write, and get right---they only do one thing.
@c 
¤½¤ÎÂå¤ï¤ê¤Ë¡¤¥×¥í¥°¥é¥à¤ÏÀìÌçÅª¤Ê¥Ä¡¼¥ë¤Ç¤¢¤ë¤Ù¤­¤À¤È´¶¤¸¤Þ¤·¤¿¡¥Í×¤¹
¤ë¤Ë¡¤¤½¤ì¤¾¤ì¤Î¥×¥í¥°¥é¥à¤Ï¡¤``°ì¤Ä¤Î¤³¤È¤ò¾å¼ê¤Ë¤¹¤Ù¤­¤Ç¤¢¤ë''¤È¤¤¤¦
¤³¤È¤Ç¤¹¡¥¤½¤ì°Ê¾å¤Ç¤â°Ê²¼¤Ç¤â¤¢¤ê¤Þ¤»¤ó¡¥¤½¤Î¤è¤¦¤Ê¥×¥í¥°¥é¥à¤Ï¡¤Àß·×¡¤
ºîÀ®¤¬¤è¤êÃ±½ã¤Ç¡¤Àµ¤·¤¤¤â¤Î¤òÆÀ¤é¤ì¤Þ¤¹ --- ¤¿¤À°ì¤Ä¤Î¤³¤È¤ò¤¹¤ë¤À¤±
¤Ç¤¹¡¥

@c Furthermore, they found that with the right machinery for hooking programs
@c together, that the whole was greater than the sum of the parts.  By combining
@c several special purpose programs, you could accomplish a specific task
@c that none of the programs was designed for, and accomplish it much more
@c quickly and easily than if you had to write a special purpose program.
@c We will see some (classic) examples of this further on in the column.
@c (An important additional point was that, if necessary, take a detour
@c and build any software tools you may need first, if you don't already
@c have something appropriate in the toolbox.)
@c 
¹¹¤ËÈà¤é¤Ï¡¤ÎÉ¤¤¥Þ¥·¥ó¤Ç¥×¥í¥°¥é¥à¤ò°ì½ï¤Ë¥Ï¥Ã¥¯¤¹¤ë¤¿¤á¡¤Á´ÂÎ¤ÏÉôÊ¬¤Î
½¸¹ç¤è¤ê°ÎÂç¤Ç¤¢¤ë¤³¤È¤Ëµ¤ÉÕ¤­¤Þ¤·¤¿¡¥¤¤¤¯¤Ä¤«¤ÎÆÃÊÌ¤ÊÌÜÅª¤Î¥×¥í¥°¥é¥à
¤òÁÈ¤ß¹ç¤ï¤»¤ë¤³¤È¤Ç¡¤¥×¥í¥°¥é¥à¤¬Àß·×¤µ¤ì¤¿ÌÜÅª¤Ë¤ÏÌµ¤¤ÆÃÄê¤Î»Å»ö¤òÃ£
À®¤·¤¿¤ê¡¤ÆÃÄêÌÜÅª¤Î¥×¥í¥°¥é¥à¤ò½ñ¤¯É¬Í×¤¬¤¢¤ë¾ì¹ç¡¤¤è¤êÂ®¤¯´ÊÃ±¤Ë¤½¤ì
¤òÃ£À®¤·¤¿¤ê¤Ç¤­¤Þ¤·¤¿¡¥²æ¡¹¤Ï¡¤¤³¤Î¥³¥é¥à¤Ç¤³¤ì°Ê¾å¤Î¡¤¤¤¤¯¤Ä¤«¤Î(¸Å
¤¤)Îã¤ò¸«¤Þ¤¹¡¥(½ÅÍ×¤ÊÄÉ²ÃÅÀ¤Ï¡¤¤Þ¤À¤¤¤¯¤Ä¤«¤Î¥¢¥×¥ê¥±¡¼¥·¥ç¥ó¤¬¥Ä¡¼¥ë
¥Ü¥Ã¥¯¥¹¤ËÌµ¤¤¾ì¹ç¡¤É¬Í×¤¬¤¢¤ì¤Ð²ó¤êÆ»¤·¤Æ¡¤ºÇ½é¤ËÉ¬Í×¤Ê¥½¥Õ¥È¥¦¥§¥¢¥Ä¡¼
¥ë¤ò¹½ÃÛ¤¹¤ë¤³¤È¤Ç¤¹¡¥)

@node I/O redirection
@c @unnumberedsec I/O Redirection
@unnumberedsec I/O ¥ê¥À¥¤¥ì¥¯¥·¥ç¥ó

@c Hopefully, you are familiar with the basics of I/O redirection in the
@c shell, in particular the concepts of ``standard input,'' ``standard output,''
@c and ``standard error''.  Briefly, ``standard input'' is a data source, where
@c data comes from.  A program should not need to either know or care if the
@c data source is a disk file, a keyboard, a magnetic tape, or even a punched
@c card reader.  Similarly, ``standard output'' is a data sink, where data goes
@c to.  The program should neither know nor care where this might be.
@c Programs that only read their standard input, do something to the data,
@c and then send it on, are called @dfn{filters}, by analogy to filters in a
@c water pipeline.
@c 
³§¤µ¤ó¤¬¡¤``É¸½àÆþÎÏ''¡¤``É¸½à½ÐÎÏ''¡¤¤½¤·¤Æ``É¸½à¥¨¥é¡¼½ÐÎÏ''¤ÎÆÃÄê¤Î
³µÇ°¤Ç¡¤¥·¥§¥ë¤ÎI/O¥ê¥À¥¤¥ì¥¯¥·¥ç¥ó¤Î´ðËÜ¤Ë´·¤ì¤Æ¤¤¤ë¤ÈÁÛÄê¤·¤Æ¤¤¤Þ¤¹¡¥
Í×¤¹¤ë¤Ë¡¤``É¸½àÆþÎÏ''¤Ï¥Ç¡¼¥¿¥½¡¼¥¹¤Ç¡¤¥Ç¡¼¥¿¤¬¤ä¤Ã¤Æ¤¯¤ë¤È¤³¤í¤Ç¤¹¡¥
¥Ç¡¼¥¿¥½¡¼¥¹¤¬¡¤¥Ç¥£¥¹¥¯¥Õ¥¡¥¤¥ë¡¤¥­¡¼¥Ü¡¼¥É¡¤¼§µ¤¥Æ¡¼¥×¤ä¥Ñ¥ó¥Á¥«¡¼¥É
¤«¤É¤¦¤«¡¤¥×¥í¥°¥é¥à¤ÏÃÎ¤ëÉ¬Í×¤âÃí°Õ¤¹¤ëÉ¬Í×¤â¤¢¤ê¤Þ¤»¤ó¡¥Æ±ÍÍ¤Ë¡¤``É¸
½à½ÐÎÏ'' ¤Ï¥Ç¡¼¥¿¥·¥ó¥¯¤Ç¡¤¥Ç¡¼¥¿¤¬½Ð¤Æ¹Ô¤¯¤È¤³¤í¤Ç¤¹¡¥¥×¥í¥°¥é¥à¤Ï¤½
¤Î¾ì½ê¤òÃÎ¤ëÉ¬Í×¤âÃí°Õ¤¹¤ëÉ¬Í×¤â¤¢¤ê¤Þ¤»¤ó¡¥É¸½àÆþÎÏ¤òÆÉ¤ß¹þ¤ß¡¤¥Ç¡¼¥¿
¤Ë²¿¤«¤ò¹Ô¤¤¡¤¤½¤ì¤òÁ÷¤êÂ³¤±¤ë¥×¥í¥°¥é¥à¤Ï¡¤@dfn{¥Õ¥£¥ë¥¿(filters)}¤È
¸Æ¤Ð¤ì¡¤¤½¤ì¤Ï¿å¤Î¥Ñ¥¤¥×¥é¥¤¥ó¤Ç¤Î¥Õ¥£¥ë¥¿¤Ë»÷¤Æ¤¤¤ë¤¿¤á¤Ç¤¹¡¥

@c With the Unix shell, it's very easy to set up data pipelines:
@c 
Unix¥·¥§¥ë¤òÍÑ¤¤¤¿¾ì¹ç¡¤¥Ç¡¼¥¿¥Ñ¥¤¥×¥é¥¤¥ó¤òÀßÄê¤¹¤ë¤³¤È¤ÏÈó¾ï¤Ë´ÊÃ±¤Ç
¤¹¡¥
@smallexample
program_to_create_data | filter1 | .... | filterN > final.pretty.data
@end smallexample

@c We start out by creating the raw data; each filter applies some successive
@c transformation to the data, until by the time it comes out of the pipeline,
@c it is in the desired form.
@c 
²æ¡¹¤ÏÀ¸¥Ç¡¼¥¿¤òºî¤ë¤³¤È¤«¤é»Ï¤á¤Þ¤¹¡¥¤½¤ì¤¾¤ì¤Î¥Õ¥£¥ë¥¿¤Ï¡¤¤½¤ì¤¬¥Ñ¥¤
¥×¥é¥¤¥ó¤«¤é½Ð¤Æ¤¯¤ë¤Þ¤Ç¡¤¤¤¤¯¤Ä¤«¤ÎÏ¢Â³¤·¤¿ÊÑ´¹¤ò¥Ç¡¼¥¿¤ËÅ¬ÍÑ¤·¡¤¤½¤Î
¤è¤¦¤Ê¤â¤Î¤¬Ë¾¤Þ¤·¤¤·Á¼°¤Ç¤¹¡¥

@c This is fine and good for standard input and standard output.  Where does the
@c standard error come in to play?  Well, think about @command{filter1} in
@c the pipeline above.  What happens if it encounters an error in the data it
@c sees?  If it writes an error message to standard output, it will just
@c disappear down the pipeline into @command{filter2}'s input, and the
@c user will probably never see it.  So programs need a place where they can send
@c error messages so that the user will notice them.  This is standard error,
@c and it is usually connected to your console or window, even if you have
@c redirected standard output of your program away from your screen.
@c 
¤³¤ì¤ÏÁÇÀ²¤é¤·¤¯¡¤É¸½àÆþÎÏ¤ÈÉ¸½à½ÐÎÏ¤ËÅ¬¤·¤Æ¤¤¤Þ¤¹¡¥É¸½à¥¨¥é¡¼½ÐÎÏ¤Ï¡¤
Æ°ºîÃæ¤É¤³¤Ë¹Ô¤­¤Þ¤¹¤«¡©¤Þ¤¢¡¤¾åµ­¤Î¥Ñ¥¤¥×¥é¥¤¥ó@code{filter1}¤Ë¤Ä¤¤¤Æ
¹Í¤¨¤Æ¸«¤Æ¤¯¤À¤µ¤¤¡¥¥Ç¡¼¥¿¤Ç¥¨¥é¡¼¤¬È¯À¸¤·¤¿¾ì¹ç¡¤²¿¤¬À¸¤¸¤ë¤Î¤Ç¤·¤ç¤¦? 
¥¨¥é¡¼¥á¥Ã¥»¡¼¥¸¤òÉ¸½à½ÐÎÏ¤Ë½ñ¤­½Ð¤¹¾ì¹ç¡¤¤½¤ì¤Ï@code{filter2}¤ÎÆþÎÏ¤Î
¥Ñ¥¤¥×¥é¥¤¥ó¤Î²¼¤Ë±£¤ì¡¤¥æ¡¼¥¶¡¼¤Ï¤ª¤½¤é¤¯¸«¤ë¤³¤È¤Ï¤¢¤ê¤Þ¤»¤ó¡¥¤½¤Î¤¿
¤á¡¤¥×¥í¥°¥é¥à¤Ï¥æ¡¼¥¶¤ËÃí°Õ¤òÂ¥¤¹¤¿¤á¡¤¥¨¥é¡¼¥á¥Ã¥»¡¼¥¸¤òÁ÷¤ë¤³¤È¤¬²Ä
Ç½¤Ê¾ì½ê¤¬É¬Í×¤Ç¤¹¡¥¤³¤ì¤ÏÉ¸½à¥¨¥é¡¼½ÐÎÏ¤Ç¡¤²èÌÌ¤«¤éÎ¥¤ì¤Æ¤¤¤ë¥×¥í¥°¥é
¥à¤ÎÉ¸½à½ÐÎÏ¤ò¥ê¥À¥¤¥ì¥¯¥È¤·¤Æ¤µ¤¨¡¤¤½¤ì¤ÏÄÌ¾ï¥³¥ó¥½¡¼¥ë¤ä¥¦¥£¥ó¥É¥¦¤Ë
Ï¢·ë¤·¤Æ¤¤¤Þ¤¹¡¥

@c For filter programs to work together, the format of the data has to be
@c agreed upon.  The most straightforward and easiest format to use is simply
@c lines of text.  Unix data files are generally just streams of bytes, with
@c lines delimited by the @acronym{ASCII} @sc{lf} (Line Feed) character,
@c conventionally called a ``newline'' in the Unix literature. (This is
@c @code{'\n'} if you're a C programmer.)  This is the format used by all
@c the traditional filtering programs.  (Many earlier operating systems
@c had elaborate facilities and special purpose programs for managing
@c binary data.  Unix has always shied away from such things, under the
@c philosophy that it's easiest to simply be able to view and edit your
@c data with a text editor.)
@c 
¥Õ¥£¥ë¥¿¥×¥í¥°¥é¥à¤¬°ì½ï¤ËÆ°ºî¤¹¤ë¤¿¤á¡¤¥Ç¡¼¥¿¤Î½ñ¼°¤¬¹ç°Õ¤µ¤ì¤Æ¤¤¤ëÉ¬
Í×¤¬¤¢¤ê¤Þ¤¹¡¥ºÇ¤â´ÊÃ±¤ÇºÇ¤âÍÆ°×¤Ê½ñ¼°¤Ï¡¤Ã±¤Ê¤ë¥Æ¥­¥¹¥È¤Î¹Ô¤Ç¤¹¡¥ÄÌ¾ï¡¤
Unix¥Ç¡¼¥¿¥Õ¥¡¥¤¥ë¤Ï¡¤´·½¬¤ÇUnix¤ÎÊ¸¸¥¤Ç``²þ¹Ô''¤È¸Æ¤Ð¤ì¤ë¡¤
@acronym{ASCII} @sc{lf} (Line Feed)Ê¸»ú¤ÇÊ¬¤±¤é¤ì¤¿¹Ô¤òÍÑ¤¤¤¿¡¤Ã±¤Ê¤ë
¥Ð¥¤¥È¤Î¥¹¥È¥ê¡¼¥à¤Ç¤¹¡¥(¤³¤ì¤Ï¡¤C¥×¥í¥°¥é¥Þ¤Î¾ì¹ç¤Ï@code{'\n'}¤Ç¤¹¡¥) 
¤³¤ì¤ÏÁ´¤Æ¤ÎÅÁÅýÅª¤Ê¥Õ¥£¥ë¥¿¥×¥í¥°¥é¥à¤ÇÍÑ¤¤¤é¤ì¤ë½ñ¼°¤Ç¤¹¡¥(Â¿¤¯¤Î¤è
¤êÁá´ü¤Î¥ª¥Ú¥ì¡¼¥Æ¥£¥ó¥°¥·¥¹¥Æ¥à¤Ç¤Ï¡¤¥Ð¥¤¥Ê¥ê¥Ç¡¼¥¿¤ò´ÉÍý¤¹¤ë¤¿¤á¡¤¼ê
¤Î¹þ¤ó¤À¥Õ¥¡¥·¥ê¥Æ¥£¤ÈÆÃÊÌ¤ÊÌÜÅª¤ò»ý¤Ä¥×¥í¥°¥é¥à¤¬¤¢¤ê¤Þ¤·¤¿¡¥Unix¤Ï¾ï
¤Ë¤½¤Î¤è¤¦¤Ê¤³¤È¤«¤é¿È¤ò¤«¤ï¤·¤Æ¤¤¤Æ¡¤¤½¤ÎÅ¯³Ø¤Î²¼¤Ç¤Ï¡¤¥Æ¥­¥¹¥È¥¨¥Ç¥£
¥¿¤Ç¥Ç¡¼¥¿¤ò¸«¤¿¤êÊÔ½¸¤·¤¿¤ê¤¹¤ë¤³¤È¤òÃ±½ã¤Ë²ÄÇ½¤Ë¤¹¤ëºÇ¤â´ÊÃ±¤ÊÊýË¡¤Ç
¤¹¡¥)

@c OK, enough introduction. Let's take a look at some of the tools, and then
@c we'll see how to hook them together in interesting ways.   In the following
@c discussion, we will only present those command line options that interest
@c us.  As you should always do, double check your system documentation
@c for the full story.
@c 
OK¡¤½½Ê¬¾Ò²ð¤·¤Þ¤·¤¿¡¥¤¤¤¯¤Ä¤«¤ÎÆ»¶ñ¤ò°ìÌÜ¸«¤Æ¡¤¤½¤ì¤«¤é¡¤¶½Ì£¿¼¤¤ÊýË¡
¤Ç¤½¤ì¤é¤ò°ì½ï¤ËÂ«¤Í¤ëÊýË¡¤ò¸«¤Þ¤·¤ç¤¦¡¥°Ê²¼¤ÎµÄÏÀ¤Ç¤Ï¡¤¤³¤ì¤é¤Î¶½Ì£¤¢
¤ë¥³¥Þ¥ó¥É¥é¥¤¥ó¥ª¥×¥·¥ç¥ó¤ò¾Ò²ð¤¹¤ë¤À¤±¤Ç¤¹¡¥¾ï¤Ë¹Ô¤¦¤è¤¦¤Ë¡¤´°Á´¤ÊÏÃ
¤È¤¹¤ë¤¿¤á¤Ë¡¤¥·¥¹¥Æ¥à¥É¥­¥å¥á¥ó¥È¤òºÆÅÀ¸¡¤·¤Æ¤¯¤À¤µ¤¤¡¥

@node The who command
@c @unnumberedsec The @command{who} Command
@unnumberedsec @command{who}¥³¥Þ¥ó¥É

@c The first program is the @command{who} command.  By itself, it generates a
@c list of the users who are currently logged in.  Although I'm writing
@c this on a single-user system, we'll pretend that several people are
@c logged in:
@c 
ºÇ½é¤Î¥×¥í¥°¥é¥à¤Ï@command{who}¥³¥Þ¥ó¥É¤Ç¤¹¡¥Ã±ÆÈ¤Ç¤Ï¡¤¤½¤ì¤Ï¸½ºß¥í¥°
¥¤¥ó¤·¤Æ¤¤¤ë¥æ¡¼¥¶¤Î¥ê¥¹¥È¤òÀ¸À®¤·¤Þ¤¹¡¥»ä¤Ï¥·¥ó¥°¥ë¥æ¡¼¥¶¥·¥¹¥Æ¥à¤Ç¤³
¤ì¤ò½ñ¤¤¤Æ¤¤¤Þ¤¹¤¬¡¤²æ¡¹¤ÏÊ£¿ô¤Î¿Í¡¹¤¬¥í¥°¥¤¥ó¤·¤Æ¤¤¤ë¤Õ¤ê¤ò¤·¤Þ¤¹¡¥

@example
$ who
@print{} arnold   console Jan 22 19:57
@print{} miriam   ttyp0   Jan 23 14:19(:0.0)
@print{} bill     ttyp1   Jan 21 09:32(:0.0)
@print{} arnold   ttyp2   Jan 23 20:48(:0.0)
@end example

@c Here, the @samp{$} is the usual shell prompt, at which I typed @samp{who}.
@c There are three people logged in, and I am logged in twice.  On traditional
@c Unix systems, user names are never more than eight characters long.  This
@c little bit of trivia will be useful later.  The output of @command{who} is nice,
@c but the data is not all that exciting.
@c 
¤³¤³¤Ç¡¤@samp{$}¤ÏÄÌ¾ï¤Î¥·¥§¥ë¥×¥í¥ó¥×¥È¤Ç¡¤¤½¤³¤Ç»ä¤Ï@command{who}¤È
ÆþÎÏ¤·¤Þ¤·¤¿¡¥»°¿Í¥í¥°¥¤¥ó¤·¤Æ¤¤¤Æ¡¤»ä¤ÏÆó²ó¥í¥°¥¤¥ó¤·¤Æ¤Þ¤¹¡¥ÅÁÅýÅª¤Ê
Unix¥·¥¹¥Æ¥à¤Ç¤Ï¡¤¥æ¡¼¥¶Ì¾¤ÏÈ¬Ê¸»ú°Ê¾å¤ÎÄ¹¤µ¤Ï¤¢¤ê¤Þ¤»¤ó¡¥¤³¤Î¤ï¤º¤«¤Ê
Ê¿ËÞ¤Ê¥Ó¥Ã¥È¤Ï¸å¤ÇÍ­ÍÑ¤Ë¤Ê¤ê¤Þ¤¹¡¥@command{who}¤Î½ÐÎÏ¤ÏÎÉ¤¤¤Î¤Ç¤¹¤¬¡¤
¥Ç¡¼¥¿¤ÏÍ¾¤êÌÌÇò¤¯¤¢¤ê¤Þ¤»¤ó¡¥

@node The cut command
@c @unnumberedsec The @command{cut} Command
@unnumberedsec @command{cut}¥³¥Þ¥ó¥É

@c The next program we'll look at is the @command{cut} command.  This program
@c cuts out columns or fields of input data.  For example, we can tell it
@c to print just the login name and full name from the @file{/etc/passwd}
@c file.  The @file{/etc/passwd} file has seven fields, separated by
@c colons:
@c 
¼¡¤Ë²æ¡¹¤¬¸«¤ë¥×¥í¥°¥é¥à¤Ï@command{cut}¥³¥Þ¥ó¥É¤Ç¤¹¡¥¤³¤Î¥×¥í¥°¥é¥à¤Ï¡¤
ÆþÎÏ¥Ç¡¼¥¿¤ÎÎó¤ä¥Õ¥£¡¼¥ë¥É¤òÀÚ¤ê¼è¤ê¤Þ¤¹¡¥Îã¤¨¤Ð¡¤²æ¡¹¤Ï¤½¤ì¤òÍÑ¤¤¤Æ¡¤
@file{/etc/passwd}¥Õ¥¡¥¤¥ë¤«¤é¥í¥°¥¤¥óÌ¾¤È¥Õ¥ë¥Í¡¼¥à¤Î¤ß¤ò½ÐÎÏ¤µ¤»¤ë¤³
¤È¤¬¤Ç¤­¤Þ¤¹¡¥@file{/etc/passwd}¥Õ¥¡¥¤¥ë¤Ï¡¤¼·¤Ä¤Î¥Õ¥£¡¼¥ë¥É¤¬¤¢¤ê¡¤¥³
¥í¥ó¤ÇÊ¬¤«¤ì¤Æ¤¤¤Þ¤¹¡¥

@example
arnold:xyzzy:2076:10:Arnold D. Robbins:/home/arnold:/bin/bash
@end example

@c To get the first and fifth fields, we would use @command{cut} like this:
@c 
°ìÈÖÌÜ¤È¸ÞÈÖÌÜ¤Î¥Õ¥£¡¼¥ë¥É¤òÆÀ¤ë¤¿¤á¡¤°Ê²¼¤Î¤è¤¦¤Ë@command{cut}¤ò»ÈÍÑ¤·¤Þ¤¹¡¥

@example
$ cut -d: -f1,5 /etc/passwd
@print{} root:Operator
@dots{}
@print{} arnold:Arnold D. Robbins
@print{} miriam:Miriam A. Robbins
@dots{}
@end example

@c With the @option{-c} option, @command{cut} will cut out specific characters
@c (i.e., columns) in the input lines.  This is useful for input data
@c that has fixed width fields, and does not have a field separator.  For
@c example, list the Monday dates for the current month:
@c 
@option{-c}¥ª¥×¥·¥ç¥ó¤òÍÑ¤¤¤¿¾ì¹ç¡¤@command{cut}¤Ï¡¤ÆþÎÏ¹Ô¤Î»ØÄê¤·¤¿Ê¸
»ú(Îã¤¨¤Ð¡¤Îó)¤òÀÚ¤ê½Ð¤·¤Þ¤¹¡¥¤³¤Î¥³¥Þ¥ó¥É¤Ï¡¤¥Ç¡¼¥¿¤Î¥Õ¥£¥ë¥¿¥ê¥ó¥°¤Ë
ÌòÎ©¤Á¤½¤¦¤Ç¤¹¡¥

@c Is using cal ok?  Looked at gcal, but I don't like it.
@example
$ cal | cut -c 3-5
@print{}Mo
@print{}
@print{}  6
@print{} 13
@print{} 20
@print{} 27
@end example

@node The sort command
@c @unnumberedsec The @command{sort} Command
@unnumberedsec @command{sort}¥³¥Þ¥ó¥É

@c Next we'll look at the @command{sort} command.  This is one of the most
@c powerful commands on a Unix-style system; one that you will often find
@c yourself using when setting up fancy data plumbing.
@c 
¼¡¤Ë¸«¤ë¤Î¤Ï@command{sort}¥³¥Þ¥ó¥É¤Ç¤¹¡¥¤³¤ì¤ÏUnix·Á¼°¤Î¥·¥¹¥Æ¥à¤ÇºÇ¤â
¶¯ÎÏ¤Ê¥³¥Þ¥ó¥É¤Î°ì¤Ä¤Ç¤¹¡¥¼«Ê¬¤ÇÎÉ¤¯ÍøÍÑ¤·¤Æ¤¤¤ë¤È»×¤¦¤Î¤Ï¡¤¤ª¤·¤ã¤ì¤Ê
¥Ç¡¼¥¿¤ÎÇÛ´É¤òÀßÄê¤·¤Æ¤¤¤ë»þ¤Ç¤¹¡¥

@c The @command{sort}
@c command reads and sorts each file named on the command line.  It then
@c merges the sorted data and writes it to standard output.  It will read
@c standard input if no files are given on the command line (thus
@c making it into a filter).  The sort is based on the character collating
@c sequence or based on user-supplied ordering criteria.
@c 
@command{sort}¥³¥Þ¥ó¥É¤Ï¡¤¥³¥Þ¥ó¥É¥é¥¤¥ó¤Ç»ØÌ¾¤µ¤ì¤¿¤½¤ì¤¾¤ì¤Î¥Õ¥¡¥¤¥ë
¤òÆÉ¤ß¹þ¤ß¥½¡¼¥È¤·¤Þ¤¹¡¥¤½¤ì¤Ï¥½¡¼¥È¤µ¤ì¤¿¥Ç¡¼¥¿¤òÅý¹ç¤·¡¤É¸½à½ÐÎÏ¤Ë½ñ
¤­½Ð¤·¤Þ¤¹¡¥¤½¤ì¤Ï¥Õ¥¡¥¤¥ë¤¬¥³¥Þ¥ó¥É¥é¥¤¥ó¤ÇÍ¿¤¨¤é¤ì¤Ê¤¤¾ì¹ç¡¤É¸½àÆþÎÏ
¤«¤éÆÉ¤ß¹þ¤ß¤Þ¤¹(¤³¤Î¤¿¤á¡¤¥Õ¥£¥ë¥¿¤Ë¤Ê¤ê¤Þ¤¹)¡¥¥½¡¼¥È¤Ï¡¤Ê¸»ú¤Î½çÈÖ¤ò
´ðËÜ¤È¤·¤¿¤ê¡¤¥æ¡¼¥¶¤¬¶¡µë¤¹¤ëÈ½Äê´ð½à¤Î½çÈÖ¤ò´ðËÜ¤È¤·¤¿¤ê¤·¤Þ¤¹¡¥


@node The uniq command
@c @unnumberedsec The @command{uniq} Command
@unnumberedsec @command{uniq}¥³¥Þ¥ó¥É

@c Finally (at least for now), we'll look at the @command{uniq} program.  When
@c sorting data, you will often end up with duplicate lines, lines that
@c are identical.  Usually, all you need is one instance of each line.
@c This is where @command{uniq} comes in. The @command{uniq} program reads its
@c standard input.  It prints only one
@c copy of each repeated line.  It does have several options.  Later on,
@c we'll use the @option{-c} option, which prints each unique line, preceded
@c by a count of the number of times that line occurred in the input.
@c 
(¾¯¤Ê¤¯¤È¤âº£¤Î¤È¤³¤í)ºÇ¸å¤Ë¡¤²æ¡¹¤Ï@command{uniq}¥×¥í¥°¥é¥à¤ò¸«¤Þ¤¹¡¥
¥Ç¡¼¥¿¤ò¥½¡¼¥È¤¹¤ë¤È¤­¡¤½ÅÊ£¹Ô¡¤¤¹¤Ê¤ï¤ÁÆ±°ì¹Ô¤Ç¤è¤¯½ª¤ê¤Þ¤¹¡¥ÄÌ¾ï¡¤¤½
¤ì¤¾¤ì¤Î¹Ô¤Ë°ì¤Ä¤Î¥¤¥ó¥¹¥¿¥ó¥¹¤¬É¬Í×¤Ç¤¹¡¥¤³¤ì¤Ï@command{uniq}¤òÍÑ¤¤¤ë
¾ì½ê¤Ç¤¹¡¥@command{uniq}¤Ï¤½¤ÎÉ¸½àÆþÎÏ¤«¤éÆÉ¤ß¹þ¤ß¤Þ¤¹¡¥¤½¤ì¤Ï·«¤êÊÖ¤µ
¤ì¤Æ¤¤¤ë¹Ô¤Î°ì¤Ä¤Î¥³¥Ô¡¼¤À¤±¤ò½ÐÎÏ¤·¤Þ¤¹¡¥¤½¤ì¤Ë¤Ï¤¤¤¯¤Ä¤«¤Î¥ª¥×¥·¥ç¥ó
¤¬¤¢¤ê¤Þ¤¹¡¥¸å¤Ë¡¤²æ¡¹¤Ï@option{-c} ¥ª¥×¥·¥ç¥ó¤ò»ÈÍÑ¤·¡¤¤½¤ì¤Ï¤½¤ì¤¾¤ì
¥æ¥Ë¡¼¥¯¤Ê¹Ô¤ò½ÐÎÏ¤·¡¤ÆþÎÏ¤Ç¹Ô¤¬È¯À¸¤·¤¿²ó¿ô¤Î¿ô¤¨¤¿¤â¤Î¤òÁ°ÃÖ¤·¤Þ¤¹¡¥

@node Putting the tools together
@c @unnumberedsec Putting the Tools Together
@unnumberedsec ¥Ä¡¼¥ë¤ÎÅý¹ç

@c Now, let's suppose this is a large ISP server system with dozens of users
@c logged in.  The management wants the system administrator to write a program that will
@c generate a sorted list of logged in users.  Furthermore, even if a user
@c is logged in multiple times, his or her name should only show up in the
@c output once.
@c 
¤µ¤Æ¡¤¤³¤ì¤¬Â¿¿ô¤Î¥æ¡¼¥¶¤¬¥í¥°¥¤¥ó¤·¤Æ¤¤¤ëÂç¤­¤ÊBBS¥·¥¹¥Æ¥à¤À¤È¹Í¤¨¤Þ
¤·¤ç¤¦¡¥´ÉÍý¼Ô¤Ï¥·¥¹¥ª¥Ú¤Ë¡¤¥í¥°¥¤¥ó¤·¤Æ¤¤¤ë¥æ¡¼¥¶¤Î¥½¡¼¥È¤µ¤ì¤¿¥ê¥¹¥È
¤òÀ¸À®¤¹¤ë¥×¥í¥°¥é¥à¤ò½ñ¤«¤»¤¿¤¤¤È¤·¤Þ¤¹¡¥¹¹¤Ë¡¤¥æ¡¼¥¶¤¬Ê£¿ô²ó¥í¥°¥¤¥ó
¤·¤Æ¤¤¤Æ¤â¡¤Èà¤Þ¤¿¤ÏÈà½÷¤ÎÌ¾Á°¤ò½ÐÎÏ¤Ë°ìÅÙ¤·¤«É½¼¨¤µ¤»¤Ê¤¤¤â¤Î¤È¤·¤Þ¤¹¡¥

@c The administrator could sit down with the system documentation and write a C
@c program that did this. It would take perhaps a couple of hundred lines
@c of code and about two hours to write it, test it, and debug it.
@c However, knowing the software toolbox, the administrator can instead start out
@c by generating just a list of logged on users:
@c 
´ÉÍý¼Ô¤Ï¥·¥¹¥Æ¥à¥É¥­¥å¥á¥ó¥È¤ò»ý¤Ã¤ÆÀÊ¤ËÉÕ¤­¡¤¤³¤ì¤ò¹Ô¤¦C¥×¥í¥°¥é¥à¤ò
½ñ¤¤¤¿¤Ï¤º¤Ç¤¹¡¥¤½¤ì¤Ï¤ª¤½¤é¤¯¡¤200¹Ô¤Î¥³¡¼¥É¤ò½ñ¤¤¤Æ¡¤¥Æ¥¹¥È¤·¤Æ¡¤¥Ç
¥Ð¥Ã¥°¤¹¤ë¤¿¤á¡¤Æó»þ´Ö¤«¤±¤Æ¤¤¤ë¤Ç¤·¤ç¤¦¡¥¤·¤«¤·¡¤¥½¥Õ¥È¥¦¥§¥¢¥Ä¡¼¥ë¥Ü¥Ã
¥¯¥¹¤òÃÎ¤Ã¤Æ¤¤¤ë¾ì¹ç¡¤¥·¥¹¥ª¥Ú¤ÏÂå¤ï¤ê¤Ë¡¤¥í¥°¥¤¥ó¤·¤Æ¤¤¤ë¥æ¡¼¥¶¤Î¥ê¥¹
¥È¤òÀ¸À®¤¹¤ë¤³¤È¤«¤é»Ï¤á¤ë¤³¤È¤¬¤Ç¤­¤Þ¤¹¡¥

@example
$ who | cut -c1-8
@print{} arnold
@print{} miriam
@print{} bill
@print{} arnold
@end example

@c Next, sort the list:
@c 
¼¡¤Ë¡¤¥ê¥¹¥È¤ò¥½¡¼¥È¤·¤Þ¤¹¡¥

@example
$ who | cut -c1-8 | sort
@print{} arnold
@print{} arnold
@print{} bill
@print{} miriam
@end example

@c Finally, run the sorted list through @command{uniq}, to weed out duplicates:
@c 
½ª¤ê¤Ë¡¤½ÅÊ£¤ò¼è¤ê½ü¤¯¤¿¤á¡¤¥½¡¼¥È¤µ¤ì¤¿¥ê¥¹¥È¤ò@command{uniq}¤ËÄÌ¤·¤Þ
¤¹¡¥

@example
$ who | cut -c1-8 | sort | uniq
@print{} arnold
@print{} bill
@print{} miriam
@end example

@c The @command{sort} command actually has a @option{-u} option that does what
@c @command{uniq} does. However, @command{uniq} has other uses for which one
@c cannot substitute @samp{sort -u}.
@c 
@command{sort}¥³¥Þ¥ó¥É¤Ë¤Ï¡¤¼ÂºÝ¤Ï¡¤@command{uniq}¤ò¹Ô¤¦@option{-u}¥ª
¥×¥·¥ç¥ó¤¬¤¢¤ê¤Þ¤¹¡¥¤·¤«¤·¡¤@command{uniq}¤Ï¡¤@samp{sort -u}¤ÇÂåÍÑ¤Ç¤­
¤Ê¤¤Â¾¤Î¥æ¡¼¥¶¤Î¤¿¤á¤Ç¤¹¡¥

@c The administrator puts this pipeline into a shell script, and makes it available for
@c all the users on the system (@samp{#} is the system administrator,
@c or @code{root}, prompt):
@c 
´ÉÍý¼Ô¤Ï¡¤¤³¤Î¥Ñ¥¤¥×¥é¥¤¥ó¤ò¥·¥§¥ë¥¹¥¯¥ê¥×¥È¤Ë½ñ¤­½Ð¤·¡¤¥·¥¹¥Æ¥à¤ÎÁ´¤Æ
¤Î¥æ¡¼¥¶¤¬ÍøÍÑ²ÄÇ½¤Ë¤·¤Þ¤·¤¿¡¥

@example
# cat > /usr/local/bin/listusers
who | cut -c1-8 | sort | uniq
^D
# chmod +x /usr/local/bin/listusers
@end example

@c There are four major points to note here.  First, with just four
@c programs, on one command line, the administrator was able to save about two
@c hours worth of work.  Furthermore, the shell pipeline is just about as
@c efficient as the C program would be, and it is much more efficient in
@c terms of programmer time.  People time is much more expensive than
@c computer time, and in our modern ``there's never enough time to do
@c everything'' society, saving two hours of programmer time is no mean
@c feat.
@c 
¤³¤³¤ÇÃí°Õ¤¹¤Ù¤­¼ç¤ÊÅÀ¤¬»Í¤Ä¤¢¤ê¤Þ¤¹¡¥ºÇ½é¤Ë¡¤»Í¤Ä¤Î¥×¥í¥°¥é¥à¤Î¤ß¤Î¥³
¥Þ¥ó¥É¥é¥¤¥ó¤Ç¡¤´ÉÍý¼Ô¤Ï»Å»ö¤ËÈñ¤¹Æó»þ´Ö¤òÀáÌó¤¹¤ë¤³¤È¤¬¤Ç¤­¤Þ¤·¤¿¡¥¤µ
¤é¤Ë¡¤¥·¥§¥ë¥Ñ¥¤¥×¥é¥¤¥ó¤ÏC¥×¥í¥°¥é¥à¤¬¹Ô¤¦¤Î¤ÈÆ±¤¸¸ú²Ì¤¬¤¢¤ê¡¤¤½¤ì¤Ï
¥×¥í¥°¥é¥Þ¤Î»þ´Ö¤Ë´Ø¤·¤Æ¤Ï¤ë¤«¤Ë¸ú²ÌÅª¤Ç¤¹¡¥¿Í¡¹¤Î»þ´Ö¤Ï¥³¥ó¥Ô¥å¡¼¥¿¤Î
»þ´Ö¤è¤ê¤â¤Ï¤ë¤«¤Ë¹â²Á¤Ç¡¤¸½ºß¤Î``Á´¤Æ¤Î¤³¤È¤ò¤¹¤ë½½Ê¬¤Ê»þ´Ö¤¬Ìµ¤¤'' 
¼Ò²ñ¤Ç¤Ï¡¤¥×¥í¥°¥é¥Þ¤Î»þ´Ö¤ÎÆó»þ´Ö¤òÀáÌó¤¹¤ë¤³¤È¤Ï¡¤ÊÂ¡¹¤Ê¤é¤ÌÌÜ¤¶¤Þ¤·
¤¤À®²Ì¤Ç¤¹¡¥

@c Second, it is also important to emphasize that with the
@c @emph{combination} of the tools, it is possible to do a special
@c purpose job never imagined by the authors of the individual programs.
@c 
ÆóÈÖÌÜ¤Ë¡¤¥Ä¡¼¥ë¤Î@emph{ÁÈ¤ß¹ç¤ï¤»}¤Ç¡¤¸ÄÊÌ¤Î¥×¥í¥°¥é¥Þ¤ÎÃø¼Ô¤¬ÁÛÁü¤·
¤Æ¤¤¤Ê¤«¤Ã¤¿ÆÃÄê¤ÎÌÜÅª¤Î»Å»ö¤ò¤¹¤ë¤³¤È¤¬²ÄÇ½¤À¤È¤¤¤¦¤³¤È¤ò¶¯Ä´¤¹¤ë¤³¤È
¤â½ÅÍ×¤Ç¤¹¡¥

@c Third, it is also valuable to build up your pipeline in stages, as we did here.
@c This allows you to view the data at each stage in the pipeline, which helps
@c you acquire the confidence that you are indeed using these tools correctly.
@c 
»°ÈÖÌÜ¤Ë¡¤²æ¡¹¤¬¤³¤³¤Ç¹Ô¤Ã¤¿¤è¤¦¤Ë¡¤¥¹¥Æ¡¼¥¸Æâ¤Ç¤Ç¥Ñ¥¤¥×¥é¥¤¥ó¤òÁÈ¤ß¾å
¤²¤ë¤³¤È¤â²ÁÃÍ¤¬¤¢¤ê¤Þ¤¹¡¥¤³¤ì¤Ç¡¤¥Ñ¥¤¥×¥é¥¤¥ó¤Î¤½¤ì¤¾¤ì¤Î¥¹¥Æ¡¼¥¸¤Ç¤Î
¥Ç¡¼¥¿¤ò¸«¤ë¤³¤È¤¬²ÄÇ½¤Ë¤Ê¤ê¡¤¤½¤ì¤Ï¡¤¤³¤ì¤é¤Î¥Ä¡¼¥ë¤òÁ´¤¯Àµ¤·¤¯»ÈÍÑ¤·
¤Æ¤¤¤ë¤³¤È¤Î³Î¿®¤òÆÀ¤ë½õ¤±¤Ë¤Ê¤ê¤Þ¤¹¡¥

@c Finally, by bundling the pipeline in a shell script, other users can use
@c your command, without having to remember the fancy plumbing you set up for
@c them. In terms of how you run them, shell scripts and compiled programs are
@c indistinguishable.
@c 
ºÇ¸å¤Ë¡¤¥·¥§¥ë¥¹¥¯¥ê¥×¥È¤Ç¥Ñ¥¤¥×¥é¥¤¥ó¤òÁÈ¤ß¾å¤²¤ë¤³¤È¤Ç¡¤Â¾¤Î¥æ¡¼¥¶¤¬
¤½¤Î¥³¥Þ¥ó¥É¤ò»ÈÍÑ¤¹¤ë¤³¤È¤¬¤Ç¤­¡¤¤½¤ì¤é¤òÀßÄê¤·¤¿¤ª¤·¤ã¤ì¤ÊÇÛ´É¤ò³Ð¤¨
¤ëÉ¬Í×¤¬¤¢¤ê¤Þ¤»¤ó¡¥¤½¤ì¤ò¼Â¹Ô¤¹¤ëÊýË¡¤È¤¤¤¦°ÕÌ£¤Ç¤Ï¡¤¥·¥§¥ë¥¹¥¯¥ê¥×¥È
¤È¥³¥ó¥Ñ¥¤¥ë¤µ¤ì¤¿¥×¥í¥°¥é¥à¤Ï¶èÊÌ¤Ç¤­¤Þ¤»¤ó¡¥

@c After the previous warm-up exercise, we'll look at two additional, more
@c complicated pipelines.  For them, we need to introduce two more tools.
@c 
¤³¤³¤Þ¤Ç¤Î½àÈ÷±¿Æ°¤Î¸å¤Ç¡¤²æ¡¹¤ÏÆó¤Ä¤ÎÄÉ²Ã¤Î¤è¤êÊ£»¨¤Ê¥Ñ¥¤¥×¥é¥¤¥ó¤ò¸«
¤Æ¤¤¤­¤Þ¤¹¡¥¤½¤Î¤¿¤á¡¤²æ¡¹¤¬Æó¤Ä¤Î¥Ä¡¼¥ë¤ò¤µ¤é¤Ë¾Ò²ð¤¹¤ëÉ¬Í×¤¬¤¢¤ê¤Þ¤¹¡¥

@c The first is the @command{tr} command, which stands for ``transliterate.''
@c The @command{tr} command works on a character-by-character basis, changing
@c characters. Normally it is used for things like mapping upper case to
@c lower case:
@c 
ºÇ½é¤Ï@command{tr}¥³¥Þ¥ó¥É¤Ç¡¤¤½¤ì¤Ï``transliterate(ÊÑ´¹)''¤ò°ÕÌ£¤·¤Þ
¤¹¡¥@command{tr}¥³¥Þ¥ó¥É¤Ï¡¤Ê¸»úÂÐÊ¸»ú¤ò´ðËÜ¤Ë¡¤Ê¸»ú¤òÊÑ´¹¤¹¤ëºîÍÑ¤¬¤¢
¤ê¤Þ¤¹¡¥ÄÌ¾ï¡¤¤½¤ì¤ÏÂçÊ¸»ú¤ò¾®Ê¸»ú¤Ë³ä¤êÅö¤Æ¤ë¤³¤È¤Ë»ÈÍÑ¤µ¤ì¤Þ¤¹¡¥

@example
$ echo ThIs ExAmPlE HaS MIXED case! | tr '[A-Z]' '[a-z]'
@print{} this example has mixed case!
@end example

@c There are several options of interest:
@c 
½ÅÍ×¤Ê¤¤¤¯¤Ä¤«¤Î¥ª¥×¥·¥ç¥ó¤¬¤¢¤ê¤Þ¤¹¡¥

@table @code
@item -c
@c work on the complement of the listed characters, i.e.,
@c operations apply to characters not in the given set
@c 
¥ê¥¹¥È¥¢¥Ã¥×¤µ¤ì¤¿Ê¸»ú¤ÎÊä½¸¹ç¤ÇÆ°ºî¤·¡¤¤¹¤Ê¤ï¤Á¡¤Í¿¤¨¤é¤ì¤¿½¸¹ç¤ËÌµ¤¤
Ê¸»ú¤ËÅ¬±þ¤·¤¿½èÍý¤Ç¤¹¡¥

@item -d
@c delete characters in the first set from the output
@c 
½ÐÎÏ¤«¤éºÇ½é¤Î¥»¥Ã¥È¤ÎÊ¸»ú¤òºï½ü¤·¤Þ¤¹¡¥

@item -s
@c squeeze repeated characters in the output into just one character.
@c 
½ÐÎÏ¤Ç·«¤êÊÖ¤µ¤ì¤ëÊ¸»ú¤ò°ìÊ¸»ú¤Ë°µ½Ì¤·¤Þ¤¹¡¥
@end table

@c We will be using all three options in a moment.
@c 
²æ¡¹¤Ï¡¤°ìÅÙ¤Ë»°¤Ä¤ÎÁ´¤Æ¤Î¥ª¥×¥·¥ç¥ó¤ò»ÈÍÑ¤·¤Þ¤¹¡¥

@c The other command we'll look at is @command{comm}.  The @command{comm}
@c command takes two sorted input files as input data, and prints out the
@c files' lines in three columns.  The output columns are the data lines
@c unique to the first file, the data lines unique to the second file, and
@c the data lines that are common to both.  The @option{-1}, @option{-2}, and
@c @option{-3} command line options @emph{omit} the respective columns. (This is
@c non-intuitive and takes a little getting used to.)  For example:
@c 
²æ¡¹¤¬¸«¤Æ¤¤¤¯¡¤¤â¤¦°ì¤Ä¤Î¥³¥Þ¥ó¥É¤Ï@command{comm}¤Ç¤¹¡¥@command{comm} 
¥³¥Þ¥ó¥É¤Ï¡¤Æó¤Ä¤Î¥½¡¼¥È¤µ¤ì¤¿ÆþÎÏ¥Õ¥¡¥¤¥ë¤òÆþÎÏ¥Ç¡¼¥¿¤È¤·¡¤¥Õ¥¡¥¤¥ë¤Î
¹Ô¤ò»°Îó¤Ë½ÐÎÏ¤·¤Þ¤¹¡¥½ÐÎÏÎó¤ÏºÇ½é¤Î¥Õ¥¡¥¤¥ë¤Î¥æ¥Ë¡¼¥¯¤Ê¥Ç¡¼¥¿¹Ô¡¥ÆóÈÖ
ÌÜ¤Î¥Õ¥¡¥¤¥ë¤Î¥æ¥Ë¡¼¥¯¤Ê¥Ç¡¼¥¿¹Ô¡¤¤½¤·¤Æ¡¤Î¾Êý¤Ë¶¦ÄÌ¤Ê¥Ç¡¼¥¿¹Ô¤Ç¤¹¡¥
@option{-1}¡¤@option{-2}¤È@option{-3}¤Î¥³¥Þ¥ó¥É¥é¥¤¥ó¥ª¥×¥·¥ç¥ó¤Ï¡¤ÂÐ
±þ¤¹¤ëÎó¤ò@emph{ºï½ü}¤·¤Þ¤¹¡¥(¤³¤ì¤ÏÄ¾´ÑÅª¤Ç¤Ï¤Ê¤¯¡¤´·¤ì¤ë¤Î¤Ë¾¯¤·¤«¤«
¤ê¤Þ¤¹¡¥) Îã¤¨¤Ð¡¤°Ê²¼¤Î¤è¤¦¤Ë¤·¤Þ¤¹¡¥

@example
$ cat f1
@print{} 11111
@print{} 22222
@print{} 33333
@print{} 44444
$ cat f2
@print{} 00000
@print{} 22222
@print{} 33333
@print{} 55555
$ comm f1 f2
@print{}         00000
@print{} 11111
@print{}                 22222
@print{}                 33333
@print{} 44444
@print{}         55555
@end example

@c The single dash as a filename tells @command{comm} to read standard input
@c instead of a regular file.
@c 
¥Õ¥¡¥¤¥ëÌ¾¤È¤·¤Æ¤ÎÃ±°ì¤Î¥À¥Ã¥·¥å¤Ï¡¤ÄÌ¾ï¤Î¥Õ¥¡¥¤¥ë¤ÎÂå¤ï¤ê¤ËÉ¸½àÆþÎÏ¤«
¤éÆÉ¤ß¤È¤ë¤è¤¦¡¤@command{comm}¤ËÅÁ¤¨¤Þ¤¹¡¥

@c Now we're ready to build a fancy pipeline.  The first application is a word
@c frequency counter.  This helps an author determine if he or she is over-using
@c certain words.
@c 
¤µ¤Æ¡¤²æ¡¹¤Ï¤ª¤·¤ã¤ì¤Ê¥Ñ¥¤¥×¥é¥¤¥ó¤ò¹½ÃÛ¤¹¤ë½àÈ÷¤¬¤Ç¤­¤Þ¤·¤¿¡¥ºÇ½é¤Î±þ
ÍÑ¤Ï¡¤Ã±¸ì¤ÎÉÑÅÙ¥«¥¦¥ó¥¿¤Ç¤¹¡¥¤³¤ì¤Ï¡¤Ãø¼Ô¤¬ÆÃÄê¤ÎÃ±¸ì¤ò²áÅÙ¤Ë»ÈÍÑ¤·¤Æ
¤¤¤ë¤«¤É¤¦¤«¤ò·èÄê¤¹¤ë½õ¤±¤È¤Ê¤ê¤Þ¤¹¡¥

@c The first step is to change the case of all the letters in our input file
@c to one case.  ``The'' and ``the'' are the same word when doing counting.
@c 
ºÇ½é¤Î¥¹¥Æ¥Ã¥×¤Ï¡¤ÆþÎÏ¥Õ¥¡¥¤¥ë¤ÎÁ´¤Æ¤ÎÊ¸»ú¤ÎÂçÊ¸»ú¾®Ê¸»ú¤ò¤É¤Á¤é¤«°ì¤Ä
¤ËÊÑ´¹¤¹¤ë¤³¤È¤Ç¤¹¡¥``The''¤È``the''¤Ï¿ô¤¨¤Æ¤¤¤ë¤È¤­¤ÏÆ±¤¸Ã±¸ì¤Ç¤¹¡¥

@example
$ tr '[A-Z]' '[a-z]' < whats.gnu | ...
@end example

@c The next step is to get rid of punctuation.  Quoted words and unquoted words
@c should be treated identically; it's easiest to just get the punctuation out of
@c the way.
@c 
¼¡¤Î¥¹¥Æ¥Ã¥×¤Ï¡¤¶çÆÉÅÀ¤ò¤ò¼è¤ê½ü¤¯¤³¤È¤Ç¤¹¡¥°úÍÑ¤µ¤ì¤¿Ã±¸ì¤È°úÍÑ¤µ¤ì¤Æ
¤¤¤Ê¤¤Ã±¸ì¤Ï¡¤Æ±°ì¤Ë°·¤ï¤ì¤ë¤Ù¤­¤Ç¤¹¡¥¶çÆÉÅÀ¤òÊÒÉÕ¤±¤ëºÇ¤â´ÊÃ±¤ÊÊýË¡¤Ç
¤¹¡¥

@smallexample
$ tr '[A-Z]' '[a-z]' < whats.gnu | tr -cd '[A-Za-z0-9_ \012]' | ...
@end smallexample

@c The second @command{tr} command operates on the complement of the listed
@c characters, which are all the letters, the digits, the underscore, and
@c the blank.  The @samp{\012} represents the newline character; it has to
@c be left alone.  (The @acronym{ASCII} tab character should also be included for
@c good measure in a production script.)
@c 
ÆóÈÖÌÜ¤Î@command{tr}¥³¥Þ¥ó¥É¤Ï¡¤¥ê¥¹¥È¥¢¥Ã¥×¤µ¤ì¤¿Ê¸»ú¤ÎÊä½¸¹ç¤ò½èÍý¤·¡¤
¤½¤ì¤ÏÁ´¤Æ¤ÎÊ¸»ú¡¤¿ô»ú¡¤¥¢¥ó¥À¡¼¥¹¥³¥¢¤È¶õÇò¤Ç¤¹¡¥@samp{\012}¤Ï²þ¹Ô¤ò
É½¸½¤·¤Þ¤¹¡¥¤½¤ì¤Ï¤½¤Î¤Þ¤Þ»Ä¤¹É¬Í×¤¬¤¢¤ê¤Þ¤¹¡¥(@acronym{ASCII}¥¿¥ÖÊ¸»ú
¤â¡¤À¸À®¤µ¤ì¤¿¥¹¥¯¥ê¥×¥È¤Ç¤ÏÄÉ²Ã¤È¤·¤Æ´Þ¤Þ¤ì¤ë¤Ù¤­¤Ç¤¹¡¥)

@c At this point, we have data consisting of words separated by blank space.
@c The words only contain alphanumeric characters (and the underscore).  The
@c next step is break the data apart so that we have one word per line. This
@c makes the counting operation much easier, as we will see shortly.
@c 
¤³¤Î»þÅÀ¤Ç¡¤²æ¡¹¤Ï¡¤¶õÇò¥¹¥Ú¡¼¥¹¤ÇÊ¬¤±¤é¤ì¤¿Ã±¸ì¤«¤é¤Ê¤ë¥Ç¡¼¥¿¤òÊÝ»ý¤·
¤Æ¤¤¤ë¤³¤È¤Ë¤Ê¤ê¤Þ¤¹¡¥Ã±¸ì¤Ï±Ñ¿ôÊ¸»ú(¤È¥¢¥ó¥À¡¼¥¹¥³¥¢)¤Î¤ß´Þ¤Þ¤ì¤Æ¤¤¤ë
¤â¤Î¤Ç¤¹¡¥¼¡¤Î¥¹¥Æ¥Ã¥×¤Ï¡¤°ì¹Ô¤Ë°ìÃ±¸ì¤È¤Ê¤ë¤è¤¦¤Ë¡¤¥Ç¡¼¥¿¤òÊÌ¡¹¤ËÊ¬¤±
¤Þ¤¹¡¥¤³¤ì¤Ï¿ô¤¨¤ë½èÍý¤ò¤è¤êÍÆ°×¤Ë¤¹¤ë¤¿¤á¤Ç¡¤¤µ¤é¤Ë¡¤Ã»¤¯¤Ê¤ê¤Þ¤¹¡¥

@smallexample
$ tr '[A-Z]' '[a-z]' < whats.gnu | tr -cd '[A-Za-z0-9_ \012]' |
> tr -s '[ ]' '\012' | ...
@end smallexample

@c This command turns blanks into newlines.  The @option{-s} option squeezes
@c multiple newline characters in the output into just one.  This helps us
@c avoid blank lines. (The @samp{>} is the shell's ``secondary prompt.''
@c This is what the shell prints when it notices you haven't finished
@c typing in all of a command.)
@c 
¤³¤Î¥³¥Þ¥ó¥É¤Ï¶õÇò¤ò²þ¹Ô¤ËÀÚÂØ¤¨¤Þ¤¹¡¥@option{-s}¥ª¥×¥·¥ç¥ó¤Ï¡¤½ÐÎÏ¤Î
Ê£¿ô¤Î²þ¹ÔÊ¸»ú¤ò°ì¤Ä¤Ë°µ½Ì¤·¤Þ¤¹¡¥¤³¤ì¤Ï¶õÇò¹Ô¤òÈò¤±¤¿¤¤¤È¤­½õ¤«¤ê¤Þ¤¹¡¥
(@samp{>}¤Ï¥·¥§¥ë¤Î``ÆóÈÖÌÜ¤Î¥×¥í¥ó¥×¥È''¤ò°ÕÌ£¤·¤Þ¤¹¡¥¤³¤ì¤Ï¡¤Á´¤Æ¤Î
¥³¥Þ¥ó¥É¤òÆþÎÏ¤·½ª¤¨¤Æ¤¤¤Ê¤¤¤³¤È¤ËÃí°Õ¤µ¤»¤ë¤È¤­¡¤¥·¥§¥ë¤¬½ÐÎÏ¤¹¤ë¤â¤Î
¤Ç¤¹¡¥)

@c We now have data consisting of one word per line, no punctuation, all one
@c case.  We're ready to count each word:
@c 
²æ¡¹¤Ïº£¡¤°ì¹Ô¤Ë°ìÃ±¸ì¤Ç¡¤¶çÆÉÅÀ¤¬Ìµ¤¯¡¤Á´¤ÆÂçÊ¸»ú¾®Ê¸»ú¤É¤Á¤é¤«¤À¤±¤Î
¥Ç¡¼¥¿¤ò»ý¤Ã¤Æ¤¤¤Þ¤¹¡¥²æ¡¹¤Ï¤½¤ì¤¾¤ì¤ÎÃ±¸ì¤ò¿ô¤¨¤ë½àÈ÷¤¬¤Ç¤­¤Þ¤·¤¿¡¥

@smallexample
$ tr '[A-Z]' '[a-z]' < whats.gnu | tr -cd '[A-Za-z0-9_ \012]' |
> tr -s '[ ]' '\012' | sort | uniq -c | ...
@end smallexample

@c At this point, the data might look something like this:
@c 
¤³¤Î»þÅÀ¤Ç¡¤¥Ç¡¼¥¿¤Ï°Ê²¼¤Î¤è¤¦¤Ë¤Ê¤ê¤Þ¤¹¡¥

@example
  60 a
   2 able
   6 about
   1 above
   2 accomplish
   1 acquire
   1 actually
   2 additional
@end example

@c The output is sorted by word, not by count!  What we want is the most
@c frequently used words first.  Fortunately, this is easy to accomplish,
@c with the help of two more @command{sort} options:
@c 
½ÐÎÏ¤ÏÃ±¸ì¤Ç¥½¡¼¥È¤µ¤ì¤Æ¤¤¤Æ¡¤Áí¿ô¤Ç¤Ï¤¢¤ê¤Þ¤»¤ó!  ²æ¡¹¤¬Íß¤·¤¤¤Î¤Ï¡¤
ºÇ¤âÉÑÈË¤Ë»ÈÍÑ¤µ¤ì¤ëºÇ½é¤Î¤â¤Î¤Ç¤¹¡¥¹¬¤¤¡¤¤³¤ì¤Ï´ÊÃ±¤ËÃ£À®¤Ç¤­¡¤Æó¤Ä¤Î
@command{sort}¥ª¥×¥·¥ç¥ó¤Î½õ¤±¤ò¼Ú¤ê¤Þ¤¹¡¥

@table @code
@item -n
@c do a numeric sort, not a textual one
@c 
Ê¸»ú¤Ç¤Ï¤Ê¤¯¡¤¿ô»ú¤Î¥½¡¼¥È¤ò¹Ô¤¤¤Þ¤¹¡¥

@item -r
@c reverse the order of the sort
@c 
¥½¡¼¥È¤µ¤ì¤¿½ç½ø¤òÈ¿Å¾¤·¤Þ¤¹¡¥
@end table

@c The final pipeline looks like this:
@c 
ºÇ½ªÅª¤Ê¥Ñ¥¤¥×¥é¥¤¥ó¤Ï°Ê²¼¤Î¤è¤¦¤Ë¤Ê¤ê¤Þ¤¹¡¥

@smallexample
$ tr '[A-Z]' '[a-z]' < whats.gnu | tr -cd '[A-Za-z0-9_ \012]' |
> tr -s '[ ]' '\012' | sort | uniq -c | sort -nr
@print{}  156 the
@print{}   60 a
@print{}   58 to
@print{}   51 of
@print{}   51 and
@dots{}
@end smallexample

@c Whew!  That's a lot to digest.  Yet, the same principles apply. With six
@c commands, on two lines (really one long one split for convenience), we've
@c created a program that does something interesting and useful, in much
@c less time than we could have written a C program to do the same thing.
@c 
¤ä¤ì¤ä¤ì!  ¤½¤ì¤ÏÂç¤·¤¿Í×Ìó¤Ç¤¹¡¥¤Þ¤ÀÆ±¤¸¸¶Â§¤ÏÅ¬ÍÑ¤µ¤ì¤Þ¤¹¡¥Ï»¤Ä¤Î¥³
¥Þ¥ó¥ÉÆó¹Ô¤Ç(ËÜÅö¤ÏÍøÊØÀ­¤Î¤¿¤áÄ¹¤¤¤â¤Î¤òÊ¬¤±¤¿¤â¤Î¤Ç¤¹)¡¤²æ¡¹¤Ï¶½Ì£¿¼
¤¯ÊØÍø¤Ê¤³¤È¤ò¹Ô¤¦¥×¥í¥°¥é¥à¤òºîÀ®¤·¡¤¤½¤ì¤Ï¡¤C¥×¥í¥°¥é¥à¤ÇÆ±¤¸¤³¤È¤ò
¤¹¤ë¤â¤Î¤ò½ñ¤¯¤è¤ê¤Ï¤ë¤«¤ËÃ»¤¤»þ´Ö¤Ç¤·¤¿¡¥

@c A minor modification to the above pipeline can give us a simple spelling
@c checker!  To determine if you've spelled a word correctly, all you have to
@c do is look it up in a dictionary.  If it is not there, then chances are
@c that your spelling is incorrect.  So, we need a dictionary.
@c The conventional location for a dictionary is @file{/usr/dict/words}.
@c On my GNU/Linux system,@footnote{Redhat Linux 6.1, for the November 2000
@c revision of this article.}
@c this is a is a sorted, 45,402 word dictionary.
@c 
¾åµ­¤Î¥Ñ¥¤¥×¥é¥¤¥ó¤Ø¤Î¤Á¤ç¤Ã¤È¤·¤¿ÊÑ¹¹¤Ç¡¤Ã±½ã¤Ê¥¹¥Ú¥ë¥Á¥§¥Ã¥«¡¼¤òÍ¿¤¨
¤ë¤³¤È¤¬¤Ç¤­¤Þ¤¹¡¥Ã±¸ì¤òÀµ¤·¤¯ÄÖ¤Ã¤Æ¤¤¤ë¤«¤É¤¦¤«¤ò·èÄê¤¹¤ë¤¿¤á¤Ë¹Ô¤¦É¬
Í×¤¬¤¢¤ë¤³¤È¤Ï¡¤¼­½ñ¤ÇÄ´¤Ù¤ë¤³¤È¤Ç¤¹¡¥¤½¤ì¤¬Ìµ¤¤¾ì¹ç¡¤²ÄÇ½À­¤È¤·¤Æ¤ÏÄÖ
¤ê¤¬Àµ¤·¤¯¤Ê¤¤¤È¤¤¤¦¤³¤È¤Ç¤¹¡¥¤½¤Î¤¿¤á¡¤²æ¡¹¤Ï¼­½ñ¤¬É¬Í×¤Ç¤¹¡¥
Slackware Linux¤ÎÇÛÉÛÊª¤Ç¤Ï¡¤¥Õ¥¡¥¤¥ë
@file{/usr/lib/ispell/ispell.words}¤¬¤¢¤ê¡¤¤½¤ì¤Ï¥½¡¼¥È¤µ¤ì¤Æ¤¤¤Æ¡¤
38,400¸ì¤Î¼­½ñ¤Ç¤¹¡¥

@c Now, how to compare our file with the dictionary?  As before, we generate
@c a sorted list of words, one per line:
@c 
¤µ¤Æ¡¤²æ¡¹¤Î¥Õ¥¡¥¤¥ë¤È¼­½ñ¤ò¤¤¤«¤Ë¤·¤ÆÈæ³Ó¤¹¤ë¤Î¤Ç¤·¤ç¤¦?  °ÊÁ°¤Ë²æ¡¹
¤Ï¡¤¥½¡¼¥È¤µ¤ì¤¿¡¤°ì¹Ô¤Ë°ìÃ±¸ì¤ÎÃ±¸ì¥ê¥¹¥È¤òÀ¸À®¤·¤Þ¤·¤¿¡¥

@smallexample
$ tr '[A-Z]' '[a-z]' < whats.gnu | tr -cd '[A-Za-z0-9_ \012]' |
> tr -s '[ ]' '\012' | sort -u | ...
@end smallexample

@c Now, all we need is a list of words that are @emph{not} in the
@c dictionary.  Here is where the @command{comm} command comes in.
@c 
¤µ¤Æ¡¤É¬Í×¤Ê¤³¤È¤Ï¼­½ñ¤Ë@emph{Ìµ¤¤}Ã±¸ì¥ê¥¹¥È¤Ç¤¹¡¥¤³¤³¤¬¡¤
@command{comm}¥³¥Þ¥ó¥É¤òÍÑ¤¤¤ë¾ì½ê¤Ç¤¹¡¥

@smallexample
$ tr '[A-Z]' '[a-z]' < whats.gnu | tr -cd '[A-Za-z0-9_ \012]' |
> tr -s '[ ]' '\012' | sort -u |
> comm -23 - /usr/dict/words
@end smallexample

@c The @option{-2} and @option{-3} options eliminate lines that are only in the
@c dictionary (the second file), and lines that are in both files.  Lines
@c only in the first file (standard input, our stream of words), are
@c words that are not in the dictionary.  These are likely candidates for
@c spelling errors.  This pipeline was the first cut at a production
@c spelling checker on Unix.
@c 
@option{-2}¤È@option{-3}¥ª¥×¥·¥ç¥ó¤Ï¡¤¼­½ñ(ÆóÈÖÌÜ¤Î¥Õ¥¡¥¤¥ë)¤Î¤ß¤Ë¤¢¤ë
¹Ô¤È¡¤Î¾Êý¤Î¥Õ¥¡¥¤¥ë¤Ë¤¢¤ë¹Ô¤òºï½ü¤·¤Þ¤¹¡¥ºÇ½é¤Î¥Õ¥¡¥¤¥ë(²æ¡¹¤ÎÃ±¸ì¥¹
¥È¥ê¡¼¥à¤ÎÉ¸½àÆþÎÏ)¤Î¤ß¤Ë¤¢¤ë¹Ô¤Ï¡¤¼­½ñ¤Ë¤Ï¤¢¤ê¤Þ¤»¤ó¡¥¤³¤ì¤é¤ÏÄÖ¤ê¥¨
¥é¡¼¤ËÂÐ¤¹¤ë¹¥¤Þ¤·¤¤¸õÊä¤Ç¤¹¡¥¤³¤Î¥Ñ¥¤¥×¥é¥¤¥ó¤Ï¡¤Unix¤Ç¤Î¥¹¥Ú¥ë¥Á¥§¥Ã
¥«¡¼À½ÉÊ¤È¤·¤Æ¡¤ºÇ½é¤ËÈ¯À¸¤·¤Þ¤·¤¿¡¥

@c There are some other tools that deserve brief mention.
@c 
¤Á¤ç¤Ã¤Èµ­½Ò¤¹¤ë²ÁÃÍ¤Î¤¢¤ë¡¤¤½¤ÎÂ¾¤Î¥Ä¡¼¥ë¤â¤¢¤ê¤Þ¤¹¡¥

@table @command
@item grep
@c search files for text that matches a regular expression
@c 
Àµµ¬É½¸½¤Ë¥Þ¥Ã¥Á¤¹¤ë¥Æ¥­¥¹¥È¤ò¥Õ¥¡¥¤¥ë¤Ç¸¡º÷¤·¤Þ¤¹¡¥

@item wc
@c count lines, words, characters
@c 
¹Ô¡¤Ã±¸ì¡¤Ê¸»ú¤ò¿ô¤¨¤Þ¤¹¡¥

@item tee
@c a T-fitting for data pipes, copies data to files and to standard output
@c 
¥Ç¡¼¥¿¥Ñ¥¤¥×¤ËÂÐ¤¹¤ëTÉôÉÊ¤Ç¡¤¥Ç¡¼¥¿¤ò¥Õ¥¡¥¤¥ë¤ÈÉ¸½à½ÐÎÏ¤Ë¥³¥Ô¡¼¤·¤Þ¤¹¡¥

@item sed
@c the stream editor, an advanced tool
@c 
¥¹¥È¥ê¡¼¥à¥¨¥Ç¥£¥¿¤Ç¡¤¹âÅÙ¤Ê¥Ä¡¼¥ë¤Ç¤¹¡¥

@item awk
@c a data manipulation language, another advanced tool
@c 
¥Ç¡¼¥¿Áàºî¸À¸ì¤Ç¡¤¤â¤¦°ì¤Ä¤Î¹âÅÙ¤Ê¥Ä¡¼¥ë¤Ç¤¹¡¥
@end table

@c The software tools philosophy also espoused the following bit of
@c advice: ``Let someone else do the hard part.''  This means, take
@c something that gives you most of what you need, and then massage it the
@c rest of the way until it's in the form that you want.
@c 
¥½¥Õ¥È¥¦¥§¥¢¥Ä¡¼¥ë¤ÎÅ¯³Ø¤Ï¡¤°Ê²¼¤ÎÃ»¤¤½õ¸À¤â´Þ¤ó¤Ç¤¤¤Þ¤¹¡¥``Æñ¤·¤¤ÉôÊ¬
¤ÏÂ¾¿Í¤Ë¤µ¤»¤í''¡¥¤³¤ì¤Ï¡¤É¬Í×¤Ê¤Û¤È¤ó¤É¤Î¤â¤Î¤ÏÍ¿¤¨¤é¤ì¤ë¤â¤Î¤Ç¤¢¤ê¡¤
É¬Í×¤Ê·Á¼°¤Ë¤¹¤ë¤Þ¤Ç¤ÎÊýË¡¤¬»Ä¤Ã¤Æ¤¤¤ë¤³¤È¤ò°ÕÌ£¤·¤Þ¤¹¡¥

@c To summarize:
@c 
Í×Ìó¤·¤Þ¤¹¡¥

@enumerate 1
@item
@c Each program should do one thing well.  No more, no less.
@c 
¤½¤ì¤¾¤ì¤Î¥×¥í¥°¥é¥à¤Ï¡¤°ì¤Ä¤Î¤³¤È¤ò¤¦¤Þ¤¯¤³¤Ê¤·¤Þ¤¹¡¥¤½¤ì°Ê¾å¤Ç¤â¤½¤ì
°Ê²¼¤Ç¤â¤¢¤ê¤Þ¤»¤ó¡¥

@item
@c Combining programs with appropriate plumbing leads to results where
@c the whole is greater than the sum of the parts.  It also leads to novel
@c uses of programs that the authors might never have imagined.
@c 
Å¬ÀÚ¤Ê¥Ñ¥¤¥×¤Ç¥×¥í¥°¥é¥à¤òÁÈ¤ß¹ç¤ï¤»¤ë¤³¤È¤Ç¡¤Á´ÂÎ¤È¤·¤ÆÉôÊ¬¤ÎÁíÏÂ°Ê¾å
¤Î·ë²Ì¤òÆ³¤­¤Þ¤¹¡¥¤½¤ì¤Ï¡¤Ãø¼Ô¤¬ÁÛÁü¤·¤Æ¤¤¤Ê¤«¤Ã¤¿¥×¥í¥°¥é¥à¤Î¿·¤·¤¤»È
ÍÑË¡¤âÆ³¤­¤Þ¤¹¡¥

@item
@c Programs should never print extraneous header or trailer data, since these
@c could get sent on down a pipeline. (A point we didn't mention earlier.)
@c 
¥×¥í¥°¥é¥à¤Ï¡¤·è¤·¤ÆÍ¾Ê¬¤Ê¥Ø¥Ã¥À¤äËöÈø¤Î¥Ç¡¼¥¿¤ò½ÐÎÏ¤¹¤Ù¤­¤Ç¤Ï¤Ê¤¯¡¤¤½
¤ì¤Ï¤³¤ì¤é¤¬¥Ñ¥¤¥×¥é¥¤¥ó¤ò²õ¤·¤Æ¤·¤Þ¤¦¤â¤Î¤òÁ÷¤ë¤Ï¤º¤À¤«¤é¤Ç¤¹¡¥(¤³¤Î
ÅÀ¤Ï°ÊÁ°¤Ëµ­½Ò¤·¤Æ¤¤¤Þ¤»¤ó¡¥)

@item
@c Let someone else do the hard part.
@c 
Æñ¤·¤¤¤³¤È¤Ï¡¤Â¾¿Í¤Ë¤µ¤»¤Þ¤·¤ç¤¦¡¥

@item
@c Know your toolbox!  Use each program appropriately. If you don't have an
@c appropriate tool, build one.
@c 
¥Ä¡¼¥ë¥Ü¥Ã¥¯¥¹¤òÍý²ò¤·¤Æ¤¯¤À¤µ¤¤¡ª¤½¤ì¤¾¤ì¤Î¥×¥í¥°¥é¥à¤òÅ¬ÀÚ¤Ë»ÈÍÑ¤·¤Æ
¤¯¤À¤µ¤¤¡¥Å¬ÀÚ¤Ê¥Ä¡¼¥ë¤¬Ìµ¤¤¾ì¹ç¡¤¤½¤ì¤ò¹½ÃÛ¤·¤Æ¤¯¤À¤µ¤¤¡¥
@end enumerate

@c As of this writing, all the programs we've discussed are available via
@c anonymous @command{ftp} from: @*
@c @uref{ftp://gnudist.gnu.org/textutils/textutils-1.22.tar.gz}.  (There may
@c be more recent versions available now.)
@c 
¤³¤³¤Ç½ñ¤¤¤Æ¤¤¤ë²æ¡¹¤¬µÄÏÀ¤·¤Æ¤­¤¿Á´¤Æ¤Î¥×¥í¥°¥é¥à¤Ï¡¤
@uref{ftp://gnudist.gnu.org/textutils/textutils-1.22.tar.gz}¤«¤éÆ¿Ì¾
@command{ftp}¤ÇÍøÍÑ²ÄÇ½¤Ç¤¹¡¥(¸½ºß¤Ï¤è¤ê¿·¤·¤¤¥Ð¡¼¥¸¥ç¥ó¤¬ÍøÍÑ²ÄÇ½¤«¤â
¤·¤ì¤Þ¤»¤ó¡¥)

@c None of what I have presented in this column is new. The Software Tools
@c philosophy was first introduced in the book @cite{Software Tools}, by
@c Brian Kernighan and P.J. Plauger (Addison-Wesley, ISBN 0-201-03669-X).
@c This book showed how to write and use software tools.  It was written in
@c 1976, using a preprocessor for FORTRAN named @command{ratfor} (RATional
@c FORtran).  At the time, C was not as ubiquitous as it is now; FORTRAN
@c was.  The last chapter presented a @command{ratfor} to FORTRAN
@c processor, written in @command{ratfor}. @command{ratfor} looks an awful
@c lot like C; if you know C, you won't have any problem following the
@c code.
@c 
»ä¤¬¤³¤Î¥³¥é¥à¤Ç¾Ò²ð¤·¤¿¤â¤Î¤Ë¿·¤·¤¤¤â¤Î¤Ï¤¢¤ê¤Þ¤»¤ó¡¥¥½¥Õ¥È¥¦¥§¥¢¥Ä¡¼
¥ë¤ÎÅ¯³Ø¤Ï¡¤ºÇ½é¤Ë¡¤Brian Kernighan¤ÈP.J. Plauger¤Ë¤è¤ë@cite{Software
Tools}¤ÎËÜ(Addison-Wesley, ISBN 0-201-03669-X)¤Ç¾Ò²ð¤µ¤ì¤Þ¤·¤¿¡¥¤³¤ÎËÜ
¤Ï¡¤¥½¥Õ¥È¥¦¥§¥¢¥Ä¡¼¥ë¤Î½ñ¤­Êý¤È»ÈÍÑË¡¤òÉ½¤·¤Æ¤¤¤Þ¤¹¡¥¤½¤ì¤Ï1976Ç¯¤Ë½ñ
¤«¤ì¡¤@code{ratfor} (RATional FORtran)¤È¤¤¤¦Ì¾¤ÎFORTRAN¤ËÂÐ¤¹¤ë¥×¥ê¥×
¥í¥»¥Ã¥µ¤ò»ÈÍÑ¤·¤Æ¤¤¤Þ¤¹¡¥Åö»þ¡¤C¤Ï¸½ºß¤Û¤É¡¤¤É¤³¤Ë¤Ç¤â¤¢¤ë¤È¤¤¤Ã¤¿¤â
¤Î¤Ç¤Ï¤Ê¤¯¡¤FORTRAN¤Ï¤½¤¦¤¤¤¦¤â¤Î¤Ç¤·¤¿¡¥ºÇ¸å¤Î¾Ï¤Ç¡¤@code{ratfor}¤ò
FORTRAN¤Ë¤¹¤ë¥×¥í¥»¥Ã¥µ¤òÄó¼¨¤·¤Æ¤¤¤Æ¡¤@code{ratfor}¤Ç½ñ¤«¤ì¤Æ¤¤¤Þ¤¹¡¥
@code{ratfor}¤ÏC¤ËÈó¾ï¤Ë»÷¤Æ¤¤¤Þ¤¹¡¥C¤òÃÎ¤Ã¤Æ¤¤¤ë¾ì¹ç¡¤¥³¡¼¥É¤òÄÉ¤¤¤«
¤±¤ë¤Î¤ËÌäÂê¤Ê¤¤¤Ç¤·¤ç¤¦¡¥

@c In 1981, the book was updated and made available as @cite{Software Tools
@c in Pascal} (Addison-Wesley, ISBN 0-201-10342-7).  The first book is
@c still in print; the second, alas, is not.  Both books are well worth
@c reading if you're a programmer.  They certainly made a major change in
@c how I view programming.
@c 
1981Ç¯¤ËËÜ¤Ï¹¹¿·¤µ¤ì¡¤@cite{Software Tools in Pascal} (Addison-Wesley,
ISBN 0-201-10342-7)¤È¤·¤ÆÍøÍÑ²ÄÇ½¤Ë¤Ê¤ê¤Þ¤·¤¿¡¥Î¾Êý¤ÎËÜ¤Ï°õºþ¤µ¤ì¤Æ¤¤
¤Æ¡¤¥×¥í¥°¥é¥Þ¤¬ÆÉ¤à²ÁÃÍ¤Ï¤¢¤ê¤Þ¤¹¡¥¤½¤ì¤é¤Ï¡¤³Î¤«¤Ë¥×¥í¥°¥é¥ß¥ó¥°¤Î¸«
Êý¤òÂç¤­¤¯ÊÑ²½¤µ¤»¤Þ¤·¤¿¡¥

@c Initially, the programs in both books were available (on 9-track tape)
@c from Addison-Wesley.  Unfortunately, this is no longer the case,
@c although the @command{ratfor} versions are available from
@c @uref{http://cm.bell-labs.come/who/bwk, Brian Kernighan's home page},
@c and you might be able to find copies of the Pascal versions floating
@c around the Internet.  For a number of years, there was an active
@c Software Tools Users Group, whose members had ported the original
@c @command{ratfor} programs to essentially every computer system with a
@c FORTRAN compiler.  The popularity of the group waned in the middle 1980s
@c as Unix began to spread beyond universities.
@c 
½é¤á¤Ë¡¤Î¾Êý¤ÎËÜ¤Î¥×¥í¥°¥é¥à¤ÏAddison-Wesley¤«¤é(9¥È¥é¥Ã¥¯¥Æ¡¼¥×¤Ç)Íø
ÍÑ²ÄÇ½¤Ç¤·¤¿¡¥ÉÔ¹¬¤Ë¤â¡¤¤³¤ì¤Ï¤â¤Ï¤äÍøÍÑ¤Ç¤­¤Þ¤»¤ó¤¬¡¤@command{ratfor} 
¥Ð¡¼¥¸¥ç¥ó¤Ï@uref{http://cm.bell-labs.come/who/bwk, Brian Kernighan's
home page}¤ÇÍøÍÑ²ÄÇ½¤Ç¡¤Internet¤Î¤É¤³¤«¤Ë¥³¥Ô¡¼¤¬¤¢¤ë¤«¤â¤·¤ì¤Þ¤»¤ó¡¥
²¿Ç¯¤â¤Î´Ö¡¤³èÈ¯¤ÊSoftware Tools Users Group¤¬¤¢¤ê¡¤¤½¤Î¥á¥ó¥Ð¡¼¤Ï¸µ¤Î
@code{ratfor}¥×¥í¥°¥é¥à¤ò¡¤FORTRAN¥³¥ó¥Ô¥å¡¼¥¿¤ò»ý¤ÄÁ´¤Æ¤Î¥³¥ó¥Ô¥å¡¼¥¿
¤ËËÜ¼ÁÅª¤Ë°Ü¿¢¤·¤Þ¤·¤¿¡¥¥°¥ë¡¼¥×¤Î¿Íµ¤¤Ï¡¤Unix¤¬Âç³Ø¤ò±Û¤¨¤Æ¹­¤¬¤ê»Ï¤á
¤¿¤Î¤Ç¡¤80Ç¯ÂåÈ¾¤Ð¤Ç¿ê¤¨¤Þ¤·¤¿¡¥

@c With the current proliferation of GNU code and other clones of Unix programs,
@c these programs now receive little attention; modern C versions are
@c much more efficient and do more than these programs do.  Nevertheless, as
@c exposition of good programming style, and evangelism for a still-valuable
@c philosophy, these books are unparalleled, and I recommend them highly.
@c 
GNU¥³¡¼¥É¤È¤½¤ÎÂ¾¤ÎUnix¥×¥í¥°¥é¥à¤Î¥¯¥í¡¼¥ó¤Î¸½ºß¤ÎÁý¿£¤Ç¡¤¤³¤ì¤é¤Î¥×
¥í¥°¥é¥à¤Ï¡¤¸½ºß¤Û¤È¤ó¤ÉÃíÌÜ¤µ¤ì¤Þ¤»¤ó¡¥¸½ºß¤ÎC¤Î¥Ð¡¼¥¸¥ç¥ó¤Ï¤è¤ê¸ú²Ì
Åª¤Ç¡¤¤³¤ì¤é¤Î¥×¥í¥°¥é¥à¤¬¹Ô¤¦¤è¤êÂ¿¤¯¤Î¤³¤È¤ò¹Ô¤¤¤Þ¤¹¡¥¤Ë¤â¤«¤«¤ï¤é¤º¡¤
ÎÉ¤¤¥×¥í¥°¥é¥ß¥ó¥°¥¹¥¿¥¤¥ë¤ÎÇîÍ÷²ñ¤È¡¤still-valuable¤ÎÅ¯³Ø¤ËÂÐ¤¹¤ëÊ¡²»
¤È¤·¤Æ¡¤¤³¤ì¤é¤ÎËÜ¤ÏÈæ¤Ù¤ë¤â¤Î¤¬Ìµ¤¯¡¤»ä¤Ï¹â¤¯¿äÁ¦¤·¤Þ¤¹¡¥

@c Acknowledgment: I would like to express my gratitude to Brian Kernighan
@c of Bell Labs, the original Software Toolsmith, for reviewing this column.
@c 
¼Õ¼­¡§»ä¤Ï¤³¤Î¥³¥é¥à¤Î¥ì¥Ó¥å¡¼¤ËÂÐ¤·¡¤¥Ù¥ë¸¦µæ½ê¤ÎBrian Kernighan¤È¡¤
¥ª¥ê¥¸¥Ê¥ë¤Î¥½¥Õ¥È¥¦¥§¥¢Toolsmith¤Ë¿¼¤¯´¶¼Õ¤·¤¿¤¤¤È»×¤¤¤Þ¤¹¡¥

@include doclicense.texi

@node Index
@c @unnumbered Index
@unnumbered º÷°ú

@printindex cp

@shortcontents
@contents
@bye

@c Local variables:
@c texinfo-column-for-description: 32
@c End:
